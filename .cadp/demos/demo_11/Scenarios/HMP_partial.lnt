module HMP (CONFIGURATION, APPLICATION, DTD) is

process MAIN [ST, LD_RQ, LD_RSP, WAKEUP, BOOT, MSG,
              DTD_SCHEDULE_HOST_REQUESTS, DTD_DISPATCH_DUP, HOST: any] is
   par HOST in
      par HOST, BOOT in
         ENCORE [ST, LD_RQ, LD_RSP, WAKEUP, BOOT, MSG,
                 DTD_SCHEDULE_HOST_REQUESTS, DTD_DISPATCH_DUP, HOST]
      ||
         Partial_Boot [BOOT, HOST]
      end par
   ||
      HOST_APPLI [HOST]
   end par
end process

process Partial_Boot [BOOT, HOST: any] is
   BOOT (Pid (0), BITSTREAM);
   BOOT (Pid (N-1), VECTOR);
   disrupt
      var i:Nat in
         for i := 1 while i < (N-1) by i := i+1 loop
            BOOT (?any Pid, ?any Extension)
         end loop;
         stop -- to make sure that Partial_Boot never exits
      end var
   by
      loop
         HOST (?any Host_Job)
      end loop
   end disrupt
end process

end module

