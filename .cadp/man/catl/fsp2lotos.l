


CADP MANUAL PAGES                                FSP2LOTOS(LOCAL)



NNNNAAAAMMMMEEEE
     fsp2lotos - FSP to LOTOS translator


SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
     ffffsssspppp2222lllloooottttoooossss   [----vvvveeeerrrrssssiiiioooonnnn]   [----ppppiiiiddddlllliiiisssstttt]   [----rrrrooooooootttt   _r_o_o_t-_p_r_o_c_e_s_s]
     _f_i_l_e_n_a_m_e[....llllttttssss]


DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
     FSP (Finite State Processes) is a specification language for
     concurrent  processes  defined  by  Magee & Kramer (Imperial
     College, London).  The ffffsssspppp2222lllloooottttoooossss program translates  an  FSP
     specification to files that can be verified using CADP.

     The input to ffffsssspppp2222lllloooottttoooossss is an FSP file, which must  have  the
     extension  ....llllttttssss.  If the user does not specify the extension
     ....llllttttssss on the command line, it will be appended  automatically
     and ffffsssspppp2222lllloooottttoooossss will read _f_i_l_e_n_a_m_e....llllttttssss _a_s _i_n_p_u_t.

     When ffffsssspppp2222lllloooottttoooossss is called with the ----rrrrooooooootttt option and the  name
     of  a  process _r_o_o_t-_p_r_o_c_e_s_s, then ffffsssspppp2222lllloooottttoooossss translates _r_o_o_t-
     _p_r_o_c_e_s_s.  Otherwise, ffffsssspppp2222lllloooottttoooossss translates the first  sequen-
     tial process defined in _f_i_l_e_n_a_m_e....llllttttssss. In both cases, we call
     main process the process that ffffsssspppp2222lllloooottttoooossss translates. The out-
     puts are the following files:

     -    a  LOTOS  library  file  _F_I_L_E_N_A_M_E....lllliiiibbbb  (where  _F_I_L_E_N_A_M_E
          corresponds to the character string defined in the note
          below), which contains LOTOS type definitions,

     -    a  LOTOS  file  _f_i_l_e_n_a_m_e....lllloooottttoooossss,  which  contains  LOTOS
          processes;

     -    two C files _f_i_l_e_n_a_m_e....tttt and _f_i_l_e_n_a_m_e....ffff, which contain  C
          types  and  functions  needed  by  the  LOTOS types and
          operations defined as external in _F_I_L_E_N_A_M_E....lllliiiibbbb,

     -    an EXP.OPEN file _f_i_l_e_n_a_m_e....eeeexxxxpppp, which contains a network
          of  communicating  automata describing the behaviour of
          the main process, and

     -    an SVL file _f_i_l_e_n_a_m_e....ssssvvvvllll, which contains an SVL  script
          that    generates   the   BCG   graphs   contained   in
          _f_i_l_e_n_a_m_e....eeeexxxxpppp.

     The output files are placed in the directory whose  path  is
     given by the environment variable $$$$FFFFSSSSPPPPGGGGEEEENNNN, or in ....////FFFFSSSSPPPPGGGGEEEENNNN if
     this variable is not defined.  Note that ....////FFFFSSSSPPPPGGGGEEEENNNN is created
     relative   to  the  directory  from  which  the  user  calls
     ffffsssspppp2222lllloooottttoooossss, not relative  to  the  directory  containing  the
     input file.



(C) INRIA            Last change: 2020/02/11                    1






CADP MANUAL PAGES                                FSP2LOTOS(LOCAL)



     The SVL script can be run using the following  Bourne  shell
     commands:

          ccccdddd $$$${{{{FFFFSSSSPPPPGGGGEEEENNNN::::----FFFFSSSSPPPPGGGGEEEENNNN}}}}
          ssssvvvvllll _s_v_l-_o_p_t_i_o_n_s

     See ssssvvvvllll(LOCAL) for more information about the SVL  tool  and
     its options.

     Once the SVL script has been executed,  the  generated  file
     _f_i_l_e_n_a_m_e....eeeexxxxpppp can be manipulated as usual, using the EXP.OPEN
     tool.  For instance, the BCG graph corresponding to the main
     process can be generated by running the following shell com-
     mand:

          eeeexxxxpppp....ooooppppeeeennnn _f_i_l_e_n_a_m_e....eeeexxxxpppp ggggeeeennnneeeerrrraaaattttoooorrrr _f_i_l_e_n_a_m_e....bbbbccccgggg

     See eeeexxxxpppp....ooooppppeeeennnn(LOCAL) for more information about the  EXP.OPEN
     tool and its options.

     Note: The name of the input file is used  to  construct  the
     names  of  the output files, with particular rules when con-
     structing the names  of  ....lllliiiibbbb  files.   For  an  input  file
     _f_i_l_e_n_a_m_e....llllttttssss,    ffffsssspppp2222lllloooottttoooossss   creates   the   LOTOS   library
     _F_I_L_E_N_A_M_E....lllliiiibbbb, where _F_I_L_E_N_A_M_E is constructed as follows:

     -    _F_I_L_E_N_A_M_E  corresponds  to  _f_i_l_e_n_a_m_e  with  all  letters
          turned  to  upper case and all non-alphanumeric charac-
          ters replaced by '_'.  For instance, for an FSP specif-
          ication  ffffsssspppp----eeeexxxxaaaammmmpppplllleeee....llllttttssss,  ffffsssspppp2222lllloooottttoooossss  creates the LOTOS
          library FFFFSSSSPPPP____EEEEXXXXAAAAMMMMPPPPLLLLEEEE....lllliiiibbbb.

     -    In the particular case where _f_i_l_e_n_a_m_e is  not  a  valid
          LOTOS  identifier,  the  prefix  LLLLIIIIBBBB____  is  appended  to
          _F_I_L_E_N_A_M_E.   For  instance,  for  an  FSP  specification
          ffffoooorrrraaaallllllll....llllttttssss  (ffffoooorrrraaaallllllll  being  a LOTOS keyword), ffffsssspppp2222lllloooottttoooossss
          creates the LOTOS library LLLLIIIIBBBB____FFFFOOOORRRRAAAALLLLLLLL....lllliiiibbbb.  For  an  FSP
          specification  0000444400007777....llllttttssss,  ffffsssspppp2222lllloooottttoooossss  creates  the LOTOS
          library LLLLIIIIBBBB____0000444400007777....llllttttssss.


OOOOPPPPTTTTIIIIOOOONNNNSSSS
     ----vvvveeeerrrrssssiiiioooonnnn
          Display the tool version and exit.

     -ppppiiiiddddlllliiiisssstttt
          List the names of all processes that occur in the input
          file  and exit. In other words, list all processes that
          can be used as main process (by instantiation with  the
          ----rrrrooooooootttt option).

     ----rrrrooooooootttt _r_o_o_t-_p_r_o_c_e_s_s



(C) INRIA            Last change: 2020/02/11                    2






CADP MANUAL PAGES                                FSP2LOTOS(LOCAL)



          Use the process _r_o_o_t-_p_r_o_c_e_s_s as the main process, mean-
          ing  that the generated files have the behaviour of the
          main process.  Not a default option.


NNNNOOOOTTTTEEEESSSS AAAABBBBOOOOUUUUTTTT TTTTHHHHEEEE TTTTRRRRAAAANNNNSSSSLLLLAAAATTTTIIIIOOOONNNN FFFFRRRROOOOMMMM FFFFSSSSPPPP TTTTOOOO LLLLOOOOTTTTOOOOSSSS
  LLLLAAAANNNNGGGGUUUUAAAAGGGGEEEE AAAACCCCCCCCEEEEPPPPTTTTEEEEDDDD AAAASSSS IIIINNNNPPPPUUUUTTTT
     The ffffsssspppp2222lllloooottttoooossss translator supports the  FSP  language  recog-
     nized by version 2.3 of LTSA.


     In rare cases, ffffsssspppp2222lllloooottttoooossss is unable to bind a  local  process
     call  to  its definition.  If so, it issues an error message
     and then exits.

     The  following  FSP  constructs  are   not   translated   by
     ffffsssspppp2222lllloooottttoooossss:

     -    the "@" (set cardinality) operator

     -    fluents, menus, progress and properties

     All correct FSP descriptions are accepted by ffffsssspppp2222lllloooottttoooossss  pro-
     vided  the  root process is independent of those constructs.
     If the root process depends on any of those constructs, then
     ffffsssspppp2222lllloooottttoooossss issues an error message and then exits.


  SSSSEEEEMMMMAAAANNNNTTTTIIIICCCC CCCCHHHHEEEECCCCKKKKSSSS
     The ffffsssspppp2222lllloooottttoooossss translator does not fully check  the  correct-
     ness of the input FSP specification (parsing, type checking,
     binding, etc.).  The "Build/Parse" menu  of  the  LTSA  tool
     should  be  used  for such verifications.  As a consequence,
     incorrect FSP input files may be accepted by  ffffsssspppp2222lllloooottttoooossss,  in
     which case the result of the translation is irrelevant.


  TTTTRRRRAAAANNNNSSSSLLLLAAAATTTTIIIIOOOONNNN OOOOFFFF TTTTHHHHEEEE EEEERRRRRRRROOOORRRR SSSSTTTTAAAATTTTEEEE
     The error state, represented by a state numbered -1 in LTSA,
     is  represented  by a state containing a self arc labeled by
     ERROR in the BCG graph corresponding to the root process.


  TTTTRRRRAAAANNNNSSSSLLLLAAAATTTTIIIIOOOONNNN OOOOFFFF TTTTHHHHEEEE NNNNOOOONNNN----OOOOBBBBSSSSEEEERRRRVVVVAAAABBBBLLLLEEEE LLLLAAAABBBBEEEELLLL
     The non-observable label noted "tau" in FSP  is  represented
     as the LOTOS label "i" in the BCG graph corresponding to the
     root process.


  TTTTRRRRAAAANNNNSSSSLLLLAAAATTTTIIIIOOOONNNN OOOOFFFF OOOOBBBBSSSSEEEERRRRVVVVAAAABBBBLLLLEEEE LLLLAAAABBBBEEEELLLLSSSS
     An observable FSP label is a sequence of  elementary  labels
     separated  by  the '.' symbol.  Formally, any observable FSP



(C) INRIA            Last change: 2020/02/11                    3






CADP MANUAL PAGES                                FSP2LOTOS(LOCAL)



     label has the form _A_1._A_2..._A_n, where _n is greater  or  equal
     to  1, and where each elementary label _A_i is either a number
     (e.g., "-4", "0", "1")  or  an  FSP  identifier  written  in
     lower-case letters (e.g., "x", "y1", "read").


     Each observable FSP label _A_1._A_2..._A_n is  translated  into  a
     LOTOS  label of the form "EVENT !_L_1._L_2..._L_n.NIL", where each
     _L_i is derived from the corresponding  _A_i  according  to  the
     following  rules:  if  _A_i  is  a number, then _L_i is the same
     number; if _A_i is an FSP identifier,  then  _L_i  is  the  same
     identifier converted to upper-case letters. Such identifiers
     are  declared  in  the  _S_y_m_b_o_l   LOTOS   type   defined   in
     _F_I_L_E_N_A_M_E....lllliiiibbbb.


OOOOPPPPEEEERRRRAAAANNNNDDDDSSSS
     _f_i_l_e_n_a_m_e....llllttttssss             FSP specification (input)
     $_F_S_P_G_E_N/ffffiiiilllleeeennnnaaaammmmeeee._e_x_p     Network of LTS (output)
     $_F_S_P_G_E_N/ffffiiiilllleeeennnnaaaammmmeeee._l_o_t_o_s   LOTOS code (output)
     $$$$FFFFSSSSPPPPGGGGEEEENNNN////_F_I_L_E_N_A_M_E....lllliiiibbbb     LOTOS code (output)
     $$$$FFFFSSSSPPPPGGGGEEEENNNN////_f_i_l_e_n_a_m_e....ssssvvvvllll     SVL script (output)
     $$$$FFFFSSSSPPPPGGGGEEEENNNN////_f_i_l_e_n_a_m_e....ffff       C code (output)
     $$$$FFFFSSSSPPPPGGGGEEEENNNN////_f_i_l_e_n_a_m_e....tttt       C code (output)

FFFFIIIILLLLEEEESSSS
     $$$$CCCCAAAADDDDPPPP////lllliiiibbbb////FFFFSSSSPPPP____VVVV1111....lllliiiibbbb
                       FSP predefined library (LOTOS code)
     $$$$CCCCAAAADDDDPPPP////iiiinnnnccccllll////FFFFSSSSPPPP____VVVV1111....hhhh
                       FSP predefined library (C code)

EEEENNNNVVVVIIIIRRRROOOONNNNMMMMEEEENNNNTTTT VVVVAAAARRRRIIIIAAAABBBBLLLLEEEESSSS
     $$$$FFFFSSSSPPPPGGGGEEEENNNN
          The target directory of the output files.

EEEEXXXXIIIITTTT SSSSTTTTAAAATTTTUUUUSSSS
     If the translation was successful the exit status is 0, even
     if  warnings  were issued during the execution. If any error
     occurred during translation, the exit status is 1.

BBBBIIIIBBBBLLLLIIIIOOOOGGGGRRRRAAAAPPPPHHHHYYYY
     -    A description of the  FSP  language  is  available  in:
          Jeff Magee and Jeff Kramer. _C_o_n_c_u_r_r_e_n_c_y: _S_t_a_t_e _M_o_d_e_l_s &
          _J_a_v_a _P_r_o_g_r_a_m_m_i_n_g (_2_n_d _E_d_i_t_i_o_n).   John  Wiley  &  Sons,
          2006.

     -    The grammar of  the  FSP  language  is  available  from
          http://www.doc.ic.ac.uk/ltsa/eclipse/help/appendix_b___fsp_language_spec.htm

     -    The website of the  LTSA  (_L_a_b_e_l_l_e_d  _T_r_a_n_s_i_t_i_o_n  _S_y_s_t_e_m
          _A_n_a_l_y_s_e_r)    software    tool    is    available   from
          http://www.doc.ic.ac.uk/ltsa



(C) INRIA            Last change: 2020/02/11                    4






CADP MANUAL PAGES                                FSP2LOTOS(LOCAL)



     -    An early description of the FSP to LOTOS translation is
          given  in: Gwen Salaun, Jeff Kramer, Frederic Lang, and
          Jeff Magee.  _T_r_a_n_s_l_a_t_i_n_g _F_S_P _i_n_t_o _L_O_T_O_S _a_n_d _N_e_t_w_o_r_k_s _o_f
          _A_u_t_o_m_a_t_a.   In  Proceedings of IFM'07, Lecture Notes in
          Computer Science  vol.  4591.  Springer  Verlag,  2007.
          Available                                          from
          http://cadp.inria.fr/publications/Salaun-Kramer-Lang-
          Magee-07.html

     -    A more complete description of the FSP to LOTOS  trans-
          lation  is  given in:  Frederic Lang, Gwen Salaun, Remi
          Herilier, Jeff Kramer, and Jeff Magee.  _T_r_a_n_s_l_a_t_i_n_g _F_S_P
          _i_n_t_o  _L_O_T_O_S  _a_n_d  _N_e_t_w_o_r_k_s  _o_f _A_u_t_o_m_a_t_a.  In Journal on
          Formal Aspects of  Computing,  Springer  Verlag,  2010.
          Available  from http://cadp.inria.fr/publications/Lang-
          Salaun-Herilier-et-al-10.html

AAAAUUUUTTTTHHHHOOOORRRRSSSS
     Remi Herilier, Frederic Lang, and Gwen Salaun, with  contri-
     butions from Hubert Garavel (all at INRIA Rhone-Alpes).

SSSSEEEEEEEE AAAALLLLSSSSOOOO
     See   the   following   reference   manuals:     bbbbccccgggg(LOCAL),
     ccccaaaaeeeessssaaaarrrr(LOCAL),         ccccaaaaeeeessssaaaarrrr....aaaaddddtttt(LOCAL),        eeeexxxxpppp(LOCAL),
     eeeexxxxpppp....ooooppppeeeennnn(LOCAL),       ffffsssspppp....ooooppppeeeennnn(LOCAL),        lllloooottttoooossss(LOCAL),
     lllloooottttoooossss....ooooppppeeeennnn(LOCAL),        ssssvvvvllll(LOCAL),       ssssvvvvllll----llllaaaannnngggg(LOCAL),
     xxxxeeeeuuuuccccaaaa(LOCAL).
     Additional information is available from the CADP  Web  page
     located at http://cadp.inria.fr
     Directives   for   installation   are   given    in    files
     $$$$CCCCAAAADDDDPPPP////IIIINNNNSSSSTTTTAAAALLLLLLLLAAAATTTTIIIIOOOONNNN____****....
     Recent  changes  and  improvements  to  this  software   are
     reported and commented in file $$$$CCCCAAAADDDDPPPP////HHHHIIIISSSSTTTTOOOORRRRYYYY....

BBBBUUUUGGGGSSSS
     The tool ffffsssspppp2222lllloooottttoooossss may accept FSP  specifications  that  are
     rejected  by LTSA.  In this case, incorrect code may be gen-
     erated.

     Please report any mistranslations  or  other  problems  with
     ffffsssspppp2222lllloooottttoooossss to cadp@inria.fr














(C) INRIA            Last change: 2020/02/11                    5



