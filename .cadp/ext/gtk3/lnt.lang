<?xml version="1.0" encoding="UTF-8"?>
<!-- GtkSourceView version 3 definitions for the LNT language -->
<!-- produced by Syntax Editor Configuration Tool <cadp@inria.fr> -->
<!-- version 1.25:LNT+1.17:SECT -->
<language id="lnt" _name="LNT" version="2.0" _section="Sources">

   <metadata>
      <property name="mimetypes">text/x-lnt</property>
      <property name="globs">*.lnt</property>
      <property name="line-comment-start">--</property>
      <property name="block-comment-start">(*</property>
      <property name="block-comment-end">*)</property>
   </metadata>

   <styles>
      <style id="comment"  _name="Comment"       map-to="def:comment"/>
      <style id="string"   _name="String"        map-to="def:string"/>
      <style id="pragma"   _name="Preprocessor"  map-to="def:preprocessor"/>
      <style id="keyword"  _name="Keyword"       map-to="def:keyword"/>
      <style id="type"     _name="Data Type"     map-to="def:type"/>
      <style id="constant" _name="Boolean value" map-to="def:boolean"/>
      <style id="function" _name="Function"      map-to="def:builtin"/>
      <style id="operator" _name="Operator"      map-to="def:operator"/>
   </styles>

   <default-regex-options case-sensitive="true"/>

   <definitions>
      <context id="line-comment" style-ref="comment" end-at-line-end="true" class="comment" class-disabled="no-spell-check">
         <start>--</start>
      </context>

      <context id="block-comment" style-ref="comment" class="comment" class-disabled="no-spell-check">
         <start>\(\*</start>
         <end>\*\)</end>
         <include>
            <context ref="block-comment"/>
         </include>
      </context>

      <context id="single-quoted-string" style-ref="string" end-at-line-end="true" class="string" class-disabled="no-spell-check">
         <start>'</start>
         <end>'</end>
      </context>

      <context id="double-quoted-string" style-ref="string" end-at-line-end="true" class="string" class-disabled="no-spell-check">
         <start>"</start>
         <end>"</end>
      </context>

      <context id="pragma" style-ref="pragma">
         <prefix>\!</prefix>
         <keyword>bits</keyword>
         <keyword>card</keyword>
         <keyword>nat_bits</keyword>
         <keyword>nat_inf</keyword>
         <keyword>nat_sup</keyword>
         <keyword>nat_check</keyword>
         <keyword>int_bits</keyword>
         <keyword>int_inf</keyword>
         <keyword>int_sup</keyword>
         <keyword>int_check</keyword>
         <keyword>num_bits</keyword>
         <keyword>num_card</keyword>
         <keyword>string_card</keyword>
         <keyword>comparedby</keyword>
         <keyword>external</keyword>
         <keyword>implementedby</keyword>
         <keyword>iteratedby</keyword>
         <keyword>printedby</keyword>
         <keyword>representedby</keyword>
         <keyword>version</keyword>
      </context>

      <context id="keyword" style-ref="keyword">
         <keyword>access</keyword>
         <keyword>any</keyword>
         <keyword>array</keyword>
         <keyword>as</keyword>
         <keyword>assert</keyword>
         <keyword>break</keyword>
         <keyword>by</keyword>
         <keyword>case</keyword>
         <keyword>channel</keyword>
         <keyword>disrupt</keyword>
         <keyword>else</keyword>
         <keyword>elsif</keyword>
         <keyword>end</keyword>
         <keyword>ensure</keyword>
         <keyword>eval</keyword>
         <keyword>for</keyword>
         <keyword>function</keyword>
         <keyword>hide</keyword>
         <keyword>if</keyword>
         <keyword>in</keyword>
         <keyword>is</keyword>
         <keyword>list</keyword>
         <keyword>loop</keyword>
         <keyword>module</keyword>
         <keyword>null</keyword>
         <keyword>of</keyword>
         <keyword>only</keyword>
         <keyword>out</keyword>
         <keyword>par</keyword>
         <keyword>process</keyword>
         <keyword>raise</keyword>
         <keyword>range</keyword>
         <keyword>require</keyword>
         <keyword>result</keyword>
         <keyword>return</keyword>
         <keyword>select</keyword>
         <keyword>set</keyword>
         <keyword>sorted</keyword>
         <keyword>stop</keyword>
         <keyword>then</keyword>
         <keyword>type</keyword>
         <keyword>use</keyword>
         <keyword>var</keyword>
         <keyword>where</keyword>
         <keyword>while</keyword>
         <keyword>with</keyword>
      </context>

      <context id="type" style-ref="type">
         <keyword>bool</keyword>
         <keyword>nat</keyword>
         <keyword>int</keyword>
         <keyword>real</keyword>
         <keyword>char</keyword>
         <keyword>string</keyword>
      </context>

      <context id="constant" style-ref="constant">
         <keyword>false</keyword>
         <keyword>true</keyword>
      </context>

      <context id="function" style-ref="function">
         <keyword>abs</keyword>
         <keyword>and</keyword>
         <keyword>and_then</keyword>
         <keyword>append</keyword>
         <keyword>card</keyword>
         <keyword>cons</keyword>
         <keyword>delete</keyword>
         <keyword>diff</keyword>
         <keyword>div</keyword>
         <keyword>element</keyword>
         <keyword>empty</keyword>
         <keyword>eq</keyword>
         <keyword>first</keyword>
         <keyword>gcd</keyword>
         <keyword>ge</keyword>
         <keyword>get</keyword>
         <keyword>gt</keyword>
         <keyword>head</keyword>
         <keyword>iff</keyword>
         <keyword>implies</keyword>
         <keyword>index</keyword>
         <keyword>insert</keyword>
         <keyword>inter</keyword>
         <keyword>IntToNat</keyword>
         <keyword>is_empty</keyword>
         <keyword>IsLower</keyword>
         <keyword>IsUpper</keyword>
         <keyword>IsAlpha</keyword>
         <keyword>IsAlnum</keyword>
         <keyword>IsDigit</keyword>
         <keyword>IsXDigit</keyword>
         <keyword>last</keyword>
         <keyword>le</keyword>
         <keyword>length</keyword>
         <keyword>lt</keyword>
         <keyword>max</keyword>
         <keyword>member</keyword>
         <keyword>min</keyword>
         <keyword>mod</keyword>
         <keyword>NatToInt</keyword>
         <keyword>ne</keyword>
         <keyword>neg</keyword>
         <keyword>nil</keyword>
         <keyword>not</keyword>
         <keyword>nth</keyword>
         <keyword>or</keyword>
         <keyword>ord</keyword>
         <keyword>or_else</keyword>
         <keyword>pos</keyword>
         <keyword>pred</keyword>
         <keyword>prefix</keyword>
         <keyword>rem</keyword>
         <keyword>remove</keyword>
         <keyword>reverse</keyword>
         <keyword>rindex</keyword>
         <keyword>scm</keyword>
         <keyword>set</keyword>
         <keyword>sign</keyword>
         <keyword>substr</keyword>
         <keyword>succ</keyword>
         <keyword>suffix</keyword>
         <keyword>tail</keyword>
         <keyword>ToLower</keyword>
         <keyword>ToUpper</keyword>
         <keyword>union</keyword>
         <keyword>update</keyword>
         <keyword>val</keyword>
         <keyword>xor</keyword>
      </context>

      <context id="operator" style-ref="operator">
         <match extended="true">
            = | &lt; | &gt; | \| | \+ | - | / | \* | \? | ; | \*\* | == | &lt;&gt; | /= | &lt;= | &gt;= | =&gt; | \|\| | \[\] | -&gt;
         </match>
      </context>

      <context id="lnt" class="no-spell-check">
         <include>
            <context ref="line-comment"/>
            <context ref="block-comment"/>
            <context ref="single-quoted-string"/>
            <context ref="double-quoted-string"/>
            <context ref="pragma"/>
            <context ref="keyword"/>
            <context ref="type"/>
            <context ref="constant"/>
            <context ref="function"/>
            <context ref="operator"/>
         </include>
      </context>

   </definitions>
</language>
