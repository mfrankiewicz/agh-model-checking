-- CADP (CONSTRUCTION AND ANALYSIS OF DISTRIBUTED PROCESSES)
-- http://cadp.inria.fr

-------------------------------------------------------------------------------
VERSION A
-------------------------------------------------------------------------------
BUG FIX
Number: 	001
Date: 		Wed Feb 28 11:27:40 MET 1990
Files:		bin.sun3/READ_ME, games/bin.sun3/READ_ME

Nature:		Added a warning stating that SunOS 3.xx versions are not
		supported
-------------------------------------------------------------------------------
BUG FIX
Number:		002
Date:		Wed Feb 28 11:27:40 MET 1990
Files:		lib/BOOLEAN.h [last line], doc/caesar_rm.dvi, doc/caesar_rm.ps

Nature:		The following line:
		#define PRINT_BOOL(F, X) fprintf (F, (X) ? "TRUE" : "FALSE")
		is erroneous and should be replaced by:
		#define PRINT_BOOL(F,X) fprintf (F, (X) ? "TRUE" : "FALSE")
		i.e., the space after "F," should be removed, because the
		C preprocessor /lib/cpp does not accept it
-------------------------------------------------------------------------------
BUG FIX
Number:		003
Date:		Sat Mar 10 12:54:03 MET 1990
Files:		test/demo_3/datalink_protocol.h

Nature:		Added a comment to explain the limited implementation
		of booleans, which seemed to be confusing
-------------------------------------------------------------------------------
BUG FIX
Number:		004
Date:		Sat Mar 10 12:54:03 MET 1990
Report:		Khalil Drira (LAAS)
Files:		bin.sun3/aldebaran bin.sun4/aldebaran

Nature:		Jean-Claude Fernandez fixed a minor bug which caused core dump.
-------------------------------------------------------------------------------
VERSION B
-------------------------------------------------------------------------------
BUG FIX
Number:		005
Date:		Mon Mar 26 18:52:04 MET DST 1990
Report:		Alain Picoux (CNET) and Susanne Graf (IMAG)
Files:		doc/caesar_rm.dvi, doc/caesar_rm.ps

Nature:		Recompiled the Reference Manual, since the bibliography
		section, for some mysterious reason, did not print properly
-------------------------------------------------------------------------------
VERSION C
-------------------------------------------------------------------------------
BUG FIX
Number:		006
Date:		Thu May 17 12:03:04 MET DST 1990
Report:		Peter Sjodin (SICS)
Files:		bin.sun3/caesar, man/caesar.1, doc/caesar_rm.*

Nature:		Added the -simulator option, since the simulator (`.c' file)
		generated by CAESAR is sometimes so large that it breaks
		the SUN3 C compiler ["as: too large value for a short cell"].
		By using the -simulator option, CAESAR produces the `.c' file
		and stops. Then, the simulator can be compiled on a non-SUN3
		machine (using a SUN4 solves the problem). This can also be
		used to improve speed during simulation.
-------------------------------------------------------------------------------
BUG FIX
Number:		007
Date:		Thu May 17 12:03:04 MET DST 1990
Report:		Lars-Ake Fredlund and Patrik Ernberg (SICS)
Files:		bin.sun3/caesar

Nature:		Due to a coding error, the optimization E3 was too expeditive:
		it removed incorrectly some transitions, leading to deadlocks.
		The graph generated by CAESAR was therefore incorrect.
-------------------------------------------------------------------------------
VERSION D
-------------------------------------------------------------------------------
BUG FIX
Number:		008
Date:		Sat May 19 21:10:42 MET DST 1990
Files:		bin.sun3/caesar

Nature:		The code for handling SUBLOTOS variables generated by LOTOS
		clauses "any S" was cleaned. This avoids "core dump" in some
		tricky cases. By the way, the name of these anonymous variables
		(in the ".net" and ".gph" files) is no longer "exit", but "any"
-------------------------------------------------------------------------------
BUG FIX
Number:		009
Date:		Jun 1990
Files:		bin.sun3/caesar
Report:		Laurent Mounier (LGI-IMAG)

Nature:		From now on, all state variables are initialized to bit strings
		containing only zeros (0, NULL, "", ...) at the beginning of
		simulation. This avoids core dumps when printing the .gph file.
		Moreover, due to this modification the graphs generated
		by CAESAR are often smaller, since they have less equivalent
		states.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		010
Date:		Jun 1990
Files:		bin.sun3/caesar bin.sun4/caesar

Nature:		Added optimization V4 which evaluates statically the guards
		that have a constant value, e.g., when 0 = 0, when 0 = 1, ...
		This often reduces the number of network transitions
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		011
Date:		Jun 1990
Files:		bin.sun3/caesar bin.sun4/caesar

Nature:		Added optimization V3 which discovers variables whose value
		remains constant during the simulation phase, and replaces
		them by constants. This often reduces the number of variables,
		hence reducing the amount of memory needed to store context
		information during simulation
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		012
Date:		Jun 1990
Files:		bin.sun4/caesar bin.sun4/caesar.adt

Nature:		To fulfill users' wishes, CAESAR and CAESAR.ADT have been
		ported to SUN/4 stations.
-------------------------------------------------------------------------------
BUG FIX
Number:		013
Date:		Wed Jun 27 15:04:38 MET DST 1990
Files:		bin.sun3/aldebaran bin.sun4/aldebaran
Report:		Laurent Mounier (LGI-IMAG)

Nature:		The `-fly' option was added. A bug which caused the `-smin'
		option to core dump sometimes was fixed. The old versions
		of ALDEBARAN were moved in old/bin.sun3 and old/bin.sun4
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		014
Date:		Wed Jun 27 15:04:38 MET DST 1990
Files:		<many>

Nature:		- the Reference Manual of CAESAR was (partially) cleaned
		- the Reference Manual of ALDEBARAN was updated
		- the PREHISTORY file was added
		- lib/BIT.lib and lib/BIT.h were changed
		- lib/EXP.lib and lib/EXP.h were removed
		- lib/NATURAL.lib and lib/NATURAL.h were extended
		- doc/biblio.bib and doc/cortex.bst were added
		- many papers on LOTOS, CAESAR and ALDEBARAN were added in doc
-------------------------------------------------------------------------------
VERSION E
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		015
Date:		Mon Jul  9 19:04:16 MET DST 1990
Report:		Laurent Mounier (working at HP Labs, Bristol)

Nature:		The problem was: how to run CAESAR.ADT ALDEBARAN on Sun 3
		stations using obsolete versions of SunOS (namely 3.x). This
		was solved by using the `-Bstatic' option of the C compiler.
		Various attempts have been also made for CAESAR: the problem
		can not be solved in the general case, since several systems
		calls changed with SunOS 4.x; however, the shell-script
		provided in old/caesar.SunOS_3.x may be of some help.
-------------------------------------------------------------------------------
BUG FIX
Number:		016
Date:		Wed Jul 18 13:12:51 MET DST 1990
Report:		Lars-Ake Fredlund (SICS)
Files:		bin.sun3/caesar bin.sun4/caesar

Nature:		Due to a very silly programming error, vectorial assignments
		of the form (X1, ... Xn) := (V1, ... Vn) were translated into
		X1 := V1; ... Xn := Vn. (although section 8.4.2 of Garavel's
		PhD thesis identifies this problem and proposes an heuristic
		for efficient assignment ordering). The graph generated in
		some cases was incorrect. This was fixed.
-------------------------------------------------------------------------------
VERSION F
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		017
Date:		Sat Jul 28 22:28:39 MET DST 1990
Files:		bin.sun3/caesar bin.sun4/caesar

Nature:		Added optimization V5 which discovers all `register' variables.
		A variable X is called a `register' iff, in any transition T
		such that X is used in the offer and/or the action of T, X
		is assigned in the action of T before being used (this means
		that X is, in some sense, `local' to each transition T).
		Registers are different from `ordinary' variables, since it is
		not necessary to store them in the context part of the state
		vector, thus reducing the amount of memory required for doing
		model-checking verification. Moreover, optimisation V5 someti-
		mes leads to a smaller state graph, since register variables
		are no longer taken into account when comparing each new state
		to the previously generated ones.
-------------------------------------------------------------------------------
BUG FIX
Number:		018
Date:		Sat Jul 28 22:41:29 MET DST 1990
Report:		Hubert Garavel
Files:		bin.sun3/caesar bin.sun4/caesar

Nature:		An harmless bug was fixed: unique numbers for renamed sorts
		were not properly assigned, leading to strange numbers when
		printing sorts on the `.net' file.
-------------------------------------------------------------------------------
BUG FIX
Number:		019
Date:		Wed Sep 12 20:04:28 MET DST 1990
Report:		Jean-Claude Fernandez
Files:		bin.sun3/caesar bin.sun4/caesar

Nature:		A bug was fixed in optimization V3: when generating the `.c'
		program for optimization V3, CAESAR used the C ``=='' operator
		to compare concrete objects, instead of the user-defined C
		comparison function (which is introduced in the ``comparedby''
		part of special comments). This worked well for simple types
		(such as integers or characters), but not for compound types
		(especially structures).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		020
Date:		Tue Oct 23 12:23:23 MET 1990
Files:		bin.sun3/caesar.adt bin.sun4/caesar.adt man/caesar.adt.l

Nature:		A new version of CAESAR.ADT (2.0) was issued.
		  - the C code generated by the new version of CAESAR.ADT is
		now compatible with CAESAR. Given a `NAME.lotos' file,
		CAESAR.ADT generates a `NAME.h' file that can be given to
		CAESAR (when applying CAESAR to `NAME.lotos').
		  - for this reason, CAESAR.ADT no longer generates 2 files
		`NAME.c' and `NAME.h'. Only the `.h' file is produced. The
		(useless) options `-source' and `-noindent' have been removed.
		  - the new version of CAESAR.ADT generates simpler and better
		C code than the previous versions. In particular, operators of
		arity 0 are compiled more efficiently.
		  - many bugs were fixed (e.g., previous versions of CAESAR.ADT
		did not reject equations between constructors in some cases;
		they would allow to define a constructor of arity 0 outside
		of the type defining the sort of its result; ...)
		  - the general architecture of CAESAR.ADT was improved. Most
		verifications on the structure of the equations are now done
		in a preliminary phase. Detailed error messages have been
		added.
		  - caution! Version 2.0 of CAESAR.ADT is not upward compatible
		with respect to previous ones.
		  - CAESAR.ADT manual (man/caesar.adt.l) was updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		021
Date:		Tue Oct 23 19:30:41 MET 1990
Files:		lib/:READ_ME lib/*.lib lib/*.h

Nature:		The abstract data type definitions provided in `lib' were
		improved, especially wrt to the equations. Most of these
		types can now be given to the new version of CAESAR.ADT.
		New examples were also added: MODULUS, QUEUE and TABLE.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		022
Date:		Wed Oct 24 15:44:57 MET 1990
Files:		doc/Garavel-90-a.dvi doc/Garavel-90-a.ps

Nature:		The Reference Manual of CAESAR was updated and greatly
		improved wrt to concrete types. It now explains clearly
		how to produce a ``.h'' file, either by hand or by using
		CAESAR.ADT.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		023
Date:		Fri Oct 26 19:32:21 MET 1990
Files:		demos/READ_ME demos/demo_5 demos/demo_6

Nature:		The examples of how CAESAR.ADT can be used were updated. The
                examples relative to version 1.1 of CAESAR.ADT were moved into
                old/demos/demo_5 and old/demos/demo_6. The example demo_6 was
		re-designed and contains now some interesting ideas on how
		the control part of LOTOS can be used for testing the data part
-------------------------------------------------------------------------------
VERSION G
-------------------------------------------------------------------------------
BUG FIX
Number:		024
Date:		Mon Nov 12 10:16:36 MET 1990
Report:		Hubert Garavel
Files:		bin.sun3/aldebaran bin.sun4/aldebaran

Nature:		A bug, which caused ALDEBARAN to `core dump' when computing
		the discriminating sequences between two labelled transition
		systems, was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		025
Date:		Mon Nov 12 10:16:36 MET 1990
Report:		Laurent Mounier
Files:		bin.sun3/caesar.adt bin.sun4/caesar.adt

Nature:		A bug, which caused CAESAR.ADT to fail with error message $12
		("Not enough memory") was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		026
Date:		Mon Nov 12 12:18:12 MET 1990
Files:		doc

Nature:		New documents and bibliographic references were added,
		namely Azema-Drira-Vernadat-90, Fernandez-Mounier-90,
		and Mounier-Bainbridge-91.
-------------------------------------------------------------------------------
VERSION H
-------------------------------------------------------------------------------
BUG FIX
Number:		027
Date:		Mon Nov 19 12:02:29 MET 1990
Report:		E. Lallemand (Univ. Liege)
Files:		demos/demo_3/:READ_ME demos/demo_3/*.h

Nature:		In this example, the graph generated by CAESAR was too large
		for ALDEBARAN. The number of different messages (i.e., 100) was
		exceeding the capabilities of Paige & Tarjan's algorithm ("not
		enough memory"). The problem was quickly solved by using only
		40 messages. In the general case, a better solution would use
		the `-fly' option of ALDEBARAN to compute bisimulations `on the
		fly', as described in Fernandez-Mounier-90.
-------------------------------------------------------------------------------
BUG FIX
Number:		028
Date:		Fri Dec  7 20:25:20 MET 1990
Report:		Peter Sjodin (SICS)
Files:		bin.sun3/caesar.adt bin.sun4/caesar.adt

Nature:		A bug who make CAESAR.ADT abruptly fail with core dump when
		dealing with renamed types was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		029
Date:		Fri Dec  7 20:25:20 MET 1990
Report:		Hubert Garavel (VERILOG)
Files:		bin.sun3/caesar.adt bin.sun4/caesar.adt

Nature:		The `printedby' C function generated by CAESAR.ADT for standard
		types did not check whether their argument was NULL or not.
		This could make the simulator generated by CAESAR core dump
		for values initialized to NULL. This was fixed. From now on,
		the printing function writes "?" if its argument is NULL.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		030
Date:		Fri Dec  7 20:25:20 MET 1990
Files:		bin.sun3/caesar.adt bin.sun4/caesar.adt

Nature:		The tuple optimization described in Garavel-89-c was implemen-
		ted. From now on, CAESAR.ADT automatically recognizes LOTOS
		types with a single constructor of arity > 0 and implements
		them optimally, with a C `struct' type.

		CAESAR.ADT generates an enumeration macro for each tuple type.
		But this only works if each tuple field has a sort that can be
		enumerated (i.e., is a natural, an enumeration, or a tuple;
		`ordinary' sorts do not have enumeration macros).
-------------------------------------------------------------------------------
BUG FIX
Number:		031
Date:		Fri Dec  7 20:25:20 MET 1990
Report:		Peter Sjodin (SICS)
Files:		bin.sun3/caesar.adt bin.sun4/caesar.adt

Nature:		A significant part of the compiling algorithm used in
		CAESAR.ADT was rewritten to fix a number of bugs. The C code
		generated by previous versions could be incorrect, for type
		definitions such as:
			type T is BOOLEAN
			sorts S (*! implementedby S *)
			opns F (*! implementedby F *) : S -> BOOL
			     G (*! implementedby G constructor *) : BOOL -> S
			eqns forall X:S ofsort Bool
			     F (G (TRUE)) = TRUE;
			     F (G (FALSE)) = TRUE;
			     F (X) = FALSE;
			endtype
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		032
Date:		Fri Dec  7 20:25:20 MET 1990
Report:		Peter Sjodin (SICS)
Files:		bin.sun3/caesar bin.sun4/caesar

Nature:		Added a `-hash' option to CAESAR to solve a problem found by
		Peter Sjodin. However, this option will not be much documented,
		since it is a rather temporary patch, rather than a clean
		definitive solution. Roughly speaking, this option should be
		used when the ``.h'' generated by CAESAR.ADT contains pointer
		type definitions.
-------------------------------------------------------------------------------
VERSION I
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		033
Date:		Wed Jan  2 19:18:45 MET 1991
Report:		Costas Courcoubetis (Univ. of Creete)
Files:		misc/caesar.xesar doc/Garavel-90-a.*

Nature:		Added a shell-script that allows to use the temporal logic
		formula evaluator module of XESAR on graphs generated by CAESAR
		from LOTOS descriptions. The Reference Manual of CAESAR was
		accordingly updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		034
Date:		Wed Jan  2 19:18:45 MET 1991
Files:		bin.sun3/caesar bin.sun4/caesar

Nature:		Extended the ``.net'' format, in order to display, for each
		unit of the Petri Net, the transitions going in and/or out the
		proper places of these units. This simplifies the debugging
		task, by exhibiting the sequential behaviour of each unit.
		From these projections, it is more easy to discover the corres-
		pondence between the source LOTOS program and the Petri Net
		generated by CAESAR.
-------------------------------------------------------------------------------
BUG FIX
Number:		035
Date:		Wed Jan  2 22:12:19 MET 1991
Report:		Peter Sjodin (SICS)
Files:		bin.sun3/caesar.adt bin.sun4/caesar.adt

Nature:		A bug was fixed, that made CAESAR.ADT complain about redundant
		equations for type definitions containing more than one sort,
		for instance:

		type A is
		sorts	A (*! implementedby A comparedby A_CMP *),
			B (*! implementedby B comparedby B_CMP *)
		opns
			A (*! implementedby A_CONS constructor *) : -> A
			B1 (*! implementedby B1 constructor *),
			B2 (*! implementedby B2 constructor *): -> B
			INV (*! implementedby B_INV *): B -> B
		eqns
		ofsort B
			INV(B1) = B2;
			INV(B2) = B1;
		endtype
-------------------------------------------------------------------------------
VERSION J
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		036
Date:		Wed Jan 23 21:09:32 MET 1991
Files:		misc/caesar.autograph

Nature:		Added a shell-script that allows to use the AUTOGRAPH tool
		(developed at INRIA) to display the graphs generated by CAESAR.
-------------------------------------------------------------------------------
VERSION K
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		037
Date:		Sat Feb 16 20:05:39 MET 1991
Files:		bin.{sun3,sun4}/caesar bin.{sun3,sun4}/caesar.adt

Nature:		Changed the code for parsing command-line options. Added the
		`-verbose' option, whose meaning is exactly the contrary of
		`-silent'.
-------------------------------------------------------------------------------
BUG FIX
Number:		038
Date:		Sat Feb 16 20:05:39 MET 1991
Report:		Lars-Ake Fredlund (SICS)
Files:		bin.{sun3,sun4}/caesar bin.{sun3,sun4}/caesar.adt

Nature:		A bug was fixed: the enumeration macro generated by CAESAR.ADT
		for tuple types was not correct, in the sense that each itera-
		tion would overwrite the values returned by previous iterations
		i.e., if one writes:
			ENUM_TUPLE (X)
		at each iteration, the pointer value X is not changed, but
		the tuple value *X pointed by X is modified.

		Strictly speaking, this could very well be understood as a
		feature of CAESAR.ADT (rather than a bug). However, this was
		not compatible with CAESAR's functioning: in the simulator
		program generated by CAESAR, X usually points to a field of
		some state stored in the state table. Therefore, an enumera-
		tion macro was likely to modify the contents of previously
		generated states, leading to chaos.

		The new version of CAESAR.ADT generates C code such that:
			ENUM_TUPLE (X)
		modifies the value of X (at each iteration, X is assigned a
		pointer to a new tuple value) but the tuple value previously
		pointed by X is not changed.

		From now on, it is necessary to enclose each call to a tuple
		enumeration macro within braces, i.e.,
			{ ENUM_TUPLE (X) <instruction> }
		CAESAR was modified, as to add these brackets in the simulator.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		039
Date:		Wed Feb 27 19:08:05 MET 1991
Files:		bin.{sun3,sun4}/aldebaran

Nature:		Support for the tau*.a bisimulation described in [Fernandez-
		Mounier-90] was added. Notice that this bisimulation is
		different from the safety equivalence, despite they share
		the same pre-order. New options `-iequ', `-icla' and `-imin'
		were added.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		040
Date:		Wed Feb 27 19:08:05 MET 1991
Files:		bin.{sun3,sun4}/aldebaran

Nature:		The implementation of the ``on the fly'' algorithm presented in
		[Fernandez-Mounier-90] was released. The existing `-fly'
		option was removed and replaced by `+' options: `+bequ',
		`+sequ', and `+iequ'. See the manual.

		A `+?equ' option should give the same results as the corres-
		ponding `-?option'. However, there are two major reasons for
		using a `+' option instead of a `-' one:

		1) efficiency: the Fernandez-Mounier algorithm is often faster
		than the Paige-Tarjan one.

		2) accuracy of diagnostics: in the Paige-Tarjan algorithm,
		diagnostics consist in sequences of the reduced automata,
		whereas in the Fernandez-Mounier algorithm, they consist in
		sequences of the original automata (before reduction).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		041
Date:		Wed Feb 27 19:08:05 MET 1991
Files:		bin.{sun3,sun4}/aldebaran

Nature:		Support for the computation of several pre-order relations was
		added. New options `+bord', `+iord', `+sord' were introduced.

		Note 1: options `+iord' and `+sord' compute the same pre-order.

		Note 2: pre-orders are not anti-symmetric wrt bisimulations,
		i.e., it is true that:
			`aldebaran -bequ f1.aut f2.aut` = TRUE
		implies both:
			`aldebaran -bord f1.aut f2.aut` = TRUE
		and:
			`aldebaran -bord f2.aut f1.aut` = TRUE

		but it is false that:
			`aldebaran -bord f1.aut f2.aut` = TRUE
		and:
			`aldebaran -bord f2.aut f1.aut` = TRUE
		always implies:
			`aldebaran -bequ f1.aut f2.aut` = TRUE
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		042
Date:		Wed Feb 27 19:08:05 MET 1991
Files:		man/aldebaran.l

Nature:		The man page for ALDEBARAN was updated (fully rewritten). Some
		options (`-help', `-bin', `-stat') are no longer documented
		since they are of no use to most users.
-------------------------------------------------------------------------------
VERSION L
-------------------------------------------------------------------------------
BUG FIX
Number:		043
Date:		Mon Apr  1 18:14:38 MET DST 1991
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		Various bugs in CAESAR.ADT have been fixed.
-------------------------------------------------------------------------------
IMPROVEMENTS
Number:		044
Date:		Mon Apr  1 18:14:38 MET DST 1991
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		The behaviour of CAESAR.ADT was modified, in order to use it
		for compiler generation (abstract syntax tree constructions
		and semantic checks). The basic idea is to allow the mixing
		of C code automatically generated by CAESAR.ADT with C code
		written manually by the user.

		1) From now on, a sort without constructor operations is no
		longer a fatal error. CAESAR.ADT issues a warning, but no
		code is generated. It is assumed the user will provide the
		C code needed to implement such a sort. For instance, to
		import and handle character strings in a LOTOS program, the
		user has to define a sort with no constructor, e.g.:
			type EXTERNAL_CHARACTER_STRING is
			   sort STRING (*! implementedby C_STRING
					   comparedby STREQ
					   printedby STRPR *)
			endtype
		and to provide elsewhere the corresponding implementation:
			typedef char *C_STRING;
			#define STREQ(S1,S2) (strcmp (S1, S2) == 0)
			#define STRPR(F,S) (fputs (S, F))

		2) From now on, a non-constructor operation whose semantics
		is not defined by any equation will provoke a warning, and no
		code will be generated. It is assumed that the user will
		provide the C code needed to implement such as sort. For
		instance, one can reuse parts of the C library:
			type EXTERNAL_CHARACTER_STRING is NATURAL
			   sort STRING (*! ... <see above> *)
			   opns
			      LENGTH (*! implementedby strlen *) :
			         STRING -> NAT
			      COPY (*! implementedby strdup *) :
			         STRING -> STRING
			      COMPARE (*! implementedby strcmp *) :
			         STRING, STRING -> NAT
			endtype

		3) This evolution of CAESAR.ADT is not upward-compatible.
		Version 2.5 of CAESAR.ADT does not exactly behave as previous
		ones. The main differences are:

			a) From now on, a non-constructor operation that
			is not defined by any equation is no longer automati-
			cally considered as a constructor (consequence of 2.)

			b) From now on, CAESAR.ADT does no longer accept type
			definitions containing more than one sort (this should
			be fixed later).
-------------------------------------------------------------------------------
BUG FIX
Number:		045
Date:		Thu Apr 11 22:09:18 MET DST 1991
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		When the definition of a LOTOS operation was not followed
		by a special comment (*! ... *), the operation was sometimes
		considered as a constructor, instead of a non-constructor
		(especially on SUNs 4). This was corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		046
Date:		Thu Apr 11 22:09:18 MET DST 1991
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		If /bin/indent crashes (core dumps) while trying to indent the
		`.h' file automatically generated, CAESAR.ADT will remove the
		`core' file and leave the original `.h' file not indented
		(whereas previous versions did not recover properly, leaving
		an empty `.h' file)
-------------------------------------------------------------------------------
BUG FIX
Number:		047
Date:		Thu Apr 11 22:09:18 MET DST 1991
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		CAESAR.ADT immediatly stops when it founds a constructor
		declared outside of its type, since this is a fatal error.
		Previous versions did not stop, leaving an incoherent `.h'
		file.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		048
Date:		Thu Apr 11 22:09:18 MET DST 1991
Files:		bin.{sun3,sun4}/caesar.adt
Report:		Khalid Benabdelkader (LGI-IMAG)

Nature:		When generating `struct' declarations, CAESAR.ADT does no
		longer consider that external types (see #044 above) are
		pointer types. If REAL is an external type, then the
		corresponding structure fields will be of the form
			REAL CAESAR_ADT_...;
		instead of
			char *CAESAR_ADT_...;
		Testers, selectors, comparison and printing functions have
		been accordingly updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		049
Date:		Thu Apr 11 22:09:18 MET DST 1991
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		As a generalization of the previous point, the new version of
		CAESAR.ADT no longer handles forward references in structure
		field declarations by using (char *) declarations. Appropriate
		(struct CAESAR_ADT_STRUCT_... *) declarations are used instead.
		This removes the need for pointer casting.
		Note: (struct CAESAR_ADT_STRUCT_... *) declarations are now
		used systematically for all pointer-type fields, even if no
		forward reference is present.
-------------------------------------------------------------------------------
VERSION M
-------------------------------------------------------------------------------
BUG FIX
Number:		050
Date:		Sun May 12 10:22:50 MET DST 1991
Report:		Lars-Ake Fredlund (SICS)
Files:		bin.{sun3,sun4}/caesar

Nature:		A bug was fixed which caused CAESAR to abort the optimizations
		V3 and V4 when running under SunOS 4.1: an exit(0) instruction
		was missing at the end of the ``.c'' files generated by CAESAR
		for these optimizations.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		051
Date:		Sun May 12 10:22:50 MET DST 1991
Files:		bin.{sun3,sun4}/caesar

Nature:		The expansion algorithm used in CAESAR was modified as to
		allow the factorization of common behaviours. The new algorithm
		is much simpler than the original one and gives better results:
		For a level 2 protocol, the corresponding network has only
		86 places and 158 transitions, whereas the network generated
		by the previous version of CAESAR had 875 places and 1945
		transitions! The results are specially spectacular for LOTOS
		programs obtained by translating a program written in another
		formalism (state tables, SDL) into LOTOS.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		052
Date:		Sun May 12 10:22:50 MET DST 1991
Files:		bin.{sun3,sun4}/caesar

Nature:		CAESAR has been modified in order to terminate properly the
		simulation phase in case of various exceptions, such as
		memory shortage, user interrupt, errors in the C implementation
		of abstract data types, either written by hand (in which case
		segmentation violation or memory fault may occur) or generated
		with CAESAR.ADT.

		CAESAR recovers from these exceptions by closing all files
		properly. A graph file, whatever the format, is always left
		in a coherent state, even if the whole graph has not been
		generated (e.g., in case of state explosion). All states and
		transitions that have been explored are written down, in order
		to allow debugging or partial verification.

		Moreover, if the ``.gph'' format is selected (option -graph)
		CAESAR will now display the state table, the last state explo-
		red, the position table for this state, the last position
		explored, and the last transition fired. This is helful for
		debugging.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		053
Date:		Sun May 12 10:22:50 MET DST 1991
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		In the C code generated by CAESAR.ADT, termination on error
		is now done by kill(15), instead of exit(1) previously. This
		is useful when CAESAR and CAESAR.ADT are used together: if an
		error occurs in the data type implementation, signal #15 is
		raised. Then CAESAR catches this signal and terminates
		properly, writing down all informations needed for debugging.
		Also, the error messages for data types were changed to give
		them the same form as CAESAR ones.
-------------------------------------------------------------------------------
BUG FIX
Number:		054
Date:		Sun May 12 10:22:50 MET DST 1991
Files:		bin.{sun3,sun4}/caesar.adt
Report:		Lynne Drayton (Univ. of Lancaster)

Nature:		The new version of CAESAR.ADT can handle types containing more
		than one sort. The order of definitions in the C code generated
		by this new version was also changed, as to avoid forward
		references to types and functions.
-------------------------------------------------------------------------------
BUG FIX
Number:		055
Date:		Sun May 12 10:22:50 MET DST 1991
Files:		bin.{sun3,sun4}/caesar.adt
Report:		Lynne Drayton (Univ. of Lancaster)

Nature:		The new version of CAESAR.ADT no longer attempts to generate
		C code for parametrized and actualized types. These types are
		silently ignored.
-------------------------------------------------------------------------------
BUG FIX
Number:		056
Date:		Sun May 12 10:22:50 MET DST 1991
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		The new version of CAESAR.ADT no longer forbids constructor
		inheritance (i.e., it is possible to enrich a sort with a
		constructor). However, this is still considered as very poor
		specification style :-)

		Caution: one must take care when using constructor
		inheritance with renamed types, since CAESAR.ADT gives the
		same implementation to renaming and renamed sorts. Adding a
		constructor to a renaming sort will also add this constructor
		to the renamed sort. In the following example:

			type T2 is T1 renamedby
			   sortnames S2 for S1
			endtype

			type T3 is T2
			   opns F (*! constructor *) : -> S2
			endtype

		both sorts S1 and S2 will be implemented by the same C type.
		Consequently F will be a constructor of S1 and S2. CAESAR.ADT
		issues a warning when discovering such situations.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		057
Date:		Sun May 12 10:22:50 MET DST 1991
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		CAESAR.ADT was modified as to allow a better mixing of
		user-defined C code (e.g., types and functions to handle
		floats, strings, ...) and C code generated by CAESAR.ADT.
		This change was needed since CAESAR.ADT is now used as a
		prototype compiler development tool.

		If the LOTOS program contains extern types (see above #044)
		the user has to put them in a ``.t'' file, which is #included
		in the ``.h'' file.

		If the LOTOS program contains extern functions (see above #044)
		the user has to put them in a ``.f'' file, which is #included
		in the ``.h'' file.

		The points where ``.t'' and ``.f'' are included was carefully
		designed as to avoid forward references. For more information,
		see the comments inserted in the ``.h'' file.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		058
Date:		Sun May 12 10:22:50 MET DST 1991
Files:		bin.{sun3,sun4}/caesar.adt
Report:		Khalid Benabdelkader (LGI-IMAG)

Nature:		The C function which implements any constructor with arity 0
		(i.e., no operands) in the general case was improved. From now
		on, a new memory cell is not systematically allocated at each
		call to this function: only the first call will allocate a
		memory cell and subsequent calls will use this memory cell.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		059
Date:		Sun May 12 10:22:50 MET DST 1991
Files:		bin.{sun3,sun4}/caesar, bin.{sun3,sun4}/caesar.adt

Nature:		The ``-hash'' option of CAESAR mentionned above (see #032) was
		removed. From now on, this option is automatically set by
		default (i.e., CAESAR does the "safe" choice) unless the
		``.h'' file contains a line of the form:
			#define CAESAR_NORMAL_FORM_DATA

		The underlying problem can be explained as follows. To compare
		states, CAESAR uses an hash table. Since each state is
		represented by a bit string, the hash code is computed on the
		basis of this bit string. However, this is correct only if
		the following property holds: two states are identical => they
		have the same bit strings (the converse is trivial). As a
		consequence, this is correct only if all data (i.e., variable
		values) contained in the state vector are in normal form.
		Practically, if S is a LOTOS sort and V1, V2 two values of
		sort S, the above property becomes: V1 = V2 => the have the
		same bit strings. This is not always true, due to pointer types
		(it is possible to have *v1 == *v2 and v1 != v2).

		To summarize, if the state vector contains pointer-type
		variables, using an hash-code will lead to distinguish
		between equivalent states. This is still correct wrt to
		strong bisimulation, but the size of the graph may become
		larger than necessary (and the simulation may even loop,
		trying to create new states forever).

		If the ``.h'' file contains a line of the form:
			#define CAESAR_NORMAL_FORM_DATA
		then CAESAR will compute the hash-code on the full state
		vector bit string. Otherwise, CAESAR will only compute the hash
		code on the marking part of the state vector, not taking into
		account the context part (leading to a hash function, ``degra-
		ded'' but still correct wrt to the aforementioned problem).

		CAESAR.ADT was modified as to automatically generate this
		line when there are neither pointer types (i.e., tuples or
		general types) nor extern types.

		If the ``.h'' file is written by hand, the user should #define
		NORMAL_FORM_DATA if no pointer types are present.

		Similarly, if the ``.h'' file is automatically generated but
		includes a ``.t'' file written by hand, the ``.t'' file should
		#define NORMAL_FORM_DATA if no pointer types are present.

		See also improvement #082.
-------------------------------------------------------------------------------
BUG FIX
Number:		060
Date:		Sun May 12 10:22:50 MET DST 1991
Files:		lib/BOOLEAN.lib

Nature:		A silly problem was fixed in the BOOLEAN.lib file. Since `true'
		was declared before `false', CAESAR.ADT was implementing `true'
		with 0 and `false' with 1. Therefore, given the following
		equations:
		        forall X, Y:S
			   X == X = true;
			   true => X == Y = false;
		the corresponding C code is:
			BOOL EQ_S (CAESAR_ADT_1, CAESAR_ADT_2)
			S CAESAR_ADT_1;
			S CAESAR_ADT_2;
			{
			   if (CMP_S (CAESAR_ADT_1, CAESAR_ADT_2))
			      return TRUE ();
			   else if (CMP_BOOL (TRUE (), TRUE ()))
			      return FALSE ();
			   else
			      CAESAR_ADT_ERROR ("EQ_S");
			}
		After expansion this leads to:
			BOOL EQ_S (CAESAR_ADT_1, CAESAR_ADT_2)
			S CAESAR_ADT_1;
			S CAESAR_ADT_2;
			{
			  if (CAESAR_ADT_1 == CAESAR_ADT_2)
		             return 0;
		          else if (0 == 0)
			     return 1;
			  else
			     <error>
                       }
		The EQ_S function returns exactly the opposite of standard
		C conventions for booleans! There is no problem when using this
		code with CAESAR since CAESAR never computes:
			EQ_S (V1, V2)
		but:
			EQ_S (V1, V2) == TRUE()
		However, this could be an error if the C code generated by
		CAESAR.ADT is imported in user programs.
-------------------------------------------------------------------------------
BUG FIX
Number:		061
Date:		Thu May 16 07:32:18 MET DST 1991
Files:		lib/QUEUE.lib, lib/STACK.lib
Report:		Lynne Drayton (Univ. of Lancaster)

Nature:		The type proposed in lib/QUEUE.lib did not behave as a FIFO
		queue. This dubious library was moved into old/lib/QUEUE.lib.
		Two new libraries QUEUE.lib and STACK.lib were added, which
		are expected to do what they mean.
-------------------------------------------------------------------------------
VERSION N
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		062
Date:		Sun Aug 27 11:56:47 MET DST 1991
Files:		bin.{sun3,sun4}/{aldebaran,caesar,caesar.adt}

Nature:		A protection mechanism was added to CAESAR, CAESAR.ADT
		and ALDEBARAN to prevent unauthorized software dissemination.
		From the user's point of view, there should be no change,
		except that is necessary to set a shell variable $CADP in
		the environment. This is explained in file INSTALLATION.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		063
Date:		Sat Jun 15 20:31:12 MET DST 1991
Files:		bin.{sun3,sun4}/{aldebaran,caesar,caesar.adt}, old/man/*

Nature:		The format of the ``.gra'' file generated by the ``-xesar''
		option was changed, in order to be compatible with the new
		versions of XESAR and CLEOPATRE. With this new format, it is
		now possible to evaluate temporal logic formulas (and generate
		diagnostics) for graphs with more than 65536 states. Another
		option ``-xesar.old'' was added to CAESAR, which still allows
		to generate ``.gra'' files in the old format.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		064
Date:		Sun Aug 27 11:56:47 MET DST 1991
Files:		bin.{sun3,sun4}/{aldebaran,caesar,caesar.adt}, old/man/*

Nature:		A ``-version'' option was added to ALDEBARAN, CAESAR and
		CAESAR.ADT. When invoked with this option, each program
		displays its current version number and stops. The manual
		pages have been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		065
Date:		Sun Aug 27 11:56:47 MET DST 1991
Files:		doc

Nature:		New documents were added, namely:
		Fernandez-Mounier-91-a, Fernandez-Mounier-91-b, and
		Fernandez-Garavel-Mounier-Rasse-Rodriguez-Sifakis-91
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		066
Date:		Sun Aug 27 11:56:47 MET DST 1991
Files:		bin.{sun3,sun4}/aldebaran

Nature:		The ``+pequ'' option was added to ALDEBARAN. It implements
		an ``on the fly'' comparison for the branching equivalence
		defined by R.J. Van Glabbeek and W.P. Weijland.

		CAUTION: this algorithm assumes that one (at least) of both
		graphs to compare has no tau-transitions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		067
Date:		Sun Aug 27 11:56:47 MET DST 1991
Files:		bin.{sun3,sun4}/aldebaran

Nature:		The ``+dequ'' option was added to ALDEBARAN. It implements
		an ``on the fly'' comparison for the delay equivalence
		defined by W.P. Weijland. This equivalence has several
		advantages over observation equivalence:

		a) delay equivalence is stronger than observation equivalence
		   and faster to compute.

		b) if one (at least) of both graphs to compare has no tau-
		   transition, delay equivalence, branching equivalence, and
		   observation equivalence give the same result. Therefore
			aldebaran +dequ x.aut y.aut
		   or
			aldebaran +pequ x.aut y.aut
		   should be used, instead of:
			aldebaran -oequ x.aut y.aut
		   since it is faster.

		c) if both graphs to compare have tau-transitions, the
		   relations can be classified as follows:
			strong equivalence >>
			branching equivalence >>
			delay equivalence >>
			observation equivalence >>
			language equivalence
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		068
Date:		Wed Sep  4 07:43:37 MET DST 1991
Files:		bin.{sun3,sun4}/{caesar,caesar.adt}

Nature:		A facility was added to CAESAR and CAESAR.ADT concerning the
		``.lib'' files. Each time a LOTOS clause of the form:

			library T endlib

		is encountered, the file ``./T.lib'' is searched for in the
		current directory. If not found, the file ``$CADP/lib/T.lib''
		is then searched for, where $CADP is a shell variable that
		should be defined in the environment (see the INSTALLATION
		file).

		This should allow users to get read of symbolic links when
		using libraries, such as BOOLEAN.lib, NATURAL.lib, ...
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		069
Date:		Wed Sep  4 07:43:37 MET DST 1991
Files:		bin.{sun3,sun4}/caesar

Nature:		A similar facility was added to CAESAR concerning the ``.h''
		files. These files are searched for first in the current
		directory, then in $CADP/incl.

		This should allow users to get read of symbolic links when
		using standard implementations, such as BOOLEAN.h, NATURAL.h,
		etc
-------------------------------------------------------------------------------
BUG FIX
Number:		070
Date:		Mon Sep 23 15:10:44 MET DST 1991
Files:		bin.{sun3,sun4}/aldebaran

Nature:		ALDEBARAN was modified in order to check if the ``.aut'' files
		are correct. ALDEBARAN no longer core dumps (it stops with an
		error message) when one the following situations occur:
			- the syntax of an edge is incorrect
			- a state number is negative
			- a state number is greater than the number of states
			- there are not enough transitions in the ``.aut'' file
			- there are too many transitions in the ``.aut'' file
-------------------------------------------------------------------------------
BUG FIX
Number:		071
Date:		Mon Sep 23 15:10:44 MET DST 1991
Files:		bin.{sun3,sun4}/aldebaran

Nature:		A ``-det'' option was added to ALDEBARAN in order to perform
		automaton determinization. Note: this option does not consider
		"i" transitions as "epsilon" transitions; however, this can be
		done by applying the "-imin" option before the "-det" option.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		072
Date:		Mon Sep 23 15:10:44 MET DST 1991
Files:		(all)

Nature:		Some changes in the tape organization, listed below:

		- the INSTALLATION file was added

		- the ``misc'' directory was renamed in ``com'', since it
		  contains shell-script commands

		- a new directory, named ``incl'' was created. All ``.h''
		  files contained in the ``lib'' directory were moved into
		  the ``incl'' directory.

		- the Request For License script-shell was added (``com/rfl'')

		- the obsolete binaries of CAESAR, CAESAR.ADT and ALDEBARAN
		  contained in old/bin.{sun3,sun4} have been removed from
		  the distribution tape. They are no longer be available
		  because they do not implement the protection mechanism.
-------------------------------------------------------------------------------
VERSION O 	[ skipped to avoid possible confusion between `O' and `0' ]
-------------------------------------------------------------------------------
VERSION P
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		073
Date:		Wed Nov 13 11:13:49 MET 1991
Files:		lib
Origin:		Philippe Turlier (IMAG)

Nature:		Thanks to Philippe, new libraries have been added:
			BITSTRING.lib
			BITNATREPR.lib
			DECDIGIT.lib
			DECSTRING.lib
			DECNATREPR.lib
			OCTET.lib
		These libraries are those of the ISO 8807 standard. Moreover,
		they are accepted and compiled by CAESAR.ADT.

		Some bugs have been fixed in QUEUE.lib and STACK.lib

		Also, the BIT.lib library has been modified to follow the
		definitions given in ISO 8807.

		Finally, our NATURAL.lib library has been extended with the
		"mod" and "div" operations. The obsolete version has been
		moved into old/lib/NATURAL.lib#1
-------------------------------------------------------------------------------
BUG FIX
Number:		074
Date:		Thu Nov 14 11:54:57 MET 1991
Files:		bin.{sun3,sun4}/caesar.adt
Report:		Philippe Turlier (IMAG)

Nature:		A bug was fixed, which caused CAESAR.ADT to enter into an
		infinite recursion (and finally core dump) if a non-constructor
		function had more than 9 arguments.
-------------------------------------------------------------------------------
BUG FIX
Number:		075
Date:		Thu Nov 14 11:54:57 MET 1991
Files:		bin.{sun3,sun4}/caesar
Report:		Young Sun (University of York)

Nature:		A bug was fixed, which caused optimizations V3 and V4 to
		abort if the current directory ``.'' was not present in
		the search path (in the environment variable $PATH)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		076
Date:		Thu Nov 14 11:54:57 MET 1991
Files:		bin.{sun3,sun4}/caesar, bin.{sun3,sun4}/caesar.adt

Nature:		Several error messages of CAESAR and CAESAR.ADT were improved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		077
Date:		Thu Nov 14 11:54:57 MET 1991
Files:		bin.{sun3,sun4}/caesar

Nature:		A bug was fixed that cause CAESAR to loop indefinitely (only
		in some special cases) while translating a "par" operator.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		078
Date:		Thu Nov 14 11:54:57 MET 1991
Files:		bin.{sun3,sun4}/caesar

Nature:		A new optimization, named E7, was added to CAESAR. This opti-
		mization aims at simplifying the network by removing "dead"
		transitions. A transition T is defined to be "dead" if it does
		not exist any reachable marking M such that T can be fired
		from M.

		Such transitions are created when translating behaviour
		expressions with parallel composition and disabling, e.g.:
			G; G; ... || G; G; ...
		or
			(G1; ... || G2; ...) [> ...

		CAESAR detects dead transitions transitions by performing
		reachability analysis on the network, as it already does
		during the simulation phase. However, during optimization
		E7, the data part of the network (state variables, expressions,
		guards and offers) is not considered, since dead transitions
		are a matter of control. The underlying theorem is: if a
		transition T never fires for the control part of the network,
		it will never fire for the complete network (control + data
		part), so it can be safely removed (during optimization E7
		and before entering the simulation phase), still preserving
		strong equivalence.

		The practical efficiency of optimization E7 seems to depend
		on the LOTOS specification under study. For instance, when
		applied to the rel/REL protocol, it removes 36 transitions
		over 513 (about 6%) in 7 minutes.

		However, on other examples, it has no effect. On some
		examples, it can even be negative: this happens when the
		control-only marking graph is larger than the control+data
		marking graph (due to boolean guards that evaluate to false
		and prevent some transitions from firing).

		For these reasons, optimization E7 is not automatic in CAESAR.
		It has to be explicitely started, by using the "-e7" option.

		CAESAR applies this optimization only once. It may refuse to
		apply it if no gain is to be expected. Finally, if optimi-
		zation E7 does not lead to any improvement, a warning message
		is issued (so that the user can avoid it the next time).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		079
Date:		Thu Nov 14 11:54:57 MET 1991
Files:		bin.{sun3,sun4}/caesar, bin.{sun3,sun4}/caesar.adt
Report:		Lynne Drayton (Univ. of Lancaster) and Lars-Ake Fredlund (SICS)

Nature:		From now on, using special comments of the form (*! ... *)
		is no longer mandatory to use CAESAR and CAESAR.ADT. This
		will hopefully increase tool interoperability.

		The naming conventions used by both tools are the following:

		(a) wherever special comments are used, they determine the
		C identifier(s) to be used.

		(b) by default, a given sort S will by implemented by a
		C type whose name is also S (with upper case translation)

		(c) similarly, the C identifiers for the comparison function,
		enumeration macro, and printing function associated to sort S
		will be, respectively, CMP_S, ENUM_S and PRINT_S (with upper-
		case translation for S).

		(d) by default, a given operation F will be implemented by a
		C function or macro-definition whose name is also F (with
		upper case translation). However, if F does not start with
		a letter and/or contains special characters (e.g., +, <>, 7,
		etc.) a name of the form CAESAR_OP_xxx is used instead.

		(e) if case that several LOTOS sorts share the same name S,
		a unique number is appended to the corresponding C identifiers:
		S, S__1, S__2, ... CMP_S, CMP_S__1, CMP_S__2. This also applies
		to operations (so that overloading is not a problem). But, see
		restrictions below.

		A new option, "-comments", was added to CAESAR and CAESAR.ADT
		in order to retain the policy used in previous versions. When
		option -comments is set, CAESAR and CAESAR.ADT issue a warning
		message each time that a C identifier is automatically
		generated (i.e., each time that a special comment is found
		to be missing, that should normally be present in order to
		avoid automatic name generation). A given message is issued
		only once. Despite messages, C identifiers are generated as
		described above.

		Unfortunately, the automatic generation scheme is not perfect.

		Caution 1: CAESAR and CAESAR.ADT do neither ensure that the
		automatically generated C identifiers are pairwise different,
		nor that they are different from reserved C keywords, nor that
		they are different from C identifiers declared in C comments.

		These guarantees only hold for the set of all C identifiers
		declared in special comments (the -comments options is the
		appropriate mean to make sure that all C identifiers are
		pairwise distinct and distinct from keywords).

		For instance, the following declarations are likely to cause
		trouble:

		Example 1:
			type T is
			sorts S, CMP_S
			endtype

		Example 2:
			type T is
			sorts S, S0 (*! implementedby S *)
			endtype

		Example 3:
			type T is
			sorts S
			opns S : ... -> ...
			endtype

		In general, these problems can be solved using appropriate
		special comments to avoid name conflicts.

		Caution 2: the above conventions (a)...(e) currently used to
		generate C identifiers automatically may change in the future.
		So, it would not be wise to rely on these conventions:
			- to provide hand-written C code to be included or
			linked with the simulator program generated by CAESAR
			- to combine the C code generated by CAESAR.ADT with
			some external C code
		In both cases, special comments should used instead of relying
		on automatic name generation.

		The manual pages for CAESAR and CAESAR.ADT have been updated.
-------------------------------------------------------------------------------
VERSION Q
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		080
Date:		Sat Jan 25 18:12:11 MET 1992
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		The printing functions for sorts generated by CAESAR_ADT have
		been improved in several ways:

		- LOTOS identifiers are displayed, instead of C ones in
		previous versions

		- LOTOS infix operations can be displayed either in prefix
		notation (by default) or in infix notation, if the cpp(1)
		macro CAESAR_INFIX_FORM_PRINTING is defined:

			#define CAESAR_INFIX_FORM_PRINTING

		This applies to tuple sorts, as well as ordinary sorts
-------------------------------------------------------------------------------
BUG FIX
Number:		081
Date:		Sat Jan 25 18:12:11 MET 1992
Report:		Philippe Turlier (IMAG)
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		A bug has been fixed in CAESAR.ADT: in the previous versions
		some non-integer LOTOS sorts were implemented as C integers,
		for instance S1 in the following example:

			sorts S1, S2
			opns F1 (*! constructor *) : -> S1
			     F2 (*! constructor *) : S2 -> S1
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		082
Date:		Sat Jan 25 18:12:11 MET 1992
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		It is now possible to have the cpp(1) macro CAESAR_NORMAL_FORM
		properly defined (see improvement #059) when the LOTOS specifi-
		cation contains "external" sorts.

		If none of the C types provided for implementing LOTOS external
		sorts contains pointer-types, the ``.t'' file should contain
		the following definition:

			#define CAESAR_NORMAL_FORM_EXTERNAL_DATA

		The  ``.h'' file will define CAESAR_NORMAL_FORM iff
		no sort is external or CAESAR_NORMAL_FORM_EXTERNAL_DATA is
		defined in the ``.t'' file, and also if no generated C type
		is a pointer type.

		Note: the solution previously suggested in #059 (i.e.,
		defining CAESAR_NORMAL_FORM in the ``.t'' file if the C
		types implementing external sorts do not contain pointer
		types) was not correct, since it did not consider the
		case where all external types are non-pointers but some
		generated types are pointers.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		083
Date:		Sat Jan 25 18:12:11 MET 1992
Files:		bin.{sun3,sun4}/caesar.adt, bin.{sun3,sun4}/caesar

Nature:		A new keyword ("external") has been introduced in special
		comments for sorts. The modified syntax is now:

			(*!
			    [implementedby C_NAME_1]
			    [comparedby C_NAME_2]
			    [enumeratedby C_NAME_3]
			    [printedby C_NAME_4]
			    [external]
			*)

		A new keyword ("external") has been introduced in special
		comments for operations. The modified syntax is now:

			(*!
			    [implementedby C_NAME_1]
			    [constructor]
			    [external]
			*)

		If a sort without constructors is declared "external",
		CAESAR.ADT will not emit a warning message.

		If a non-constructor without equations is declared "external",
		CAESAR.ADT will not emit a warning message.

		An "external" sort may have constructors. This case was not
		permitted before, and it proves to be extremely useful in
		practice, either for refining a specification in order to
		produce an efficient implementation (progressively replacing
		some LOTOS types with hand-written implementations in C), or
		for interfacing an existing data structure described in C
		(the LOTOS specification consisting in an abstract "view"
		of this data structure).

		Each constructor of an "external" sort must be "external".

		Each constructor of a non-"external" sort must be
		non-"external".

		An operation declared "external" (whether constructor or
		non-constructor) must not be defined by equations.

		This change is upward compatible: old LOTOS program will
		still be accepted by CAESAR and CAESAR_ADT and behave as
		previously. However, it is advisable to add an "external"
		keyword to sorts without constructors, and to non-constructor
		operations without equations, to get rid of warning messages.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		084
Date:		Sat Jan 25 18:12:11 MET 1992
Files:		demos/demo_2, demos/demo_3, demos/demo_4

Nature:		The following files:

			demos/demo_2/bitalt_service.lotos
			demos/demo_2/bitalt_protocol.lotos
			demos/demo_3/datalink_service.lotos
			demos/demo_4/EXP.lib

		have been modified to add the "external" attribute (see
		improvement #084) to external sorts and operations. The
		obsolete files have been moved in:

			old/demos/demo_2/bitalt_service.lotos#1
			old/demos/demo_2/bitalt_protocol.lotos#1
			old/demos/demo_3/datalink_service.lotos#1
			old/demos/demo_4/EXP.lib#1
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		085
Date:		Sat Jan 25 18:12:11 MET 1992
Files:		bin.{sun3,sun4}/caesar

Nature:		Optimization E2 has been enhanced.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		086
Date:		Sat Jan 25 18:12:11 MET 1992
Files:		bin.{sun3,sun4}/caesar

Nature:		Optimization E6 has been enhanced.
-------------------------------------------------------------------------------
BUG FIX
Number:		087
Date:		Mon Jan 27 20:39:12 MET 1992
Files:		bin.{sun3,sun4}/caesar, bin.{sun3,sun4}/caesar.adt

Nature:		Thanks to Pierre Boullier (INRIA), a bug has been fixed in
		CAESAR and CAESAR.ADT. Due to a misuse of SYNTAX, special
		comments (*! ... *) were sometimes incorrectly parsed (this
		occurred only in presence of lexical or syntactic error
		recovery).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		088
Date:		Mon Jan 27 20:39:12 MET 1992
Files:		bin.{sun3,sun4}/caesar
Report:		Lars-Ake Fredlund

Nature:		An important change has been done in order to reduce the number
		of states generated by CAESAR. The basic idea was formulated
		by Lars-Ake Fredlund as follows: reduction can be achieved
		by ``zero-ing variables when "the execution thread" moves out
		of a process''. This avoids the generation of (strongly-equi-
		valent states) which only differ due to the values of some
		variables belonging to processes which are no longer active.
		This change preserves strong equivalence.

		Note that this idea is not new; for instance, peoply working
		with XESAR in the ESPRIT DELTA-4 project used to set the
		values of local variables to zero when exiting a module, which
		is not so easy in a functional language like LOTOS.

		This optimization is not successful in all cases. But, on
		some examples, it leads to substantial gains. For instance,
		given with the LOTOS description of the REL/rel protocol
		[Bainbridge-Mounier-91] (FIFO property) the previous version
		of CAESAR generated a graph with:
			- 679_450 states
			- 1_952_843 edges
		in 9 hours on a DEC Station 5000 with 24 Mbytes. The improved
		version of CAESAR generates a graph with only:
			- 126_223 states
			- 428_766 edges
		in 30 minutes on the same DEC Station.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		089
Date:		Mon Jan 27 20:39:12 MET 1992
Files:		bin.{sun3,sun4}/caesar

Nature:		Several changes have been made in order to reduce the size of
		the simulator program generated by CAESAR.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		090
Date:		Mon Jan 27 20:39:12 MET 1992
Files:		bin.{sun3,sun4}/caesar, bin.{sun3,sun4}/caesar.adt

Nature:		Due to the introduction of OPEN/CAESAR facilities, it is no
		longer allowed to have C identifiers starting with "caesar_"
		for implementing sorts and operations. Previously, only
		identifiers prefixed with "CAESAR_" were forbidden.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		091
Date:		Mon Jan 27 20:39:12 MET 1992
Files:		com/caesar.autograph, com/caesar.xesar

Nature:		These command files have been modified to take adavantage of
		the $CADP variable, leading to an increased portability.
		The obsolete versions have been respectively moved in
		old/com/caesar.autograph#1 and old/com/caesar.xesar#1.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		092
Date:		Mon Jan 27 20:39:12 MET 1992
Files:		lib

Nature:		Two new ISO libraries have been added:
			BASICNATURALNUMBER.lib
			NATURALNUMBER.lib

		The extended (but non-standard) library NATURAL.lib has been
		slightly modified. The obsolete version has been moved into
		old/lib/NATURAL.lib#2.
-------------------------------------------------------------------------------
BUG FIX
Number:		093
Date:		Mon Jan 27 20:39:12 MET 1992
Report:		Jean-Claude Fernandez (IMAG)
Files:		lib/QUEUE.lib, lib/STACK.lib

Nature:		An error in the equations definining operation Empty()
		for sorts QUEUE and STACK has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		094
Date:		Mon Jan 27 20:39:12 MET 1992
Courtesy: 	Lynne Drayton (Lancaster University)
Files:		usr/drayton

Nature:		We are pleased to distribute a contribution from:

			Lynne Drayton
			Computing Department
			Lancaster University
			Lancaster
			ENGLAND
			(e-mail: ld@comp.lancs.ac.uk)

		It contains utilities for:
		- interfacing SEDOS and CAESAR/ALDEBARAN toolkits
		- detecting and explaining deadlocks in ALDEBARAN ".aut" files

		It can be found in the directory $CADP/usr/drayton.
-------------------------------------------------------------------------------
BUG FIX
Number:		095
Date:		Mon Apr 13 12:06:07 MET DST 1992
Files:		bin.{sun3,sun4}/caesar, bin.{sun3,sun4}/caesar.adt

Nature:		When an identifier is missing, SYNTAX inserts the dummy
		indentifier %IDENTIFIER (or %SPECIAL_IDENTIFIER). Previously,
		the name of this identifier was the empty string "", which
		led to confusing error messages. In the new version, this
		identifier is assigned the name "%IDENTIFIER" (resp.
		"%SPECIAL_IDENTIFIER").
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		096
Date:		Mon Apr 13 12:06:07 MET DST 1992
Files:		bin.{sun3,sun4}/caesar, bin.{sun3,sun4}/caesar.adt

Nature:		With the help of Pierre Boullier (INRIA), the scanner of
		CAESAR and CAESAR.ADT was modified in order to accept the
		full "library" statement:
			library F1, ... Fn endlib
		The previous versions only allowed a single file (n = 1).
		Also, error recovery on "library" statement has improved.
-------------------------------------------------------------------------------
BUG FIX
Number:		097
Date:		Mon Apr 13 12:06:07 MET DST 1992
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		The C code generated by CAESAR.ADT has been changed as to
		avoid problems occuring with mutually recursive sorts.
		"/* forward */" declarations have been added and the
		"printedby" functions are now declared as "void" functions.
-------------------------------------------------------------------------------
BUG FIX
Number:		098
Date:		Mon Apr 13 12:06:07 MET DST 1992
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		The previous versions of CAESAR.ADT generated incorrect C code
		when a free variable had the same name as an operation, e.g.:

			type message is NaturalNumber
			   sorts mess
			   opns
			      kind : mess -> Nat
			      seq  : mess -> Nat
			      data : mess -> Nat
		              msg  (*! constructor *) : Nat , Nat , Nat -> mess
			   eqns  forall Kind,Data,Seq: Nat
			      ofsort Nat
				kind (msg (Kind,Data,Seq)) = Kind;
				seq (msg (Kind,Data,Seq)) = Seq;
				data (msg (Kind,Data,Seq))= Data;

		This bug was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		099
Date:		Mon Apr 13 12:06:07 MET DST 1992
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		A ``-indent'' was added which does not call indent (1) to
		format the generated ``.h'' file. This can be useful when
		indent(1) core dumps, although CAESAR.ADT properly recovers
		from indent(1) crashes.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		100
Date:		Mon Apr 13 12:06:07 MET DST 1992
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		The C code generated by CAESAR.ADT now contains comments of
		the form: /*LINTLIBRARY*/ and /*NOTREACHED*/ in order to
		avoid lint(1) complaints.
-------------------------------------------------------------------------------
BUG FIX
Number:		101
Date:		Mon Apr 13 12:06:07 MET DST 1992
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		CAESAR.ADT does no longer generate "/* forward */" declarations
		for the constructors which are implemented as macro-definitions
-------------------------------------------------------------------------------
BUG FIX
Number:		102
Date:		Mon Apr 13 12:06:07 MET DST 1992
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		The constructors which are implemented as macro-definitions are
		now #defined before the #inclusion of the ``.f'' file, so that
		they are visible in this file.
-------------------------------------------------------------------------------
BUG FIX
Number:		103
Date:		Mon Apr 13 12:06:07 MET DST 1992
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		The macro-definitions of the form:
			#define F 123
		have been replaced by:
			#define F ((T) 123)
		in order to specify the type (and machine size) of the
		constant 123. This applies to the constructors of numeral
		and enumerated types.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		104
Date:		Mon Apr 13 12:06:07 MET DST 1992
Files:		lib/*

Nature:		Many changes in the ``lib'' directory, in order to be more
		conformant with the standard library of LOTOS.

		In BIT.lib, type Natural was renamed in NaturalNumber.
		The obsolete version was moved into old/lib/BIT.lib#2.

		In DECDIGIT.lib, type Natural was renamed in NaturalNumber.
		The obsolete version was moved into old/lib/DECDIGIT.lib#1.

		The contents of BASICNATURALNUMBER.lib was transferred in
		NATURALNUMBER.lib since, more often than not, people write
		either:
			library NATURALNUMBER endlib
		or:
			library BASICNATURALNUMBER, NATURALNUMBER endlib
		but they don't usually import BASICNATURALNUMBER.lib only:
			library BASICNATURALNUMBER endlib

		The following libraries have been added:
			NATREPRESENTATIONS.lib
			HEXDIGIT.lib
			HEXSTRING.lib
			HEXNATREPR.lib
			OCTDIGIT.lib
			OCTSTRING.lib
			OCTNATREPR.lib
		All these libraries have been flattened at hand, so that they
		can be used with the current versions of CAESAR and CAESAR.ADT.

		To summarize, the ``lib'' directory now contains all ISO
		libraries, except those which are parametrized or not fully
		instanciated, i.e.:
			FBoolean
			Element
			Set
			BasicNonEmptyString
			RicherNonEmptyString
			String0
			String1
			String

		In the non-standard file NATURAL.lib, operations 8 and 9 have
		been added.

		In order to provide support for data types which are often
		needed in ``real'' programs (e.g., compilers built with
		CAESAR.ADT), various libraries have been added:
			X_BIT.lib
			X_BOOLEAN.lib
			X_CHARACTER.lib
			X_NATURAL.lib
			X_REAL.lib
			X_STRING.lib
		The list is not complete yet. New libraries will be added
		as they are needed. All types and operations defined in
		these libraries are declared to be "external". Hand-written
		implementations in C are available in the ``incl'' directory.
		Compared to the C implementation which could be generated
		by CAESAR.ADT, they have various advantages:

			- integer values are no longer limited to 0..255

			- arithmetic operations (+, *, **, ...) are implemented
			optimally by their counterpart operators in C

			- it is possible to have types such as real numbers or
			strings, that can not be easily described using ADTs

		Also, the sample files:
			ENUMERATION.lib
			MODULUS.lib
			QUEUE.lib
			STACK.lib
			SYMBOLIC.lib
			TABLE.lib
			TUPLE.lib
		have been respectively renamed into:
			Y_ENUMERATION.lib
			Y_MODULUS.lib
			Y_QUEUE.lib
			Y_STACK.lib
			Y_SYMBOLIC.lib
			Y_TABLE.lib
			Y_TUPLE.lib
		to stress the difference between these sample types and the
		``standard'' libraries.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		105
Date:		Mon Apr 13 12:06:07 MET DST 1992
Files:		incl/*

Nature:		The hand-written C files containd in the ./incl directory
			BIT.h
			BOOLEAN.h
			ENUMERATION.h
			MODULUS.h
			NATURAL.h
			SYMBOLIC.h
			TABLE.h
			TUPLE.h
		have been respectively moved into old/incl:
			old/incl/BIT.h#1
			old/incl/BOOLEAN.h#1
			old/incl/ENUMERATION.h#1
			old/incl/MODULUS.h#1
			old/incl/NATURAL.h#1
			old/incl/SYMBOLIC.h#1
			old/incl/TABLE.h#1
			old/incl/TUPLE.h#1
		New C implementations have been installed:
			X_BIT.h
			X_BOOLEAN.h
			X_CHARACTER.h
			X_NATURAL.h
			X_REAL.h
			X_STRING.h
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		106
Date:		Wed Apr 29 20:31:49 MET DST 1992
Files:		all

Nature:		The OPEN/CAESAR environment (version 1.0) was added to the
		distribution tape. It consists of the following files:

		a) bin.{sun3,sun4}/caesar: the new version of CAESAR
		supporting the ``-open'' option

		b) doc/Garavel-92-a.ps : the OPEN/CAESAR Reference Manual

		c) man/caesar_graph.l: the manual page describing the graph
		module interface

		d) incl/caesar_graph.h: the include file describing the graph
		module interface

		e) man/caesar_*.l: the manual pages for the libraries of
		the storage module. These manual pages are automatically
		extracted from the OPEN/CAESAR Reference Manual). At present,
		there are 5 manual pages:
			caesar_bitmap.l
			caesar_edge.l
			caesar_hash.l
			caesar_stack_1.l
			caesar_standard.l

		f) incl/caesar_*.h: the include files for the libraries of
		the storage module. At present there are 6 include files:
			caesar_bitmap.h
			caesar_edge.h
			caesar_hash.h
			caesar_stack_1.h
			caesar_standard.h

		g) bin.{sun3,sun4}/libcaesar.a: the object code for the
		libraries of the storage module.

		h) com/caesar.open: a script shell providing easy access
		to the OPEN/CAESAR environment. This shell script is
		intended to be the user front end to OPEN/CAESAR.

		i) man/caesar.open.l: the manual page for ``caesar.open''

		j) src/simulator.c src/deadlock.c: two examples of
		exploration module (see #107 and #108 below)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		107
Date:		Wed Apr 29 20:31:49 MET DST 1992
Files:		src/simulator.c

Nature:		To illustrate how OPEN/CAESAR can be used, a small interactive
		simulator (with backtracking) is given in the newly created
		``src'' directory.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		108
Date:		Wed Apr 29 20:31:49 MET DST 1992
Files:		src/deadlock.c

Nature:		To illustrate how OPEN/CAESAR can be used, a tool for detecting
		deadlocks (without building the state graph) is given in the
		``src'' directory.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		109
Date:		Wed Apr 29 20:31:49 MET DST 1992
Files:		bin.{sun3,sun4}/aldebaran

Nature:		Three new options +bmin, +imin, and +pmin have been added.
		They are computed using the Minimal Model Generation Algorithm
		and implemented using Binary Decision Diagrams (BDDs)
-------------------------------------------------------------------------------
BUG FIX
Number:		110
Date:		Wed Apr 29 20:31:49 MET DST 1992
Report:		Raymond Chow (RMIT, Melbourne)
Files:		bin.{sun3,sun4}/aldebaran

Nature:		The previous version of ALDEBARAN core dumped if the ``.aut''
		file would contain labels with more than 300 characters. In
		the new version, 5000 characters are allowed.
		Various other bugs have also been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		111
Date:		Wed Apr 29 20:31:49 MET DST 1992
Files:		bin.{sun3,sun4}/aldebaran

Nature:		In order to avoid in part the state explosion problem, the new
		version of ALDEBARAN can accept as inputs networks of commu-
		nicating processes (and not only wholly generated labelled
		transition systems). A network of communicating processes
		is described in a ``.exp'' file: it combines ``.aut'' files
		using the LOTOS hiding and parallel operators. For more
		details, see the manual page for ALDEBARAN.
-------------------------------------------------------------------------------
BUG FIX
Number:		112
Date:		Wed Apr 29 20:31:49 MET DST 1992
Report:		Jean-Claude Fernandez
Files:		bin.{sun3,sun4}/caesar

Nature:		A bug was fixed: when the ``-warning'' option is set, CAESAR
		no longer prints the corresponding explanations on the ``.err''
		file.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		113
Date:		Wed Apr 29 20:31:49 MET DST 1992
Files:		bin.{sun3,sun4}/caesar

Nature:		Two options, ``-analysis'' and ``-functionality''  were added
		to CAESAR. They are needed when ALDEBARAN and CAESAR are used
		together to perform compositional generation and reduction.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		114
Date:		Wed Apr 29 20:31:49 MET DST 1992
Files:		demos/*

Nature:		The following symbolic links were removed since they were
		no longer necessary (see #068 for more details):
			demos/demo_3/BOOLEAN.lib
			demos/demo_4/BOOLEAN.lib
			demos/demo_4/NATURAL.lib
			demos/demo_5/BOOLEAN.lib
			demos/demo_5/NATURAL.lib
			demos/demo_6/BOOLEAN.lib
			demos/demo_6/NATURAL.lib

		Some files were renamed (see #105):
			demos/demo_4/BOOLEAN.h -> X_BOOLEAN.h
			demos/demo_4/NATURAL.h -> X_NATURAL.h
		The following files were consequently modified:
			demos/demo_4/systol_*.h

		In file demos/demo_4/EXP.h, a missing:
			#include <malloc.h>
		was added.

		File demos/demo4/READ_ME was updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		115
Date:		Wed Apr 29 20:31:49 MET DST 1992
Files:		demos/demo_7

Nature:		A new demo based upon the Overtaking protocol by P. Ernberg,
		L. Fredlund, and B. Jonsson (SICS), was added to the CADP
		distribution,
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		116
Date:		Wed Apr 29 20:31:49 MET DST 1992
Files:		demos/demo_8

Nature:		A new demo based upon the REL/rel, described in LOTOS by
		Laurent Mounier and Simon Bainbridge, was added to the CADP
		distribution,
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		117
Date:		Wed Apr 29 20:31:49 MET DST 1992
Files:		man/*

Nature:		The manual pages for ALDEBARAN, CAESAR, CAESAR.ADT have been
		updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		118
Date:		Wed Apr 29 20:31:49 MET DST 1992
Files:		doc/*

Nature:		New documents and/or bibliographic references were added,
		namely Fernandez-Garavel-Mounier-Rasse-Rodriguez-Sifakis-92,
		Garavel-92-a and Mounier-92.
-------------------------------------------------------------------------------
VERSION R
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		119
Date:		Tue May 26 14:52:13 MET DST 1992
Files:		demos/demo_7

Nature:		Thanks to Laurent Mounier, the Overtaking demo was extended
		as to illustrate how safety properties can be verified ``on
		the fly'' using ALDEBARAN.
-------------------------------------------------------------------------------
BUG FIX
Number:		120
Date:		Tue May 26 14:52:13 MET DST 1992
Report:		Lynne Drayton (Univ. of Lancaster),
		R. P. Hautbois (AEROSPATIALE), and
		Joakim Nilsson (DoCS)
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		A bug was fixed, which caused CAESAR.ADT (SUN4 versions only)
		produce a huge number of right parentheses ')' on the ``.h''
		file.
-------------------------------------------------------------------------------
BUG FIX
Number:		121
Date:		Fri May 29 17:47:11 MET DST 1992
Report:		Laurent Mounier
Files:		bin.{sun3,sun4}/aldebaran

Nature:		A bug was fixed, which caused ALDEBARAN to core dump when
		printing a diagnostic sequence for options of the form
		``+*equ''.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		122
Date:		Fri Jun  5 16:37:16 MET DST 1992
Files:		lib/X_*.lib, incl/X_*.h

Nature:		The names of the hand-written C types and functions used for
		implementing the external libraries have been prefixed by
		``ADT_'', as to avoid confusions with user-defined names.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		123
Date:		Fri Jun  5 16:37:16 MET DST 1992
Files:		bin.{sun3,sun4}/aldebaran

Nature:		A part of code was rewritten. The new version of ALDEBARAN is
		now 5 times faster when reading the ``.aut'' files.
-------------------------------------------------------------------------------
VERSION S
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		124
Date:		Wed Aug  5 15:41:26 MET DST 1992
Files:		bin.{sun3,sun4}/caesar

Nature:		Optimization E0 was strengthened by removing unnecessary
		conditions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		125
Date:		Wed Aug  5 15:41:26 MET DST 1992
Files:		bin.{sun3,sun4}/caesar

Nature:		Optimization E8 was added that statically removes transitions
		that cannot fire according to global network properties.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		126
Date:		Wed Aug  5 15:41:26 MET DST 1992
Files:		bin.{sun3,sun4}/caesar

Nature:		Two new options, ``-v3' and ``-v4'', have been added to CAESAR.
		These options prevent optimizations V3 and V4, respectively,
		from being applied; this can be useful either if these
		optimizations take too much time for a negligible result, or
		if some LOTOS operations are implemented as external C
		functions which perform side effects.
-------------------------------------------------------------------------------
BUG FIX
Number:		127
Date:		Wed Aug  5 15:41:26 MET DST 1992
Report:		Philippe Charton and Jacky Jobard (Aerospatiale)
Files:		bin.{sun3,sun4}/caesar

Nature:		If optimization V3 or V4 fails (for instance, because some file
		cannot be opened, or because the ``.h'' file does not compile)
		CAESAR will not try to apply optimization V3 or V4 several
		times. This reduces the amount of error messages displayed to
		the screen.
-------------------------------------------------------------------------------
BUG FIX
Number:		128
Date:		Wed Aug  5 15:41:26 MET DST 1992
Files:		bin.{sun3,sun4}/caesar

Nature:		In the ``.c'' generated by OPEN/CAESAR (i.e., the graph module)
		there was an incorrect declaration:
			#define CAESAR_FALSE ((CAESAR_TYPE_BOOLEAN) 0)#define \
			CAESAR_TRUE ((CAESAR_TYPE_BOOLEAN) 1)typedef unsigned \
			char CAESAR_TYPE_BYTE;
		which is now fixed:
			#define CAESAR_FALSE ((CAESAR_TYPE_BOOLEAN) 0)
			#define CAESAR_TRUE ((CAESAR_TYPE_BOOLEAN) 1)
			typedef unsigned char CAESAR_TYPE_BYTE;
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		129
Date:		Wed Aug  5 15:41:26 MET DST 1992
Report:		Alain Kerbrat (IMAG)
Files:		incl/caesar_standard.h

Nature:		A slight modification which allows to use both C++ compilers
		(CC and g++) with OPEN/CAESAR.
-------------------------------------------------------------------------------
BUG FIX
Number:		130
Date:		Wed Aug  5 15:41:26 MET DST 1992
Report:		Alain Kerbrat (IMAG)
Files:		incl/caesar_edge.h

Nature:		A typo in the declaration of CAESAR_LENGTH_EDGE_LIST() was
		fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		131
Date:		Wed Aug  5 15:41:26 MET DST 1992
Report:		Philippe Charton and Jacky Jobard (Aerospatiale)
Files:		doc/Garavel-92-a.ps (OPEN/CAESAR Reference Manual)

Nature:		Page 37 of the manual, in the description of function
		CAESAR_CREATE_EDGE_LIST(), in the case CAESAR_ORDER is equal
		to 2, one should read "decreasing" instead of "increasing".
-------------------------------------------------------------------------------
BUG FIX
Number:		132
Date:		Wed Aug  5 15:41:26 MET DST 1992
Files:		doc/Garavel-92-a.ps (OPEN/CAESAR Reference Manual)

Nature:		Page 38 of the manual, in the description of function
		CAESAR_DELETE_EDGE_LIST (CAESAR_E1_En), the type of the
		argument CAESAR_E1_En is (CAESAR_TYPE_EDGE_LIST *), not
		CAESAR_TYPE_EDGE_LIST.
-------------------------------------------------------------------------------
BUG FIX
Number:		133
Date:		Wed Aug  5 15:41:26 MET DST 1992
Report:		Philippe Charton and Jacky Jobard (Aerospatiale)
Files:		bin.{sun3,sun4}/libcaesar.a

Nature:		Function CAESAR_DUMP_STACK_1() did not behave as expected with
		format 0: the trace was displayed from the stack top to the
		stack bottom. Consequently, the ``deadlock'' program printed
		traces in reverse! This is now fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		134
Date:		Wed Aug  5 15:41:26 MET DST 1992
Files:		bin.{sun3,sun4}/caesar, bin.{sun3,sun4}/libcaesar.a,
		incl/caesar_*.h, src/*.c, man/caesar_*.l,
		doc/Garavel-92-a.ps, com/upc

Nature:		To enhance compatibility with CAESAR.ADT conventions, some
		OPEN/CAESAR primitives have been renamed:

			old name		  -> new name
			CAESAR_DUMP_BITMAP	  -> CAESAR_PRINT_BITMAP
			CAESAR_DUMP_EDGE	  -> CAESAR_PRINT_EDGE
			CAESAR_DUMP_EDGE_LIST	  -> CAESAR_PRINT_EDGE_LIST
			CAESAR_DUMP_LABEL	  -> CAESAR_PRINT_LABEL
			CAESAR_DUMP_STACK_1	  -> CAESAR_PRINT_STACK_1
			CAESAR_DUMP_STATE_HEADER  -> CAESAR_PRINT_STATE_HEADER
			CAESAR_DUMP_STATE	  -> CAESAR_PRINT_STATE

		A shell-script com/upc (User Program Conversion) is provided,
		that automatically upgrades user-written exploration modules
		developed for the previous version of OPEN/CAESAR. The
		migration should therefore be harmless.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		135
Date:		Wed Aug  5 15:41:26 MET DST 1992
Report:		Alain Kerbrat (IMAG), Philippe Charton (Aerospatiale)
Files:		bin.{sun3,sun4}/caesar, incl/caesar_graph.h,
		man/caesar_graph.l, doc/Garavel-92-a.ps

Nature:		Two new functions have been added to the graph module, that
		allow to convert a label into a character string. These
		functions are CAESAR_DUMP_LABEL() and CAESAR_STRING_LABEL().
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		136
Date:		Wed Aug  5 15:41:26 MET DST 1992
Files:		bin.{sun3,sun4}/libcaesar.a, incl/caesar_edge.h,
		man/caesar_edge.l, doc/Garavel-92-a.ps

Nature:		A new function CAESAR_ITEM_EDGE_LIST() has been added to the
		edge module, that allows to extract the n-th item of a list of
		edges.
-------------------------------------------------------------------------------
BUG FIX
Number:		137
Date:		Wed Aug  5 15:41:26 MET DST 1992
Files:		com/caesar.open, man/caesar.open.l

Nature:		The ``caesar.open'' shell-script was seriously enhanced.
		For the link mode, the dependencies are better handled,
		especially for the ``.o'' files. Also, the new version deals
		with the ``.h'', ``.f'', and ``.t'' files. The manual pages
		have been updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		138
Date:		Wed Aug  5 15:41:26 MET DST 1992
Files:		lib/X_ACTION.lib, incl/X_ACTION.h

Nature:		A new library, X_ACTION, was added, that allows external C
		functions with side-effects to be invoked and chained. It
		is really useful when trying to connect a LOTOS program to the
		``real world''.
-------------------------------------------------------------------------------
BUG FIX
Number:		139
Date:		Wed Aug  5 15:41:26 MET DST 1992
Report:		Philippe Turlier (IMAG)
Files:		incl/X_NATURAL.h

Nature:		A ')' was missing in the definition of ADT_N0().
-------------------------------------------------------------------------------
BUG FIX
Number:		140
Date:		Wed Aug  5 15:41:26 MET DST 1992
Report:		Philippe Turlier (IMAG)
Files:		incl/X_BOOLEAN.h

Nature:		Two erroneous macro-definitions:
			#define ADT_EQ_BOOL(X1,X2) IFF (X1, X2)
			#define ADT_NE_BOOL(X1,X2) XOR (X1, X2)
		have been replaced by:
			#define ADT_EQ_BOOL(X1,X2) ADT_IFF (X1, X2)
			#define ADT_NE_BOOL(X1,X2) ADT_XOR (X1, X2)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		141
Date:		Wed Aug  5 15:41:26 MET DST 1992
Files:		lib/X_*

Nature:		In all these libraries, all equations have been commented out
		(* ... *) as to avoid spurious warning messages.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		142
Date:		Thu Aug  6 13:45:09 MET DST 1992
Report:		Philippe Charton and Jacky Jobard (Aerospatiale)
File:		src/executor.c

Nature:		A new OPEN/CAESAR utilitary has been added, that allows to
		explore a random execution sequence in the labelled transition
		system corresponding to a LOTOS program.
-------------------------------------------------------------------------------
VERSION T
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		143
Date:		Mon Aug 17 17:13:25 MET DST 1992
Files:		bin.{sun3,sun4}/libcaesar.a, incl/caesar_edge.h,
		man/caesar_edge.l, doc/Garavel-92-a.ps, src/deadlock.c

Nature:		In function CAESAR_CREATE_EDGE_LIST, two new possible values
		have been added for parameters CAESAR_ORDER. The new values
		(5 and 6) allow alphabetic sorting of whole labels, including
		value offers, which was not possible previously. Consequently,
		the ``deadlock'' program has been adapted to allow the use of
		the new values.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		144
Date:		Tue Aug 18 15:31:24 MET DST 1992
Files:		bin.{sun3,sun4}/libcaesar.a, bin.{sun3,sun4}/caesar,
		incl/caesar_version.h, man/caesar_version.l,
		doc/Garavel-92-a.ps

Nature:		A new library, ``version'', was added in order to check whether
		CAESAR and the OPEN/CAESAR library have compatible version
		numbers. This allows to detect binary programs that mix
		incompatible versions of CAESAR and OPEN/CAESAR library,
		therefore avoiding painful problems. Also, function
		CAESAR_INIT_GRAPH() in the graph module produced by CAESAR
		has been modified to perform a call to CAESAR_CHECK_VERSION().
		All these changes should be transparent to the user.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		145
Date:		August 1992
Files:		none

Nature:		This entry was left empty due to a numbering mistake.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		146
Date:		Tue Aug 25 20:24:36 MET DST 1992
Files:		bin.{sun3,sun4}/libcaesar.a, incl/caesar_stack_1.h,
		man/caesar_stack_1.l, doc/Garavel-92-a.ps

Nature:		In the ``stack 1'' library, function:
			CAESAR_OVERFLOW_CONTINUE_STACK_1()
		has been renamed by:
			CAESAR_OVERFLOW_IGNORE_STACK_1()
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		147
Date:		Tue Aug 25 20:24:36 MET DST 1992
File:		bin.{sun3,sun4}/caesar

Nature:		The state table used by CAESAR during the simulation phase
		has been simplified. As a consequence, the maximal number
		of states that can be generated using the new version of
		CAESAR is limited to 2^24, by default. The new version is
		slightly faster (about 3%) than the previous version 4.4.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		148
Date:		Tue Oct  6 15:10:04 MET 1992
Report:		Philippe Turlier (IMAG)
File:		bin.{sun3,sun4}/caesar.adt

Nature:		The ``.h'' file generated by CAESAR.ADT has been slightly
		modified in order to prevent indent(1) from ``core dumping''
		during the indentation phase. For instance:
		    char *CAESAR_ADT_ASCII_Bool[] = {"FALSE", "TRUE", "OTHER"};
		is now written:
		    char *CAESAR_ADT_ASCII_Bool[] = {
			"FALSE",
			"TRUE",
			"OTHER"
		    };
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		149
Date:		Mon Sep 14 11:38:52 MET DST 1992
Report:		Philippe Turlier (IMAG)
File:		bin.{sun3,sun4}/caesar.adt

Nature:		Idem, some "\\" and "\n" have been added to the macros that
		define tuple enumeration, in order to avoid unpleasant ``core
		dumps'' from indent(1).
-------------------------------------------------------------------------------
BUG FIX
Number:		150
Date:		Mon Sep 14 16:17:18 MET DST 1992
Report:		Philippe Turlier (IMAG)
File:		bin.{sun3,sun4}/caesar.adt

Nature:		In some cases, CAESAR.ADT took constant non-constructors (i.e.,
		non-constructors with arity 0) as constructors. This happened
		when generating the printing function for an enumerated type,
		and also when identifying tuples.
-------------------------------------------------------------------------------
BUG FIX
Number:		151
Date:		Wed Sep 16 11:43:03 MET DST 1992
Report:		Philippe Turlier (IMAG)
File:		bin.{sun3,sun4}/caesar.adt

Nature:		An enumerated type with exactly 256 constructors was
		implemented as an "int" rather than a "char" (minor bug).
-------------------------------------------------------------------------------
BUG FIX
Number:		152
Date:		Tue Sep 22 15:01:09 MET DST 1992
Report:		Philippe Turlier (IMAG)
File:		bin.{sun3,sun4}/caesar.adt

Nature:		Any sort S with a single constructor of profile ``-> S''
		and a single constructor of profile ``S -> S'' was implemented
		as a natural nomber, even in presence of other constructors!
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		153
Date:		Tue Sep 22 22:25:52 MET DST 1992
Files:		bin.{sun3,sun4}/libcaesar.a, incl/caesar_hash.h,
		man/caesar_hash.l, doc/Garavel-92-a.ps

Nature:		Three new functions have been added to the ``hash'' library:
		CAESAR_0_HASH(), CAESAR_1_HASH(), and CAESAR_2_HASH().
-------------------------------------------------------------------------------
BUG FIX
Number:		154
Date:		Wep Sep 23 21:11:00 MET DST 1992
File:		bin.{sun3,sun4}/caesar

Nature:		There was a bug when OPEN/CAESAR was used with LOTOS programs
		with no transitions, or only tau-transitions. In this case,
		the graph module generated by OPEN/CAESAR did not contain
		an implementation for the following objects:
			extern CAESAR_TYPE_BOOLEAN CAESAR_VISIBLE[];
			extern char *CAESAR_GATE[];
			extern char *CAESAR_HIDDEN_GATE[];
			extern CAESAR_TYPE_NATURAL CAESAR_CARDINAL[];
			extern CAESAR_TYPE_NATURAL CAESAR_RANK[];
		therefore leading to errors during link edit. This was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		155
Date:		Mon Sep 28 20:03:22 MET 1992
Report:		Philippe Turlier (IMAG)
Files:		bin.{sun3,sun4}/caesar, bin.{sun3,sun4}/caesar.adt

Nature:		Changes have been made to improve the readability of the
		``.err'' file generated by CAESAR and CAESAR.ADT.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		156
Date:		Mon Sep 28 20:03:22 MET 1992
Files:		bin.{sun3,sun4}/caesar, bin.{sun3,sun4}/caesar.adt

Nature:		Changes have been made in order to prevent similar error
		messages to be printed more than one time.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		157
Date:		Wed Oct  7 12:43:26 MET 1992
Files:		com/upc

Nature:		The ``upc'' shell-script has been rewritten as to allow
		the upgrade from any past version of CADP (since version R)
		to the current one.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		158
Date:		Fri Oct  9 17:59:39 MET 1992
Report:		Alain Kerbrat (IMAG)
Files:		incl/caesar_*.h bin.{sun3,sun4}.gcc/libcaesar.a

Nature:		The include files of OPEN/CAESAR have been slightly adapted to
		allow the use of the GNU C and C++ compilers. Also, two new
		directories (bin.sun3.gcc and bin.sun4.gcc) have been created
		to contain the OPEN/CAESAR library ``libcaesar.a'' compiled
		with the GNU C compiler.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		159
Date:		Sat Oct 10 14:59:49 MET 1992
Files:		src/simulator.c

Nature:		Two new commands (``help'' and ``?'') provinding on-line help
		have been added to the simulator.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		160
Date:		Sun Oct 11 11:09:04 MET 1992
Files:		bin.{sun3,sun4}/aldebaran, man/aldebaran.l

Nature:		A new ``-hide'' option has been added to ALDEBARAN, so as to
		provide hiding facilities during comparison and reduction.
		This is explained in the manual page for ALDEBARAN.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		161
Date:		Sun Oct 11 11:09:04 MET 1992
Files:		com/aldebaran.msc, man/aldebaran.msc.l

Nature:		A new command ``aldebaran.msc'' has been added to the toolbox.
		It allows to verify whether certain execution sequences are
		allowed or not in a ``.aut'' file. A manual page has been
		written for this command.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		162
Date:		Sun Oct 11 11:09:04 MET 1992
Files:		demo

Nature:		Many demos have been corrected and improved:

		- demo_2: missing directives "#define CAESAR_NORMAL_FORM_DATA"
			  have been added in ``bitalt_service.h'' and
			  ``bitalt_protocol.h''.

		- demo_3: this demo has been fully rewritten. A missing
			  directive "#define CAESAR_NORMAL_FORM_DATA" has
			  been added; it provokes a drastic reduction of
			  the time needed by CAESAR to generate the ``.aut''
			  file (45 seconds instead of 10 minutes).

		- demo_4: in the ``.lotos'' files, libraries BOOLEAN and
			  libraries NATURAL have been replaced by libraries
			  X_BOOLEAN and X_NATURAL respectively.

		- demo_7: the improved demo makes use of the ``-hide'' option
			  of ALDEBARAN which leads to a simpler expression.
			  Also, a ``false'' property has been added.

		- demo_9: a new demo, based on the INRES protocol, has been
			  added.
-------------------------------------------------------------------------------
VERSION U
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		163
Date:		Sat Oct 24 17:33:21 MET 1992
Files:		src/simulator.c

Nature:		New commands were added to the OPEN/CAESAR simulator: "header",
		"plain", "silent", "verbose"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		164
Date:		Mon Oct 26 13:57:19 MET 1992
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		A new version of CAESAR.ADT (version 4.0) was introduced,
		that replaces the previous versions (up to 3.2). For this
		new version, a complete rewriting of CAESAR.ADT was done.
		It solves several problems existing in previous versions
		(see below). Noticeably, the ``semantical'' processings in
		the new compiler are written in LOTOS abstract data types:
		the new CAESAR.ADT is a self-compiling compiler.
-------------------------------------------------------------------------------
BUG FIX
Number:		165
Date:		Mon Oct 26 13:57:19 MET 1992
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		A bug was fixed wrt to parametrized types. The previous
		versions of CAESAR.ADT did not handle ``formalsorts'',
		``formalopns'', ``formaleqns'' properly: they were likely
		to ``core dump'' in presence of such features. The new
		version rejects them more gracefully, by displaying an
		appropriate error message (but it still does not accept
		parametrized types).
-------------------------------------------------------------------------------
BUG FIX
Number:		166
Date:		Mon Oct 26 13:57:19 MET 1992
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		The previous versions of CAESAR.ADT did not take into account
		the equations for a non-constructor, if these equations did
		not occur in the type where the non-constructor was declared.
		Therefore, the non-constructor was likely to be considered
		as external. This was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		167
Date:		Mon Oct 26 17:15:38 MET 1992
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		The previous versions of CAESAR.ADT did not signal the
		constructors declared outside the type containing their
		result sort. This was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		168
Date:		Mon Oct 26 17:15:38 MET 1992
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		The new version of CAESAR.ADT properly displays the
		equations found to be incorrect (e.g., the equations defining
		a constructor, the equations defining an external operation,
		the equations whose left hand side is simply a variable, etc.)
		The previous version of CAESAR.ADT did not display such
		equations and, sometimes, ignored them silently. The new
		version also displays the premisses, if any.
-------------------------------------------------------------------------------
BUG FIX
Number:		169
Date:		Mon Oct 26 17:15:38 MET 1992
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		The new version of CAESAR.ADT detects the ``improductive''
		sorts and issues an error message, whereas the previous
		versions generated improper C code for such sorts.
-------------------------------------------------------------------------------
BUG FIX
Number:		170
Date:		Tue Oct 27 12:00:08 MET 1992
Report:		Philippe Turlier (IMAG)
Files:		lib/X_ACTION.lib incl/X_ACTION.h

Nature:		A (*! printedby ADT_PRINT_ACTION *) clause was added to the
		definition of sort ACTION. This was needed in some cases:
		for instance, the trace mode, when one wants to print
		the result of a function returning a value of sort ACTION.
-------------------------------------------------------------------------------
BUG FIX
Number:		171
Date:		Wed Oct 28 17:38:07 MET 1992
Report: 	Rene-Pierre Hautbois (Aerospatiale)
Files:		bin.{sun3,sun4}/caesar

Nature:		The C code generated by CAESAR (with option "-open") to
		implement function CAESAR_PRINT_STATE_HEADER() was modified.
		For large specifications, this code contained a very long
		character string, which caused the C compiler fail with
		message "Token too long".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		172
Date:		Tue Nov  3 18:41:00 MET 1992
Files:		bin.{sun3,sun4}/caesar, bin.{sun3,sun4}/libcaesar.a,
		incl/caesar_*.h, man/caesar_*.l, doc/Garavel-92-a.ps, src/*.c

Nature:		New functions have been added to OPEN/CAESAR graph module and
		libraries. These functions will enhance compatibility with
		further versions of OPEN/CAESAR:
			CAESAR_MAX_FORMAT_BITMAP
			CAESAR_MAX_FORMAT_STACK_1 ()
			CAESAR_MAX_FORMAT_EDGE ()
			CAESAR_MAX_FORMAT_EDGE_LIST ()
			CAESAR_MAX_ORDER_EDGE_LIST ()
			CAESAR_MAX_FORMAT_STATE ()
			CAESAR_MAX_FORMAT_LABEL ()
		The application programs given in src/*.c have been modified
		to make plain use of these new functions.
-------------------------------------------------------------------------------
BUG FIX
Number:		173
Date:		Mon Nov 23 11:56:33 MET 1992
Report:		Laurent Mounier and Hubert Garavel
Files:		bin.{sun3,sun4}/aldebaran

Nature:		Absolute pathnames have been added to UNIX commands ("rm",
		"cat"...) invoked by ALDEBARAN.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		174
Date:		Fri Nov  6 12:33:55 MET 1992
Files:		src/simulator.c, src/xsimulator.c, src/xsimulator.i

Nature:		Thanks to Frederic Rocheteau, an X-windows simulator has
		been added to the OPEN/CAESAR environment. It can be used
		by typing:

			caesar.open spec.lotos xsimulator

		Also, the existing simulator (with an ASCII interface) has
		been entirely rewritten, so that most of its code is shared
		with the new X-windows simulator (the common code is contained
		in file "simulator.i".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		175
Date:		Thu Nov 12 12:28:30 MET 1992
Files:		bin.{sun3,sun4}/caesar

Nature:		The format of the ".net" files generated by CAESAR (with option
		"-network") was slightly simplified. From now on, all proper
		places belonging to the same unit are numered in sequence with
		increasing numbers. Therefore, in the ".net" format, the lists
		of proper places are no longer displayed extensively; they are
		replaced by range definitions of the form:
			<inf_place> ... <sup_place>
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		176
Date:		Mon Nov 16 10:48:02 MET 1992
Files:		src/deadlock.c, src/terminator.c

Nature:		For obscure reasons, the "deadlock.c" program of the OPEN/
		CAESAR environment was renamed in "terminator.c". The former
		name "deadlock.c" can still be used (there is a symbolic link
		between both files) but, from now on, the official name is
		"terminator.c".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		177
Date:		Fri Nov 20 18:01:51 MET 1992
Report:		Rene-Pierre Hautbois (Aerospatiale)
Files:		bin.{sun3,sun4}/caesar

Nature:		For large LOTOS specifications (> 500 kbytes), CAESAR generated
		a very large C program (about 21 Mbytes) that the C compiler
		could not handle. Many changes have been made in order to
		reduce the size of the C program generated by CAESAR (either
		with option "-open" or not). These changes mostly concern the
		C code generated for functions CAESAR_PLACE(), CAESAR_FIRE(),
		CAESAR_UNFIRE(), and CAESAR_EXPLORE(). The gains are
		significant: for instance, CAESAR now only generates 11.7
		Mbytes instead of 20.7 Mbytes previously (reduction 43%).
		The new code is not slower; it is even slightly faster than
		the old one.
-------------------------------------------------------------------------------
VERSION V
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		178
Date:		Mon Oct 26 12:06:44 MET 1992
Files:		bin.{sun3,sun4}/caesar.adt, man/caesar.adt.l

Nature:		A ``-macro'' option has been added that prevents LOTOS non-
		constructor operations to be implemented as C macro-definitions
		(#define): all LOTOS non-constructor operations will be
		implemented as C functions instead.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		179
Date:		Mon Oct 26 12:06:44 MET 1992
Files:		bin.{sun3,sun4}/caesar.adt, man/caesar.adt.l

Nature:		A ``-debug'' option has been added that gives better error
		diagnostics when one tries to evaluate a LOTOS operation
		that is not completely defined by the equations. In such
		case, the name of the function is printed, together with
		the actual values of its parameters.

		For instance, if one tries to compute ``0 - 1'' (where
		0, 1, and ``-'' are defined in $CADP/NATURAL.h), there
		will be an error since 0 - 1 is not defined by the equations.

		Without ``-debug'', the error message will be:

			#179 error in file ``.h'' :
			     unexpected case (not defined by the equations)
			     in operation _-_ [NATURAL:18]
			     implemented by function MINUS [./test.h:190]

		With ``-debug'', the error message will be:

			#179 error in file ``.h'' :
			     unexpected case (not defined by the equations)
			     in operation _-_ [NATURAL:18]
			     implemented by function MINUS [./test.h:194]
			         argument 1 = 0
			         argument 2 = 1

		Option ``-debug'' works by generating extra C code for the
		error cases. For this reason, it is not a default option.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		180
Date:		Tue Nov  3 12:17:21 MET 1992
Files:		bin.{sun3,sun4}/caesar.adt, man/caesar.adt.l

Nature:		A ``-trace'' option has been added that allows to trace
		the calls and returns for a selected set of C functions.

		For each function F, there exists a corresponding static
		variable CAESAR_ADT_TRACE_F in the generated code.

		Setting CAESAR_ADT_TRACE_F to 1 will trace all calls and
		returns for F. Setting CAESAR_ADT_TRACE_F to 0 will not
		trace any call and return for F. Initially, CAESAR_ADT_TRACE_F
		is set to 0, i.e., no function is traced.

		CAESAR_ADT_TRACE_F can be assigned in the C program using
		the ``.h'' file generated by CAESAR.ADT. It can also be
		modified interactively under the symbolic debugger.

		Exemple: if the ``+'' function defined in $CADP/NATURAL.h
		is traced (i.e., CAESAR_ADT_TRACE_PLUS = 1), the computation
		of ``1 + 5'' gives the following trace:

			level 1: entering operation _+_ [NATURAL:15]
			         argument 1 = 1
			         argument 2 = 5
			level 2: entering operation _+_ [NATURAL:15]
			         argument 1 = 2
			         argument 2 = 4
			level 3: entering operation _+_ [NATURAL:15]
			         argument 1 = 3
			         argument 2 = 3
			level 4: entering operation _+_ [NATURAL:15]
			         argument 1 = 4
			         argument 2 = 2
			level 5: entering operation _+_ [NATURAL:15]
			         argument 1 = 5
			         argument 2 = 1
			level 6: entering operation _+_ [NATURAL:15]
			         argument 1 = 6
			         argument 2 = 0
			level 6: exiting operation _+_ [NATURAL:15]
			         result = 6
			level 5: exiting operation _+_ [NATURAL:15]
			         result = 6
			level 4: exiting operation _+_ [NATURAL:15]
			         result = 6
			level 3: exiting operation _+_ [NATURAL:15]
			         result = 6
			level 2: exiting operation _+_ [NATURAL:15]
			         result = 6
			level 1: exiting operation _+_ [NATURAL:15]
			         result = 6
		
		Option ``-trace'' works by generating extra C code at each
		function entry and function exit. For this reason, it is
		not a default option.

		Option ``-trace'' automatically sets option ``-macro''
		(otherwise, operations implemented as macro-definition
		could not be traced).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		181
Date:		Tue Nov  3 12:17:21 MET 1992
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		It is now possible to replace the code generated by CAESAR.ADT
		for macros:
			CAESAR_ADT_ALLOC (...)
			CAESAR_ADT_ERROR (...)
			CAESAR_ADT_ENTRY_TRACE (...)
			CAESAR_ADT_ARGUMENT_TRACE(...)
			CAESAR_ADT_EXIT_TRACE (...)
			CAESAR_ADT_RESULT_TRACE (...)
		For instance, it is now possible:
			- to customize the error messages emitted by
		the generated C code in case of memory exhaustion,
		function non completely defined, and also the messages
		generated by the ``-trace'' option;
			- to execute user-defined action when entering and
		leaving a given C function;
			- to use a memory allocator with garbage-collection
		instead of simply using malloc(1) which is the default.
-------------------------------------------------------------------------------
BUG FIX
Number:		182
Date:		Wed Nov  4 11:57:04 MET 1992
Files:		bin.{sun3,sun4}/caesar.adt
Report:		Philippe Turlier (IMAG)

Nature:		A bug was fixed concerning equations of the form
			P => F = V;
		where P is any premiss, V any value expression, and F is
		a non-constructor with no arguments (i.e., a constant).
		CAESAR.ADT 3.2 would ignore the premiss.
		CAESAR.ADT 4.0 would stop, signalling an unexpected bug.
		This is fixed in CAESAR.ADT 4.1.
-------------------------------------------------------------------------------
BUG FIX
Number:		183
Date:		Wed Nov  4 11:57:04 MET 1992
Files:		bin.{sun3,sun4}/caesar.adt
Report:		Rene-Pierre Hautbois (Aerospatiale)

Nature:		The macro definitions in the ``.h'' file were not generated
		in the right order, so that the C compiler sometimes complained
		about some undefined operations. This bug of CAESAR.ADT 4.0
		is now fixed in CAESAR.ADT 4.1.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		184
Date:		Fri Dec 11 13:15:33 MET 1992
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		A number of ``peephole'' optimizations have been introduced in
		CAESAR.ADT that improve the quality of the generated code for
		non-constructor functions.
-------------------------------------------------------------------------------
BUG FIX
Number:		185
Date:		Fri Dec 11 13:15:33 MET 1992
Files:		lib/Y_TABLE.lib
Report: 	Phlippe Turlier (IMAG)

Nature:		The equations defining operator Reset were incorrect. They
		have been modified.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		186
Date:		Mon Dec  7 10:55:23 MET 1992
Files:		bin.{sun3,sun4}/caesar

Nature:		Various changes have been done to reduce the size of the
		simulator program generated by CAESAR (either "standard"
		CAESAR or OPEN/CAESAR). Especially, the CAESAR_EXPLORE()
		function has been significantly shortened. This leads to
		the following results for the REL/rel example:

		   - for "standard" CAESAR, the ".c" file is 15% smaller
		and the corresponding (stripped) object code is 16% smaller;

		   - for OPEN/CAESAR, the ".c" file is 13% smaller
		and the corresponding (stripped) object code is 15% smaller.
-------------------------------------------------------------------------------
BUG FIX
Number:		187
Date:		Tue Dec 15 11:24:43 MET 1992
Files:		bin.{sun3,sun4}/caesar
Report:		Patrick Ernberg (SICS), Claude Jard (IRISA)

Nature:		A bug was fixed in the code generated by OPEN/CAESAR for
		functions CAESAR_STRING_LABEL() and CAESAR_DUMP_LABEL():
		due to a bug in fgets(3), data stored in memory were
		randomly modified (even malloc(3) data were corrupted).
		This bug caused core dumps when using "simulator" or
		"xsimulator".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		188
Date:		Tue Dec 15 11:24:43 MET 1992
Files:		bin.{sun3,sun4}/libcaesar.a, incl/caesar_standard.h,
		man/caesar_standard.l, doc/Garavel-92-a.ps, src/*.c

Nature:		Two new macros have been added to the ``standard'' library:
			CAESAR_CREATE ()
			CAESAR_DELETE ()
		which are intended to encapsulate malloc(3) and free(3). If
		ncessary these macros automatically generate debugging traces
		for the memory blocks allocated and freed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		189
Date:		Tue Dec 15 19:04:10 MET 1992
Files:		bin.{sun3,sun4}/caesar, man/caesar.l

Nature:		An option "-cc" was added to CAESAR, which allows to pass
		options to the C compiler, or to use another C compiler
		than /bin/cc. See the description in the manual page for
		CAESAR.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		190
Date:		Fri Dec 18 14:58:42 MET 1992
Report:		Rene-Pierre Hautbois (Aerospatiale)
Files:		bin.{sun3,sun4}/caesar

Nature:		When CAESAR detects a potential deadlock in the Petri net,
		because some combinations of gate/offers cannot synchronize,
		the corresponding gate and offers are printed. In the previous
		versions of CAESAR, "!V" offers where displayed under the
		format "!S" (where S is the sort of V). They are now displayed
		under the form "!(V) of S", which is more helpful for
		detecting mistakes.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		191
Date:		Mon Dec 28 19:41:51 MET 1992
Files:		bin.{sun3,sun4}/caesar

Nature:		The actions attached to the network transitions are now
		handled as dags instead of trees, which is faster. Also,
		this reduces the size of the C programs generated by CAESAR
		during optimizations V3 and V4.
-------------------------------------------------------------------------------
BUG FIX
Number:		192
Date:		Thu Jan  7 13:04:49 MET 1993
Files:		demos/demo_1/:READ_ME
Report:		Amelia Soriano (Univ. Caracas)

Nature:		An error was corrected in the :READ_ME file: option ``-smin''
		corresponds to safety equivalence, not strong equivalence.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		193
Date:		Fri Jan  8 14:21:11 MET 1993
Files:		src/predictor.c

Nature:		A new ``predictor'' program was added to the OPEN/CAESAR
		source library. This program determines an upper bound
		on the number of states that could be generated using
		"standard" CAESAR. This is done by considering the state
		size and the amount of swap memory available on the current
		machine.
-------------------------------------------------------------------------------
BUG FIX
Number:		194
Date:		Fri Jan  8 14:44:59 MET 1993
Files:		com/rfl
Report:		Roland Groz (CNET)

Nature:		A bug was fixed, which caused RFL figure out incorrectly that
		that some machines have no IP address (no_address), thus
		preventing the tools from working on these machines.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		195
Date:		Tue Jan 12 12:33:59 MET 1993
Files:		bin.{sun3,sun4}/caesar

Nature:		The state table of CAESAR has been improved and simplified.
		On the REL/rel example, the new version is 2.1% faster than
		CAESAR 4.6, and it needs 6.1% less memory than CAESAR 4.6
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		196
Date:		Mon Jan 18 20:09:02 MET 1993
Files:		bin.{sun3,sun4}/caesar, bin.{sun3,sun4}/libcaesar.a,
                incl/caesar_stack_1.h, man/caesar_stack_1.l,
		doc/Garavel-92-a.ps, src/*.c, com/upc

Nature:		The meaning of procedures CAESAR_FORMAT_STACK_1() and
		CAESAR_PRINT_STACK_1() has changed. Existing format numbers
		0, 1, 2, and 3 have been renamed in 1, 2, 3, and 4 respecti-
		vely. A new format 0 has been added which prints statistics
		about the stack. The "upc" program warns the user about these
		changes.
Update:		(1) If your program has instructions of the form:
			CAESAR_FORMAT_STACK_1 (caesar_k, caesar_n);
		remplace them by:
			CAESAR_FORMAT_STACK_1 (caesar_k, caesar_n + 1);
		(2) If your program uses CAESAR_PRINT_STACK_1() but never
		calls CAESAR_FORMAT_STACK_1(), add an instruction
			CAESAR_FORMAT_STACK_1 (caesar_k, 1);
		after stack caesar_k is created.
-------------------------------------------------------------------------------
BUG FIX
Number:		197
Date:		Mon Jan 18 20:55:52 MET 1993
Files:		bin.{sun3,sun4}/libcaesar.a

Nature:		The CAESAR_OVERFLOW_ABORT_STACK_1() function did not
		terminate. This was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		198
Date:		Tue Jan 19 19:20:06 MET 1993
Files:		bin.{sun3,sun4}/caesar, bin.{sun3,sun4}/libcaesar.a,
                incl/caesar_*.h, man/caesar_*.l, doc/Garavel-92-a.ps
Nature:		New function have been added to OPEN/CAESAR:
			CAESAR_ALIGNMENT_STATE()
			CAESAR_ALIGNMENT_LABEL()
			CAESAR_ALIGNMENT_EDGES()
			CAESAR_SIZE_POINTER()
			CAESAR_ALIGNMENT_POINTER()
		which help to save memory when storing collections of states
		and labels.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		199
Date:		Wed Jan 20 12:05:22 MET 1993
Files:		bin.{sun3,sun4}/caesar, bin.{sun3,sun4}/libcaesar.a,
                incl/caesar_edge.h, man/caesar_edge.l, doc/Garavel-92-a.ps,
		src/*.c, com/upc

Nature:		A 5-th parameter was added to function CAESAR_INIT_EDGE(),
		which allows to reduce the size (in bytes) of edges. The
		"upc" program warns the user about this change.
Update:		If your program has a intruction of the form:
			CAESAR_INIT_STACK (s1, l, s2, m)
		(1) if m = 0, replace the instruction by:
			CAESAR_INIT_STACK (s1, l, s2, m, 0)
		(2) If m <> 0, replace the instruction by:
			CAESAR_INIT_STACK (s1, l, s2, m, n)
		where the value of n depends on the info to be stored in the
		mark field.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		200
Date:		Wed Jan 27 13:58:17 MET 1993
Files:		src/xsimulator.c, x11/*

Nature:		Thanks to Frederic Rocheteau, the X window simulator has been
		improved in many ways:
			- it is now based on X11R5 and no longer on X11R4
			- it now uses the 3-dimension Athena widgets
			- the simulator window now raises automatically
			- the colors have been improved (a matter of taste!)
			- the text window now does line wrapping
			- the text window now scrolls more smoothly
			- the program automatically determines whether the
			screen is monochrom or polychrom

		Also, we had problems with xsimulator in the past. It did
		not run properly on a number of machines:
			- either because these machines only have OpenWindows
			- or because these machines have an older version of
			X11 (before X11R5)
			- or because X11R5 is installed in a strange directory
			- ...
		For these reasons, we have added to the CADP distribution the
		minimal subset of X11R5 that will allow xsimulator to work
		properly on any machine. This can be found in the $CADP/x11
		directory.

		----------------
		The X Consortium requests that the following names be used
		when referring to its software:
	                                  X
	                           X Window System
	                             X Version 11
	                     X Window System, Version 11
	                                 X11
                X Window System is a trademark of the Massachusetts Institute
		of Technology.
-------------------------------------------------------------------------------
BUG FIX
Number:		201
Date:		Thu Jan 28 12:29:26 MET 1993
Files:		com/caesar.open, man/caesar.open.l

Nature:		The ``caesar.open'' shell-script was improved in various ways.
		The new version:
			- takes into account the existence of X11 include files
			and libraries;
			- tests if the ``.lotos'' file exists and stops if not;
			- allows to pass options to the user program;
			- computes dependencies more accurately;
			- calls CAESAR.ADT before CAESAR (and not after as in
			the previous versions);
			- is probably faster for large LOTOS programs.
-------------------------------------------------------------------------------
VERSION W
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		202
Date:		Fri Feb  5 14:53:18 MET 1993
Files:		lib/OCTETSTRING.lib

Nature:		The OCTETSTRING library was added to the data type library.
-------------------------------------------------------------------------------
BUG FIX
Number:		203
Date:		Sat Feb  6 15:02:15 MET 1993
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		A bug was fixed in CAESAR.ADT 4.1. This bug caused the
		following error message to appear sometimes:
                   #195 erreur dans le fichier ``.h'' :
                        cas imprevu (non defini par les equations)
                        dans l'operation GENERATE_E [PROCESSOR_C_OPERATION:81]
                        implementee par la fonction ADT_GENERATE_E [...:4274]
-------------------------------------------------------------------------------
BUG FIX
Number:		204
Date:		Sat Feb  6 16:09:51 MET 1993
Files:		lib/X_NATURAL.lib, incl/X_NATURAL.h

Nature:		Two missings ")" have been added in X_NATURAL.h. Also, the
		NATURAL library was extended: operators "min", "max", "gcd"
		"gcm" have been added.
-------------------------------------------------------------------------------
BUG FIX
Number:		205
Date:		Sat Feb  6 16:56:11 MET 1993
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		A misleading error message (that indicated a wrong type) has
		been corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		206
Date:		Mon Feb  8 16:42:32 MET 1993
Files:		bin.{sun3,sun4}/caesar, bin.{sun3,sun4}/caesar.adt

Nature:		The naming conventions used by CAESAR and CAESAR.ADT (see #079
		above) have changed. The new rules are the following:

		(a) for a given sort S, the corresponding C type is named
		CAESAR_ADT_TYPE_S (or CAESAR_ADT_TYPE_S__nn in case of name
		conflict) unless there is an "implementedby" comment.

		(b) for a given sort S, the corresponding comparison function
		is named CAESAR_ADT_CMP_S (or CAESAR_ADT_CMP_nn) unless there
		is a "comparedby" comment.

		(c) for a given sort S, the corresponding iteration macro is
		named CAESAR_ADT_ITR_S (or CAESAR_ADT_ITR_S_nn) unless there
		is an "implementedby" comment.

		(d) for a given sort S, the corresponding printing function is
		named CAESAR_ADT_PRT_S (or CAESAR_ADT_PRT_S_nn) unless there
		is a "printedby" comment.

		(e) for a given operation F, the corresponding C function is
		named CAESAR_ADT_FUNC_F (or CAESAR_ADT_FUNC_F_nn) unless there
		is an "implementedby" comment.

		The names generated according to these new conventions are not
		user-friendly. However, they are unique, i.e, two generated
		names are always distinct (which was not the case previously,
		see #079).

		As usual, these naming conventions may change in the future:
		therefore, hand-written C code should not refer to these
		automatically generated names. Special comments should be
		used instead.

		It is not possible to use a ``.h'' file generated with an
		old version of CAESAR.ADT (<= 4.1) with a new version of
		CAESAR (>= 4.8). It is not possible to use a ``.h'' file
		generated by CAESAR.ADT (>= 4.2) with an old version of
		CAESAR (<= 4.7).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		207
Date:		Wed Feb 10 16:09:14 MET 1993
Files:		com/caesar.open

Nature:		The cut(1) command was replaced with a sed(1) command, because
		cut(1) is not installed on all SUN stations (since it is not
		a standard Berkeley Unix command).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		208
Date:		Fri Feb 12 12:14:17 MET 1993
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		Two new options ``-infix'' and ``-prefix'' have been added to
		CAESAR.ADT. There options determine whether binary infix
		constructors are printed using prefix or infix convention.
		Also the CAESAR_INFIX_FORM_PRINTING macro was renamed in
		CAESAR_ADT_INFIX.
-------------------------------------------------------------------------------
BUG FIX
Number:		209
Date:		Mon Mar  1 19:50:43 MET 1993
Files:		bin.{sun3,sun4}/caesar.adt
Report:		Guy Leduc (Univ. Liege)

Nature:		There was a problem with transitive renamings, e.g.
			sortnames S1 for S2
			sortnames S2 for S3
		This bug was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		210
Date:		Tue Apr  6 11:54:11 MET DST 1993
Report:		Radu Mateescu (VERIMAG)
Files:		incl/X_*.h

Nature:		Pre-processor directives (#ifndef ... #endif) have been added
		to the library header files, in order to avoid multiple
		inclusion problems.
-------------------------------------------------------------------------------
BUG FIX
Number:		211
Date:		Tue Apr 13 18:00:14 MET DST 1993
Report:		Roland Groz (CNET)
Files:		bin.{sun3,sun4}/aldebaran, man/aldebaran.l

Nature:		Options -aequ, -amin, and -acla have been suppressed, since
		they did not work correctly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		212
Date:		Wed Apr 14 15:56:49 MET DST 1993
Files:		bin.{sun3,sun4}/caesar.adt, bin.{sun3,sun4}/caesar

Nature:		The C code generated for constants by CAESAR.ADT was improved:
		it is now more compact and faster. Previously, given the
		constant definition:
			2 = succ (succ (0));
		CAESAR.ADT 4.7 would generate a macro-definition:
			#define N2() SUCC (SUCC (N0 ()))

		This was not efficient, because the definition was expanded
		and evaluated at each invocation of N2(). At present, the
		value of N2() is computed only once and stored in a variable.
		All the constants are initialized in a procedure named
		CAESAR_ADT_INIT() that is generated by CAESAR.ADT. This
		procedure (if it exists) is automatically called by CAESAR
		and OPEN/CAESAR.

		Additionally, the new version of CAESAR.ADT detects cyclic
		definitions of constants, e.g.:
			C0 = C0;
		or:
			C1 = C2;
			C2 = C1;
-------------------------------------------------------------------------------
BUG FIX
Number:		213
Date:		Thu Apr 15 13:34:26 MET DST 1993
Report:		Guenter Schmid (Univ. Stuttgart), Roland Groz (CNET)
Files:		bin.{sun3,sun4}/aldebaran

Nature:		A bug was fixed, that caused ALDEBARAN to print many times
		the following error message:
			#169
			*** Aldebaran:

			bug
			*** Aldebaran:

			during error handling :
			unknown error code
-------------------------------------------------------------------------------
BUG FIX
Number:		214
Date:		Thu Apr 15 13:34:26 MET DST 1993
Report:		Roland Groz (CNET), Patrick Ernberg (SICS)
Files:		bin.{sun3,sun4}/aldebaran

Nature:		When printing diagnostics (i.e., distinguishing execution
		sequences) for two non-equivalent files, ALDEBARAN sometimes
		permuted the filenames, which resulted in strange diagnostics.
		This bug was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		215
Date:		Tue Apr 20 17:04:21 MET DST 1993
Files:		bin.{sun3,sun4}/caesar

Nature:		During the simulation phase, constants were computed many
		times (in fact, before each transition firing). This was
		corrected: constants are now initialized only once, at the
		beginning of the execution of simulator program. This is
		also true for OPEN/CAESAR: constants are no longer computed
		in CAESAR_ITERATE_STATE(), but in CAESAR_INIT_GRAPH().
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		216
Date:		Wed Apr 21 14:42:02 MET DST 1993
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		The generation of macro-definitions (#define) was revised.
		The new version of CAESAR.ADT will not implement an operation
		F as a macro-definition if F is recursive, or if some argument
		of F occurs twice in the result, e.g.,
			F(X,Y) = X + X + Y;
		(this would generate duplicate code, and would also give
		strange results if the actual parameter of X does side
		effects).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		217
Date:		Wed Apr 21 14:42:02 MET DST 1993
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		With the new version of CAESAR.ADT, some operators with
		``if-then-else'' conditions are now implemented as macros,
		e.g., the ``not'' operator of the BOOLEAN library:
		   #define NOT(X) (CAESAR_ADT_is_TRUE (X) ? FALSE () : TRUE ())
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		218
Date:		Mon Apr 26 20:56:41 MET DST 1993
Files:		bin.{sun3,sun4}/caesar

Nature:		The generation phase was revised: the existing algorithm
		generated too many epsilon-transitions for behaviour
		expressions of the form: (B1 |[...]| B2) [> B3. A new
		algorithm is proposed, which creates only n1 + n2 + 1
		epsilon-transitions instead of n1 * n2.

		For instance, on the rel/REL protocol, the old algorithm
		generated 70 places and 513 transitions, whereas the new
		algorithm generates 71 places and 201 transitions only.
		Additionnally, the new algorithm generates a smaller
		graph with less edges: 126223 states and 428766
		edges with the old algorithm, 126223 states and
		413004 transitions with the new algorithm.

		Also, some large LOTOS specifications that could not be
		compiled by CAESAR 4.7 due to this problem can now be
		handled by the new version.
-------------------------------------------------------------------------------
BUG FIX
Number:		219
Date:		Wed May  5 12:35:13 MET DST 1993
Report:		Michel Jankowski (Universite de Liege)
Files:		incl/X_BIT.h

Nature:		The X_BIT.h file did not compile properly. The definition:
			#define ADT_NATNUM_BIT(X) ((NAT) (X))
		was replaced by:
			#define ADT_NATNUM_BIT(X) ((ADT_NAT) (X))
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		220
Date:		Thu May  6 14:17:55 MET DST 1993
Report:		Michel Jankowski (Universite de Liege)
Files:		lib/BIT.lib, lib/BITNATREPR.lib, lib/BITSTRING.lib,
		lib/BOOLEAN.lib, lib/DECDIGIT.lib, lib/DECNATREPR.lib,
		lib/DECSTRING.lib, lib/HEXDIGIT.lib, lib/HEXNATREPR.lib,
		lib/HEXSTRING.lib, lib/NATURAL.lib, lib/NATURALNUMBER.lib,
		lib/OCTDIGIT.lib, lib/OCTET.lib, lib/OCTETSTRING.lib,
		lib/OCTNATREPR.lib, lib/OCTSTRING.lib, demos/demo_5/user.c

Nature:		The special comments in these library files have changed.
		For instance:
		   sorts Nat (*! implementedby NAT
				 comparedby CMP_NAT
			         enumeratedby ENUM_NAT
				 printedby PRINT_NAT *)
		   opns 0 (*! implementedby N0 constructor *) : -> Nat
		   ...
		was replaced by:
		   sorts Nat (*! implementedby ADT_NAT
				 comparedby ADT_CMP_NAT
			         enumeratedby ADT_ENUM_NAT
				 printedby ADT_PRINT_NAT *)
		   opns 0 (*! implementedby ADT_N0 constructor *) : -> Nat
		   ...
		This will ensure the compatibility between "standard"
		libraries (e.g., BIT.lib, BOOLEAN.lib, etc.) and "external"
		ones (e.g., X_BIT.lib, X_BOOLEAN.lib, etc.) in the sense
		that it will be easy to switch from a standard library to
		an external one (presumably more efficient).
-------------------------------------------------------------------------------
BUG FIX
Number:		221
Date:		Thu May  6 17:02:40 MET DST 1993
Report:		Michel Jankowski (Universite de Liege)
Files:		bin.{sun3,sun4}/caesar

Nature:		The -cc option of CAESAR did not work properly in the case it
		contained libraries, e.g.,
			caesar -cc '/bin/cc -lm'
		The reason of the problem is that libraries must be put after
		the files to compile, e.g.:
			cc foo.c -o foo -lm
		and not before:
			cc -lm foo.c -o foo
		otherwise they are inoperant. The new version of CAESAR checks
		the contents of the -cc argument given (if any), extracts all
		library references, and moves them at the end of the compiler
		invocation command line.
-------------------------------------------------------------------------------
BUG FIX
Number:		222
Date:		Thu May  6 17:02:40 MET DST 1993
Files:		com/caesar.open

Nature:		A modification similar to the one described in #221 was done
		for the ``caesar.open'' shell-script.
-------------------------------------------------------------------------------
BUG FIX
Number:		223
Date:		Thu May  6 20:45:28 MET DST 1993
Files:		incl/X_NATURAL.h

Nature:		The macro ADT_LT_BIT_NAT was renamed in ADT_LT_BIS_NAT.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		224
Date:		Thu May  6 21:32:20 MET DST 1993
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		A new phase was added to CAESAR.ADT. It is called the "external
		type survey" phase. Its purpose is to analyze the hand-written
		C types contained in the ``.t'' files (if any). The information
		collected during this phase will help CAESAR.ADT to generate
		a better code (see #225 and #226 below).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		225
Date:		Tue Aug 10 16:46:56 MET DST 1993
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		Thanks to Radu Mattescu, the implementation of tuple and
		ordinary sorts was optimized, by using bit fields. This can
		lead to significant reduction in the size of the generated
		C structures (about 30% on randomly-generated structures).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		226
Date:		Tue Aug 10 16:46:56 MET DST 1993
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		Morever, the size of C structures is further reduced by
		permuting fields, in order to avoid the loss caused by
		alignment paddings. On randomly-generated structures, the
		gain is about 10%.
-------------------------------------------------------------------------------
BUG FIX
Number:		227
Date:		Wed Apr 21 14:42:02 MET DST 1993
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		The generation of macro-definitions (#define) was revised.
		The new version of CAESAR.ADT will not implement an operation
		F as a macro-definition if F has 32 arguments or more, because
		the corresponding macro-definition would not be accepted by
		the C pre-processor /lib/cpp ("Too many formals").
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		228
Date:		Wed Apr 21 14:42:02 MET DST 1993
Files:		bin.{sun3,sun4}/caesar.adt

Nature:		The code generated for non-constructors was improved, as to
		factor shared expressions. For instance, the following
		fragment of C code:
			if C1 (...) return E1 (...);
			else if C2 (...) return E2 (...);
			else if C3 (...) return E1 (...);
			else if C4 (...) return E2 (...);
			else return E2 (...);
		will be replaced by:
			if C1 (...) goto CAESAR_ADT_LABEL_1;
			else if C2 (...) goto CAESAR_ADT_LABEL_2;
			else if C3 (...) goto CAESAR_ADT_LABEL_1;
			else if C4 (...) goto CAESAR_ADT_LABEL_2;
			else return E2 (...);
			CAESAR_ADT_LABEL_1 : return E1 (...);
			CAESAR_ADT_LABEL_2 : return E2 (...);
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		229
Date:		Fri Aug 20 19:56:19 MET DST 1993
Files:		bin.{sun3,sun4}/caesar

Nature:		Two new optimisations, respectively named U1 and U2, have been
		introduced. They aim at reducing the number of units in the
		Petri nets generated by CAESAR.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		230
Date:		Fri Aug 20 19:56:19 MET DST 1993
Files:		bin.{sun3,sun4}/caesar

Nature:		The optimization phase of CAESAR has been revisited: the order
		in which the optimizations are applied has been modified, so
		as to avoid to apply repeatedly and unecessarily some
		optimizations, when they lead to no improvement. The new
		version of CAESAR is about 2% faster, despite the fact that
		new optimizations have been added.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		231
Date:		Mon Aug 23 20:36:46 MET DST 1993
Files:		incl/X_ACTION.h, incl/X_BIT.h, incl/X_BOOLEAN.h

Nature:		These files have been modified to include the following
		pragmats:
			#define CAESAR_ADT_BITS_ACTION : 1
			#define CAESAR_ADT_BITS_BIT : 1
			#define CAESAR_ADT_BITS_BOOL : 1
		that inform CAESAR and CAESAR.ADT that the sorts ACTION, BIT,
		and BOOL can be actually implemented on a single bit.
-------------------------------------------------------------------------------
BUG FIX
Number:		232
Date:		Tue Aug 24 09:50:02 MET DST 1993
Files:		man

Nature:		The "man" directory has been re-organized to follow the
		directory structure expected by man(1) and catman(1).
		From now on, the manual pages can be obtained provided that
		the MANPATH variable is set as indicated in the INSTALLATION
		file (this did not work properly before).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		233
Date:		Tue Aug 24 17:12:00 MET DST 1993
Files:		bin.{sun3,sun4}/caesar

Nature:		CAESAR was modified to take advantage of the "bit fields"
		generated by CAESAR_ADT (see #224 above). This leads to an
		important reduction in the size of the state vector (an
		average of 15% on a set of more than 500 examples). In some
		cases, the reduction is even more drastic: for instance,
		a 41 byte-long state vector is replaced by a 22 byte-long
		one, a 69 byte-long state vector is replaced by a 19 byte-
		long one, etc.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		234
Date:		Fri Aug 27 19:42:27 MET DST 1993
Report:		Guy Leduc and Michel Jankowski (Univ. Liege)
Files:		bin.{sun3,sun4}/caesar

Nature:		The generation phase of CAESAR was improved in order to avoid
		a cause of complexity explosion for the generated Petri net.
		When given a "value-matching" rendez-vous of the form:
			G ... !V1 ...     ||     G ... !V2 ...
		the new version of CAESAR will not create a joint transition
		if values V1 and V2 cannot be unified (which implies that
		V1 and V2 cannot be equal). The V4 optimization was also
		strengthened to include this new unification-based criterion.
		This change allows CAESAR to avoid the creation of ``dead''
		transitions (i.e. transitions labelled with false guards).
		The benefit can be great: in some cases, several thousands
		of transitions are not created. Consequently, the optimization
		phase is much faster.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		235
Date:		Fri Aug 27 20:18:20 MET DST 1993
Files:		bin.{sun3,sun4}/caesar.adt, incl/X_STRING.h,
		demos/demo_[234]/*.h

Nature:		The new version of CAESAR.ADT no longer generates the
		CAESAR_ADT_NORMAL_FORM macro (see above #059 and #082).
		The information provided by this macro was not accurate
		enough. Instead, the new version of CAESAR.ADT generates,
		for each pointer type T, a macro-definition named
		CAESAR_ADT_POINTER_T. This macro-definition is used by
		CAESAR to decide whether T is a pointer type or not.
		Some of the hand-written ``.h'' files contained in the
		``incl'' and ``demos'' directories have been updated
		accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		236
Date:		Fri Aug 27 20:55:37 MET DST 1993
Files:		bin.{sun3,sun4}/caesar

Nature:		A new phase was added to CAESAR. It is called the "type survey"
		phase. Its purpose is to analyze the C types contained in the
		``.h'' files (if any). The information collected during this
		phase will help CAESAR to perform sophisticated optimizations
		and to generate a more efficient simulator program.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		237
Date:		Sun Aug 29 17:08:00 MET DST 1993
Files:		bin.{sun3,sun4}/caesar

Nature:		The data structure for the state vector was simplified. The
		separation between markings and contexts is no longer enforced.
		On the other hand, there is now a separation between pointer
		fields and non-pointer fields of the state vector. This has
		several advantages:

		- the new state vector is generally smaller, about 6.5% smaller
		measured on a set of more than 500 examples; the reduction can
		even be greater (in some cases, a 48 byte-long state vector
		is replaced by a 24 byte-long one).

		- the part of a state vector on which the hash function is
		applied is larger. More precisely, the following ratio:
			CAESAR_HASH_SIZE_STATE() / CAESAR_SIZE_STATE()
		has increased. With CAESAR 4.7, the ratio was about 19% on a
		set of 150 examples. With CAESAR 4.8, it is about 81% on the
		same examples. Consequently, there should be less collisions
		in the state table, resulting in less state comparisons.

		- also, state comparison is faster with CAESAR 4.8.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		238
Date:		Mon Aug 30 18:18:45 MET DST 1993
Files:		bin.{sun3,sun4}/caesar.adt, bin.{sun3,sun4}/caesar

Nature:		The conventions regarding the contents of the ``.h'', ``.t'',
		and ``.t'' files have slighly changed with CAESAR.ADT 4.2
		and CAESAR 4.8 (see above #206, #231 and #235). The new
		versions of CAESAR and CAESAR.ADT attempt to detect the
		``.h'', ``.t'', and ``.f'' files that should be regenerated
		using CAESAR.ADT or updated manually.
-------------------------------------------------------------------------------
BUG FIX
Number:		239
Date:		Mon Aug 30 18:28:54 MET DST 1993
Report:		Laurent Aublet (VERIMAG)
Files:		com/caesar.open

Nature:		A bug with -I option and $CPPFLAGS was fixed in caesar.open.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		240
Date:		Mon Aug 30 19:03:33 MET DST 1993
Files:		bin.{sun3,sun4}/libcaesar.a, bin.{sun3,sun4}/caesar,
		incl/caesar_table_1.h, man/caesar_table_1.l,
		doc/Garavel-92-a.ps

Nature:		A new library, ``table_1'', was added to the OPEN/CAESAR
		environment. It allows to create and manage one (or more)
		state tables. The corresponding documentation is provided.
-------------------------------------------------------------------------------
BUG FIX
Number:		241
Date:		Mon Aug 30 19:34:02 MET DST 1993
Files:		bin.{sun3,sun4}/caesar

Nature:		A bug was fixed in the C code generated by "caesar -open":
		the implementation of functions CAESAR_HASH_LABEL() was
		incorrect.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		242
Date:		Mon Aug 30 21:10:53 MET DST 1993
Files:		src/generator.c, src/reductor.c, src/exhibitor.c

Nature:		Three new OPEN/CAESAR applications have been developed:
		- the "generator" program performs exhaustive simulation;
		- the "reductor" program performs on-the-fly reduction modulo
		  the so-called "tau^*-a" bisimulation;
		- the "exhibitor" program searches for execution sequence
		  that match a given pattern.
		More detailed explanations can be found in the programs
		themselves.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		243
Date:		Tue Aug 31 16:19:47 MET DST 1993
Files:		doc

Nature:		Various improvements:
		- all``.ps'' files in the ``doc'' directory are now provided
		in conformant PostScript.
		- two new papers have been added:
			- Fernandez-Kerbrat-Mounier-93 (CAV'93)
			- Garavel-Turlier-93 (CFIP'93)
		- the ``cortex.bst'' has been modified to work with BibTeX 0.99
-------------------------------------------------------------------------------
BUG FIX
Number:		244
Date:		Tue Aug 31 20:09:52 MET DST 1993
Report:		Laurent Aublet (VERIMAG)
Files:		incl/caesar_standard.h

Nature:		A minor bug was fixed in macro CAESAR_ASSERT(): the instruction
		``kill (getpid(), 15)'' was replaced by ``exit(1)'' since the
		open files were not properly closed before termination.
-------------------------------------------------------------------------------
BUG FIX
Number:		245
Date:		Thu Sep 16 18:35:02 MET DST 1993
Files:		com/caesar.open

Nature:		A minor bug was fixed in "caesar.open": the options -Dxxx and
		-Ixxx were not properly passed to cpp(1).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		246
Date: 		Thu Sep 16 20:51:06 MET DST 1993
Files:		demos/demo_2, demos/demo_3

Nature:		Demos 2 (bitalt) and 3 (datalink) have been simplified by
		Laurent Mounier. These demos now rely on CAESAR.ADT rather than
		on external C code.
-------------------------------------------------------------------------------
BUG FIX
Number:		247
Date:		Fri Sep 17 20:04:40 MET DST 1993
Files:		bin.{sun3,sun4}/aldebaran

Nature:		In some cases, for instance with:
			aldebaran +pmin -bddsize 4 rel_rel.exp
		ALDEBARAN was writing lots of '+' characters on the screen.
-------------------------------------------------------------------------------
BUG FIX
Number:		248
Date:		Fri Sep 17 20:07:41 MET DST 1993
Report:		Xavier Nicollin (VERIMAG)
Files:		bin.{sun3,sun4}/aldebaran

Nature:		The '-bcla' option of ALDEBARAN was not accepted.
-------------------------------------------------------------------------------
VERSION X
-------------------------------------------------------------------------------
BUG FIX
Number:		249
Date: 		Fri Sep 24 12:01:21 MET DST 1993
Files:		bin.*/aldebaran

Nature:		The options ``+sequ'' and ``+dequ'' of ALDEBARAN are no longer
		allowed for ``.exp'' files, because their results were probably
		not valid.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		250
Date: 		Wed Sep 29 18:13:04 MET 1993
Files:		bin.*/caesar.adt

Nature:		CAESAR.ADT was modified in order to accept user-defined ``.t''
		and ``.f'' files, even if there is no external sort or
		operation defined in the LOTOS program (or in the included
		libraries). The new rule is the following: the ``.h'' file
		generated by CAESAR.ADT will include the ``.t'' (resp. ``.f'')
		file, either if there is (at least) one external sort (resp.
		operation) or if the ``.t'' (resp. ``.f'') file is present
		in the directory at the time CAESAR.ADT is called.

		This allows, among other things, to redefine the bounds
		of iterators. For instance, if the user wants to enumerate
		natural numbers of sort NAT in 0..9 (instead of 0..255, the
		default choice), then it is sufficient to create a ``.t'' file
		containing the following lines:
			#undef ADT_ENUM_NAT
			#define ADT_ENUM_NAT(X) for ((X) = 0; (X) < 9; ++ (X))

		This change is upward compatible: any program developed with
		CAESAR.ADT 4.2 will still work with CAESAR.ADT 4.3. The
		opposite is not true, of course.

		Demos 2 and 3 have been modified so as to take advantage
		of this new feature: it is no longer necessary to edit the
		``.h'' files generated by CAESAR.ADT and to replace the
		upper bound 255 by a smaller value.
-------------------------------------------------------------------------------
BUG FIX
Number:		251
Date: 		Wed Sep 29 18:16:36 MET 1993
Files:		bin.*/caesar, bin.*/caesar.adt

Nature:		A bug was fixed: the error messages generated by the C compiler
		on the standard error (stderr) are now redirected on the
		standard output (stdout), according to CAESAR and CAESAR.ADT
		conventions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		252
Date: 		Wed Oct  6 13:22:43 MET 1993
Files:		bin.*/caesar

Nature:		The V4 optimization was strengthened: boolean guards of the
		form "when V = V" are now eliminated, even if V contains
		free variables. Depending on the examples, this can reduce
		the size of the Petri net and the size of the simulator
		program.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		253
Date: 		Wed Oct 13 15:26:43 GMT 1993
Files:		bin.*/caesar

Nature:		Data flow computations were revisited and simplified: redundant
		computations were identified and removed. On large examples,
		there is a gain of 1% and 3.5% in time. Optimizations V1 and
		V5 have been rewritten to take advantage of the new data flow
		algorithms.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		254
Date: 		Thu Oct 21 19:49:22 GMT 1993
Files:		bin.*/caesar

Nature:		In the simulator program, the C code generated to implement
		vectorial assignments was improved so as to reduce assignments
		to exchange variables when they are not necessary.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		255
Date: 		Thu Oct 21 19:51:33 GMT 1993
Files:		bin.*/caesar

Nature:		During the generation phase, guards of the form "V1 = V2" are
		no longer created if V1 and V2 are syntactically identical
		(even if they contain free variables). The effects are similar
		to those of optimization V4. On some examples, it leads to a
		drastic reduction of memory consumption: for instance, in the
		case of (a subset of) the OSI95 enhanced transport service,
		the number of actions decreases from 9466 downto 3718.
-------------------------------------------------------------------------------
BUG FIX
Number:		256
Date: 		Sun Nov  7 16:33:17 MET 1993
Report:		Alain Kerbrat (VERIMAG)
Files:		com/caesar.open

Nature:		A bug was fixed: caesar.open did not work properly when the
		GNU make was used instead of /bin/make: CAESAR and CAESAR.ADT
		were not invoked appropriately.
-------------------------------------------------------------------------------
BUG FIX
Number:		257
Date: 		Tue Nov  9 12:44:12 MET 1993
Report:		Yves-Marie Quemener (IRISA)
Files:		src/reductor.c

Nature:		A minor bug was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		258
Date: 		Wed Nov 10 20:34:51 MET 1993
Files:		bin.*/caesar

Nature:		A new optimization V6 was added, which removes variables when
		it can be shown that these variables are always equal to other
		variables. This optimization gives good results on the car
		overtaking protocol: the numbers of variables, places and
		transitions decreases from (64, 67, 161) down to (46, 58, 152).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		259
Date: 		Mon Nov 15 13:26:24 MET 1993
Files:		bin.*/caesar

Nature:		During the generation phase, assignments of the form "X := X"
		are no longer created.
-------------------------------------------------------------------------------
BUG FIX
Number:		260
Date: 		Tue Nov 16 12:10:58 MET 1993
Files:		bin.*/caesar

Nature:		The optimization V1 was strengthened, leading to the removal
		of some useless assignments. For instance, in the case of
		(a subset of) the OSI95 enhanced transport service, the ASCII
		size of the network is reduced by 2.5%. Consequently the
		simulator program is smaller and faster.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		261
Date: 		Tue Nov 23 20:24:14 MET 1993
Files:		bin.*/caesar, man/caesar.l

Nature:		A new option ``-root'' was added to CAESAR in order to support
		the use of compositional verification.

		If CAESAR is called with the option ``-root P'', where P is a
		process identifier, it will behave as if process P was the
		body of the LOTOS specification.

		If CAESAR is called with the option ``-root P [G1, ..., Gn]''
		where P is a process identifier and G1, ..., Gn are gate
		identifiers, it will behave as if process P was the body of
		the LOTOS specification; the formal gate parameters are
		renamed by the actual gate parameters G1, ..., Gn.

		If process P has variable parameters, they will describe
		all possible values in the domain of their respective sorts.
		It is not possible (for the moment) to supply actual value
		parameters using the ``-root'' option, as in:
			``-root P [G1, ..., G_m] (V1, ..., V_n)''
		The usual way to solve this problem is to modify the LOTOS
		specification, in order to create new processes without
		variable parameters that encapsulate calls to processes
		with variable parameters.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		262
Date: 		Tue Nov 23 21:43:49 MET 1993
Files:		bin.*/caesar

Nature:		The optimization V3 was improved: it is now faster, since the
		detection of constants can now be done with less calls to the
		C compiler. For instance, the time for generating process
		TCTransDelController of the OSI95 extended transport service
		specification, deacreases from 7 minutes and 5 seconds down to
		2 minutes and 19 seconds.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		263
Date: 		Tue Nov 30 18:11:07 MET 1993
Files:		bin.*/caesar

Nature:		In prevision of subsequent changes, the ``type survey'' phase
		is now done before the ``generation'' phase (it was previously
		done after).
-------------------------------------------------------------------------------
BUG FIX
Number:		264
Date:		Wed Dec  1 16:13:11 MET 1993
Files:		bin.*/aldebaran

Nature:		A serious bug was fixed. The results given by ALDEBARAN for
		``.exp'' files were incorrect, in case of non-synchronized
		gates, i.e., if the ``.exp'' file contained a parallel
		composition of the form ``B1 |[... G ...]| B2'' and if
		gate G did not occur in B1 or B2.
-------------------------------------------------------------------------------
BUG FIX
Number:		265
Date: 		Tue Dec 14 13:25:58 MET 1993
Report:		Laurent Mounier (VERIMAG)
Files:		bin.*/caesar

Nature:		A bug was fixed, that caused CAESAR to "core dump" or even to
		generate incorrect graphs in some cases.
-------------------------------------------------------------------------------
BUG FIX
Number:		266
Date: 		Tue Dec 14 18:49:46 MET 1993
Files:		bin.*/caesar

Nature:		A bug in optimization V2 was fixed, that caused CAESAR to
		"core dump" in some cases.
-------------------------------------------------------------------------------
BUG FIX
Number:		267
Date: 		Wed Dec 22 19:08:31 MET 1993
Report:		Alain Girault (VERIMAG)
Files:		man/caesar_table_1.l, doc/Garavel-92-a

Nature:		Various mistakes have been fixed in the manual pages of the
		"caesar_table_1" module for OPEN/CAESAR.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		268
Date: 		Wed Dec 22 22:04:23 MET 1993
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/aldebaran

Nature:		The memory allocation module was improved, so as to reduce
		the potential waste of memory.
-------------------------------------------------------------------------------
BUG FIX
Number:		269
Date: 		Fri Dec 31 16:53:08 MET 1993
Files:		bin.*/caesar

Nature:		A bug was fixed in optimization U2.
-------------------------------------------------------------------------------
BUG FIX
Number:		270
Date:		Wed Feb  9 17:57:02 MET 1994
Files:		bin.*/aldebaran

Nature:		A bug was fixed, that caused ALDEBARAN to core dump with
		option ``+iequ'' if the Labelled Transition System contained
		tau-transitions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		271
Date: 		Thu Feb 10 18:22:47 MET 1994
Files:		lib/X_BOOLEAN.lib, incl/X_BOOLEAN.h

Nature:		Two new operations have been added to the X_BOOLEAN library:
		"and_then" and "or_else", which allow conditional evaluation
		(as in Ada or C).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		272
Date: 		Tue Feb 15 13:29:54 MET 1994
Files:		lib/Y_SET.lib

Nature:		A prototype definition of the "set" type was added to the
		library.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		273
Date: 		Mon Feb 28 20:40:00 MET 1994
Files:		bin.*/caesar.adt, man/caesar.adt.l

Nature:		A "-cc" option was added to CAESAR.ADT, which behaves as the
		"-cc" option of CAESAR (see above #189 and #221).
-------------------------------------------------------------------------------
BUG FIX
Number:		274
Date: 		Wed Mar 16 12:59:51 MET 1994
Files:		bin.*/aldebaran

Nature:		When ALDEBARAN was used with ``+iequ'' and if a ``.aut'' did
		not contain tau-transitions, the ``-hide'' option was not
		taken into account.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		275
Date: 		Tue Mar 29 21:06:10 MET DST 1994
Report:		Laurent Mounier, Jean-Claude Fernandez (VERIMAG)
Files:		src/simulator.c, src/xsimulator.c, src/simulator.i

Nature:		A "reset" command was added to the OPEN/CAESAR simulator.
		A "reset" button was added to the OPEN/CAESAR X-windows
		simulator. The "help" button of the X-windows simulator now
		works properly.
-------------------------------------------------------------------------------
BUG FIX
Number:		276
Date: 		Fri Apr  1 14:06:21 MET DST 1994
Files:		bin.*/caesar

Nature:		In the ``.net'' files generated by CAESAR using the
		``-network'' option, all lists of variables and lists
		of places are now sorted.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		277
Date: 		Fri Apr  1 17:02:34 MET DST 1994
Files:		com/caesar.aldebaran, man/caesar.aldebaran.l

Nature:		A ``caesar.aldebaran'' shell-script was added, which appears
		to be quite useful in performing compositional verification.
		A manual page for "caesar.aldebaran" was written.
-------------------------------------------------------------------------------
BUG FIX
Number:		278
Date: 		Tue Apr  5 11:18:55 MET DST 1994
Files:		com/caesar.open, man/caesar.open.l

Nature:		The ``caesar.open'' shell-script was improved in order to
		make a distinction between the options for CAESAR and those
		for CAESAR.ADT, and to handle properly the ``-cc'' and
		``-root'' options.
-------------------------------------------------------------------------------
BUG FIX
Number:		279
Date: 		Tue Apr  5 21:15:23 MET DST 1994
Report:		Jean-Claude Fernandez (VERIMAG)
Files:		src/simulator.c, src/terminator.c

Nature:		The OPEN/CAESAR "simulator" and "terminator" would enter into
		infinite loops as soon as the user entered some badly formed
		number. This is now fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		280
Date: 		Tue Apr  5 21:18:10 MET DST 1994
Files:		src/executor.c

Nature:		The choice between the different execution strategies provided
		by the OPEN/CAESAR "executor" is now (slightly) more explicit.
-------------------------------------------------------------------------------
BUG FIX
Number:		281
Date: 		Thu Apr  7 14:23:17 MET DST 1994
Report:		Hubert Garavel (VERIMAG), Kiavash Shams (CWI)
Files:		bin.*/aldebaran

Nature:		When given a ``-?min'' option (instead of a ``+?min'' option)
		on a ``.exp'' file, ALDEBARAN had a strange behaviour and
		displayed all the LTSs mentionned in the ``.exp'' file.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		282
Date: 		Thu Apr  7 10:51:27 MET DST 1994
Files:		bin.*/aldebaran, man/aldebaran.l

Nature:		The format of the ALDEBARAN options was changed, in order
		to support new verification algorithms (to be introduced in
		future versions of ALDEBARAN). The conversion rules are the
		following:
			1) "+?min" options (where "?" is a character denoting
			   a relation) should be replaced by "-?min -bdd"
			2) "+?equ" options should be replaced by "-?equ -fly"
			3) "+?ord" options should be replaced by "-?ord -fly"
		The old "+" options have been retained for upward compatibility
		but their use is not advised.
-------------------------------------------------------------------------------
BUG FIX
Number:		283
Date: 		Thu Apr  7 14:23:17 MET DST 1994
Files:		bin.*/aldebaran

Nature:		Regarding the "-bddsize N" option, the previous version of
		ALDEBARAN did not check whether the value of N was acceptable
		or not.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		284
Date: 		Thu Apr  7 21:31:27 MET DST 1994
Files:		bin.*/aldebaran, man/aldebaran.l

Nature:		New commands or options have been added to ALDEBARAN:
			-help    : manual page
			-info    : graph structure informations
			-dead    : deadlock detection
			-live    : livelock detection
			-exp2aut : conversion from ``.exp'' to ``.aut''
			-stat    : verbose messages
			-rename  : use of ``rename'' files
		See the ALDEBARAN manual page for more details.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		285
Date: 		Fri Apr  8 09:01:34 MET DST 1994
Files:		bin.*/aldebaran

Nature:		The new version of ALDEBARAN does not make a difference
		between lower-case and upper-case letters for the gate
		names, offers, and labels occurring in ``.exp'' files.
		This is more compatible with LOTOS conventions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		286
Date: 		Fri Apr  8 19:10:28 MET DST 1994
Files:		demos

Nature:		The :READ_ME files of many demos have been updated to take
		into account the new options of ALDEBARAN. Especially:
			- demo_7 (overtaking) now takes advantage of
			  the ``-hide'' option of ALDEBARAN
			- demo_8 (REL/rel) now takes advantage of
			  the ``-rename'' option of ALDEBARAN
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		287
Date: 		Fri Apr  8 19:17:52 MET DST 1994
Files:		demos

Nature:		Two new demos (demo_10 and demo_11) were added, which
		illustrate the use of compositional verification on two
		examples: the alternating bit protocol (demo_10) and the
		rel/REL protocol (demo_11).

		These two demos illustrate the use of the new facilities
		recently introduced for compositional verification: the
		``-root'' option of CAESAR (see #261), the "caesar.aldebaran"
		shell-script (see #277), the ``.exp'' files, the options
		``-fly'' and ``-bdd'' of ALDEBARAN (see #282), the ``.hide''
		files, etc.

		The existing demos have been renumbered (demo_1 becomes
		demo_01, etc.)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		288
Date: 		Fri Apr  8 19:24:57 MET DST 1994
Files:		doc/Garavel-Hautbois.{dvi,ps}, doc/biblio.bib

Nature:		A new document and bibliographic references was added,
                namely Garavel-Hautbois-93.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		289
Date: 		Mon Apr 11 12:44:57 MET DST 1994
Files:		src/executor.c, src/terminator.c

Nature:		The "executor" and "terminator" programs of the OPEN/CAESAR
		environment have been modified to accept command line
		arguments. The "executor" program has been modified in order
		to accept a maximum number a transitions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		290
Date: 		Fri Apr 15 14:48:12 MET DST 1994
Files:		src/exhibitor.c

Nature:		The "exhibitor" program of the OPEN/CAESAR environment has
		been improved: it now displays the form of the execution
		sequences to be searched.
-------------------------------------------------------------------------------
BUG FIX
Number:		291
Date: 		Fri Apr 15 16:14:03 MET DST 1994
Files:		com/caesar.open

Nature:		The "caesar.open" shell-script was fixed, in order to allow
		a proper transmission of the "user flags" comand-line
		arguments.
-------------------------------------------------------------------------------
BUG FIX
Number:		292
Date: 		Tue Apr 19 15:21:47 MET DST 1994
Report:		Kiavash Shams (CWI)
Files:		bin.*/aldebaran

Nature:		A bug in ALDEBARAN's diagnostics was fixed. For the ``+sequ''
		option, the state numbers in diagnostic sequences were wrong.
-------------------------------------------------------------------------------
BUG FIX
Number:		293
Date: 		Mon May  9 13:49:04 MET DST 1994
Report:		Laurent Mounier (VERIMAG)
Files:		com/aldebaran.msc

Nature:		Various bugs fixed in the "aldebaran.msc" shell-script.
-------------------------------------------------------------------------------
VERSION Y
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		294
Date: 		Wed Jun  1 20:53:11 MET DST 1994
Files:		bin.*/caesar, bin.*/caesar.adt

Nature:		The "-more" option (needed for integrating CAESAR and
		CAESAR.ADT into the EUCALYPTUS graphical user-interface) has
		been added.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		295
Date: 		Thu Jun  2 21:31:13 MET DST 1994
Files:		com/caesar.open

Nature:		The "caesar.open" program has been extended so as to accept
		the "-cc" and "-more" options. A related bug was fixed.
-------------------------------------------------------------------------------
BETA-VERSION Z-a
-------------------------------------------------------------------------------
BUG FIX
Number:		296
Date: 		Wed Jun  8 18:31:33 MET DST 1994
Files:		com/caesar.open, doc/Garavel-92-a.ps

Nature:		The notion of "explicit include mode" has been suppressed.
		From now on, there are only two modes available: "(implicit)
		include mode" and "link mode". Several bugs related to the
		(implicit) include mode have been fixed. The documentation
		has been updated.
-------------------------------------------------------------------------------
BUG FIX
Number:		297
Date: 		Wed Jun  8 18:40:52 MET DST 1994
Files:		com/caesar.open, man/caesar.open.l

Nature:		The "caesar.open" program no longer attempts to guess
		automatically whether link mode or include mode should be
		used. This approach was not compatible with recent changes.
		From now on, two options '-link' and '-include' are available
		to select either link or include mode. By default, link mode
		is selected. The manual page has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		298
Date: 		Wed Jun  8 19:08:38 MET DST 1994
Files:		incl/caesar_version.h, man/caesar_version.l,
		doc/Garavel-92-a.ps, bin.*/libcaesar.a, bin.*/caesar, com/upc

Nature:		The "caesar_version" library of OPEN/CAESAR has been modified
		so that the OPEN/CAESAR environment can be used with other
		languages/tools than LOTOS/CAESAR.

		The "caesar_version" library no longer checks that the version
		of CAESAR which generated the "spec.c" program is up to date.
		On the opposite, the "spec.c" program generated by CAESAR
		(or by another tool) will check that the "caesar_version"
		library is up to date. Therefore, the "caesar_version" library
		is now independent from the CAESAR tool.

		Changes: function CAESAR_GRAPH_VERSION() was moved to file
		"caesar_graph.h"; two parameters have been added to function
		CAESAR_CHECK_VERSION(); the semantics of CAESAR_MATCH_VERSION()
		has changed. The "upc" conversion program has been modified
		so as to flag these changes.

		Consequences: these modifications should be transparent to all
		user programs, unless they use the "caesar_version" library.
		But the tools that generate the "spec.c" program have to be
		adapted, especially the invocation of CAESAR_CHECK_VERSION()
		in CAESAR_INIT_GRAPH(). The CAESAR compiler has been modified
		accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		299
Date: 		Wed Jun  8 20:19:17 MET DST 1994
Files:		bin.{sun3,sun4}/caesar, bin.{sun3,sun4}/libcaesar.a,
		incl/caesar_*.h, man/caesar_*.l, doc/Garavel-92-a.ps,
		src, src/open_caesar/*.c, com/caesar.open, com/upc
Report:		Renaud Ruffiot (VERIMAG)

Nature:		The OPEN/CAESAR programming interfaces have been modified in
		order to be independent from LOTOS. All "hidden" dependencies
		(implementation details related to LOTOS) have been removed so
		as to allow other languages/compilers than LOTOS/CAESAR to be
		connected to OPEN/CAESAR.

		The main changes mostly affect "caesar_graph.h". They are
		described below:

		(1) From now on, the C code generated by CAESAR with "-open"
		    option #defines the macro CAESAR_IMPLEMENTATION_GRAPH
		    and includes the file "caesar_graph.h" (thus transitively
		    including "caesar_standard.h" and "caesar_version.h").

		(2) The two functions CAESAR_GRAPH_COMPILER() and
		    CAESAR_VERSION_COMPILER() have been added to
		    "caesar_graph.h".

		(3) The following primitives in "caesar_graph.h" are now
		    defined as macro-definitions (with names starting with
		    "CAESAR_HINT_...") in an unambiguous way:
			CAESAR_SIZE_STATE()
			CAESAR_HASH_SIZE_STATE()
			CAESAR_ALIGNMENT_STATE()
			CAESAR_SIZE_LABEL()
			CAESAR_HASH_SIZE_LABEL()
			CAESAR_ALIGNMENT_LABEL()

		(4) The following primitives in "caesar_graph.h" are now
		    defined as functions (and no longer as array-based
		    macro-definitions):
			CAESAR_TRANSITION_LABEL()
			CAESAR_VISIBLE_LABEL()
			CAESAR_GATE_LABEL()
			CAESAR_HIDDEN_GATE_LABEL()
			CAESAR_CARDINAL_LABEL()
			CAESAR_RANK_LABEL()

		(5) The following primitives in "caesar_graph.h" are now
		    #defined and, therefore, no longer need to be implemented
		    in the C code generated by CAESAR with "-open" option:
			CAESAR_CREATE_STATE()
			CAESAR_DELETE_STATE()
			CAESAR_COPY_STATE()
			CAESAR_CREATE_LABEL()
			CAESAR_DELETE_LABEL()
			CAESAR_COPY_LABEL()

		(6) The semantics of function CAESAR_STRING_LABEL() has
		    changed: from now on, each call to this function erases
		    the string computed and returned during the previous call.
		    Also, if the function fails, it no longer returns a NULL
		    pointer but aborts the program.

		(7) The semantics of function CAESAR_TRANSITION_LABEL() has
		    changed: from now on, it returns a string (and no longer
		    an integer).

		(8) The OPEN/CAESAR application files, previously located in
		    src/*.c, have been moved in src/open_caesar/*.c.
		    All related files have been accordingly updated.

		The changes (1)-(5) do not affect the application programs
		(located in src/open_caesar). The CAESAR compiler functioning
		in open mode (with "-open" option) has been adapted in order
		to be compatible with the new OPEN/CAESAR interfaces. All
		other compilers generating C code for OPEN/CAESAR should be
		adapted as well.

		The changes (6)-(7) slightly affect the application programs,
		as well as the CAESAR compiler itself. The "upc" migration
		program has been adapted to flag the application programs
		that need to be adapted. The CAESAR compiler with "-open"
		mode has been adapted too.

		The OPEN/CAESAR Reference Manual and the corresponding manual
		pages have been updated to reflect these changes. There is
		now a clear separation between features related to LOTOS
		and CAESAR, and features independent from any language and
		compiler. This should leave a maximal freedom for the
		implementors wanting to connect their compilers to OPEN/CAESAR.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		300
Date: 		Thu Jun  9 19:46:09 MET DST 1994
Files:		src/open_caesar/declarator.c

Nature:		An new OPEN/CAESAR application program named "declarator" has
		been written. This program can be used to test if the "spec.c"
		generated by a tool is correct or not. The "declarator"
		program attempts to exercise all features described in the
		"caesar_graph.h" interface.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		301
Date:		Thu Jun  9 20:29:07 MET DST 1994
Files:		incl/caesar_standard.h

Nature:		A bug was fixed in the definition of CAESAR_PROTEST().
-------------------------------------------------------------------------------
BUG FIX
Number:		302
Date:		Mon Jun 13 12:39:16 MET DST 1994
Report:		Laurent Mounier, Arnaud Fevrier, Thomas Koch, Thomas Lambolais
Files:		bin.*/caesar, bin.*/caesar.adt

Nature:		CAESAR.ADT has been improved in order to give a better error
		diagnostic when a sort cannot be enumerated. The old message
		was:

	...
	caesar: simulation of ``gsm''
	caesar:    - simulator production
	caesar:    - simulator compilation
	"gsm.c", line 1946: syntax error at or near symbol {
	"gsm.c", line 1988: syntax error at or near symbol {
	...
	#156 error in file ``.h'' during simulation:
	     simulator program is rejected by the C compiler
	     quit

		The new message is:

	...
	caesar: simulation of ``gsm''
	caesar:    - simulator production
	caesar:    - simulator compilation
	caesar:    - simulator execution
	caesar:    - graph dump for ``gsm'' using ``aldebaran'' format
	#200 theoretical limitation :
	     domain of an infinite (or complex) sort cannot be enumerated
	     no available iterator for sort VLRACT [409]
	#172 system error during simulation:
	     termination on SOFTWARE_TERMINATION signal (files completed)
	     quit
-------------------------------------------------------------------------------
BUG FIX
Number:		303
Date:		Sat Jun 25 11:51:26 MET DST 1994
Report: 	Eric Valade (ALCATEL Lannion)
Files:		bin.*/libcaesar.a, bin.*/caesar

Nature:		The hash-code computation for labels was incorrect: two
		identical labels could have different hash-codes. Functions
		CAESAR_HASH_LABEL() and CAESAR_LABEL_0_HASH() have been
		modified.
-------------------------------------------------------------------------------
BUG FIX
Number:		304
Date:		Wed Jul  6 19:48:18 MET DST 1994
Report:		Mats Kindahl (University of Uppsala)
Files:		bin.*/libcaesar.a, bin.*/caesar

Nature:		Hashing functions CAESAR_HASH_STATE(), CAESAR_HASH_LABEL(),
		CAESAR_0_HASH() were incorrect and have been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		305
Date:		Thu Jul  7 19:29:15 MET DST 1994
Report:		Christian Schneiter (VERIMAG)
Files:		bin.*/caesar

Nature:		A bug in optimization V2, which caused core dump, has been
		fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		306
Date:		Mon Jul 11 13:30:52 MET DST 1994
Files:		bin.*/caesar, bin.*/caesar.adt

Nature:		Thanks to Mihaela Sighireanu, the static semantics phase of
		the CAESAR and CAESAR.ADT compilers has been updated. The
		computation of type signatures was previously conformant
		to the Draft International Standard of LOTOS. It is now
		conformant to the current version of the standard, the
		ISO International Standard 8807. As a consequence, more
		correct LOTOS programs are now accepted and the combination
		of renaming and actualization is now properly dealt with.
-------------------------------------------------------------------------------
BUG FIX
Number:		307
Date:		Fri Jul 29 17:16:00 MET DST 1994
Files:		lib/X_REAL.lib

Nature:		The importation of type NaturalNumber has been removed.
-------------------------------------------------------------------------------
BUG FIX
Number:		308
Date:		Fri Aug  5 13:20:59 MET DST 1994
Files:		bin.*/caesar

Nature:		A bug in optimization E5 has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		309
Date:		Mon Aug  8 11:07:43 MET DST 1994
Files:		bin.*/caesar

Nature:		The warnings emitted when CAESAR finds "unreachable processes"
		are now suppressed if the "-root" option is present on the
		command-line.
-------------------------------------------------------------------------------
BUG FIX
Number:		310
Date:		Fri Aug 12 17:53:24 MET DST 1994
Report:		Claire Loiseaux (VERIMAG)
Files:		incl/X_NATURAL.h

Nature:		The file "X_NATURAL.h" was modified in order to be compatible
		with the "gcc" compiler for use with C++ programs.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		311
Date:		Sat Aug 13 13:21:42 MET DST 1994
Files:		bin.*/caesar

Nature:		The optimizations are now executed and chained together in a
		much faster way.
-------------------------------------------------------------------------------
BUG FIX
Number:		312
Date:		Mon Sep 26 14:03:50 MET 1994
Files:		bin.*/caesar, bin.*/caesar.adt

Nature:		Special comments of the form (*! ... *) are now defined at
		the syntactic level, instead of the lexical level. There are
		more semantic verifications regarding the contents of these
		comments.
		As a consequence, an existing bug (occurrence of the '$'
		character in some C identifiers generated automatically by
		CAESAR and CAESAR.ADT) has been fixed.
		The spelling of C identifiers might have changed (e.g.,
		CAESAR_ADT_FUNC_23 might be renamed in CAESAR_ADT_FUNC_35).
		If this problem occurs, the ``.h'' files produced by old
		versions of CAESAR.ADT should be regenerated using the new
		version of CAESAR.ADT.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		313
Date:		Wed Oct 12 20:03:13 MET 1994
Files:		com/caesar.open, src/open_caesar/generator.c,
		src/open_caesar/reductor.c, src/open_caesar/xsimulator.c

Nature:		The "caesar.open" shell-script has been modified: it parses
		the contents of the "user.c" program in order to determine
		auxiliary options for the C pre-processor, the C compiler and
		the link editor. These options are expressed in "user.c"
		using directives of the form:
			static char *CPPFLAGS = "@(#)CPPFLAGS = ..."
			static char *CFLAGS = "@(#)CFLAGS = ..."
			static char *LDFLAGS = "@(#)LDFLAGS = ..."
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		314
Date:		Wed Oct 12 20:03:13 MET 1994
Files:		bin.*/bcg_expand, bin.*/bcg_io, bin.*/bcg_lib,
		bin.*/libBCG.a, bin.*/libBCG_IO.a, bin.*/libbcg_draw.a,
		bin.*/libbcg_io.a, bin.*/libbcg_open.a,
		com/bcg_draw, com/bcg_open,
		incl/bcg_*.h, src/bcg_draw/*.ps
		man/manl/bcg.l, man/manl/bcg_draw.l, man/manl/bcg_io.l,
		man/manl/bcg_lib.l, man/manl/bcg_open.l

Nature:		A complete software environment named BCG (standing for
		"Binary-Coded Graphs") has been added to the CADP toolset.
		This software is described in the corresponding manual pages
		"man/manl/bcg_*.l".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		315
Date:		Wed Oct 12 20:04:08 MET 1994
Files:		src/open_caesar/generator.c, src/open_caesar/reductor.c

Nature:		The "generator" and "reductor" programs of OPEN/CAESAR have
		been modified: they now produce Labelled Transition Systems
		encoded in the BCG format (instead of producing Labelled
		Transition Systems in pseudo-ALDEBARAN format, which was
		almost useless).
-------------------------------------------------------------------------------
BUG FIX
Number:		316
Date:		Tue Oct 25 13:27:31 MET 1994
Files:		src/open_caesar/xsimulator.c

Nature:		A bug was fixed, which caused "xsimulator" to core dump when
		the window given by the $DISPLAY environment variable could
		not be opened.
-------------------------------------------------------------------------------
BETA-VERSION Z-b
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		317
Date:		Mon Nov 14 16:15:07 MET 1994
Files:		src/open_caesar/executor.c, src/open_caesar/exhibitor.c,
		src/open_caesar/terminator.c, man/manl/aldebaran.l

Nature:		The diagnostic sequences produced by the OPEN/CAESAR tools
		"executor", "exhibitor", and "terminator" are now displayed
		using the SEQUENCE format. This format is described in the
		ALDEBARAN manual page.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		318
Date:		Thu Nov 17 13:20:32 MET 1994
Files:		src/open_caesar/exhibitor.c, man/manl/exhibitor.l

Nature:		The exhibitor program has been improved in many ways:
		* The algorithm now looks for "shortest" execution sequences.
		* The ``-'' option was added, which allows to input an
		  execution sequence described using the SEQUENCE format.
		* The new option ``-only'' provides new rules for hiding
		  labels.
		* The new option ``-depth'' provides an upper bound on the
		  length of execution sequences to be searched.
		* The new options ``-none'', ``-all'', ``-first'', and
		  ``-decr'' allow to control the execution sequences displayed.
		All these changes are upward compatible.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		319
Date:		Thu Nov 17 13:21:07 MET 1994
Files:		src/open_caesar/terminator.c, man/manl/terminator.l

Nature:		The terminator program has been improved in many ways:
		* The algorithm was improved in order to find more accurate
		  execution sequences.
		* The algorithm now looks for "shortest" execution sequences.
		* The new option ``-depth'' provides an upper bound on the
		  length of execution sequences to be searched.
		* The new options ``-none'', ``-all'', ``-first'', and
		  ``-decr'' allow to control the execution sequences displayed.
		All these changes are upward compatible.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		320
Date:		Fri Nov 18 12:10:57 MET 1994
Files:		bin.*/libcaesar.a, incl/caesar_edge.c, man/manl/caesar_edge.l,
		doc/Garavel-92-a.ps,

Nature:		The "edge" library of OPEN/CAESAR has been enriched with two
		new functions CAESAR_COPY_EDGE() and CAESAR_COPY_EDGE_LIST().
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		321
Date:		Fri Nov 18 13:11:07 MET 1994
Files:		bin.*/libcaesar.a, incl/caesar_stack_1.c,
		man/manl/caesar_stack_1.l, doc/Garavel-92-a.ps,

Nature:		The "stack_1" library of OPEN/CAESAR has been enriched with two
		new functions CAESAR_PURGE_STACK_1() and CAESAR_COPY_STACK_1().
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		322
Date:		Sat Nov 19 14:20:57 MET 1994
Files:		bin.*/libcaesar.a, incl/caesar_diagnostic_1.c,
		man/manl/caesar_diagnostic_1.l, doc/Garavel-92-a.ps,

Nature:		A new library ("diagnostic_1") has been added to OPEN/CAESAR.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		323
Date:		Mon Nov 21 21:05:50 MET 1994
Files:		src/open_caesar/predictor.c

Nature:		The predictor program has been improved: the amount of memory
		available is now computed using the UNIX command "pstat".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		324
Date:		Sat Nov 26 20:35:53 MET 1994
Files:		bin.*/caesar, bin.*/caesar.adt, com/caesar.aldebaran,
		com/caesar.open, com/caesar.xesar

Nature:		All the LOTOS tools in the CADP package have been adapted
		in order to accept LOTOS files with various suffixes: ".lotos",
		".lot", and ".l": this will improve compatibility with other
		existing LOTOS tools, such as those developed in the LOTOSPHERE
		and EUCALYPTUS projects.
-------------------------------------------------------------------------------
BETA-VERSION Z-c
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		325
Date:		Mon Dec 19 11:45:44 MET 1994
Files:		man/manl/declarator.l, man/manl/executor.l,
		man/manl/exhibitor.l, man/manl/generator.l,
		man/manl/predictor.l, man/manl/reductor.l,
		man/manl/simulator.l, man/manl/terminator.l,
		man/manl/xsimulator.l

Nature:		Manual pages have been provided for all the OPEN/CAESAR
		application tools contained in the CADP package: declarator,
		executor, exhibitor, generator, predictor, reductor, simulator,
		terminator, and xsimulator.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		326
Date:		Tue Dec 20 14:46:17 MET 1994
Files:		com/caesar.autograph

Nature:		The "caesar.autograph" shell-script has been removed, since
		it was no longer useful: the new version of AUTOGRAPH (atgV3)
		no longer uses the ".sa" format, but the ".fc2" and ".atg"
		formats. The new "bcg_io" tool should be used to replace
		"caesar.autograph" as explained below:

		(1) How can I apply AUTOGRAPH to a ".aut" file?
			bcg_io FILE.aut FILE.fc2
			atg FILE.fc2

		(2) How can I apply AUTOGRAPH to a ".bcg" file?
			bcg_io FILE.bcg FILE.fc2
			atg FILE.fc2

		(3) How can I apply AUTOGRAPH to a ".lotos" file?
			caesar.open FILE.lotos generator
			bcg_io FILE.bcg FILE.fc2
			atg FILE.fc2
-------------------------------------------------------------------------------
BUG FIX
Number:		327
Date:		Tue Dec 20 14:46:17 MET 1994
Report:		Roland Groz (CNET), Mark Ardis (AT&T)
Files:		com/aldebaran.msc, man/manl/aldebaran.msc.l,
		demos/demo_09/:READ_ME

Nature:		The "aldebaran.msc" shell-script was bugged in several ways:
		therefore, it has been removed from the CADP package. It is
		replaced by the new "bcg_open" and "exhibitor". The previous
		command:
			aldebaran.msc FILE_1.aut FILE_2.msc
		should be replaced by the following ones:
			bcg_io FILE_1.aut FILE_1.bcg
			bcg_open FILE_1.bcg exhibitor -only - < FILE_2.msc
		The new approach has several advantages:
			- it is faster;
			- it computes the shortest execution sequence matching
			  FILE_2.msc;
			- it displays the hidden gates corresponding to "i"
			  actions;
		It can even be applied "on-the-fly" to LOTOS programs (instead
		of labelled transition systems):
			caesar.open FILE_1.lotos exhibitor -only - < FILE_2.msc
		Also, the ".msc" suffix was changed into ".seq".
-------------------------------------------------------------------------------
BETA-VERSION Z-d
-------------------------------------------------------------------------------
BUG FIX
Number:		328
Date:		Wed Jan 18 20:31:45 MET 1995
Report:		Charles Pecheur (Univ. of Liege)
Files:		bin.*/hostinfo, com/rfl

Nature:		The RFL shell-script has been deeply modified and binary
		programs named "hostinfo" have been introduced in order to
		remove a configuration problem for stations with multiple
		IP addresses.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		329
Date:		Wed Jan 18 20:31:45 MET 1995
Files:		com/arch, com/caesar.open

Nature:		Shell-scripts have been added or modified in order to deal
		with non BSD Unix systems (especially Solaris 2.*).
-------------------------------------------------------------------------------
BETA-VERSION Z-e
-------------------------------------------------------------------------------
BUG FIX
Number:		330
Date:		Wed Mar 22 20:01:35 MET 1995
Report:		Roland Groz (CNET)
Files:		bin.*/caesar

Nature: 	A subtle bug was fixed in optimization U2, which caused a
		core dump when using CAESAR.
-------------------------------------------------------------------------------
BUG FIX
Number:		331
Date:		Fri Mar 24 17:06:53 MET 1995
Report:		Claude Jard (IRISA)
Files:		bin.*/aldebaran

Nature:		Problems occured when processing .exp files containing
                uppercase and lowercase labels. This was fixed, considering
                that .exp files are case-sensitive unless explicitely
                mentioned by the keyword "behaviour" (or "behavior") at the
                beginning.
-------------------------------------------------------------------------------
BETA-VERSION Z-f
-------------------------------------------------------------------------------
BUG FIX
Number:		332
Date:		Thu Apr  6 11:48:34 MET DST 1995
Files:		bin.*/caesar

Nature:		A bug in optimization E5 has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		333
Date:		Wed Apr 19 10:16:05 MET DST 1995
Report:		Alain Kerbrat (BULL-IMAG)
Files:		bin.*/bcg_io

Nature:		The FC2 graphs generated by bcg_io were sometimes incorrect.
-------------------------------------------------------------------------------
BETA-VERSION Z-g
-------------------------------------------------------------------------------
BUG FIX
Number:		334
Date:		Fri May  5 18:44:30 MET DST 1995
Report:		Laurent Mounier (VERIMAG)
Files:		demo_07/overtaking.hide, demo_07/overtaking.rename,
		demo_08/rel_rel.hide, demo_11/rel_rel.hide

Nature:		The ".hide" and ".rename" files of demos #7, #8 and #11 were
		incorrect with respect to ALDEBARAN's behaviour, and have been
		corrected.
-------------------------------------------------------------------------------
BETA-VERSION Z-h
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		335
Date:		Fri May 12 12:35:05 MET DST 1995
Files:		bin.*/caesar

Nature:		The optimization V3 has been modified, so as to perform
		"symbolic" constant detection (i.e., constant detection
		without C code generation) in the case where the generation
		or compilation of C code for optimization V3 failed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		336
Date:		Fri May 12 12:36:18 MET DST 1995
Files:		bin.*/caesar, man/manl/caesar.l

Nature:		A "-trigger" option was added to CAESAR.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		337
Date:		Fri May 12 14:38:48 MET DST 1995
Files:		bin.*/caesar

Nature:		The order in which optimizations are applied has been
		carefully re-designed. With the new ordering, the average
		number of optimizations applied has been reduced of 22%,
		thus resulting in speed increase, without increase in the
		size of generated networks or graphs. In a few cases, the
		generated graphs are even smaller.
-------------------------------------------------------------------------------
BETA-VERSION Z-i
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		338
Date:		Mon May 15 20:03:14 MET DST 1995
Files:		com/bcg_open, com/caesar.open,
		man/manl/bcg_open.l, man/manl/caesar.open.l

Nature:		The "caesar.open" and "bcg_open" commands have been extended
		so as to accept ".o" files (instead of ".c" files) as
		arguments.
-------------------------------------------------------------------------------
BETA-VERSION Z-j
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		339
Date: 		Wed May 24 11:08:40 MET DST 1995
Files:		bin.*/evaluator.o, man/manl/evaluator.l

Nature:		An "on-the-fly" evaluator for branching-time mu-calculus and
		LTAC temporal logic has been added to the CADP toolbox. It
		can be used with "caesar.open" and "bcg_open".
-------------------------------------------------------------------------------
BUG FIX
Number:		340
Date:		Wed May 31 19:20:43 MET DST 1995
Report:		Jean-Claude Fernandez, Laurent Mounier (VERIMAG)
Files:		demo_06/*, demo_11/*

Nature:		A bug was fixed in demo_11 (compositional rel/REL). demo_06
		was modified accordingly.
-------------------------------------------------------------------------------
BETA-VERSION Z-k
-------------------------------------------------------------------------------
BUG FIX
Number:		341
Date:		Fri Jun 23 20:58:55 MET DST 1995
Files:		com/caesar.open, com/upc

Nature:		The commands "caesar.open" and "upc" have been modified to
		work also under Solaris 2.x
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		342
Date: 		Sat Jun 24 10:33:39 MET DST 1995
Files:		bin.*/caesar, bin.*/caesar.adt, ./INSTALLATION
		man/manl/caesar.l, man/manl/caesar.adt.l

Nature:		Two environment variables, $CADP_LANGUAGE and $CADP_CC, have
		been added to CAESAR and CAESAR.ADT. They allow to select
		which language is used for diagnostics ("french" or "english")
		and which C compiler is used ("cc", "gcc", etc.). The
		installation manual and on-line manual pages have been updated.
-------------------------------------------------------------------------------
BUG FIX
Number:		343
Date:		Mon Jun 26 16:21:00 MET DST 1995
Files:		(many)

Nature:		For Solaris 2.x portability reasons, the default value of the
		C compiler is now "cc" instead of "/bin/cc". Similarly, the
		default value of the C pretty-printer is now "indent" instead
		of "/bin/indent". Users will have to set their $PATH variables
		properly.
-------------------------------------------------------------------------------
BETA-VERSION Z-l
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		344
Date:		Fri Jun 30 12:25:40 MET DST 1995
Files:		bin.*/caesar, bin.*/caesar.open, gc/*,
		man/manl/caesar.l, man/manl/caesar.open.l

Nature:		Thanks to Mihaela Sighireanu, the Boehm-Demers garbage
		collector has been interfaced with the CADP toolbox.
		A "-gc" option has been added to CAESAR and CAESAR.OPEN.
		By reusing the memory allocated for abstract data types,
		this option allows larger LOTOS descriptions to be processed.
-------------------------------------------------------------------------------
BUG FIX
Number:		345
Date: 		Mon Jul 17 19:06:22 MET DST 1995
Report:		Mihaela Sighireanu (VERIMAG)
Files:		bin.*/caesar, bin.*/caesar.adt

Nature:		In the front-end of CAESAR and CAESAR.ADT, parameterized types
		were implemented according to the DIS ("Draft International
		Standard") semantics. For instance, the standard LOTOS library
		could not be compiled. The new version of CAESAR and CAESAR.ADT
		is now fully conformant with the IS ("International Standard")
		semantics. The DIS semantics is no longer available.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		346
Date: 		Mon Jul 17 20:11:02 MET DST 1995
Report:		Mihaela Sighireanu (VERIMAG)
Files:		bin.*/caesar, bin.*/caesar.adt, doc/Garavel-Sighireanu.ps
		man/manl/caesar.l, man/manl/caesar.adt.l

Nature:		An error was identified in the IS semantics for parameterized
		semantics and an appropriate solution was suggested (see
		$CADP/doc/Garavel-Sighireanu.ps for a detailed explanation).
		This solution has been implemented in CAESAR and CAESAR.ADT
		as the default semantics. However, the IS semantics is also
		retained and can be obtained by giving the "-iso" option
		to CAESAR and CAESAR.ADT.
-------------------------------------------------------------------------------
BETA-VERSION Z-m
-------------------------------------------------------------------------------
BUG FIX
Number:		347
Date: 		Sun Jul 30 13:10:48 MET DST 1995
Report:		Mihaela Sighireanu (VERIMAG)
Files:		bin.*/caesar, bin.*/caesar.adt

Nature:		There was an error in the front-end of CAESAR and CAESAR.ADT,
		with respect to static semantics checking. When binding sorts
		in behaviour expressions, all types without formal sorts in
		their signature were taken into account. Similarly, when
		binding operations in behaviour expressions, all types without
		formal operations in their signature were taken into account.
		From now on, when binding sorts or operations, only those
		types that have neither formal sorts nor formal operations
		in their signatures are taken into account.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		348
Date:		Sun Jul 30 16:29:25 MET DST 1995
Files:		src/xsimulator.c, x11/*

Nature:		The OPEN/CAESAR "xsimulator" program was modified in order
		to be ported to Sun5 machines running Solaris 2.*. The non-
		standard "Xaw3d" library (3-dimension widgets) was replaced
		with the standard "Xaw" library. The "Ximag" library was
		accordingly updated.
-------------------------------------------------------------------------------
BETA-VERSION Z-n
-------------------------------------------------------------------------------
BUG FIX
Number:		349
Date: 		Fri Aug 11 14:14:07 MET DST 1995
Report:		Radu Mateescu (VERIMAG)
Files:		incl/X_BOOLEAN.h

Nature:		The following implementations of boolean operators in C:
			#define ADT_XOR(X1,X2) ((X1) != (X2))
			#define ADT_IMPLIES(X1,X2) ((X1) <= (X2))
			#define ADT_IFF(X1,X2) ((X1) == (X2))
			#define ADT_EQ_BOOL(X1,X2) ADT_IFF (X1, X2)
			#define ADT_NE_BOOL(X1,X2) ADT_XOR (X1, X2)
		were erroneous (they assumed that "true" was implemented
		by 1, which might not be the case in general) and have been
		corrected.
-------------------------------------------------------------------------------
BETA-VERSION Z-o
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		350
Date:		Wed Sep  6 11:47:37 MET DST 1995
Report:		Ghassan Chehaibar (BULL)
Files:		lib/Y_ENUMERATION.lib

Nature:		The 'enumerated type' example given in "lib/Y_ENUMERATION.lib"
		was unclear and too specific of OSI protocols. It has been
		replaced with a simpler and more general example, from which
		CAESAR.ADT can produce optimal C code.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		351
Date: 		Fri Sep  8 20:22:34 MET DST 1995
Report:		Richard H. Carver (George Mason University, Fairfax, USA)
		Dirk Keck (IND, University of Stuttgart, Germany)
		Serge Robinson (INT, Evry, France)
Files:		com/rfl

Nature:		The RFL command has been improved in many ways:
		   (1) When preparing an RFL for the local machine, it uses
		       "sh" and "cp" instead of "rsh" and "rcp", which does
		       not require any configuration in the ".rhosts" file.
		   (2) The error messages have been improved.
		   (3) Comments are displayed as target machines are examined.
		   (4) RFL now checks whether the $CADP variable is properly
		       set on each target machine.
		   (5) TFL now checks whether the architecture of each target
		       machines is supported by the CADP distribution.
		   (6) A "-f" option was added, which allows to reuse the
		       list of machines mentioned in an already existing
		       LICENSE file (see the INSTALLATION file).
-------------------------------------------------------------------------------
BUG FIX
Number:		352
Date: 		Wed Sep 13 15:05:16 MET DST 1995
Report:		Jian Chen (George Mason University, Fairfax, USA)
Files:		./INSTALLATION

Nature:		The incorrect command:
			alias caesar.adt caesar -english
		was replaced with:
			alias  caesar.adt caesar.adt -english
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		353
Date: 		Wed Sep 13 18:38:32 MET DST 1995
Files:		./INSTALLATION

Nature:		The INSTALLATION manual has been deeply revisited.
		It integrates the new mechanisms for supporting multiple
		architectures (especially the "split" FTP distribution).
-------------------------------------------------------------------------------
BUG FIX
Number:		354
Date: 		Wed Sep 13 20:11:10 MET DST 1995
Report:		Mats Kindahl (Univ. Uppsala)
Files:		./INSTALLATION

Nature:		A bug was fixed in the INSTALLATION file. The command:
			setenv MANPATH $MANPATH:$CADP/man
		that caused problems with csh ("Variable syntax") and tcsh
		("Unknown variable modifier") has been corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		355
Date:		Wed Oct 18 18:42:26 MET 1995
Files:		com/bcg_edit, src/bcg_edit/*.tcl, tcl-tk/*

Nature:		Thanks to Louis-Pascal Tock, a new tool ("bcg_edit") has been
		added to the BCG environment. This tool is a user-friendly,
		TCL-TCK based, graphical editor, which allows to modify
		interactively the graphical representation of BCG graphs.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		356
Date:		Thu Oct 19 18:47:02 MET 1995
Files:		com/exp.open, bin.*/exp2c, bin.*/libexpopen.a,
		man/manl/exp.open.l

Nature:		A new tool called exp.open has been added. This tool allows to
		apply OPEN/CAESAR to ".exp" files, by translating ".exp" files
		into an OPEN/CAESAR graph module. (see the exp.open manual
		page for more informations).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		357
Date:		Mon Oct 23 16:32:54 MET 1995
Files:		doc/*

Nature:		New papers have been added in the "doc" directory:
			doc/Mounier-94.ps
			doc/Kerbrat-94.ps
			doc/Garavel-95-a.ps
			doc/Garavel-Sighireanu-95.ps
			doc/Kerbrat-BenAtallah-95.ps
			doc/Tock-95.ps
		The READ_ME and biblio.bib files have been updated.
-------------------------------------------------------------------------------
BETA-VERSION Z-p
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		358
Date: 		Tue Nov 21 13:20:24 MET 1995
Report:		Ghassan Chehaibar (BULL)
Files:		bin.*/caesar

Nature:		CAESAR's algorithm for determining which transitions can be
		fired from a given marking has been entirely revisited. The
		new algorithm significantly reduces the size of the C programs
		generated by CAESAR with options "-e7", "-open", "-simulator",
		and all other options for generating graphs in a given format.

		For instance, the size of the C code generated from the
		description in LOTOS of BULL's Pegasus architecture has been
		significantly reduced: from 30 Mbytes with the old algorithm
		down to 8.3 Mbytes with the new one.

		Similarly, the size of the C code generated from the LOTOS
		description of the Airbus A340 Flight Warning Computer was
		reduced from 6 Mbytes down to 4.2 Mbytes.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		359
Date:		Wed Nov 22 16:50:40 MET 1995
Files:		bin.*/aldebaran

Nature:		Operator ``||'' (full synchronisation) has been introduced
                in the .exp format.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		360
Date:		Thu Nov 30 16:38:55 MET 1995
Files:		demos/demo_12, demos/demo_13, demos/demo_14

Nature:		Three new demos have been added to the toolbox:
			- demo_12 : Message Authentication Algorithm
			- demo_13 : a collection of BCG graphs to be displayed
				    using BCG_DRAW
			- demo_14 : a Plain Old Telephony System (POTS)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		361
Date:		Thu Nov 30 17:02:43 MET 1995
Files:		com/tst, ./INSTALLATION

Nature:		A new shell-command "tst" was added to the CADP toolbox.
		This command checks whether the CADP software is properly
		installed. It can be helpful to locate installation problems.
		Its usage is described in the INSTALLATION file.
-------------------------------------------------------------------------------
BUG FIX
Number:		362
Date:		Thu Dec 14 15:12:08 MET DST 1995
Report:		Hubert Garavel (VERIMAG)
Files:		bin.*/aldebaran

Nature:		A bug in ALDEBARAN's diagnostics was fixed. For the
                ``+*equ'' options, the action names ending the diagnostic
                sequences were incorrect.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		363
Date:		Wed Dec 20 07:43:33 MET 1995
Files:		bin.*/aldebaran

Nature:		Data structures used for implementing the Paige/Tarjan
                algorithm have been optimized. In particular, labelled
                transition systems with numerous distinct labels can
                be much more efficiently processed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		364
Date: 		Thu Jan  4 18:45:35 MET 1996
Files:		bin.*/caesar, man/manl/caesar.l

Nature:		The "-root" option of CAESAR was improved in order to generate
		much smaller graphs. As a consequence of this improvement,
		it is no longer allowed for a process P to have value-
		parameters, if this process P is to be used in a "-root P"
		or "-root P [G1, ..., Gn]" option. CAESAR's manual page was
		updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		365
Date:		Fri Jan 12 19:04:17 MET 1996
Files:		com/swapsize, src/predictor.c

Nature:		A new shell-command "swapsize" was added to the CADP toolbox.
		This command displays the amount of memory (swap) available.
		The OPEN/CAESAR "predictor" program was modified to use the
		(architecture-independent) command "swapsize".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		366
Date: 		Fri Jan 19 18:06:22 MET 1996
Files:		bin.*/caesar, man/manl/caesar.l

Nature:		A new option "-bcg" was added to CAESAR, which allows CAESAR
		to generate BCG graphs directly. Option "-graph" is no longer
		a default option; option "-bcg" becomes the default instead.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		367
Date:		Thu Jan 25 11:45:26 MET 1996
Files:		bin.*/aldebaran, man/manl/aldebaran.l

Nature:		Thanks to a new option "-output" (see aldebaran manual
		for more informations) ALDEBARAN has been connected
		to the BCG format: it can now read BCG files (using an
		horrible kludge to be fixed in later releases) and produce
		a BCG file as output (after an LTS reduction).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		368
Date:		Thu Jan 25 11:45:26 MET 1996
Files:		bin.*/aldebaran, man/manl/aldebaran.l

Nature:		For compatibility reasons the ".aut" files produced by
		ALDEBARAN are no longer automatically sorted when using
		the "-exp2aut" options. On the other hand, the "-sort"
		option has been added (see aldebaran manual for more
		informations).
-------------------------------------------------------------------------------
BETA-VERSION Z-q
-------------------------------------------------------------------------------
BUG FIX
Number:		369
Date:		Tue Mar 12 16:35:07 1996
Report:		Guy Leduc (Univ. Liege)
Files:		bin.*/aldebaran

Nature:		A bug was fixed. The on-the-fly computation of branching
		bisimulation was incorrect in some cases, especially in
		presence of "tau" circuits in one of the LTSs.
-------------------------------------------------------------------------------
BUG FIX
Number:		370
Date:		Thu Apr 25 15:05:44 MET DST 1996
Report:		Jean-Pierre Krimm (VERIMAG)
Files:		bin.*/exp2c, bin.*/libexpopen.a

Nature:		A bug was fixed in exp.open. The LTSs used in the ".exp"
		files were incorrectly read, and therefore the graph module
		generated by exp.open was sometimes erroneous.
-------------------------------------------------------------------------------
BUG FIX
Number:		371
Date: 		Mon Apr 29 18:25:18 MET DST 1996
Files:		src/predictor.c

Nature:		A missing "exit (0)" statement was added at the end of the
		predictor program.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		372
Date: 		Tue May 21 17:38:50 MET DST 1996
Report:		Christophe Broult (SEPT)
Files:		bin.*/caesar, bin.*/caesar.adt

Nature:		In the previous versions of CAESAR and CAESAR.ADT, the maximal
		number of include files (".lib" files) was limited to 32,
		resulting in the following error message:
			#022 error during analysis:
			too many include files
			quit
		This maximal value was raised to 128.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		373
Date: 		Tue Jun  4 19:32:31 MET DST 1996
Files:		bin.sun3, bin.sun3.gcc, *.sun3.*

Nature:		We decided to discontinue support for SUN 3 hardware platforms,
		as the license mechanism informed us that no SUN 3 machine
		was still running CADP. This makes the new CADP release much
		lighter.
-------------------------------------------------------------------------------
BUG FIX
Number:		374
Date: 		Mon Jun  3 19:49:02 MET DST 1996
Files:		bin.*/caesar, bin.*/caesar.adt

Nature:		Three inconsistencies in the error messages displayed by
		CAESAR and CAESAR.ADT (with respect to library inclusion)
		have been identified and fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		375
Date: 		Tue Jun  4 20:14:02 MET DST 1996
Files:		doc/*

Nature:		New papers have been added in the "doc" directory:
			doc/Fernandez-Mounier-95.ps
			doc/Garavel-Fernandez-et-al-96.ps
			doc/Garavel-Mounier-96.ps
		The READ_ME and biblio.bib files have been updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		376
Date: 		Mon Jun 10 19:22:14 MET DST 1996
Files:		bin.*/caesar, man/manl/caesar.l

Nature:		A new option "-gradual" was added to CAESAR. This option
		applies the optimizations gradually when generating the
		network. By default, the optimizations are applied only
		after the network is fully generated. Using this option,
		the optimizations are applied to each sub-network generated
		from each operand of a parallel composition operator.

		This option is slower, but it can be useful for dealing with
		larger LOTOS descriptions and/or for generating smaller
		networks. For instance, the network generated for the
		LOTOS description of Airbus A-340 Flight Warning Computer
		has 1,377 places, 3,411 transitions and 664 variables
		without "-gradual" option, and only 1,173 places, 2,473
		transitions, and 597 variables with "-gradual" option.
-------------------------------------------------------------------------------
BUG FIX
Number:		377
Date: 		Tue Jun 11 12:34:01 MET DST 1996
Report:		Jean-Michel Hufflen (Univ. de Franche-Comte, France)
Files:		bin.*/caesar

Nature:		The C code generated by CAESAR has been modified to be
		conformant with ANSI C. This will avoid the warnings
		which were previously displayed when using "cc" under
		Solaris 2.*, e.g.:
			"bitalt.c", line 289: warning: semantics of ">>"
			change in ANSI C; use explicit cast
		or:
			"bitalt.c", line 509: warning: semantics of "%"
			change in ANSI C; use explicit cast
-------------------------------------------------------------------------------
BUG FIX
Number:		378
Date: 		Tue Jun 11 14:31:28 MET DST 1996
Report:		Andreas Ulrich (Univ. Madgeburg, Germany)
Files:		bin.*/caesar.adt, demos/demos_*/*.t

Nature:		The iterators generated by CAESAR.ADT have been slightly
		modified in two ways:

		   - They have been moved after the #include directive that
		     includes the ".t" file (they were previously defined
		     before the #include directive). Therefore, if the user
		     wants to provide his/her own iterator, it is no longer
		     necessary to #undef the iterator generated by CAESAR.ADT

		   - They are now enclosed between #ifndef ... #endif clauses,
		     not to override the user-defined iterators contained in
		     the ".t" files, if any.

		The ".t" files provided in CADP demos have been simplified
		accordingly (the #undef directives have been removed).
-------------------------------------------------------------------------------
BUG FIX
Number:		379
Date: 		Tue Jun 11 18:32:51 MET DST 1996
Report:		Dirk O. Keck (IND, University of Stuttgart, Germany),
		Andreas Ulrich (Univ. Madgeburg, Germany)
Files:		src/executor.c

Nature:		The "executor" program did not compile properly under Solaris
		2.* unless "/usr/libucb" was included in "LD_LIBRARY_PATH".
		The new version of executor solves the problem by using the
		SVR4 compatible functions "rand()" and "srand()", rather than
		the BSD functions "random()" and "srandom()".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		380
Date:		Wed Jun 12 11:35:55 MET DST 1996
Files:		bin.*/aldebaran, man/manl/aldebaran.l

Nature:		The new option "-path" has been added. It computes
                the shortest path (from the initial state) to a given
                state in an LTS. See aldebaran manual for more informations.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		381
Date:		Wed Jun 12 11:35:55 MET DST 1996
Report:		Muffy Thomas (Univ. Glasgow, UK),
		Lars-Ake Fredlund (SICS, Sweden)
Files:		man/manl/evaluator.l

Nature:		The manual page for "evaluator" was improved.
-------------------------------------------------------------------------------
BUG FIX
Number:		382
Date: 		Wed Jun 12 16:29:49 MET DST 1996
Report:		Christophe Broult (SEPT and Univ. Caen, France)
Files:		bin.*/aldebaran

Nature:		Two problems have been fixed:
		- The new version of ALDEBARAN does not core dump when
		  the character strings of the labels are too long
		- The maximal number of distinct labels accepted by ALDEBARAN
		  was raised from 2,000 up to 4,000
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		383
Date: 		Wed Jun 12 17:00:12 MET DST 1996
Files:		com/caesar.open

Nature:		The "caesar.open" shell was adapted to support the new "-iso",
		"-bcg" and "-gradual" options of CAESAR and/or CAESAR.ADT
-------------------------------------------------------------------------------
BETA-VERSION Z-r
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		384
Date: 		Fri Jun 28 16:31:27 MET DST 1996
Files:		man/manl/*or.l

Nature:		The manual pages for the OPEN/CAESAR tools have been updated.
-------------------------------------------------------------------------------
BUG FIX
Number:		385
Date: 		Fri Jun 28 16:33:46 MET DST 1996
Files:		com/caesar.open, com/bcg_open, com/exp.open

Nature:		A minor bug was fixed in these shells.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		386
Date: 		Fri Jun 28 20:37:37 MET DST 1996
Files:		bin.*/xsimulator.a, src/open_caesar/xsimulator,
		tcl-tk/bin.*/libtcl.a, tcl-tk/bin.*/libtk.a,
		tcl-tk/bin.*/duplex, man/manl/xsimulator.l

Nature:		Thanks to Mark Jorgensen, a new version of Xsimulator has been
		added to CADP. This new version, written in Tcl-Tk, replaces
		the former one, based on raw Xlib programming. The new version
		is fully compatible with the previous one, but contains several
		improvements:

		- It works without problems on Solaris 2.*. The minor problems
		  noticed with the previous version (warnings when compiling
		  the C code with a strict ANSI compiler, need to add libucb.o
		  in $LD_LIBRARY_PATH, etc.) are now solved.

		- Only the transitions going out from the current state are
		  highlighted and can be selected.

		- The new version of Xsimulator should be easier to port on
		  different machine architectures.

		The following files and directories have been removed from the
		CADP release: src/open_caesar/xsimulator.c and x11. The
		manual pages have been updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		387
Date: 		Wed Jul  3 12:11:27 MET DST 1996
Files:		com/caesar.open, com/bcg_open, com/exp.open,
		man/manl/caesar.open.l, man/manl/bcg_open.l,
		man/manl/exp.open.l

Nature:		These 3 shells scripts have been modified in order to accept
		OPEN/CAESAR application programs given in form of archive files
		(with suffix ".a"). The manual pages have been updated to
		reflect the change
-------------------------------------------------------------------------------
BUG FIX
Number:		388
Date: 		Fri Jul  5 11:57:06 MET DST 1996
Report:		Ghassan Chehaibar (BULL),
		Mirela Sechi Moretti Annoni Notare (UFSC, Brazil)
Files:		INSTALLATION

Nature:		The directives contained in the INSTALLATION manual have
		been updated to fix some problemes specific to Solaris 2.*
		(especially with the "chown" command, which is not located in
		the same directory in Solaris 1.* and Solaris 2.*)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		389
Date: 		Mon Jul 29 16:48:57 MET DST 1996
Files:		com/tst

Nature:		The 'tst' shell-script was improved to detect the (potentially
		hazardous) situations in which:

			- the default "arch" command does not return the same
			  value as "$CADP/com/arch" (which is the case under
			  Solaris 2.5, where "arch" returns "sun4")

			- the default "make" command provided by SunSoft is
			  overriden by another "make" command (e.g., the
			  BSD-make, or the GNU-make). This might create
			  problems with CAESAR.OPEN and the EUCALYPTUS 1.*
			  Graphical User Interface

			- the default "cpp" command provided by SunSoft is
			  overriden by another "cpp" command (e.g., the
			  GNU-make). This might create problems with the
			  EUCALYPTUS 1.* Graphical User Interface

			- the default "ld" command provided by SunSoft is
			  overriden by another "ld" command (e.g., the
			  GNU-make). This might create problems.
-------------------------------------------------------------------------------
BUG FIX
Number:		390
Date: 		Thu Aug  1 14:32:59 MET DST 1996
Report:		Mirela Sechi Moretti Annoni Notare (UFSC, Brazil),
		Alain Kerbrat (Verimag)
Files:		bin.*/aldebaran, bin.*/bcg_*

Nature:		A bug was fixed, which caused Aldebaran (and BCG tools) issue,
		under Solaris 2.*, an error message of the form:
			sh: /usr/local/cadp/bin.sun4/bcg_expand: not found
		if the $PATH variable was configured in such a way that the
		Solaris `arch` command was called in place of $CADP/com/arch.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		391
Date: 		Mon Aug  5 11:49:24 MET DST 1996
Files:		incl/caesar_*.h, src/open_caesar/*, bin.*/libcasesar.a,
		bin.*/caesar, bin.*/libbcg_open.a, bin.*/exp2c,
		doc/Garavel-92-a.ps, man/manl/caesar_*.l

Nature:		A new type CAESAR_TYPE_STRING (equivalent to 'char *') has
		been added in "caesar_standard.h". The profile of the
		following functions has been modified to use this new type:
			CAESAR_GRAPH_COMPILER()
			CAESAR_TRANSITION_LABEL()
			CAESAR_GATE_LABEL()
			CAESAR_HIDDEN_GATE_LABEL()
			CAESAR_DUMP_LABEL()
			CAESAR_STRING_LABEL()
			CAESAR_CREATE_DIAGNOSTIC()
		The include files, libraries, documentation, application
		programs, as well as CAESAR, BCG_OPEN and EXP.OPEN have
		been modified accordingly. This change is strictly upward
		compatible and should be transparent to all existing programs.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		392
Date: 		Mon Aug  5 12:27:13 MET DST 1996
Files:		incl/caesar_*.h, src/open_caesar/*, bin.*/libcaesesar.a,
		bin.*/caesar, bin.*/libbcg_open.a, bin.*/exp2c,
		doc/Garavel-92-a.ps, man/manl/caesar_*.l

Nature:		A new type CAESAR_TYPE_FILE (equivalent to 'FILE *') has
		been added in "caesar_standard.h". The profile of the
		following functions has been modified to use this new type:
			CAESAR_PRINT_STATE_HEADER()
			CAESAR_PRINT_STATE()
			CAESAR_DELTA_STATE()
			CAESAR_PRINT_LABEL()
			CAESAR_PRINT_BITMAP()
			CAESAR_CREATE_DIAGNOSTIC_1()
			CAESAR_PRINT_EDGE()
			CAESAR_PRINT_EDGE_LIST()
			CAESAR_PRINT_STACK_1()
			CAESAR_CREATE_TABLE_1()
			CAESAR_PRINT_TABLE_1()
			CAESAR_PRINT_VERSION()
		The include files, libraries, documentation, application
		programs, as well as CAESAR, BCG_OPEN and EXP.OPEN have
		been modified accordingly. This change is strictly upward
		compatible and should be transparent to all existing programs.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		393
Date: 		Fri Aug 23 18:50:45 MET DST 1996
Files:		bin.*/libcaesesar.a, man/manl/caesar_table_1.h,
		doc/Garavel-92-a.ps,

Nature:		In function CAESAR_PRINT_TABLE_1() of OPEN/CAESAR's
		"caesar_table_1" library, when the printing format specified
		by CAESAR_FORMAT_TABLE_1() is equal to 1 or 2, the  mark
		fields (if any) are not longer printed in hexadecimal.
		The printing function specified when creating the table
		should be responsible for printing the mark fields under
		some appropriate (and more readable) form.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		394
Date: 		Thu Aug 29 11:48:26 MET DST 1996
Files:		incl/caesar_diagnostic_1.h, bin.*/libcaesesar.a,
		man/manl/caesar_diagnostic_1.l, doc/Garavel-92-a.ps,
		src/open_caesar/terminator.c, upc

Nature:		There have been three changes in OPEN/CAESAR's "diagnostic_1"
		library:

		- A new function CAESAR_EMPTY_DIAGNOSTIC_1() was added.

		- The profile of function CAESAR_BACKTRACK_DIAGNOSTIC_1() has
		  been modified in order to allow a more general use of this
		  function, namely in the case of breadth-first searches.
		  Formerly, the second argument of this fonction was a stack:
		    CAESAR_TYPE_STACK_1 CAESAR_K;
		  It has been replaced with an integer denoting the depth of
		  the stack:
		    CAESAR_TYPE_NATURAL CAESAR_DEPTH;
		  Consequently, all former invocations of this function:
		    CAESAR_BACKTRACK_DIAGNOSTIC_1 (d, k)
		  should be replaced with:
		    CAESAR_BACKTRACK_DIAGNOSTIC_1 (d, CAESAR_DEPTH_STACK_1 (k))
		 The "upc" program warns the user about this change.

		- The semantics associated to CAESAR_NONE_DIAGNOSTIC_1 has
		  been slightly modified in order to make it a more useful
		  option.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		395
Date: 		Wed Sep  4 18:54:22 MET DST 1996
Files:		incl/caesar_graph.h, man/manl/caesar_graph.l,
		doc/Garavel-92-a.ps,
		bin.*/caesar, bin.*/libbcg_open.a, bin.*/exp2c,
		src/open_caesar/declarator.c, src/open_caesar/simulator.i

Nature:		OPEN/CAESAR's graph interface "caesar_graph.h" has been
		modified in order to be even more independent from the
		LOTOS language and to solve several programming difficulties.
		The following changes have been brought:

		#1 The semantics of the three functions CAESAR_PRINT_LABEL(),
		   CAESAR_DUMP_LABEL() and CAESAR_STRING_LABEL() has slightly
		   changed. The result of these functions no longer depends on
		   the current label format set using CAESAR_FORMAT_LABEL().
		   Therefore, these functions always produce a canonical
		   ASCII form for the labels.

		#2 The two existing functions CAESAR_TRANSITION_LABEL() and
		   CAESAR_HIDDEN_GATE_LABEL() have been removed. They are re-
		   placed by a new function named CAESAR_INFORMATION_LABEL(),
		   which is simpler to use and independent from LOTOS. The
		   function CAESAR_FORMAT_LABEL() is now used to select the
		   type of informations sent by CAESAR_INFORMATION_LABEL().

		These changes should be transparent to most OPEN/CAESAR
		application programs:

		- Programs that do not call CAESAR_FORMAT_LABEL() or only
		  call CAESAR_FORMAT_LABEL(0) remain unaffected by change #1

		- Programs that do not call CAESAR_TRANSITION_LABEL() nor
		  CAESAR_HIDDEN_GATE_LABEL() remain unaffected by change #2.

		- Programs that call either CAESAR_FORMAT_LABEL(1) or call
		  CAESAR_HIDDEN_GATE_LABEL() should now rely upon the new
		  function CAESAR_INFORMATION_LABEL() with format 1 for
		  obtaining source-level information about hidden gates.

		- Programs that call CAESAR_TRANSITION_LABEL() should now
		  rely upon CAESAR_INFORMATION_LABEL() with format 2 for
		  obtaining source-level information about transitions.

		The "upc" shell-script can be used for a simple diagnostic
		of the required changes.

		Several other components of the CADP toolbox have been
		upgraded to reflect these changes, namely: CAESAR, BCG_OPEN,
		EXP.OPEN, upc, declarator, simulator, and xsimulator.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		396
Date: 		Thu Sep  5 10:45:12 MET DST 1996
Report:		Alain Kerbrat (VERIMAG)
Files:		bin.*/evaluator.o

Nature:		A bug, which caused Evaluator to core dump under Solaris 2.*,
		was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		397
Date: 		Thu Sep  5 11:34:20 WET DST 1996
Report:		Ghassan Chehaibar (BULL),
		Jean-Charles Henrion and Guy Leduc (Univ. Liege)
Files:		bin.*/exhibitor.a, bin.*/libcaesar.a, bin.*/aldebaran,
		bin.*/libBCG_IO.a, doc/Garavel-92-a.ps, demos/demo_09
		src/caesar_open/executor.c, src/caesar_open/terminator.c
		man/manl/caesar_stack_1.l, caesar/manl/caesar_diagnostic_1.l
		man/manl/aldebaran.l, man/manl/bcg_io.l, man/manl/executor.l,
		man/manl/exhibitor.l, man/manl/terminator.l

Nature:		The previous version of exhibitor (V1) has been replaced with
		a new version (V2). Version V1 had two problems:

		- It did not generate the shortest sequence. In some cases,
		  it produced a very long sequence (e.g. 200 transitions)
		  whereas a much shorter one (e.g. 20 transitions) existed.

		- In some cases, it aborted (core dump) because the execution
		  stack used by the recursive procedure was overflown during
		  depth-first search.

		Version V2 brings major improvements:

		- The SEQUENCE format used to specify the sequence to be
		  searched has been significantly improved in exhibitor V2.
		  The new SEQUENCE format allows sophisticated patterns,
		  involving boolean operators and regular expressions.
		  Its syntax and semantics are formally described in
		  exhibitor's manual page,

		- It implements two search algorithms: a depth-first one
		  (which generalizes and improves the algorithm used in V1),
		  and a breadth-first one, able to find shortest sequences.
		
		Other changes between V1 and V2 are the following:

		- With V2, it is no longer possible to specify the sequence
		  to be searched as command-line arguments, because the new
		  SEQUENCE format is more complex: the sequence must be
		  stored in a ".seq" file. The "-" option of V1 has been
		  removed (as it is the unique option in V2).

		- The "-only" option of V1 has been removed. It is replaced,
		  in a more general way, by the pattern features provided
		  by the new SEQUENCE format.

		- There are several new options in V2 (see exhibitor's manual
		  page).

		- The new SEQUENCE language can characterize deadlock states
		  (using the <deadlock> keyword) and can therefore be used
		  to find the shortest sequence leading to a sink state.

		- In addition to the introduction new features, the syntax of
		  the SEQUENCE language has changed with respect to the
		  definitions of labels (which should now be enclosed between
		  double-quotes "...") and comments.

		- exhibitor V2 is distributed as a binary archive located in
		  "bin.*/exhibitor.a". The source code of exhibitor V1 is
		  kept in the "old" directory.

		OPEN/CAESAR's libraries have been upgraded to support the
		new SEQUENCE format. These changes should be transparent
		to all application programs. They concern:

		- the effects of the two functions CAESAR_FORMAT_STACK_1()
		  and CAESAR_PRINT_STACK_1() of OPEN/CAESAR's "caesar_stack_1"
		  library,

		- the recommended actual parameters for the function
		  CAESAR_CREATE_DIAGNOSTIC_1() of OPEN/CAESAR's
		  "caesar_diagnostic_1" library.

		Several other components of the CADP toolbox have been
		upgraded to support the new SEQUENCE format, namely:
		ALDEBARAN, BCG_IO, executor, and terminator.

		The manual pages for executor, exhibitor, and terminator
		incorrectly refered to the ALDEBARAN manual page for a
		description of the SEQUENCE format. This has been fixed.
		The manual page for ALDEBARAN has been also updated.

		The :READ_ME and *.seq files of the demo_09 have been
		updated to exhibitor V2 and to the new SEQUENCE format.
-------------------------------------------------------------------------------
BUG FIX
Number:		398
Date: 		Thu Sep  5 14:04:04 WET DST 1996
Report:		Mirela Sechi Moretti Annoni Notare (UFSC, Brazil)
Files:		src/open_caesar/executor.c

Nature:		The modification made to port "executor" under Solaris 2.*
		(see above bug fix #379) was not sufficient, since the rand()
		does not behave identically in SVR4 and BSD. This caused an
		error message of the form:

	       #945 error in function CAESAR_ITEM_EDGE_LIST [caesar_edge.c:894]
	            incorrect value for argument CAESAR_N
	            quit

		This bug was fixed: "executor" should now run properly both
		under SunOS 1.* and SunOS 2.*
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		399
Date: 		Tue Sep 10 12:45:34 MET DST 1996
Report:		Jean-Pierre Krimm (VERIMAG)
Files:		bin.*/libcaesar.a, incl/caesar_standard.h,
		man/manl/caesar_standard.l, doc/Garavel-92-a.ps
                src/caesar_open/*, com/upc

Nature:		The undocumented macros CAESAR_ASSERT() and CAESAR_PROTEST()
		previously defined in "caesar_standard.h" have changed: the
		new versions have less parameters and should be used only
		to report unexpected internal errors, mainly assertion
		violations.

		Two new functions CAESAR_ERROR() and CAESAR_WARNING() have
		been introduced in "caesar_standard.h" and "libcaesar.a"
		to report errors to the user (using parameters identical to
		those of "printf").

		CAESAR_ASSERT(), CAESAR_PROTEST(), CAESAR_ERROR(), and
		CAESAR_WARNING() are now documented in OPEN/CAESAR manual
		pages and reference manual.

		The "upc" shell-script warns the user about these changes.
		All the OPEN/CAESAR application programs ("executor", etc.)
		distributed within CADP have been upgraded.

		To upgrade software making use of the previous, undocumented
		macros CAESAR_ASSERT() and CAESAR_PROTEST(), the following
		steps should be observed:

		- The "main" function should be declared with "argv" and "argc"
		  parameters, in the usual way (see for instance the C code
		  given in "src/open_caesar/executor.c").

		- The first instruction of "main" should be the following:
		  	CAESAR_TOOL = argv[0];

		- Each call of the form:
			CAESAR_ASSERT (A, B, C, D);
		  where D == NULL, should be simply replaced with:
			CAESAR_ASSERT (A);
		  because parameter B (error code) is useless and because
		  parameter C (tool name) is now automatically supplied by
		  the global variable CAESAR_TOOL.

		- Each call of the form
			CAESAR_ASSERT (A, B, C, D);
		   where D != NULL, should be simply replaced with
			if (!A) CAESAR_ERROR (D);

		- Each call of the form:
			CAESAR_PROTEST (B, C, D);
		  where D == NULL, should be simply replaced with:
			CAESAR_PROTEST ();

		- Each call of the form
			CAESAR_PROTEST (B, C, D);
		   where D != NULL, should be simply replaced with:
			CAESAR_ERROR (D);
-------------------------------------------------------------------------------
BUG FIX
Number:		400
Date: 		Wed Sep 11 17:10:53 MET DST 1996
Files:		bin.*/libcaesar.a, bin.*/exhibitor.a,
		src/open_caesar/terminator.c, src/open_caesar/simulator.i,
		man/manl/caesar_stack_1.l, man/manl/caesar_diagnostic_1.l,
		man/manl/exhibitor.l, man/manl/terminator.l,
		doc/Garavel-92-a.ps

Nature:		In the manual pages of the "stack_1" and "diagnostic_1", the
		definition of ``stack depth'' and ``diagnostic size'' was
		somehow ambiguous. It is now clearly stated that these values
		are computed in number of states, not in number of transitions.

		Several subtle bugs have been fixed in the implementation of
		OPEN/CAESAR's "diagnostic_1" module, with respect to the
		computation of depths.
		
		The tools "exhibitor", "simulator", and "exhibitor" have been
		modified: the argument of "-depth" option is considered to be
		a number of transitions (not a number of states). Although this
		convention is not the same as for OPEN/CAESAR's "stack_1" and
		"diagnostic_1" libraries, it is more intuitive from the user
		point of view and it is consistent with the behaviour of
		"executor". The manual pages have been updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		401
Date: 		Wed Sep 18 17:59:57 MET DST 1996
Files:		bin.*/evaluator.a

Nature:		The OPEN/CAESAR verification tool "evaluator" is now contained
		in files "bin.*/evaluator.a" instead of "bin.*/evaluator.o".
		From the user's point of view, this change should be fully
		transparent.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		402
Date:		Thu Sep 19 11:03:19 MET DST 1996
Files:		doc/*

Nature:		New papers and research reports have been added in the 'doc'
		directory:
		   - Chehaibar-Garavel-et-al-96
		   - Fernandez-Garavel-et-al-96
		   - Fernandez-Jard-Jeron-et-al-96-a
		   - Fernandez-Jard-Jeron-et-al-96-b
		   - Garavel-96
		   - Garavel-Mounier-96
		   - Garavel-Sighirea-96-a
		   - Mateescu-96
		Also, new bibliographic references of interest have been added:
		   - Fredlund-Orava-96
		   - Korver-96
		   - Schieferdecker-96
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		403
Date: 		Mon Sep 30 19:44:17 MET 1996
Files:		demos/demo_16, demos/demo_17

Nature:		Two new demos have been added to the CADP package.
-------------------------------------------------------------------------------
BETA-VERSION Z-s
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		404
Date: 		Sun Oct  6 18:23:32 MET 1996
Files:		com/xeuca, com/tst, src/eucalyptus/*

Nature:		Thanks to Jean-Michel Frume, a new version of of the EUCALYPTUS
		Graphical User-Interface is now available. This new version
		(version 2.0) is written in TCL/TK, and supersedes the previous
		versions (versions 0.*, 1.0, or 1.1) written in XtPanel.

		The new version 2.0 brings significant improvements. Regarding
		backward compatibility, the following remarks are of interest.
		They only apply if you have already installed the EUCALYPTUS
		Graphical User-Interface (versions 0.*, 1.0 or 1.1) on your
		site:

		- From now on, version 2.0 of EUCALYPTUS is included in the
		  CADP distribution: when installing CADP (beta-version Z-s or
		  higher), you implicitly install the EUCALYPTUS Graphical-User
		  Interface (version 2.0 or higher).

		- To upgrade from EUCALYPTUS 0.* or 1.* to EUCALYPTUS 2.0, we
	   	  recommend the following procedure:

		(1) Edit your startup file(s) (.cshrc, .profile, and/or
		    .tcshrc) and remove the definition of the "EUCALYPTUS"
		    environment variable and the definition of the "xeuca"
		    alias. For instance, in a .cshrc file, you should remove
		    the two following lines (if they are present):

			setenv EUCALYPTUS pathname_of_the_Eucalyptus_directory
			alias xeuca $EUCALYPTUS/com/xeuca

		(2) Remove also the directory containing the obsolete version
		    of the EUCALYPTUS Graphical User Interface. This directory
		    was previously referenced by the $EUCALYPTUS variable.

		(3) If you already have a "$HOME/.eucarc" file, you should
		    remove it or convert it to a "$HOME/.xeucarc" file,
		    according to the new format (you can find examples in
		    $CADP/src/eucalyptus/xeucarc_*). The existence of an
		    obsolete ".eucarc" file is detected by the "tst" command.
-------------------------------------------------------------------------------
BETA-VERSION Z-t
-------------------------------------------------------------------------------
BUG FIX
Number:		405
Date: 		Thu Oct 10 13:11:01 1996
Report:		Hubert Garavel (INRIA)
Files:		bin.*/aldebaran

Nature:		A bug, which caused "aldebaran -live file.bcg" to core dump
		has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		406
Date: 		Sat Oct 26 18:39:00 MET 1996
Files:		tcl-tk/*, bin.*/xsimulator.a

Nature:		The obsolete versions of TCL/TK (TCL 7.4 and TK 4.0) included
		in CADP have been replaced with the most recent versions
		currently available (TCL 7.6 and TK 4.2).

		The Xsimulator program has been updated in order to work
		properly with the new version of TCL/TK.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		407
Date: 		Mon Oct 28 11:09:32 MET 1996
Files:		src/open_caesar/deadlock.c

Nature:		In directory $CADP/src/open_caesar, the symbolic link
		"deadlock.c" pointing to "terminator.c" for backward
		compatibility reason lasting from year 1992 (see entry
		#176 in this file) has been removed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		408
Date: 		Fri Nov 15 10:53:36 MET DST 1996
Files: 		bin.*/des2aut, man/manl/des2aut.l

Nature:		A new tool has been added for compositional generation.
		Taking as inputs a composition expression describing a
		network of communicating LTSs and a behavioral relation,
		it incrementally produces the minimized global LTS
		corresponding to this composition expression.

		Composition expressions are described using an extension
		of the EXP format which offers the two following features:

		  - elementary LTSs can be given either as ".aut" files,
		    or ".exp" files, or Lotos processes.

		  - a semi-composition operator is available to restrict
		    the behaviour of a sub-expression with respect to its
		    environment (represented by an interface LTS).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		409
Date: 		Fri Nov 15 15:09:07 MET DST 1996
Files: 		bin.*/projector.a, man/manl/projector.l

Nature:		A new tool has been added in the CADP toolbox to compute
		"on-the-fly" the semi-composition of an implicit LTS with
		respect to a given interface. It can be used either with
		caesar.open, bcg_open or exp.open. See the "projector"
		manual for more information.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		410
Date: 		Fri Nov 15 17:00:05 MET DST 1996
Files: 		bin.*/exp2c, bin.*/libexpopen.a

Nature:		The exp.open tool has been extended to process LTSs
		obtained by semi-composition with user-given interfaces.
		This new feature is mainly used by the des2aut tool for
		compositional generation (see "exp.open" and "des2aut" manual
		pages for more information).
-------------------------------------------------------------------------------
BUG FIX
Number:		411
Date:		Tue Nov 19 19:29:59 MET 1996
Report:		Hubert Garavel (INRIA)	
Files:		bin.*/aldebaran

Nature:		A bug was fixed in aldebaran: the on-the-fly computation of
		branching bisimulation (option "-fly -pequ") was incorrect
		in some cases.
-------------------------------------------------------------------------------
BUG FIX
Number:		412
Date: 		Mon Nov 25 20:14:17 MET 1996
Files:		src/open_caesar/simulator.c, src/open_caesar/simulator.i

Nature:		Two mistakes have been fixed in the OPEN/CAESAR simulator:
		- A typo ("atgv" instead of "argv") was fixed
		- The "hidden" gate corresponding to "i"-transitions was
		  not printed, even with label format equal to 1.
-------------------------------------------------------------------------------
BUG FIX
Number:		413
Date: 		Mon Nov 25 21:26:19 MET 1996
Files:		src/xsimulator/*

Nature:		Four improvements and/or bug fixes have been made in the
		OPEN/CAESAR xsimulator:
		- The xsimulator window is now created as a background process
		- The size of the xsimulator window was reduced so as to fit
		  in monitors smaller than 21-inches
		- The label format radiobutton is now initialized correctly
		  (with 1 instead of 0)
		- The "hidden" gate corresponding to "i"-transitions was
		  not printed, even with label format equal to 1.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		414
Date: 		Mon Dec  2 16:49:43 MET 1996
Files:		com/bcg_draw, com/bcg_edit, bin.*/xsimulator.a

Nature:		From now on, the windows created by "bcg_draw", "bcg_edit" and
		"xsimulator" are started as background processes (rather than
		forground processes). This ensures a better integration of
		these tools in the EUCALYPTUS graphical user-interface.
-------------------------------------------------------------------------------
BUG FIX
Number:		415
Date: 		Mon Dec  2 17:59:41 MET 1996
Files:		com/xeuca, src/eucalyptus/*, man/manl/xeuca.l

Nature:		Version 2.0 of the EUCALYPTUS graphical user-interface
		(and all subsequent intermediate version 2.0a, 2.0b, ...
		2.0v, 2.0w) have been replaced with a new version 2.1:
		- All known bugs have been corrected
		- Many new features have been introduced
		- A manual page ((type "man xeuca") is now available
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		416
Date: 		Mon Dec  2 18:17:10 MET 1996
Report:		Bruno Vivien (INRIA Rhone-Alpes)
Files:		./INSTALLATION

Nature:		The explanations given in the INSTALLATION file have been
		clarified in some points. Also, two new environment variables
		($EDITOR and $NAVIGATOR) have been introduced.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		417
Date: 		Tue Dec  3 14:48:25 MET 1996
Files:		./ADDRESSES, ./doc/:READ_ME

Nature:		The new addresses, telephone numbers, fax numbers and e-mail
		addresses of the CADP team are given in file $CADP/ADDRESSES.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		418
Date: 		Tue Dec  3 17:31:01 MET 1996
Report:		Bruno Vivien (INRIA Rhone-Alpes)
Files:		com/tst

Nature:		The "tst" command was improved in several ways:
		- it does better verification about the "arch" command
		- it eases the migration from previous versions 0.* and
		  1.* of EUCALYPTUS to EUCALYPTUS 2.1 (by detecting
		  obsolete features)
		- it verifies the $EDITOR and $NAVIGATOR variables
		- it checks for the existence of the "tee" command
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		419
Date: 		Tue Dec  3 17:35:30 MET 1996
Report:		Toma Macavei (INT, Evry, France)
Files:		doc/:READ_ME

Nature:		For each PostScript or DVI file contained in the 'doc'
		directory, the ':READ_ME' file indicates the corresponding
		number of pages.
-------------------------------------------------------------------------------
BUG FIX
Number:		420
Date: 		Tue Dec  3 17:41:25 MET 1996
Report:		Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran

Nature:		A bug was fixed, which caused ALDEBARAN to core dump when
		invoked with the "-path" option.
-------------------------------------------------------------------------------
BUG FIX
Number:		421
Date: 		Tue Dec  3 17:42:23 MET 1996
Report:		Olivier Bonaventure (University of Liege)
Files:		bin.*/aldebaran

Nature:		A bug was fixed, which caused ALDEBARAN to return wrong
		results when comparing two BCG files (since the unique
		numbers assigned to all labels in both BCG files are not
		necessarily the same).
-------------------------------------------------------------------------------
VERSION Z
-------------------------------------------------------------------------------
BUG FIX
Number:		422
Date: 		Mon Dec 16 16:03:51 MET 1996
Author:		Laurent Mounier (VERIMAG)
Files:		bin.*/projector.a

Nature:		The libraries of the Projector tool did not work properly
		and have been updated.
-------------------------------------------------------------------------------
BUG FIX
Number:		423
Date: 		Mon Dec 16 18:23:09 MET 1996
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/xsimulator.a

Nature:		A minor bug fix was made in the Xsimulator tool.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		424
Date: 		Sun Dec 22 20:57:27 MET 1996
Report:		Guy Tremblay (Universite du Quebec a Montreal),
		J. Sincennes (University of Ottawa)
Author:		Hubert Garavel (INRIA/VASY)
Files:		INSTALLATION

Nature:		In the INSTALLATION file, the $ARCH variable was renamed in
		$CADP_ARCH, in order to avoid conflicts with some $ARCH
		variable which may also exist in some startup shells.
		This change is intended to new users only; if you are
		currently using $ARCH, you do not have to modify your
		startup file. Explanations regarding the difference
		between architectures "sun4" and "sun5" have been added.
-------------------------------------------------------------------------------
BUG FIX
Number:		425
Date: 		Mon Jan  6 17:09:45 MET 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		A minor bug was fixed in CAESAR.ADT. In the ``.h'' file
		generated by CAESAR.ADT, when a ``.t'' file (external types)
		is to be included, the comments describing the expected
		contents of the ``.t'' file were disseminated at various
		places in the ``.h'' file. Now, they are gathered altogether
		at the place where the ``.t'' file is included.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		426
Date: 		Wed Jan  8 14:27:23 MET 1997
Report:		Ghassan Chehaibar (BULL/DYADE)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt, man/manl/caesar.adt.l

Nature:		A new option, ``-external'', was added to CAESAR.ADT. When
		invoked with this option, CAESAR.ADT generates two prototype
		files, which can be used as a model for the ``.t'' file
		(external types) and the ``.f'' file (external functions).
		These files are to be completed by hand. The CAESAR.ADT
		manual page was updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		427
Date: 		Wed Jan 29 14:42:28 MET 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		./INSTALLATION

Nature:		The installation directive:
			chown -R root $CADP
			chgrp -R wheel $CADP
		did not work under Solaris 2 (the "wheel" group only exists
		in Solaris 1). They have been replaced with:
			chown -R 0 $CADP
			chgrp -R 0 $CADP
		This should work both under Solaris 1 and 2.
-------------------------------------------------------------------------------
BUG FIX
Number:		428
Date: 		Fri Jan 31 11:42:55 MET 1997
Report:		Charles Pecheur (INRIA/VASY)
Author:		Hubert garavel (INRIA/VASY)
Files:		bin.*/bcg_io

Nature:		The BCG_IO tool did not work properly under some restricted
		versions of Solaris 2.5 (limited to dynamic libraries). When
		invoked with some specific options, error messages were
		displayed, e.g.:

                > bcg_io TEST.bcg TEST.aut
                > ld: fatal: library -lc: not found
                > ld: fatal: File processing errors.  No output written to ...
                > Segmentation Fault (core dumped)

		This problem also occurred in ALDEBARAN, which silently
		invokes BCG_IO to perform format conversions:

                > aldebaran    -bddsize 4 -info foo.bcg
                > ld: fatal: library -lsocket: not found
                > ld: fatal: library -lnsl: not found
                > ld: fatal: library -lelf: not found
                > ld: fatal: library -lc: not found
                > ld: fatal: File processing errors.  No output written to ...
                > Segmentation Fault - core dumped

		This problem was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		429
Date: 		Thu Feb  6 08:41 MET 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		./INSTALLATION

Nature:		The installation directive for setting $LD_LIBRARY_PATH worked
		for "csh", but not "tcsh". The new directive should work for
		both "csh" and "tcsh".

		Also, "/usr/lib" was added to the list of directories that we
		recommend to be present in $LD_LIBRARY_PATH.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		430
Date: 		Thu Feb  6 14:53:03 MET 1997
Authors:	Mark Jorgensen (INRIA/VASY), Laurent Mounier (VERIMAG)
Files:		doc/:READ_ME

Nature:		The :READ_ME file has been enriched with the abstracts of the
		papers. An HTML version is now available on the CADP web site.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		431
Date: 		Mon Feb 10 17:10:11 MET 1997
Author:		Mark Jorgensen (INRIA/VASY)
Files:		com/xeuca, src/eucalyptus/eucalyptus.tcl

Nature:		The EUCALYPTUS graphical user-interface was improved in two
		ways: appropriate fonts are specified explicitly (this avoids
		random font replacements on some X-terminals) and colors have
		been added. Both fonts and colors can be customized by the user
		using the ~/.xeucarc file.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		432
Date: 		Mon Feb 17 09:37:21 MET 1997
Authors:	Hubert Garavel, Radu Mateescu, Mihaela Sighireanu (INRIA/VASY)
Files:		lib/INTEGERNUMBER.lib, lib/INTEGER.lib, lib/X_INTEGER.lib,
		incl/X_INTEGER.h

Nature:		A new datatype library has been developed, which models
		signed integer numbers. This library is available under
		two different forms:

			- ``INTEGERNUMBER.lib'' (also ``INTEGER.lib'' as a
			  shorthand) contains ``pure'' abstract data type
			  definitions for integer numbers. It can be compiled
			  by CAESAR.ADT

			- ``X_INTEGER.lib'' contains data type definitions,
			  for which all types and functions are declared to
			  be external. The corresponding C implementation is
			  provided in file incl/X_INTEGER.lib
-------------------------------------------------------------------------------
BUG FIX
Number:		433
Date: 		Mon Feb 17 11:51:36 MET 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/caesar.aldebaran

Nature:		The previous version of "caesar.aldebaran" relied upon the
		the "-n" option of the "echo" command, an option which no
		longer exists in Solaris 2.*. This has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		434
Date: 		Mon Feb 17 12:14:21 MET 1997
Report:		Jacques Sincennes (University of Ottawa)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/tst

Nature:		The warning message given by "tst" when "/bin/arch" overrides
		"$CADP/com/arch" in the $PATH has been suppressed (more
		precisely, it has been extremely softened), because this
		situation does not create problems. Also, the new version of
		"tst" checks for the availability of UNIX command "head" and
		"tail".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		435
Date: 		Mon Feb 17 15:53:15 MET 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/upc

Nature:		The "upc" program was modified to take into account the new
		form of CADP version names (97a, etc., after A, B, ...Z).
		Also, an "echo -n" statement was made portable across
		different Unix versions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		436
Date: 		Thu Feb 20 19:02:15 MET 1997
Author:		Mihaela Sighireanu (INRIA/VASY)
Files:		emacs/lotos-mode.el

Nature:		A "LOTOS-mode"  for editing LOTOS descriptions using Emacs
		and XEmacs has been added to the CADP release. This mode
		allows keywords and comments to be displayed in different
		fonts/colors. It also provides shorthands for entering
		quickly LOTOS constructs (types, processes, ...) and supports
		compiler invocation within Emacs and XEmacs.
-------------------------------------------------------------------------------
BUG FIX
Number:		437
Date: 		Tue Feb 25 15:27:14 MET 1997
Report:		Charles Pecheur (INRIA/VASY)
Author:		Mark Jorgensen (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		In EUCALYPTUS, ELUDO was not launched properly if the option
		"Use_Non_Standard_Library" had been selected before clicking
		on "Execute / Symbolic simulation". For instance, if the
		"is.x" library had been selected, ELUDO tried to fetch
		library "is.x.x". This has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		438
Date: 		Thu Feb 27 14:48:07 MET 1997
Author:		Laurent Mounier (VERIMAG)
Files:		demos/demo_18

Nature:		A new demo (the Transit Node message router used in the
		European project SPECS) was added to the CADP distribution,
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		439
Date: 		Tue Mar  4 13:09:26 MET 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, incl/caesar_kernel.h, src/exec_caesar/main.c
		man/manl/caesar.l

Nature:		A new option ("-exec") has been added to CAESAR. In addition
		to the two existing modes for CAESAR, namely graph generation
		("-bcg", "-aldebaran", "-graph") and on-the-fly exploration
		("-open"), this option introduces a third mode: the execution
		mode. Using this option, CAESAR produces an executable C
		module, which can  be used to control a real "reactive" system.
		This code has to be completed with hand-written C routines
		corresponding to the observable gates of the LOTOS description.
		The interface of the C code generated with "-exec" is defined
		in "$CADP/incl/caesar_kernel.h" and a typical main routine
		is available in "$CADP/src/exec_caesar/main.c". For an example,
		see #461 below.
-------------------------------------------------------------------------------
BUG FIX
Number:		440
Date: 		Mon Mar 10 15:39:46 MET 1997
Report:		Charles Pecheur (INRIA/VASY), Arnaud Fevrier (ENST),
		Elie Najm (ENST)
Author:		Mark Jorgensen and Hubert Garavel (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl, src/eucalyptus/xeucarc_standard

Nature:		Several fixes and improvements have been done in EUCALYPTUS:

		(a) The size of xterm's created from "xeuca" is now
		    parameterized by a $Xterm_Options variable defined in
		    the .xeucarc file. This variable can also be used to
		    pass various options to xterm.

		(b) An error message is now displayed when one tries to
		    launch the Viscope tool, if it is not installed

		(c) In the Files / Change Directory menu, the buttons
		    corresponding to the directories of non-installed tools
	 	    are now made inactive (in grey).

		(d) In the Applications menu, there is now a single editor
		    button, corresponding to the $EDITOR variable

		(e) "xeuca" no longer creates an xterm window when launching
		    editors such as emacs, xemacs, textedit, etc. that have
		    their own xterm window. On the opposite, an xterm is
		    still created for "vi".

		(f) The names of the temporary files created by "xeuca" have
		    been made unique, in order to avoid conflicts between
		    concurrent or successive "xeuca" sessions.

		(g) "xeuca" now detects the backup files (foo~ and #foo#)
		    created by emacs and xemacs and gives them a grey icon.

		(h) When the "Help" button is pressed and the Help window
		    is already opended, the Help window is popped up.
-------------------------------------------------------------------------------
BUG FIX
Number:		441
Date: 		Mon Mar 10 18:40:45 MET 1997
Report:		Arnaud Fevrier (ENST)
Author:		Hubert Garavel (INRIA/VASY)
Files:		INSTALLATION

Nature:		Various setup details listed in the INSTALLATION file have
		been improved:

		(a) For the C-shell, a test was added to detect whether the
		    $LD_LIBRARY_PATH is set or not.

		(b) The $EDITOR variable is not overriden if previously
		    defined.

		(c) The $NAVIGATOR variable is not overriden if previously
		    defined.

		(d) An attempt is made to position CADP_CC automatically
		    (either to "cc" or "gcc" depending upon the context).
-------------------------------------------------------------------------------
BUG FIX
Number:		442
Date: 		Tue Mar 11 12:12:34 MET 1997
Report:		Mihaela Sighireanu (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/tst

Nature:		Two bugs that caused "tst" to halt abruptly when $CADP_CC was
		set to "cc -g" have been fixed. Also, the new version of "tst"
		detects properly the situations where $CADP is set to a dummy
		value.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		443
Date: 		Fri Mar 14 16:46:27 MET 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt, man/manl/caesar.l,
		man/manl/caesar.adt.l, src/eucalyptus

Nature:		The two options "-berkeley" and "-systemV" were no longer
		meaningful in 1997. They have been removed from CAESAR,
		CAESAR.ADT, and EUCALYPTUS. The manual pages have been updated.
-------------------------------------------------------------------------------
BUG FIX
Number:		444
Date: 		Mon Mar 17 10:19:12 MET 1997
Report:		Axel Belinfante (Univ. of Twente),
		Ghassan Chehaibar (BULL/DYADE)
		Mark Jorgensen (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, man/manl/caesar.l

Nature:		The temporary files generated by CAESAR during its type
		survey phase, its optimization phase (optimizations E7,
		V3, V4, V7) and its simulation phase are now created in
		the $CADP_TMP directory (instead of the current directory).
		The manual page for CAESAR has been updated.

		In particular, this solves a problem reported by several
		OPEN/CAESAR users:
		> caesar.open: using link mode
		> caesar.open: file ``xxx.c'' was not generated using
		> ``caesar -open''
		This problem happened when CAESAR stopped (due to an error
		in hand-written C code for data types) leaving a temporary
		".c" file in the current directory. This ".c" file had to be
		deleted manually before restarting "caesar.open". The problem
		came from the fact that the temporary ".c" files and the
		final output ".c" file generated by "caesar -open" shared
		the same file name.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		445
Date: 		Mon Mar 17 10:19:12 MET 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt, man/manl/caesar.adt.l

Nature:		Similarly, the temporary files produced by CAESAR.ADT during
		its external type survey phase are now created in the
		$CADP_TMP directory (instead of the current directory). The
		"..c" files have been renamed in ".c" files. The manual page
		for CAESAR.ADT has been updated.
-------------------------------------------------------------------------------
BUG FIX
Number:		446
Date: 		Mon Mar 17 11:23:34 MET 1997
Report:		Charles Pecheur (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt

Nature:		The following diagnostic message produced by CAESAR and
		CAESAR.ADT:
                   > the body of process P [9] has functionality:
                   >    F1
                   > whereas its declaration requires functionality:
                   >    F2
		was not correct (functionnalities F1 and F2 had to be
		permuted). This problem is fixed now.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		447
Date: 		Mon Mar 17 15:57:15 MET 1997
Report:		Charles Pecheur (INRIA/VASY), Muffy Thomas (Univ. of Glasgow)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		A warning message of the form:
		   > "xx.c", line 498: warning: improper pointer/integer
		   > combination: op "="
		that occurred when invoking CAESAR on a Solaris 2.x with
		$CADP_CC pointing to /usr/ucb/cc has been fixed (the problem
		came from the fact that function tmpfile() is not declared
		in /usr/ucbinclude/stdio.h)
-------------------------------------------------------------------------------
BUG FIX
Number:		448
Date: 		Mon Mar 17 17:54:34 MET 1997
Report:		Charles Pecheur and Mihaela Sighireanu (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/exhibitor.a

Nature:		A bug in "exhibitor -dfs" was fixed, which caused Exhibitor
		to stop with the following error message:
		   > ./exhibitor: assertion violation at line 65 of
		   > file "exhibitor_dfs.c"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		449
Date:		Wed Mar 19 15:46:37 MET 1997
Files:		bin.*/evaluator.a, man/manl/evaluator.l
Author:		Marius Bozga (VERIMAG)

Nature:		A new version of EVALUATOR was issued, improving the previous
		version on several points:
		- The data structures used to store the product states has been
		  improved. The physical memory needed during the evaluation
	     	  is reduced up to 40% for large examples.
	  	- Two different evaluation strategies are now available:
		  a local one, which is an improvement of the strategy
		  implemented in the previous version, and a global one,
		  based on a single exploration of the whole product graph.
		  The former is particularly efficient when the formula under
		  evaluation is false (and it provides a diagnostic), while the
		  latter usually offers better results when the formula is true
		  (depending on the structure of the LTS).
		- The syntax of mu-calculus formulas has been extended:
		  label sets can now be specified using  boolean "not" and "or"
		  operations on labels.
		The EVALUATOR manual page has been updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		450
Date: 		Wed Mar 19 16:34:21 MET 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, com/caesar.open, com/caesar.xesar,
		src/eucalyptus, man/manl/caesar

Nature:		Seven command-line options have been removed from CAESAR:
  		   -auto, -mec, -pipn, -scan, -squiggles, -xesar and -xesar.old
		because they were no longer useful (either the corresponding
		tools are no longer maintained, or in the particular case of
		Auto/Autograph, a new graph format (FC2) is in use).

		This removal simplifies the code of CAESAR (which becomes
		660-lines leaner), the documentation, and the graphical
		user-interface.

		If needed, the corresponding graph formats (.auto.pro,
		.dp3, .ge3, .gra, .graph, .m0, .mec, .scan and .tai)
		can still be obtained by generating a BCG file first, then
		converting it to the desired graph format using "bcg_io".

		Of course, the following options are still supported:
		   -aldebaran, -bcg, -graph, -exec and -open

		The manual page for CAESAR was updated.
		The EUCALYPTUS graphical user-interface was updated.

		The "caesar.xesar" shell-script (lasting from November 1994)
		has been removed since it was no longer useful.

		The "caesar.open" shell-script was updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		451
Date: 		Wed Mar 19 17:10:55 MET 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		man/whatis, man/windex

Nature:		The index files for the CADP manual pages (named "whatis" for
		"sun4" and "windex" for "sun5") are generated. This should
		allow "man -k" to work properly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		452
Date: 		Fri Mar 21 11:47:51 MET 1997
Report:		Mihaela Sighireanu (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		gc/*

Nature:		The Boehm-Demers garbage collector has been upgraded. The
		previous version (V4.3 dated December, 23, 1994) has been
		replaced with the latest version available (V4.10 dated
		February, 19, 1996).
-------------------------------------------------------------------------------
BUG FIX
Number:		453
Date:		Thu Mar 21 14:37:31 MET 1997
Report:		Antony de Jacquier (Universite Libre de Bruxelles)
Authors:	Alain Kerbrat and Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran

Nature:		The default suffixes for filenames given in the command line
		of ALDEBARAN or in a composition expression have been modified.
		From now on, ALDEBARAN first looks for a ".aut" file, then for
		a ".bcg" file, and finally for a ".exp" file. Thus, it becomes
		possible to use an LTS stored in a "foo.aut" file within the
		"foo.exp" composition expression.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		454
Date: 		Fri Mar 21 15:09:34 MET 1997
Report:		Charles Pecheur (INRIA/VASY)
Authors:	Mark Jorgensen and Hubert Garavel (INRIA/VASY)
Files:		bin.*/duplex

Nature:		Two problems have been fixed:
		- No error message was displayed when Xsimulator could not
		  be started (due to a missing X font, or to an "xhost -"
		  setup, or to some other initialization reason).
		- Same problem for "xeuca" (the EUCALYPTUS graphical user
		  interface)
-------------------------------------------------------------------------------
BUG FIX
Number:		455
Date:		Fri Mar 22 10:23:14 MET 1997
Report:		Hubert Garavel
Author:		Alain Kerbrat and Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran

Nature:		A warning has been suppressed in ALDEBARAN: it improperly
		complained when an LTS stored in "a .aut" file contained a
		single state and no transition.
-------------------------------------------------------------------------------
BUG FIX
Number:		456
Date: 		Mon Mar 24 15:54:57 MET 1997
Report:		Charles Pecheur (INRIA/VASY)
Authors:	Hubert Garavel and Mark Jorgensen (INRIA/VASY)
Files:		src/open_caesar/simulator.i

Nature:		The simulation code (common to "simulator" and "xsimulator")
		has been extended to catch the situation where an error occurs
		during the evaluation of an ADT expression, which usually
		results in the following error message:

			#212 error in file ``.h'' :
			     unexpected case (not defined by the equations)
			     in operation F [...]
			     implemented by function CAESAR_ADT_FUNC_F [...]

		In the previous version, "simulator" would immediately exit
		in such case. The situation was even worse with "xsimulator",
		that would exit and destroy its window before the above error
		message could be read. The new versions of "simulator" and
		"xsimulator" gracefully recover from this situation, allowing
		the user to backtrack to previous states or from the initial
		state.
-------------------------------------------------------------------------------
BUG FIX
Number:		457
Date: 		Mon Mar 24 18:10:09 MET 1997
Report:		Charles Pecheur (INRIA/VASY)
Authors:	Mark Jorgensen and Hubert Garavel (INRIA/VASY)
Files:		bin.*/duplex

Nature:		The following problem was fixed: "xsimulator" was blocked
		when too many (i.e., several hundreds) transitions were
		fired from the current state. The new version recovers from
		this situation by giving an error message and printing only
		the first hundreds of transitions (skipping the remaining
		ones).
-------------------------------------------------------------------------------
BUG FIX
Number:		458
Date: 		Tue Mar 25 12:38:38 MET 1997
Report:		Charles Pecheur (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		In some cases (when an option such as -first, -all, etc. was
		specified), the "terminator" tool was invoked incorrectly
		from the EUCALYPTUS user-interface (i.e., the option was
		specified twice). This bug has been solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		459
Date: 		Tue Mar 25 12:46:19 MET 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		The "Files" and "Applications" menus of EUCALYPTUS have been
		renamed and reorganized into two menus ("File" and "View"),
		which are more logical and closer to standard conventions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		460
Date: 		Tue Mar 25 14:23:06 MET 1997
Report:		Ilona Schubert (GMD-FOKUS, Germany)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/rfl

Nature:		A test was added to "rfl" to detect the cases where the
		startup file of the login shell (e.g. ".cshrc" or ".profile")
		does "echo" statements on its standard output. This prevents
		"rsh" (and consequently "rfl") from working properly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		461
Date: 		Tue Mar 25 17:20:39 MET 1997
Authors:	Hubert Garavel and Mark Jorgensen (INRIA/VASY)
Files:		demos/demo_19

Nature:		A new demo (the famous "Production Cell" and its animated
		Tcl/Tk interface) was added to the CADP release. It
		demonstrates how LOTOS and EXEC/CAESAR can be used to program
		controllers.
-------------------------------------------------------------------------------
BUG FIX
Number:		462
Date: 		Tue Mar 25 18:10:35 MET 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		A bug was fixed in EUCALYPTUS: the "Edit in 2 dimensions"
		button for PostScript files invoked an improper command.
-------------------------------------------------------------------------------
BUG FIX
Number:		463
Date: 		Wed Mar 26 11:24:54 MET 1997
Report:		Marius Bozga and Laurent Mounier (VERIMAG)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libbcg_open.a

Nature:		The implementation of CAESAR_STRING_LABEL() provided by
		BCG_OPEN was inefficient, because each call to this function
		allocated a fragment of memory that could never be freed
		(according to the conventions defined in "caesar_graph.h").
		This bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		464
Date: 		Wed Mar 26 11:59:36 MET 1997
Author:		Laurent Mounier (VERIMAG)
Files:		doc/Krimm-Mounier-97.dvi, doc/Krimm-Mounier-97.ps,
		doc/biblio.bib

Nature:		A new paper on compositional verification was added in the
		"doc" directory.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		465
Date: 		Wed Mar 26 18:21:09 MET 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		The EUCALYPTUS graphical-user interface has been extended to
		support the new version of evaluator (see #449 above).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		466
Date: 		Thu Mar 27 11:11:04 MET 1997
Authors:	Hubert Garavel and Mark Jorgensen (INRIA/VASY)
Files:		bin.*/caesar, bin.*/lib_BCG_IO.a, incl/bcg_write.h
		src/open_caesar/generator.c, src/open_caesar/reductor.c,
		src/eucalyptus/eucalyptus.tcl, src/monitor/main.tcl,
		com/caesar.open, man/manl/caesar.l, man/manl/generator.l,
		man/manl/reductor.l, man/manl/bcg_write.l

Nature:		A new functionality has been added to the BCG library: it is
		now possible to monitor in real-time the generation of a BCG
		graph: this is done using a Tcl-Tk window, which displays the
		current number of states, the current number of transitions,
		the list of labels, etc. (see below improvement #468 for
		details on how this functionality can be accessed from a
		C program).

		An option "-monitor" has been added to CAESAR, Generator and
		Reductor: when invoked, this option launches the Tcl-Tk monitor
		window.

		Note: the "-monitor" option is CPU-consuming, but not much
		memory-expensive (since a "pipe" is used for interprocess
		communication).

		The EUCALYPTUS user-interface and the corresponding manual
		pages have been updated to integrate this new functionality.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		467
Date: 		Thu Mar 27 12:32:00 MET 1997
Author:		Laurent Mounier (VERIMAG)
Files:		demos/demo_20

Nature:		A new demo about the DES2AUT, PROJECTOR and EVALUATOR tools
		(compositional verification of the rel/REL protocol with 4
		stations) has been added.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		468
Date: 		Tue Apr  1 16:56:13 MET DST 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		incl/bcg_io_write_bcg.h, bin.*/libBCG_IO.a, bin.*/caesar,
		src/open_caesar/generator.c, src/open_caesar/reductor.c,
		com/upc, man/manl/bcg_write.l

Nature:		The C programmation interface for generating BCG files has
		been simplified and enhanced. The main change affects the
		list of the parameters for functions BCG_IO_WRITE_BCG_BEGIN()
		and BCG_IO_WRITE_BCG_END(). The meaning of the new parameters
		is described in the "bcg_write.l" manual page.

		To take advantage of the new "bcg_io_write_bcg.h" interface
		and the new "libBCG_IO.a" library, adaptations of the existing
		programs are necessary. The pre-existing calls:

		 BCG_IO_WRITE_BCG_BEGIN (<filename>, <code>, <comment string>);
		 ...
		 BCG_IO_WRITE_BCG_END (<nb_states>, <initial state>,
				       <nb edges>, <sort>);

		should be replaced with the following ones:

		  BCG_IO_WRITE_BCG_BEGIN (<filename>, <initial state>, <code'>,
					  <comment string>, <monitor>);
		  ...
		  BCG_IO_WRITE_BCG_END ();

		where:
		  - <filename> and <comment string> should be kept unchanged.
		  - <initial state> should be moved from one function to the
		    other.
		  - <nb states> and <nb edges> should be removed: these two
		    values are now handled automatically by the BCG library.
		    This will prevent application programs from generating
		    inconsistent BCG files by supplying erroneous numbers of
		    states and edges. Application programs no longer need to
		    compute <nb states> and <nb edges> themselves.
		  - <code'> should be equal to 1 or 2 (see the manual page).
		  - <sort> should be removed (it is no longer useful).
		  - <monitor> is a boolean that indicates whether the Tcl-Tk
		    monitoring window should be started.

		CAESAR, Generator, Reductor, and the "upc" shell-script have
		been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		469
Date: 		Tue Apr  1 18:04:42 MET DST 1997		
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_io

Nature:		In version Z, the format of the ".aut" files generated by
		ALDEBARAN had been modified unilaterally. Before version Z,
		the edges in ".aut" files generated by ALDEBARAN were always
		sorted by increasing number of the "from-states". Since
		version Z, some options of ALDEBARAN produce ".aut" files
		that are not sorted, e.g.:
			des (0, 6, 7)
			(0, F, 6)
			(4, E, 5)
			(0, C, 3)
			(1, B, 2)
			(3, D, 4)
			(0, A, 1)

		This situation causes problems in various places. In particular
		BCG_IO could not deal with non-sorted ".aut" files, which led
		to the following error message:
		  bcg_edge: previous state are not increasing in BCG_WRITE_EDGE

		The new version of BCG has been modified to tackle non-sorted
		".aut" files. However, the BCG files now produced from ".aut"
		files are now less compact than before (technically, their edge
		area is encoded with format 1 instead of format 2).

		Therefore, the recommended policy is to use BCG files rather
		than ".aut" files. In particular, it is better to generate
		directly a BCG file from CAESAR, rather than generating a
		".aut" file first and convert it later to a BCG file.

		Note: An unsorted ".aut" file can be sorted using the following
		command: bcg_io unsorted.aut sorted.aut
-------------------------------------------------------------------------------
BUG FIX
Number:		470
Date: 		Tue Apr  1 18:34:23 MET DST 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_io

Nature:		The previous version of the BCG_IO tool did not parse the
		simple SEQUENCE format correctly: for instance, lines starting
		with a letter were rejected, whereas they should be ignored
		silently. This problem is now solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		471
Date: 		Wed Apr  2 09:48:25 MET DST 1997
Report:		Radu Mateescu and Mihaela Sighireanu (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG_IO.a, bin.*/caesar
		src/open_caesar/generator.c, src/open_caesar/reductor.c

Nature:		CAESAR, Generator and Reductor have been modified to close
		properly the BCG file being generated when an interrupt signal
		is received, or when the "stop" button of the BCG monitor is
		pressed. This will prevent from having incomplete (therefore
		inconsistent) BCG files left in the working directory.
-------------------------------------------------------------------------------
BUG FIX
Number:		472
Date: 		Wed Apr  2 16:14:40 MET DST 1997
Report:		Ghassan Chehaibar (BULL/DYADE)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		The ".aut" file generated by CAESAR was left in an inconsistent
		state upon receipt of an interrupt signal. This problem is now
		solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		473
Date: 		Wed Apr  2 16:25:04 MET DST 1997
Report:		Radu Mateescu and Mihaela Sighireanu (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, man/manl/caesar.l

Nature:		Previously, the ".net" file was generated either if the
		"-network" was given on the command-line, or if none of the
		following primitives was selected: "-bcg", "-aldebaran",
		"-open", "-exec". This behaviour was felt to be confusing,
		although it was justified by "historical" considerations.
		The new behaviour is simpler: the ".net" is generated iff
		the "-network" option is given on the command-line.
-------------------------------------------------------------------------------
BUG FIX
Number: 	474
Date:		Mon Apr  7 19:23:35 MET DST 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/*bcg*, bin.*/*BCG*

Nature: 	The "-Bstatic" option is no longer supplied by the BCG tools
		and libraries when they invoke the C compiler. This removes a
		compiler warning occurring when "gcc" is used instead of "cc":
			gcc: file path prefix `static' never used
-------------------------------------------------------------------------------
BUG FIX
Number:		475
Date: 		Thu Apr 17 12:45:07 MET DST 1997
Report:		Charles Pecheur (INRIA/VASY)
Authors:	Hubert Garavel and Mark Jorgensen (INRIA/VASY)
Files:		incl/caesar_hash.h

Nature:		Due to an error in a #define statement, the two hash-functions:
			CAESAR_STATE_1_HASH() and CAESAR_STATE_2_HASH()
		used by Terminator were in fact identical, which limited the
		scope of deadlock search. This bug was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		476
Date: 		Thu Apr 17 15:45:23 MET DST 1997
Authors:	Hubert Garavel and Mark Jorgensen (INRIA/VASY)
Files:		bin.*/libcaesar.a, incl/caesar_hash.h, man/manl/caesar_hash.l
		doc/Garavel-92-a.ps

Nature:		The CAESAR_0_HASH() function of the OPEN/CAESAR library was
		replaced by a faster hash function (the algorithms are totally
		different and the hash values returned are also different).
		The previous hash function is still available, but with
		different names: CAESAR_3_HASH() and CAESAR_STATE_3_HASH().
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		477
Date: 		Wed Apr 23 12:47:52 MET DST 1997
Report:		Ghassan Chehaibar (BULL/DYADE)
Authors:	Hubert Garavel and Mark Jorgensen (INRIA/VASY)
Files:		bin.*/caesar

Nature:		The C code generated by CAESAR has been carefully examined
		and improved in order to increase its execution speed.

		Ten optimizing transformations have been applied, leading
		to a considerable reduction of the time needed to fire the
		transitions (this time has been roughly divided by 9!).

		In addition to this, the size of the state hash table has been
		enlarged (from 8,329 entries to 131,071 entries). From now on,
		the user can control this value, which is controlled by a
		pre-processor directive of the form:
			#define CAESAR_STATE_HASH_SIZE ...
		Similarly, the user gets control over the size of the position
		hash table, using the following directive:
			#define CAESAR_POSITION_HASH_SIZE ...

		The combination of these changes leads to a much faster version
		of CAESAR. Depending on the examples, the new version of CAESAR
		can be from 2 times to 160 times faster, as shown in the table
		below (all these data have been obtained on an Ultra-Sparc-1
		143 MHz with 256 Mbytes of RAM):

   ---------------------------------------------------------------------------
   EXAMPLE                         CAESAR 5.1       CAESAR 5.2        speedup
   ---------------------------------------------------------------------------
   CO4 (Ch. Pecheur)            6 min.   2 min.          40 sec.         2.3
   demo_17/EXPERIMENT_14.lotos   3 min. 13 sec.   1 min. 03 sec.         3
   demo_08/rel_rel.lotos        58 min. 24 sec.   9 min. 43 sec.         6
   demo_11/rel_rel.lotos         1 hour 52 min.  12 min. 59 sec.         8.6
   demo_07/overtaking.lotos      3 min. 11 sec.          20 sec.         9.6
   demo_17/EXPERIMENT_12.lotos  40 min. 20 sec.   2 min. 45 sec.        15
   demo_14/pots.lotos           13 min. 37 sec.          54 sec.        15
   demo_17/EXPERIMENT_11.lotos  8 hours 17 min.  12 min. 40 sec.        39
   demo_16/brp_protocol.lotos    7 min. 55 sec.           6 sec.        79
   IEEE 1394 (M. Sighireanu)   83 hours 29 min.  55 min. 30 sec.        90
   demo_18/transit_node.lotos   46 hours 8 min.  17 min. 10 sec.       161
   ---------------------------------------------------------------------------

-------------------------------------------------------------------------------
IMPROVEMENT
Number:		478
Date: 		Wed Apr 23 15:49:42 MET DST 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libcaesar.a

Nature:		Some of the optimizations made for CAESAR (see #477 above)
		have been also applied to the OPEN/CAESAR library.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		479
Date: 		Fri Apr 25 11:56:49 MET DST 1997
Author:		Radu Mateescu (INRIA/VASY)
Files:		demos/demo_01, demos/demo_02

Nature:		These two demo examples have been enhanced with examples of
		correctness properties written in mu-calculus and verified
		using Evaluator.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		480
Date: 		Thu May  2 13:14:40 MET DST 1997
Report:		Michael Kishinevsky (University of Aizu)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/rfl

Nature:		The "rfl" command has been made more robust, in order to
		work even if the user-specific startup files (.cshrc, .profile,
		etc.) do not include "/usr/ucb/bin" in the $PATH variable.
		The new "rfl" command makes less assumptions about user-
		specific configuration.
-------------------------------------------------------------------------------
BUG FIX
Number:		481
Date: 		Tue May  6 10:50:33 MET DST 1997
Report:		Laurent Mounier (VERIMAG), Charles Pecheur (INRIA/VASY)
Author:		Mark Jorgensen (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		Two bug fixes in the EUCALYPTUS Graphical User-Interface:

		- Under some circumstances, the "OK" buttons of the ALDEBARAN
		comparison window, the Evaluator window, etc. could be enabled
		even if no automaton file or mu-calculus file had been selected
		previously. They are now always disabled until a proper
		selection takes place.

		- In some cases, the "Kill" button refused to work, by
		displaying messages of the form "It is too late to kill the
		process" or "There is no process to kill". These messages are
		no loger displayed: instead a window is opened, in which the
		user can select one or several processes to kill.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		482
Date: 		Fri May 23 12:11:54 MET DST 1997
Report:		Charles Pecheur (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/tst

Nature:		The "tst" command has been modified to produce warnings under
		Solaris 2.* when

		   - "/usr/ucb/cc" is used as the C compiler (in place of
		     "/opt/SUNWspro/bin/cc")

		   - "/usr/ucb/ld" is used as the link editor (in place of
		     "/opt/SUNWspro/bin/ld")

		because we noticed that the use of "/usr/ucb/cc" would make
		Xsimulator to core dump.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		483
Date:		Mon May 26 18:22:32 MET DST 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		doc

Nature:		Two new papers have been added to the CADP release
			- Garavel-Jorgensen-et-al-97.ps
			- Sighireanu-Mateescu-97.ps
-------------------------------------------------------------------------------
VERSION 97a 	"Twente"
-------------------------------------------------------------------------------
BUG FIX
Number:		484
Date: 		Fri Jun 27 15:10:08 MET DST 1997
Report:		Ghassan Chehaibar (BULL/DYADE)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		When analyzing external types, CAESAR.ADT displayed the
		following error message:

			caesar.adt: syntax analysis of ``rcc''
			caesar.adt: ...
			caesar.adt: external type survey of ``rcc''
			#005 bug :
     			     unavailable option in this software
			caesar.adt: ...

		This message was meaningless, and it is no longer displayed.
-------------------------------------------------------------------------------
BUG FIX
Number:		485
Date: 		Fri Jun 27 16:29:07 MET DST 1997
Report:		Mark Jorgensen (INRIA/VASY)
Authors:	Hubert Garavel and Mark Jorgensen (INRIA/VASY)
Files:		com/xeuca, src/eucalyptus/*

Nature:		Clicking on a ".aut" file and choosing "Execute/Standard
		simulation" did not work properly because an intermediate BCG
		file was erased too early. This bug is now fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		486
Date: 		Fri Jun 27 17:25:37 MET DST 1997
Report:		Mark Jorgensen (INRIA/VASY), Valerie Roy (INRIA/MEIJE), and
		Robert de Simone (INRIA/MEIJE)
Authors:	Hubert Garavel and Mark Jorgensen (INRIA/VASY)
Files:		bin.*/bcg_io, bin.*/libBCG_IO.a

Nature:		The FC2 files generated by BCG_IO had slight differences with
		respect to the FC2 format accepted by the Fc2Tools developed
		in the MEIJE project (especially with respect to "tau"-transi-
		tions). These differences have been removed.
-------------------------------------------------------------------------------
BUG FIX
Number:		487
Date: 		Wed Jul  2 14:33:06 MET DST 1997
Report:		Francois Germeau (Univ. of Liege)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/exp.open

Nature:		The "exp.open" shell-script did not have execute permission,
		which caused a problem when invoking this program.
-------------------------------------------------------------------------------
BUG FIX
Number:		488
Date: 		Mon Jul  7 20:26:39 MET DST 1997
Report:		Ghassan Chehaibar (BULL/DYADE)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG.a, bin.*/bcg_io, bin.*/bcg_draw, bin.*/aldebaran

Nature:		A bug in the BCG library was fixed, which caused the following
		symptoms in BCG_IO, BCG_DRAW and ALDEBARAN (only when the
		environment variable $CADP_CC was set to "gcc"):

		(1) $ bcg_io foo.bcg foo.aut
		    ==> bcg_io stopped after issuing the following message:
		    bcg_io: wrong number of parameters
		    bcg_dynamic: dynamic program error

		(2) $ bcg_draw foo.bcg
		    ==> ghostview was not launched and a core dump occurred

		(3) $ aldebaran -bmin foo.bcg
		    ==> a core dump occurred
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		489
Date: 		Tue Jul  8 11:39:17 MET DST 1997
Authors:	Hubert Garavel and Mark Jorgensen (INRIA/VASY)
Files:		demos/demo_04

Nature:		The demo_04 (systolic arrays computing convolution product)
		was improved for a better use of CAESAR.ADT functionalities,
		especially with the importation of external types and functions
		that are written in C. Also, the statistics have been updated.
-------------------------------------------------------------------------------
BUG FIX
Number:		490
Date: 		Tue Jul 22 12:15:36 MET DST 1997
Report:		Hubert Garavel (INRIA/VASY)
Authors:	Hubert Garavel and Mark Jorgensen (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		A bug was fixed in the Eucalyptus graphical interface: when
		the Aldebaran format or the Graph format were selected for
		LTS generation, this selection remained later when the OPEN/
		CAESAR tools were invoked, causing error messages of the form:
			#016 error :
     			option ``-open'' is incompatible with graph generation
     			quit

		Also, the "-monitor" option is now unselected automatically
		when the Aldebaran format or Graph format is selected for
		LTS generation.

		Finally, several CAESAR options have been moved from the
		"Generate LTS" panel to the "Options" menu. These options
		are: "Optimization V3", "Optimization V4", "Optimization E7",
		"Optimization Safety", "Optimization Gradual", and "Petri Net
		Printing".
-------------------------------------------------------------------------------
BUG FIX
Number:		491
Date: 		Fri Jul 25 20:14:36 MET DST 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_io

Nature:		One of the BCG_IO functionalities (translation of LTSs into
		pseudo-LOTOS code) did not work properly. This minor problem
		was solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		492
Date: 		Fri Jul 25 20:19:56 MET DST 1997	
Authors:	David Jacquemin and Hubert Garavel (INRIA/VASY)
Files:		bcg.*/bcg_io, man/manl/bcg_io.l

Nature:		The BCG_IO tool was extended so as to allow the translation of
		an LTS into the simple SEQUENCE format (see "man exhibitor"
		for a definition of this format). The translation is only
		possible if the LTS has no circuits and if all its states
		(with the possible exception of the initial state) have at
		most one outgoing edge.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		493
Date: 		Tue Jul 29 12:21:19 MET DST 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt, incl/X_*.h, demos/*/*.t

Nature:		In the ``.h'' files produced by the new version of CAESAR.ADT,
		there is, for each type T, a macro-definition of the form:
			#define CAESAR_ADT_SCALAR_T
		iff variables of type T can be assigned the null value "0".
  		
                This macro-definition is used by CAESAR to decide whether a
		variable X of type T can be reset by a simple assignment
		(i.e., X = 0) or by a call to the C function "memset()".

		Currently, this macro is defined by CAESAR.ADT for all the
		C types generated from LOTOS sorts: integers, enumerations,
		tuples (i.e., pointers to structs), and discriminated unions
		(i.e., pointers to unions of structs).

		On the opposite, this macro is not defined automatically for
		external types: the user should define it selectively for
		all external types T that allow the "0" value. Typical
		examples of types T for which this macro should not be
		defined are: structures, unions and arrays.

		Forgetting to define this macro when appropriate is totally
		harmless: the only drawback is that CAESAR will use the
		"memset()" instead of an assignment, which is slightly less
		efficient.

                Some of the hand-written ``.h'' and ``.t'' files contained in
		the ``incl'' and ``demos'' directories have been updated
                accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		494
Date: 		Tue Jul 29 15:31:33 MET DST 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/upc, com/rfl, com/tst, com/bcg_open, com/bcg_open,
		com/exp.open

Nature:		The shells scripts listed above have been updated to remove
		some Solaris specific features that would prevent them to
		work under Linux.
-------------------------------------------------------------------------------
BUG FIX
Number:		495
Date:		Tue Aug  5 16:56:03 MET DST 1997
Report:		Ghassan Chehaibar (BULL/DYADE)
Author:		Laurent Mounier (VERIMAG)
Files:		bin.*/exp2c, bin.*/libexpopen.a

Nature:		Several bugs were fixed, which could caused EXP.OPEN to
		improperly manage the labels of LTS composition expresion.
		Moreover, the number of distinct labels allowed has been
		extended to 4000.
-------------------------------------------------------------------------------
BUG FIX
Number:		496
Date: 		Wed Aug  6 18:56:44 MET DST 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_io, bin.*/libbcg_io.a, bin.*/libBCG_IO.a

Nature:		The BCG_IO tool was modified in order to allow a smoother
		translation between various formats:

		- When translating a BCG graph into the Aldebaran format,
		double quotes in labels are now replaced by single quotes;
		a warning is emitted in such case.

		- When translating a BCG graph into the Sequence format,
		double quotes in labels are now replaced by single quotes;
		a warning is emitted in such case.
 	
		- When translating a BCG graph into the Viscope format,
		a message is emitted when commas are replaced by semicolons.

		- When translating a BCG graph into the FC2 format, double
		quotes are added around the labels, except for those labels
		that already have double quotes inside (in such case, it is
		likely that the label comes from an FC2 graph, e.g., has
		the form "a"."b").
-------------------------------------------------------------------------------
BUG FIX
Number:		497
Date: 		Mon Aug 25 19:22:32 MET DST 1997
Authors:	Hubert Garavel and David Jacquemin (INRIA/VASY)
Files:		bin.*/bcg_io, bin.*/libbcg_io.a, bin.*/libBCG_IO.a

Nature:		A minor bug was fixed in the translation into the FC2 format:
		when given the "-verbose" option, the previous version of
		BCG_IO printed ``hook "main"'' instead of ``hook "main">0''.

		Also, in order to allow the FC2 files generated by BCG_IO to
		be used with the Fc2Link tool, the new version of BCG_IO adds
		a declaration of the form ``struct "filename"''.
-------------------------------------------------------------------------------
BUG FIX
Number:		498
Date: 		Tue Aug 26 20:31:30 MET DST 1997
Report:		Radu Mateescu (INRIA/VASY)
Author:		Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		man/manl/bcg.l, man/windex, man/whatis

Nature:		The BCG manual page has been modified in order to be correctly
		indexed in the "windex" file: this page can now be accessed by
		typing "man bcg" or "man BCG".
-------------------------------------------------------------------------------
BUG FIX
Number:		499
Date:		Wed Aug 27 16:00:22 MET DST 1997
Report:		Radu Mateescu (INRIA/VASY)
Author:		Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran

Nature:		Several minor bugs were fixed in ALDEBARAN regarding the
		parsing of the command line (in particular when some options
		were used with incorrect arguments).
-------------------------------------------------------------------------------
BUG FIX
Number:		500
Date:		Wed Aug 27 16:04:02 MET DST 1997
Report:		Mark Jorgensen (INRIA/VASY)
Author:		Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran

Nature:		Moreover, the "-live" option did not work properly when
		applied to ".exp" files. This problem is now solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		501
Date:		Wed Aug 27 17:09:27 MET DST 1997
Report:		Francois Germeau (Univ. de Liege, Belgium)
Author:		Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran, man/manl/aldebaran.l

Nature:		A new option, "-labels", was added to ALDEBARAN. This option
		defines the maximum number of distinct labels allowed in an
		LTS (or in a composition of LTSs). The ALDEBARAN man page was
		updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		502
Date: 		Wed Aug 27 11:12:02 MET DST 1997
Authors:	David Jacquemin and Hubert Garavel (INRIA/VASY)
Files:		bcg.*/bcg_io, man/manl/bcg_io.l

Nature:		The BCG_IO tool was extended so as to accept FC2 files as
		input. The manual page has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		503
Date: 		Thu Aug 28 18:04:18 MET DST 1997
Report:		Radu Mateescu (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*.gcc

Nature:		The two directories $CADP/bin.sun4.gcc and $CADP/bin.sun5.gcc
		containing libraries compiled with the GCC compiler have been
		removed, because they were not used actually. This makes the
		CADP release simpler and lighter (1.5 less Megabytes).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		504
Date: 		Thu Aug 28 21:46:17 MET DST 1997
Report:		Radu Mateescu (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		incl/X_NATURAL.h

Nature:		Three #include declarations have been added in X_NATURAL.h
		in order to declare properly the functions kill() and getpid().
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		505
Date: 		Wed Sep  3 10:49:59 MET DST 1997	
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/xtl, bin.*/xtl_expand, bin.*/libXTL.a, incl/xtl_*.h,
		src/xtl/*, man/manl/xtl.l, com/rfl, VERSION

Nature:		The CADP toolbox was enriched with a new tool named XTL
		(an acronym for "eXecutable Temporal Language").

		The XTL tool allows to evaluate temporal logic formulas
		on graphs encoded in the BCG format. This tool offers the
		following features:

		- XTL supports several temporal logics widely used. Currently,
		  the following temporal logics are supported: HML, CTL, ACTL,
		  LTAC, as well as the modal mu-calculus. All of them can be
		  directly used by end-users to verify properties on BCG
		  graphs.

		- Compared to other model-checkers, XTL is more expressive,
		  because it allows to handle the data values contained in
		  states and transition labels. These values can be used in
		  temporal formulas, assigned to variables, etc.

		- Moreover, XTL is extensible. A user can define his/her own
		  temporal logic, as a library of operators written in XTL.
		  This is the way in which the currently available formalisms
		  (HML, CTL, ACTL, LTAC and modal mu-calculus) are implemented.

		- Finally, XTL can also be used for other purpose than
		  evaluation of temporal formulas. Because it is a functional
		  programming language, it allows to perform any computation
		  on BCG graphs: for instance, it can compute the branching
		  factor of a graph, print its list of labels, etc.

		For more details, see the manual page (by typing "man xtl")
		and the predefined XTL libraries (in directory $CADP/src/xtl).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		506
Date: 		Wed Sep  3 20:14 MET DST 1997
Author:		Radu Mateescu (INRIA/VASY)
Files:		demos/demo_21, demos/demo_22

Nature:		Two new demo examples have been added to illustrate the use
		of the XTL tool for verifying properties of distributed
		algorithms in the LTAC temporal logic:

		- demo_21 presents Peterson's mutual exclusion algorithm

		- demo_22 presents Dekker's mutual exclusion algorithm

-------------------------------------------------------------------------------
IMPROVEMENT
Number:		507
Date: 		Wed Sep  3 20:44 MET DST 1997
Author:		Radu Mateescu (INRIA/VASY)
Files:		demos/demo_01, demos/demo_02, demos/demo_16	

Nature:		Three existing demos have been improved in order to illustrate
		the use of the XTL tool:

		- In demo_01 and demo_02, a new file "bitalt.xtl" expresses the
		  properties of the alternating bit protocol (written as a
		  combination of mu-calculus and LTAC temporal logic).

		- In demo_16, a new file "prop.xtl" expresses the properties
		  of the Philips Bounded Retransmission Protocol (written as
		  ACTL temporal logic formulas).

		  Also, the size of the BRP protocol has been enlarged to
		  take advantage of the speed increase in CAESAR: the number
		  of retransmissions was set to 3 and the message length was
		  set to 4.
-------------------------------------------------------------------------------
BUG FIX
Number:		508
Date: 		Fri Sep  5 16:16:37 MET DST 1997
Report:		Massimo Zendri (BULL/DYADE)
Author:		Mark Jorgensen (INRIA/VASY)
Files:		bin.*/xsimulator.a

Nature:		Xsimulator did not work properly if the $PATH variable of
		the user did not contain "." (the current directory). This
		problem is now solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		509
Date: 		Tue Sep  9 10:29:19 MET DST 1997
Authors:	Hubert GARAVEL (INRIA/VASY) and Laurent MOUNIER (VERIMAG)
Files:		bin.*/exhibitor.a, bin.*/evaluator.a, bin.*/projector.a

Nature:		The Exhibitor, Evaluator, and Projector libraries exported
		objects generated by Lex/Yacc (e.g., yyparse, yytext, etc.)
		which could create conflicts when linking with other code.
		From now on, unique names are used.
-------------------------------------------------------------------------------
BUG FIX
Number:		510
Date: 		Wed Sep 10 10:22:58 MET DST 1997
Report:		Ghassan Chehaibar (BULL/DYADE)
Author:		Hubert Garavel (INRIA/VASY) and Laurent Mounier (VERIMAG)
Files:		com/bcg_open, com/exp.open, man/manl/bcg_open.l

Nature:		The previous versions of "bcg_open" and "exp.open" tried to
		optimize CPU time by avoiding recompilations. However, the
		optimization scheme was not precise enough, so that some
		object files were reused incorrectly in some cases (especially
		when using advanced compositional verification techniques).

		The two tools have been modified so that they no longer try
		to avoid recompilations. We do not expect this change to cause
		any substantial decrease of performance, as "bcg_lib" already
		avoids recompilations (in a safe way), and as most OPEN/CAESAR
		tools are now shipped in archive format ("*.a" files). The
		"bcg_open" manual page was updated to reflect this change.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		511
Date: 		Wed Sep 10 11:02:10 MET DST 1997
Authors:	Patrick Wendel, Hubert Garavel and Mark Jorgensen (INRIA/VASY)
Files:		INSTALLATION, com/installator, src/installator, com/rfl,
		tcl-tk/bin.*/expectk, tcl-tk/COPYRIGHT_EXPECT

Nature:		A new installation procedure was designed for CADP. The main
		changes are the following:

		- A new program, named Installator, has been added to the
		  CADP toolbox. Installator is an computer-aided assistant
		  that will help CADP users to install and upgrade their
		  CADP software. Installator has been designed in the same
		  vein as "setup" programs in PC/Windows software and we
		  hope that CADP users will find it useful and convenient.

		- The RFL program was adapted: new options have been added,
		  which are used by Installator.

		- The "expectk" program version 5.24 (developed by Don Libes
		  at NIST, version 5.24) was added to the CADP release (in
		  binary form).

		- As regards the FTP distribution of CADP, the notion of
		  "full" distribution was suppressed, because it was not used
		  by Installator. From now on, only the "splitted" distribution
		  will be retained, allowing a more flexible support of
		  multiple architectures/operating systems.

		- The distribution of CADP by magnetic tapes was removed,
		  because everybody seems to prefer the distribution by FTP.

		- The INSTALLATION file was modified to describe the new
		  installation procedure.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		512
Date: 		Wed Sep 10 12:11:48 MET DST 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		There have been internal changes in CAESAR, in order to prepare
		future evolutions of this tool (especially, state space
		reduction). These changes are not visible to the users, but
		two of them are worth mentioning:

		- The format of the ".net" file was slightly modified (the
		  "unites quittees" clauses have been changed into "variables
		  annulees" clauses).

		- In the C code generated by CAESAR, the preprocessor variable
		  CAESAR_IGNORE_ESCAPE was renamed into CAESAR_NO_CLEARANCE.
-------------------------------------------------------------------------------
BUG FIX
Number:		513
Date: 		Wed Sep 10 14:27:51 MET DST 1997
Report:		Radu Mateescu (INRIA/VASY)
Author:		Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		bin.*/libBCG.a

Nature:		A minor bug was fixed in the BCG format: the exponentiation
		operator '**', previously declared as prefix at the source
		language level, is now declared as infix. This bug had no
		effect for any of the existing BCG tools and was revealed by
		the newly introduced XTL tool.

		When applying the XTL tool on BCG graphs generated with older
		versions of CADP (i.e., version 97a or older), this problem
		will not be noticeable, unless the XTL program invokes the
		exponentation '**' in infix notation. Should this problem
		happen, then generate your BCG file again, or upgrade it
		using the following sequence of commands:
			bcg_io FILE.bcg FILE.aut
			bcg_io -aldebaran -parse FILE.aut FILE.bcg
			rm FILE.aut
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		514
Date: 		Wed Sep 10 15:00:48 MET DST 1997
Authors:	Mihaela Sighireanu and Radu Mateescu (INRIA/VASY)
Files:		demos/demo_23

Nature:		A new demonstration example was added to the CADP release:
		the IEEE 1394 high performance serial bus ("Firewire").
-------------------------------------------------------------------------------
BUG FIX
Number:		515
Date: 		Wed Sep 10 15:19:24 MET DST 1997
Author:		Mark Jorgensen (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl, src/eucalyptus/xeucarc_standard
		com/xeuca_convert

Nature:		Several fixes and major improvements have been done in the
		EUCALYPTUS 2.3 Graphical User-Interface:

		(a) The conversion of .aut, .seq and .bcg files to the
		    PostScript and encapsulated PostScript formats didn't work.
		    This problem is now solved.

		(b) The reduction of .exp files with ALDEBARAN was stored in
		    a .exp file instead of a .aut file. This problem is now
		    solved.

		(c) A minor typo caused the interface to stop when calling
		    the TESTGEN tool two successive times on the same file.

		(d) The Fc2Tools developed by the Meije group at INRIA-Sophia
		    Antipolis have been integrated in the EUCALYPTUS toolset.
		    Like ALDEBARAN, it is now possible to apply these tools
		    to any automaton file, whatever its format (.bcg, .aut,
		    .fc2, .seq). All the underlying conversions are done
		    implicitly by EUCALYPTUS.

		(e) Reciprocally, it is now possible to use the ALDEBARAN,
		    BCG and OPEN/CAESAR tools on automata encoded in the
		    .fc2 format. All the underlying conversions are done
		    implicitly.

		(f) The file conversions between the various automata formats
		    have been optimised. EUCALYPTUS now maintains a database
		    to remember if a file has already been converted to a
		    format, in order to avoid multiple conversions.
		    Furthermore, the new conversions introduced in BCG_IO
		    (i.e., .fc2 to .bcg converter, and .bcg to .seq converter)
		    have been integrated in the interface.
		
		(g) The "Compare..." window for automata is now smaller than
		    the previous one, with only one filebox instead of three.

		(h) The "Evaluate mu-calculus formulas..." window is
		    now called "Verify temporal formulas...", and offers
	 	    the choice between the OPEN/CAESAR Evaluator tool
		    and/or the XTL tool (for automata only).

		(i) The "Find deadlocks..." menus have been merged into
		    a unique window proposing the choice between all the
		    tools that can be used for this operation (Exhibitor,
		    Terminator, ALDEBARAN, Fc2Tools).

		(j) The "Find livelocks..." window now proposes the choice
		    between ALDEBARAN and Fc2Tools.

		(k) The menu that appears when clicking on a .lotos file has
		    been simplified. Some of the choices are now proposed in
		    a sub-menu that appears when choosing "More" in the menu.

		(l) Two ALDEBARAN options, "-labels" and "-path", are now
		    supported by the EUCALYPTUS interface. In particular, it
		    is now possible to search for a path leading to a state
		    identified by its state number.

		(m) The "Web" button now gives access to the CADP Frequently
		    Asked Questions page, to the CADP Patches page, and to
		    the Fc2Tools page.

		(n) The "View" / "Change Presentation" windows was enhanced
		    so as to allow object files (.o) and BCG dynamic libraries
		    (*@1.o, *@2.o, etc.) to be hidden.

		(o) An "Evaluator" entry was created in the "Options" menu.
		    This entry allows to set the verbosity and hash table
		    size values for Evaluator

		(p) Within EUCALYPTUS, it is now possible to mail a file
		    to a specified e-mail address.

		(q) The manual pages for Des2Aut, Projector and the Fc2Tools
		    are now available on-line from the "Help" button of
		    EUCALYPTUS.

		(r) In "View" / "Change Presentation", the "Other files"
		    options has been fixed: previously it displayed all files
		    in the current directory; currently, it displays only
		    the files that do not belong to the aforementioned
		    file categories (Directories, Extended LOTOS Specs, etc.)

		(s) It is now possible to save user preferences into the
		    startup file "$HOME/.xeucarc". This is done by clicking
		    the File / Save Preferences menu.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		516
Date: 		Thu Sep 11 12:13:59 MET DST 1997
Report:		Patrick Wendel (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		INSTALLATION_1, INSTALLATION_2, INSTALLATION_3,
		INSTALLATION_4, src/installator

Nature:		The INSTALLATION file was too large and not convenient for
		use with INSTALLATOR. It was splitted in four separate files:

		- INSTALLATION_1 describes the assisted installation procedure
		- INSTALLATION_2 describes user customizations
		- INSTALLATION_3 describes the Request for License procedure
		- INSTALLATION_4 describes the manual installation procedure

		Installator was updated to take advantage of these conventions.

		For backward compatibility (especially with the manual pages),
		a symbolic link INSTALLATION pointing to INSTALLATION_2 was
		created.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		517
Date: 		Tue Sep 16 13:44:59 MET DST 1997
Report:		Charles Pecheur (INRIA/VASY)
Authors:	Hubert Garavel and Mark Jorgensen (INRIA/VASY)
Files:		com/bcg_info

Nature:		The "bcg_info" shell-script was modified so as to avoid the
		creation of a (sometimes huge) temporary file in /tmp. The
		modified version uses pipes instead.
-------------------------------------------------------------------------------
BUG FIX
Number:		518
Date: 		Tue Sep 16 14:22:18 MET DST 1997
Report:		Ghassan Chehaibar (BULL/DYADE)
Author:		Laurent Mounier (VERIMAG)
Files:		man/manl/des2aut.l

Nature:		The manual page for Des2Aut was updated: the new page specifies
		that gate names are case-sensitive, adds a missing rule:
			<behaviour> ::= '('<behaviour>')'
		and adds a missing comma in the non-terminal <gate-list>.
-------------------------------------------------------------------------------
BUG FIX
Number:		519
Date: 		Tue Sep 16 15:14:12 MET DST 1997
Report:		Ghassan Chehaibar (BULL/DYADE)
Author:		Laurent Mounier (VERIMAG)
Files:		com/exp.open

Nature:		In some cases, the "exp.open" shell-script did not work under
                Solaris 2.* (due to a non-standard behaviour of the "basename"
		command in Solaris 2.*). This problem has been fixed both for
		Solaris 1.* and Solaris 2.*.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		520
Date: 		Thu Sep 18 16:29:26 MET DST 1997
Authors:	David Jacquemin, Mark Jorgensen and Hubert Garavel (INRIA/VASY)
Files:		bin.*/exp2fc2, man/manl/exp2fc2.l,
		src/eucalyptus/eucalyptus.tcl, src/eucalyptus/com/xeuca_fc2info

Nature:		A new tool named "exp2fc2" was added to the CADP toolbox.
		This tool translates an ".exp" file into an FC2 file describing
		a set of communicating processes. This allows to apply the
		FC2 tools to an ".exp" file. A manual page was written for
		this new tool ("man exp2fc2"). The EUCALYPTUS graphical
		interface was modified accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		521
Date: 		Tue Sep 23 18:08:58 MET DST 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/open_caesar/generator.c, src/open_caesar/reductor.c

Nature:		The source code of Generator and Reductor was modified to
		avoid the use of the non-POSIX signal SIGSYS, which does not
		exist in Linux.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		522
Date: 		Wed Sep 24 17:24:30 MET DST 1997
Authors:	Khalid Laksiouar (INRIA/MEIJE), Mark Jorgensen and
		Hubert Garavel (INRIA/VASY)
Files:		com/fc2open, man/manl/fc2open.l, man/manl/*or.l
		src/eucalyptus/eucalyptus.tcl,

Nature:		A new tool, named FC2OPEN, was added to the CADP toolbox and
		to the FC2Tools toolbox developed in the MEIJE project of
		INRIA Sophia-Antipolis. This new tool allows to apply all
		OPEN/CAESAR tools to FC2 files, either the FC2 files that
		represent sequential automata, or the FC2 files that describe
		networks of parallel processes.

		For technical reasons, the FC2OPEN tool is splitted between
		the CADP and FC2Tools toolboxes, and requires both toolboxes
		to function. The other part of FC2OPEN is a binary program
		named "fc2open2c", which will be shipped with version 1.2
		and higher of FC2Tools. The environment variable $FC2DIR
		should be set and point to the directory where the FC2Tools
		are installed.

		A manual page was written for this new tool ("man fc2open").
		The manual pages of all OPEN/CAESAR tools (e.g., terminator,
		executor, etc.) were updated to mention the possibility of
		using FC2OPEN.

		The EUCALYPTUS graphical interface was modified accordingly.
		If the $FC2DIR variable is not set, EUCALYPTUS will not use
		the "fc2open" tool, and will try instead to convert the FC2
		file into a BCG file, which will only work if the FC2 file
		represents a sequential automaton.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		523
Date: 		Thu Oct  2 10:50:24 MET 1997
Authors:	Mark Jorgensen (INRIA/VASY), Hubert Garavel (INRIA/VASY),
		Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran, bin.*/exp2c, bin.*/exp2fc2,
		bin.*/libexpopen.a, man/manl/aldebaran.l

Nature:		The ".exp" format has been extended. Previously, the LTSs
		composing the network (i.e., the leaves of the composition
		expression) had to be ".aut" files. The new version also
		allows these LTSs to be encoded in other formats, e.g. BCG,
		FC2, SEQUENCE, etc. This is done by invoking the BCG_IO tool
		to perform the appropriate conversions. The definition of
		the ".exp" format (type "man aldebaran") was updated. All
		tools that accept ".exp" files as input (ALDEBARAN, EXP2C,
		EXP2FC2) have been subsequently modified.
-------------------------------------------------------------------------------
BUG FIX
Number:		524
Date: 		Mon Oct  6 16:37:34 MET DST 1997
Report:		Mark Jorgensen (INRIA/VASY)
Author:		Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran

Nature:		A bug was fixed, which caused "aldebaran -info" to core dump
		when applied to ".exp" files.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		525
Date: 		Mon Oct  6 18:08:02 MET DST 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		usr

Nature:		Following the results of the technical enquiry conducted in
		the CADP Newsletter #3 (September 1997), the "usr" directory
		was removed from the CADP distribution. Indeed:

		- The "pre" and "post" programs for interfacing the SEDOS
		toolkit with CADP are now useless, because the SEDOS simulator
		HIPPO is no longer maintained nor distributed.

		- The "deadlock" program for finding deadlocks in ".aut" files
		can now be replaced by a joint use of BCG_OPEN and EXHIBITOR,
		or the "-dead" option of ALDEBARAN.

		This makes the CADP release 850 kbytes leaner. The contents of
		the "usr" directory can still be obtained by sending a request
		to "caesar@imag.fr". However, the "pre", "post", and "deadlock"
		programs will no longer be maintained, nor ported to other
		architectures / operating systems.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		526
Date: 		Tue Oct  7 12:26:26 MET DST 1997
Author:		Charles Pecheur (INRIA/VASY)
Files:		doc/Pecheur-97.ps, doc/:READ_ME

Nature:		A new publication entitled "Specification and Verification of
		the CO4 Distributed Knowledge System Using LOTOS" was added
		to the CADP release.
-------------------------------------------------------------------------------
BUG FIX
Number:		527
Date: 		Thu Oct 23 17:51:39 MET DST 1997
Report:		Ghassan Chehaibar (BULL/DYADE)
Author:		Mark Jorgensen (INRIA/VASY)
Files:		tcl-tk/bin.*/duplex

Nature:		A bug was fixed, which caused the graphical user-interface
		EUCALYPTUS to block when the output of some commands was
		too long.
-------------------------------------------------------------------------------
BUG FIX
Number:		528
Date: 		Fri Oct 24 12:10:19 MET DST 1997
Report:		Charles Pecheur (INRIA/VASY)
Author:		Mark Jorgensen (INRIA/VASY)
Files:		src/installator/*

Nature:		Several bug fixes and improvements have been made in the
		Installator program:

		- Installator would block if $CADP_TMP was set to the current
		  directory ("."). This problem was fixed

		- For a first-time installation, Installator will propose
		  "./cadp" as the default directory for installing CADP

		- Installator now checks the type of Unix to invoke the "df"
		  command with appropriate options

		- When the untar/uncompress operation is done, a beep is
		  produced to wake up the user

		- When the RFL is done, a beep is also produced

-------------------------------------------------------------------------------
IMPROVEMENT
Number:		529
Date: 		Tue Oct 28 16:49:14 MET 1997
Authors:	Bruno Vivien, Hubert Garavel and Mark Jorgensen (INRIA/VASY)
Files:		bin.*/caesar.indent, man/manl/caesar.indent.l, src/eucalyptus/*

Nature:		A LOTOS pretty-printer named "caesar.indent" has been added
		to the CADP toolset. This pretty-printer was developed with
		the PARADIS tool of the SYNTAX compiler generator (SYNTAX is
		a registered trademark of INRIA).

		A manual page is available (type "man caesar.indent"). This
		pretty-printer is accessible from the EUCALYPTUS graphical
		interface by clicking on a ".lotos" file and selecting the
		"More" / "Indent" menu.
-------------------------------------------------------------------------------
BUG FIX
Number:		530
Date: 		Tue Oct 28 19:23:09 MET 1997
Report:		Charles Pecheur (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.sun*/xtl_expand

Nature:		A bug was fixed in the XTL expander, which caused, in certain
		cases, to erroneously detect and signal recursion between macro
		definitions.
-------------------------------------------------------------------------------
BUG FIX
Number:		531
Date: 		Tue Oct 28 19:23:09 MET 1997
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.sun*/xtl

Nature:		Several bugs were corrected in the XTL tool, concerning bad
		code generation for Sun4 machines. Also, a small typing error
		in the "xtl" manual page has been corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		532
Date: 		Tue Oct 28 19:23:09 MET 1997
Author:		Radu Mateescu (INRIA/VASY)
Files:		src/xtl/ltac.xtl

Nature:		The definition of "FAIR (A, B)" (which is the action-based
		version of the "FAIR" operator defined by Queille and Sifakis)
	 	was corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		533
Date: 		Tue Oct 28 20:52:21 MET 1997
Report:		Fabio Paterno (CNUCE-CNR, Pisa, Italy)
Authors:	Radu Mateescu and Hubert Garavel (INRIA/VASY)
Files:		bin.*/xtl

Nature:		The XTL compiler was modified to use always the $CADP/com/arch
		command (instead of the /bin/arch command that exists under
		Solaris). This solves a potential problem occurring when
		CADP users do not configure their $PATH variable properly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		534
Date: 		Fri Oct 31 17:48:34 MET 1997
Authors:	Charles Pecheur (INRIA/VASY)
Files:		demos/demo_24

Nature:		A new demonstration example was added to the CADP release:
		the CO4 protocol for distributed knowledge bases.
-------------------------------------------------------------------------------
BUG FIX
Number:		535
Date: 		Fri Nov  7 12:42:43 MET 1997
Report:		Fabio Paterno and Carmen Santoro (CNUCE-CNR, Pisa, Italy)
Authors:	Hubert Garavel and Mark Jorgensen (INRIA/VASY)
Files:		installator.shar

Nature:		The self-extracting program "installator.shar" was updated
		to detect if another Installator is already running, or if
		a previous execution of Installator crashed without cleaning
		up.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		536
Date: 		Mon Dec  1 18:40:48 MET 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, man/manl/caesar.l, src/eucalyptus/eucalyptus.tcl

Nature:		CAESAR was modified to avoid unecessary recompilations when
		given either the "-open" option (OPEN/CAESAR mode) or the
		"-exec" option (EXEC/CAESAR mode). Precisely, CAESAR will not
		regenerate "filename.c" if this file already exists in the
		current directory and if it has been modified more recently:

		- than the corresponding LOTOS file ("filename.lotos",
          	  "filename.lot", or "filename.l"),
		- than any LOTOS library transitively included (using the
		  "library" clause) in this LOTOS file,
		- and than any C file transitively included (using the
		  "#include" clause) in "filename.c" itself.

		The CAESAR manual page was updated accordingly. The EUCALYPTUS
		user interface was modified to give access to "-force" option.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		537
Date: 		Mon Dec  1 18:47:44 MET 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt, man/manl/caesar.adt.l,
		src/eucalyptus/eucalyptus.tcl

Nature:		CAESAR.ADT was modified to avoid unecessary recompilations.
		Precisely, CAESAR.ADT will not regenerate "filename.h" if
		this file already exists in the current directory and if it
		has been modified more recently:

		- than the corresponding LOTOS file ("filename.lotos",
          	  "filename.lot", or "filename.l"),
		- than any LOTOS library transitively included (using the
		  "library" clause) in this LOTOS file,
		- than any C file transitively included (using the
		  "#include" clause) in "filename.h" itself.
		- than the file named "filename.t" if this file exists in
		  the current directory,
		- and than the file named "filename.f" if this file exists
		  in the current directory.

		The CAESAR.ADT manual page was updated accordingly. The
		EUCALYPTUS user interface was modified to give access to
		"-force" option.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		538
Date: 		Tue Dec  2 13:07:32 MET 1997
Author:		Mark Jorgensen (INRIA/VASY)
Files:		com/xeuca, src/eucalyptus/*

Nature:		Following the results of the Technical Enquiry that was
		enclosed in the CADP Newsletter #3, the TESTGEN and TETRA
		tools are no longer integrated within the EUCALYPTUS graphical
		user interface.
-------------------------------------------------------------------------------
BUG FIX
Number:		539
Date: 		Tue Dec  2 16:29:43 MET 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/caesar.open	

Nature:		The "caesar.open" shell-script was entirely rewritten in order
		to take advantage of the recent improvements in CAESAR and
		CAESAR.ADT (see above items #536 and 537). The new solution
		has several benefits:

		- The previous version of "caesar.open" tried to optimize
		  CPU time by avoiding recompilations. However, the dependency
		  analysis was approximate, so that object files could be,
	 	  in some cases, reused incorrectly. From now on, the
		  dependency analysis is accurate. This bug fix is similar
		  to bug fix #510 for "bcg_open" and "exp.open".

		- "caesar.open" no longer relies upon the generation of a
		  Makefile. It is faster, more portable, and allows to handle
		  properly the cases where input filenames (".lotos", ".c",
		  ".a", or ".o") contain special characters (e.g., semicolons)
		  not allowed in Makefiles. In the previous version of
		  "caesar.open", for instance, filenames containing semicolons
		  generated the following error message:

		  make: Fatal error in reader: /tmp/caesar.open.makefile.29719,
		  line 24: Extra `:', `::', or `:=' on dependency line

		- The new version of "caesar.open" is much closer to the
		  other similar shell-scripts ("bcg_open", "exp.open", and
		  "fc2open"), which could enable (in the future) to merge
		  all these scripts into a single one.
-------------------------------------------------------------------------------
BUG FIX
Number:		540
Date: 		Tue Dec  2 17:27:05 MET 1997
Author:		Charles Pecheur (INRIA/VASY)
Files:		src/xtl/actl.xtl

Nature:		The definition in XTL of the "AU_A_B" operator of the ACTL
		temporal logic was incorrect. It has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		541
Date: 		Tue Dec 16 15:41:49 MET 1997
Report:		Marc Herbert (LIP-LHPC, Lyon, France)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.sun5/*

Nature:		Two problems have been fixed, which would create core dumps
		and/or SIGALRM signals if the duration specified in the LICENSE
		file was less than one month.
-------------------------------------------------------------------------------
BUG FIX
Number:		542
Date: 		Thu Dec 18 15:25:37 MET 1997
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		A bug was fixed, which would cause CAESAR 5.2 to core dump
		when the "-graph" option was used.
-------------------------------------------------------------------------------
BUG FIX
Number:		543
Date: 		Fri Jan 16 20:54:14 MET 1998
Report:		Mark Jorgensen (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		A bug was fixed, which caused CAESAR to generate illegal
		C code under Linux, leading to the following error message
		from the C compiler:
		   /tmp/caesar_xxx.c: In function `CAESAR_STANDARD_LOOP':
		   /tmp/caesar_xxx.c: parse error before character 0204
-------------------------------------------------------------------------------
BUG FIX
Number:		544
Date: 		Wed Jan 28 16:17:29 MET 1998
Report:		Ghassan Chehaibar (BULL/DYADE)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		A bug was fixed in the EUCALYPTUS user-interface: by default,
		CAESAR, CAESAR.ADT, and CAESAR.OPEN were always invoked with
		option "-warning" (thus preventing warnings from being
		displayed), even if warnings were selected in the Options menu.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		545
Date: 		Wed Feb  4 18:27:56 MET 1998
Author:		Hubert Garavel (INRIA/VASY)
Files:		doc/Garavel-98, doc/:READ_ME, doc/biblio.bib

Nature:		A new publication entitled "OPEN/CAESAR: An Open Software
		Architecture for Verification, Simulation, and Testing"
		was added to the CADP release. This report provides an
		introduction and overview of the OPEN/CAESAR environment.
-------------------------------------------------------------------------------
BUG FIX
Number:		546
Date: 		Fri Feb 13 15:48:14 MET 1998
Report:		Charles Pecheur (INRIA/VASY)
Author:		Laurent Mounier (VERIMAG)
Files:		bin.*/exp2c, bin.*/libexpopen.a

Nature:		A bug was fixed, which caused Exp.Open to behave incorrectly
		on ".exp" files containing several instances of the same
		".aut" file, e.g.:
			cell ||| cell ||| cell
-------------------------------------------------------------------------------
BUG FIX
Number:		547
Date: 		Fri Feb 13 15:52:51 MET 1998
Report:		Axel Belinfante (Univ. of Twente, The Netherlands),
		Zoltan Meggyesi (CERN, Geneva, Switzerland)
Author:		Hubert Garavel (INRIA/VASY)
Files:		installator.shar packages

Nature:		The "installator.shar" self-extracting archives were modified
		in order to avoid a problem for users which invoke the GNU
		"gettext" command instead of the Solaris "/bin/gettext" one:
	 	under these circumstances, the "-beta" option was not taken
		into account by Installator. This problem is now solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		548
Date:		Wed Feb 18 17:11:33 MET 1998
Author:		Marius Bozga (VERIMAG)
Files:		bin.*/evaluator.a

Nature:		Diagnostic sequences are now computed for both evaluation
		strategies (i.e., the "local" one and the "global" one).
		This feature did not exist in the previous version for the
		global evaluation strategy.
-------------------------------------------------------------------------------
BUG FIX
Number:		549
Date:		Wed Feb 18 17:20:23 MET 1998
Report:		Ghassan Chehaibar (BULL)
Author:		Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran

Nature:		A bug was fixed in the algorithm used in ALDEBARAN
		for deciding on-the-fly if two LTSs are branching bisimilar
		(the "-fly -pequ" options were concerned).
-------------------------------------------------------------------------------
BUG FIX
Number:		550
Date:		Wed Feb 18 17:26:14 MET 1998
Report:		Hubert Garavel (INRIA/VASY)
Author:		Laurent Mounier (VERIMAG)
Files:		bin.*/exp2c, bin.*/libexpopen.a

Nature:		The length of the filenames that can be used in a .exp
		file has been augmented up to 128 characters. The previous
		limitation was not always sufficient for handling the .exp
		files generated by DES2AUT (for instance in demo_20).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		551
Date: 		Mon Feb 23 10:29:14 MET 1998
Author:		Charles Pecheur (INRIA/VASY)
Files:		src/xtl/misc.xtl, src/xtl/walk.xtl, src/xtl/walk_actl.xtl,
		src/xtl/walk_print_nice.xtl

Nature:		New XTL libraries have been added, which provide detailed
		diagnostics (annotated execution sequences) justifying the
		result of the evaluation of CTL and ACTL temporal logic
		formulas.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		552
Date: 		Mon Feb 23 10:30:14 MET 1998
Author:		Charles Pecheur (INRIA/VASY)
Files:		demos/demo_25

Nature:		A new demo was added: it deals with the verification of
		a CFS (Cluster File System) using CAESAR, ALDEBARAN,
		EXP.OPEN and XTL.
-------------------------------------------------------------------------------
BUG FIX
Number:		553
Date:		Mon Feb 23 10:14:35 MET 1998
Report:		Mark Jorgensen (INRIA/VASY)
Author:		Laurent Mounier (VERIMAG)
Files:		bin.*/projector.a

Nature:		A minor bug, which prevented projector to generate BCG files,
		has been corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		554
Date:		Mon Feb 23 16:10:47 MET 1998
Report:		Ghassan Chehaibar (BULL)
Author:		Jean-Pierre Krimm (VERIMAG)
Files:		bin.*/des2aut

Nature:		The preliminary phase of des2aut (i.e., hidden gate
	        distribution over parallel compositions) was erroneous
		in some cases. This problem has been corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		555
Date:		Tue Feb 24 19:04:22 MET 1998
Report:		Hubert Garavel (INRIA/VASY)
Author:		Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran

Nature:		The diagnostic sequences generated by aldebaran from the
		two LTSs under comparison were improperly swapped in
		some cases when using the ``-fly'' options. This problem
		has been corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		556
Date: 		Mon Mar  2 19:37:53 MET 1998
Report:		Charles Pecheur (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		A bug was fixed in CAESAR, which could cause (in some cases)
		the generation of incorrect LTSs (especially, LTSs with too
		many transitions). This bug occured because CAESAR tried to
		optimize a given variable by turning it both into a constant
		and a register (local variable) at the same time.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		557
Date: 		Tue Mar  3 15:27:59 MET 1998
Author:		Hubert Garavel (INRIA/VASY)
Files:		demos/demo_15/:READ_ME, demos/demo_15/verify-all-requirements

Nature:		The demo_15 was improved in order:
		- to use BCG files directly (instead of generating .aut
		  files first and then translating them to .bcg files)
		- to avoid a meaningless error message
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		558
Date: 		Mon Mar  9 11:40:31 MET 1998
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/bcg_info, bin.sun*/lib_bcg_info.a, man/manl/bcg_info.l,
		src/eucalyptus/eucalyptus.tcl

Nature:		An official "bcg_info" tool was introduced in the CADP
		release. This new tool replaces the previous undocumented
		versions of "bcg_info". A manual page is provided, which
		is available through the Help button of the EUCALYPTUS
		graphical user-interface.
-------------------------------------------------------------------------------
BUG FIX
Number:		559
Date: 		Wed Mar 11 14:21:47 MET 1998
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCGI_IO.a, bin.*/bcg_io

Nature:		A bug was fixed, which caused "bcg_io" to core dump on
		Solaris 2, when given the "-squiggles" option.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		560
Date: 		Mon Mar 16 12:33:57 MET 1998	
Report:		Judi Romijn (CWI, The Netherlands)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG.a, man/manl/bcg_write.l, man/manl/bcg_read.l
		incl/bcg_transition.h, incl/bcg_edges.h, incl/bcg_user.h,

Nature:		An API (programming interface) to read BCG graphs was made
		available and documented (see "man bcg_read" for details).
		Also, the "bcg_write" man page was enhanced with an example.
-------------------------------------------------------------------------------
BUG FIX
Number:		561
Date: 		Tue Mar 17 11:28:46 MET 1998
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/caesar.aldebaran

Nature:		The "caesar.aldebaran" shell-script was modified in order to
		invoke "caesar" with option "-more /bin/cat". This avoids a
		deadlock in the EUCALYPTUS user interface.
-------------------------------------------------------------------------------
BUG FIX
Number:		562
Date: 		Tue Apr 14 10:50:27 MET DST 1998
Report:		Elie Najm (ENST, Paris)
Author:		Hubert Garavel (INRIA/VASY)
Files:		installator.shar

Nature:		The directory "/usr/openwin/lib" was added to $LD_LIBRARY_PATH
		in order to have proper dynamic libraries under Solaris 2.*
-------------------------------------------------------------------------------
BUG FIX
Number:		563
Date: 		Tue Apr 14 11:25:12 MET DST 1998
Report:		Laurence Pierre (Universite de Marseille and TIMA)
Author:		Hubert Garavel
Files:		com/installator, installator.shar

Nature:		A bug was fixed, which would (under some circumstances) cause
		an error message of the form: "error in Tcl script : can't
		read env(LOGNAME) no such element in array".
-------------------------------------------------------------------------------
BUG FIX
Number:		564
Date: 		Tue Apr 14 19:23:28 MET DST 1998
Report:		Bruno Hondelatte and Pierre Kessler (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt

Nature:		A minor bug was fixed, which could cause CAESAR.ADT and CAESAR
		to emit a "Broken Pipe" message under some circumstances
		(this message was annoying, but harmless).
-------------------------------------------------------------------------------
BUG FIX
Number:		565
Date: 		Tue Apr 14 19:55:25 MET DST 1998
Report:		Jacques Sincennes (University of Ottawa)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.sun4/caesar, bin.sun4/caesar.adt, bin.*/libcaesar.a

Nature:		A bug was fixed, which could cause CAESAR.ADT and CAESAR
		to emit the following error messages under SunOS 1.* machines:

               /usr/local/gnu/lib/gcc-lib/sparc/2.7.2/include/netinet/in.h:106:
                parse error before `u_char'
               /usr/local/gnu/lib/gcc-lib/sparc/2.7.2/include/netinet/in.h:107:
                parse error before `u_short'
-------------------------------------------------------------------------------
BUG FIX
Number:		566
Date: 		Wed Apr 15 22:29:37 MET DST 1998
Report:		Charles Pecheur (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		XTL

Nature:		Two minor bugs in XTL 1.1 have been fixed.	
-------------------------------------------------------------------------------
BUG FIX
Number:		567
Date: 		Wed Apr 15 23:40:03 MET DST 1998
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		BCG

Nature:		A bug was fixed in the low layers of the BCG library, which
		caused some BCG tools and XTL to core dump under Linux. This
		bug was not visible for Solaris users.
-------------------------------------------------------------------------------
BUG FIX
Number:		568
Date: 		Thu Apr 16 17:47:15 MET DST 1998
Author:		Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		BCG

Nature:		Subtle changes have been made in the BCG libraries and
		include files in order to ensure portability of the BCG files
		across various architectures. This means that BCG files should
		independent from the processor/architecture, so that they can
		be created and read identically under SunOS, Solaris, and
		Linux environments.

		These changes are upward compatible and should be almost
		invisible to the user.

		BCG files generated with any previous version of CADP on
		Solaris are still valid and can be reused without change.

		However, BCG files generated with beta-versions 97b-* of
		CADP on Linux are invalid: they should be destroyed and
		generated again with the latest version of CADP.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		569
Date: 		Fri Apr 17 12:46:34 MET DST 1998
Report:		Charles Pecheur (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		BCG,
		man/manl/bcg_write.l, man/manl/bcg_io.l, man/manl/xtl.l,
		demo_01/:READ_ME, demo_02/:READ_ME, demo_13/*.bcg,
		demo_16/:READ_ME, demo_21/Makefile, demo_22/Makefile,
		demo_23/Makefile, demo_25/Makefile,
		src/eucalyptus.tcl

Nature:		The "bcg_write" API (Application Programming Interface) has
		been improved. The interface itself (see "man bcg_write.l")
		remains unchanged, however, its effects are different.

		From now on, all the character strings passed to function
		BCG_IO_WRITE_BCG_EDGE() are parsed in order to infer the
		structure and contents of the labels, so that the generated
		BCG files should contain more precise type information.
		The rules for label parsing are described in a section
		(entitled "Technical Note on Label Parsing") of the
		"bcg_write.l" manual page.

		As a consequence, the contents of the BCG graphs produced
		using the "bcg_write" API will be slightly different from
		those generated with previous versions of CADP. In most
		cases, the difference should not be visible by the user
		(see the "bcg_write.l" manual page for a discussion about
		label normalization).

		Because this change is done in the BCG library, it applies
		to all the CADP tools that generate BCG files, including
		CAESAR, ALDEBARAN, BCG_IO, Generator, Reductor, etc.

		As regards BCG_IO: the previous version of BCG_IO would
		not perform label parsing unless when reading an ".aut"
		file with the "-parse" option selected. From now on, the
		behaviour is reversed: label parsing will be the default
		behaviour, except when reading an ".aut" file with the
		"-parse" option selected.

		The EUCALYPTUS graphical interface and the demos using
		XTL have been updated not to use the "-parse" option
		any longer.
	
		Label parsing is especially of interest when using the XTL
		model-checker, which allows to take advantage of the types
		and typed values defined in BCG files. This improvement
		will allow to use consistently the XTL model-checker on
		all the BCG files generated by CADP tools.

		Note: the BCG files generated with previous versions of CADP
		should be re-generated for a proper use of XTL, except if	
		they were produced from a ".aut" file using the previous
		version of BCG_IO with the "-parse" selected. An old BCG
		file, say FILE.bcg, can be upgraded to a new one using the
		following sequence of commands:

			bcg_io FILE.bcg FILE.aut
			rm FILE.bcg FILE@1.o
			bcg_io FILE.aut FILE.bcg
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		570
Date: 		Mon Apr 20 20:40:58 MET DST 1998
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		The EUCALYPTUS Graphical Interface was improved:
		- by providing the "Indent" command for ".lib" files
		- by setting the "-monitor" option active by default for
		  the Generator tool.
-------------------------------------------------------------------------------
BUG FIX
Number:		571
Date: 		Tue Apr 21 14:25:35 MET DST 1998
Report:		Massimo Zendri (BULL/DYADE)
Authors:	Charles Pecheur and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		For very large descriptions (e.g., about 20 processes in
		parallel), CAESAR could signal a deadlock in states from
		which transitions could actually be fired. This bug was
		caused by the overflow of an integer variable, declared
		as an "unsigned short", although its value could go beyond
		65,536. This bug was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		572
Date: 		Thu May  7 19:21:37 MET DST 1998
Authors:	Christophe Discours and Hubert Garavel (INRIA/VASY)
Files:		bin.*/libcaesar.a, bin.*/exhibitor.a,
		incl/caesar_regexp.h, incl/caesar_hide_1.h,
		incl/caesar_rename_1.h.

Nature:		The OPEN/CAESAR library was enriched with three new libraries:
		"caesar_regexp", "caesar_hide_1", and "caesar_rename_1".
		These libraries offer high-level support for handling regular
		expressions, hiding labels and renaming labels.

		The Exhibitor tool was modified to take advantage of these
		new librairies.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		573
Date: 		Fri May 15 10:11:48 MET DST 1998
Authors:	Hubert Garavel, Charles Pecheur, and Mihaela
		Sighireanu (INRIA/VASY)
Files:		doc/garavel-Sighireanu-98a.ps, doc/Pecheur-98.ps, doc/:READ_ME

Nature:		Two new papers, entitled "Advanced Modelling and Verification
		Techniques Applied to a Cluster File System" and "Towards a
		Second Generation of Formal Description Techniques -- Rationale
		for the Design of E-LOTOS", were added to the CADP release.
-------------------------------------------------------------------------------
BUG FIX
Number:		574
Date: 		Sat May 16 14:19:06 MET DST 1998
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_io

Nature:		A bug was fixed, which would cause (in a few cases) BCG_IO
		to stop with an error message of the form: "wrong number of
		parameters".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		575
Date: 		Sat May 16 16:37:20 MET DST 1998
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_io

Nature:		The translation algorithm used by the BCG_IO tool to read
		automata encoded in the FC2 automata and to translate them
		into other formats was extended, so as to accept FC2 files
		in which the initial state is not specified (i.e., when
		there is no "initial>" directive. Such FC2 files can be
		generated using the Autograph/Atg tool. The previous version
		of BCG_IO would "core dump" on such incomplete FC2 files.
		The new version of BCG_IO assumes that, if the initial state
		is not specified, then state 0 is the initial state.
-------------------------------------------------------------------------------
BUG FIX
Number:		576
Date: 		Thu May 28 13:03:26 MET DST 1998
Report:		Radu Mateescu (CWI/SEN2)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/eucalyptus.tcl

Nature:		A bug was fixed in the EUCALYPTUS Graphical User Interface,
		which caused XTL to be improperly invoked when the $CADP_CC
		environment variable was set to a complex string such as
		"gcc -I/usr/include".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		577
Date: 		Thu Jun  4 12:29:19 MET DST 1998
Report:		Axel Belinfante (Univ. of Twente), Elie Najm (ENST, Paris)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/rfl

Nature:		The old version of RFL would stop as soon as an invalid host
		was detected. The new version will try all hosts, and print
		the list of invalid hosts (if any) before stopping
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		578
Date: 		Thu Jun  4 17:39:45 MET DST 1998
Report:		Axel Belinfante (Univ. of Twente)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/installator/run_mail, installator.shar

Nature:		From now on, Installator will also send a copy of the LICENSE
		file to the person that is running Installator, so that
		Installator users are aware of the results of the RFL. This
		will also help to detect situations in which the "mail"
		command does not work properly.
-------------------------------------------------------------------------------
BUG FIX
Number:		579
Date: 		Fri Jun  5 10:28:00 MET DST 1998
Report:		Axel Belinfante (Univ. of Twente)
Authors:	Hubert Garavel and Pierre Kessler (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl, src/eucalyptus/com/xeuca_ps

Nature:		Various problems have been fixed in the "Kill Window" of
		EUCALYPTUS:

		- When resizing the Kill window, the subwindow listing the
		  processes did not resize as well. This is now the case,
		  so that the user can display more information about
		  processes to kill.

		- An error message of the form:
			"ps: no controlling terminal
		             while executing
			 "exec ps | tail +2"
    			     invoked from within ...
		  could be printed on Solaris 2.* when clicking on the Kill
		  button if "/bin" was before "/usr/ucb" in the $PATH variable.
		  This problem is now solved.

		- The Kill window did not display processes without a
		  controlling terminal. This problem is now solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		580
Date: 		Fri Jun 12 09:58:47 MET DST 1998
Authors:	(many)			
Files:		doc/Mateescu-Garavel-98.ps, doc/Kahlouche-Viho-Zendri-98.ps
		doc/Mateescu-98-b.ps

Nature:		Three new papers have been added, that present the XTL and
		TGV tools.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		581
Date: 		Fri Aug 14 17:48:32 MET DST 1998
Author:		Hubert Garavel (INRIA/VASY)
Files:		man/manl/caesar_hide_1.l, man/manl/caesar_rename_1.l,
		doc/Garavel-92-a.ps, man/manl/aldebaran.l,
		src/eucalyptus/eucalyptus.tcl,

Nature:		The manual pages for the new OPEN/CAESAR libraries
		"caesar_hide_1" and "caesar_rename_1" have been added.

		The OPEN/CAESAR Reference Manual was updated accordingly.

		The ALDEBARAN User Manual was updated to refer the new manual
		pages "caesar_hide_1" and "caesar_rename_1", which give an
		accurate description of the formats for hiding and renaming
		files.

		The Help window of the EUCALYPTUS graphical interface was
		similarly updated to refer the new manual pages "caesar_hide_1"
		and "caesar_rename_1".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		582
Date: 		Fri Aug 14 17:48:58 MET DST 1998
Author:		Hubert Garavel (INRIA/VASY)
Files:		man/manl/caesar_table_1.l, man/manl/caesar_version.l,
		doc/Garavel-92-a.ps

Nature:		The documentation of the following functions:
			CAESAR_SEARCH_TABLE_1()
			CAESAR_SEARCH_AND_PUT_TABLE_1()
			CAESAR_COMPARE_VERSION()
			CAESAR_MATCH_VERSION()
		was improved and made more precise. For these functions that
		return a boolean result of type CAESAR_TYPE_BOOLEAN, the text
		fragments "a result different from 0" and "a result equal to 0"
		have been replaced by "CAESAR_TRUE" and "CAESAR_FALSE",
		respectively.

		Note: this change is totally upward compatible. No modification
		of existing OPEN/CAESAR applications is needed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		583
Date: 		Fri Aug 14 19:45:58 MET DST 1998
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/bcg_info, bin.*/libbcg_info.a, man/manl/bcg_info.l

Nature:		A new option ('-size') was added to the BCG_INFO tool, that
		displays the size of a BCG graph (number of states and edges)
		under a single line.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		584
Date: 		Fri Aug 14 19:49:35 MET DST 1998
Authors:	Mihaela Sighireanu (INRIA/VASY) and Ken Turner (Univ. of
		Stirling, Scotland)
Files:		demos/demo_26

Nature:		A new demo (formal verification of a example of enterprise
		information systems) was added to the CADP distribution.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		585
Date: 		Mon Aug 17 11:58:47 MET DST 1998
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/caesar.aldebaran

Nature:		The "caesar.aldebaran" command was extended so as to handle
		".bcg" files as well as ".aut" files.
-------------------------------------------------------------------------------
BUG FIX
Number:		586
Date: 		Tue Aug 18 15:00:04 MET DST 1998
Author:		Hubert Garavel (INRIA/VASY)
Files:		demo_18/transit_node.exp

Nature:		The ".exp" file contained in demo_18 was syntactically
		incorrect, which resulted in an error message of the form:
			exp.open: Generating transit_node.c ...
			exp2c: syntax error !
			*** Error code 1
		This ".exp" file (which was indeed a ".des" file, suitable
		for DES2AUT but not EXP.OPEN) was replaced with a correct one.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		587
Date: 		Wed Aug 19 12:05:17 MET DST 1998
Author:		Hubert Garavel (INRIA/VASY)
Files:		demos/*

Nature:		All the demo exemples have been revisited and improved in
		several respects. The READ_ME files have been updated and
		the commands have been simplified to take advantage of the
		most recent features in CADP.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		588
Date: 		Wed Aug 19 12:18:50 MET DST 1998
Author:		Hubert Garavel (INRIA/VASY)
Files:		*/:READ_ME

Nature:		All the files previously named ':READ_ME' have been renamed
		either into 'READ_ME' or into '=READ_ME.txt', because the
		':' character cannot be part of file names under Windows.
		This would create problems for people attempting to download
		the demo examples from the VASY FTP server.
-------------------------------------------------------------------------------
BUG FIX
Number:		589
Date: 		Tue Aug 25 18:00:05 MET DST 1998
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG.a, bin.*/libBCG_IO.a

Nature:		A bug was fixed, which caused the BCG library to issue an
		error message of the form:
			bcg_write_1: wrong natural size in BCG_WRITE_UNSIGNED
		when attempting to generate a graph with only one label and
		with label parsing activated (which is now the case by default,
		see "man bcg_write" for details).
-------------------------------------------------------------------------------
BUG FIX
Number:		590
Date: 		Wed Aug 26 11:58:16 MET DST 1998
Report:		Christophe Discours (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_io

Nature:		A minor bug was fixed, which caused BCG_IO to issue an error
		message of the form:
			bcg_file_area: area is missing file in BCG_COPY_AREA
		when invoked with the same BCG file as input and output
		argument, e.g.:
			bcg_io FILE.bcg FILE.bcg
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		591
Date: 		Thu Aug 27 13:04:58 MET DST 1998	
Report:		Charles Pecheur (INRIA/VASY)
Authors:	Christophe Discours and Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_labels, man/manl/bcg_labels.l, demo_25

Nature:		A new tool named BCG_LABELS was introduced. This tool allows
		to perform an arbitrary combination of hiding and renaming
		operations on the labels of a BCG graph. See the "bcg_labels"
		manual page for more information.

		The demo_25 was simplified in order to take advantage of this
		new tool.

		The EUCALYPTUS graphical user-interface was updated to allow
		access to the BCG_LABELS tool: when clicking on an LTS file
		(in BCG or .aut format), two new commands "Hide Labels..."
		and "Rename Labels..." are now available.
-------------------------------------------------------------------------------
BUG FIX
Number:		592
Date: 		Mon Aug 31 15:38:15 MET DST 1998
Report:		Guy Tremblay (Universite du Quebec a Montreal, Quebec, Canada)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/rfl

Nature:		The RFL command was modified to make it independent from
		the value of the LC_TYPE environment variable.
-------------------------------------------------------------------------------
BUG FIX
Number:		593
Date: 		Wed Sep 30 13:56:25 MET DST 1998
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/xtl

Nature:		A minor bug was fixed, concerning the printing of messages
		by xtl when called with the -verbose option (when the tool
		was called from the xeuca interface, the results of temporal
		formula evaluation were printed before the informative messages
		issued by the xtl tool).
-------------------------------------------------------------------------------
BUG FIX
Number:		594
Date: 		Fri Nov 20 18:35:56 MET 1998
Report:		Ji He (University of Stirling, Dept. of Computing and Maths)
Author:		Radu Mateescu (INRIA/VASY)
Files:		man/manl/xtl.l

Nature:		A minor mistake in the XTL manual was corrected, namely the
		translations of the "forall" and "exists" constructs in terms
		of the "for" expression were permuted.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		595
Date: 		Wed Jan 20 16:12:54 MET 1999
Author:		Mihaela Sighireanu (INRIA/VASY)
Files:		doc/Sighireanu-Turner-98.ps, doc/Kahlouche-Viho-Zendri-99.ps

Nature:		Two new papers have been added in the doc directory.
-------------------------------------------------------------------------------
BUG FIX
Number:		596
Date: 		Mon Jan 25 18:28:13 MET 1999
Report:		Patricia Bournai (IRISA)
Author:		Hubert Garavel (INRIA/VASY)
File:		com/rfl

Nature:		The bug fix #592 (see above) was not sufficient. A different
		fix has been implemented.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		597
Date: 		Mon Jan 25 19:45:01 MET 1999
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libcaesar.a, man/manl/caesar_hide_1.l,
		doc/Garavel-92-a.ps, incl/caesar_hide_1.h, incl/caesar_regexp.h

Nature:		The "caesar_hide_1" library has been extended to allow
		hiding based on "gate matching". This new functionality
		emulates the hiding operator of LOTOS.

		To do so, the last parameter of function CAESAR_CREATE_HIDE_1()
		has been modified. Previously, it was a parameter named
		CAESAR_PARTIAL_MATCH of type CAESAR_TYPE_BOOLEAN. From now
		on, it is named CAESAR_KIND and is of type CAESAR_TYPE_NATURAL.

		The "gate matching" facility can be obtained by giving
		the value 2 to the last parameter CAESAR_KIND of function
		CAESAR_CREATE_HIDE_1 ().

		This change requires a slight modification of existing code:
		in any call to function CAESAR_CREATE_HIDE_1(), the value of
		the last parameter should be replaced: CAESAR_FALSE should be
		replaced with 0, CAESAR_TRUE should be replaced with 1.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		598
Date: 		Tue Jan 26 10:12:23 MET 1999
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libcaesar.a, man/manl/caesar_rename_1.l,
		doc/Garavel-92-a.ps

Nature:		The "caesar_rename_1" library has been extended to allow
		renaming based on "gate matching". This new functionality
		emulates the renaming operator that exist in modern formal
		description techniques such as E-LOTOS and LOTOS NT.

		The "gate matching" facility can be obtained by giving
		the value 3 to the last parameter CAESAR_KIND of function
		CAESAR_CREATE_RENAME_1 ().

		This change is totally upward compatible: existing code does
		not need to be modified.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		599
Date: 		Wed Jan 27 10:59:12 MET 1999
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_labels, man/manl/bcg_labels.l

Nature:		The BCG_LABELS command has been extended to incorporate the
		recently introduced "gate matching" facilities (see #597 and
		#598 above). It is now possible to write:
			bcg_labels -hide -gate FILE.hid ...
		and/or
			bcg_labels -rename -gate FILE.ren ...	
		The manual page has been updated.
-------------------------------------------------------------------------------
VERSION 97b	"Liege"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		600
Date: 		Thu Jan 28 14:59:20 MET 1999
Report:		Christophe Discours and Radu Mateescu (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/bcg_draw, man/manl/bcg_draw.l,
		com/bcg_edit, man/manl/bcg_edit.l

Nature:		Two new options ("-fg" and "-bg") have been added to BCG_DRAW
		and BCG_EDIT, in order to control the way windows are launched.
		This extension is fully backward compatible.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		601
Date: 		Wed Feb 10 14:35:49 MET 1999
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/bcg_open, com/caesar.open, com/exp.open, com/fc2open

Nature:		These four shell-scripts have been modified in order to
		introduce the $OPEN_CAESAR_COMMAND variable, which will be
		used by forthcoming OPEN/CAESAR tools.
-------------------------------------------------------------------------------
BUG FIX
Number:		602
Date: 		Fri Feb 26 09:47:20 MET 1999
Report:		Alain Le Guennec (IRISA/PAMPA)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		The C code generated by "caesar -open" was slightly changed,
		in order to declare the CAESAR_FORMAT parameter of function
		CAESAR_FORMAT_STATE(), whose declaration was missing. This
		change is upward compatible.
-------------------------------------------------------------------------------
BUG FIX
Number:		603
Date: 		Thu Mar 18 18:00:36 MET 1999
Report:		Axel Belinfante (Univ. of Twente), Hubert Canon (IRISA/PAMPA),
		Alain Le Guennec (IRISA/PAMPA), Radu Mateescu (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libcaesar.a, man/manl/caesar_table_1.l,
		doc/Garavel-92-a.ps

Nature:		A subtle bug was fixed in the "caesar_table_1" library of
		the OPEN/CAESAR environment, which could cause some programs
		to explore too many redundant states. A typical problem
		reported was that "generator" would generate too many states.

		This problem only occured when CAESAR_HASH_SIZE_STATE() was
		strictly less than CAESAR_SIZE_STATE() and when function
		CAESAR_CREATE_TABLE_1() was invoked by giving the value
		CAESAR_SIZE_STATE to its parameter CAESAR_BASE_SIZE and
		the (default) value NULL for its CAESAR_HASH parameter. In
		such case, the caesar_table_1 library would invoke the
		CAESAR_0_HASH() function provided by the caesar_hash library.
		This function would perform hashing on the entire base fields
		including non-hashable parts such as pointers (precisely,
		hashing was applied to CAESAR_SIZE_STATE() bytes instead of
		merely CAESAR_HASH_SIZE_STATE() bytes). This could have the
		consequence that identical states were considered to be
		different.
		
		This problem was fixed by slightly modifying the semantics
		of the CAESAR_CREATE_TABLE_1() function. The number and
		types of the arguments of this function are unchanged.
		The changes are such that the CAESAR_CREATE_TABLE_1()
		now behaves so as to avoid the aforementionned problems.

		Except very pathological cases, this change is upward
		compatible: existing OPEN/CAESAR programs do not have to
		be modified. However, using the new libcaesar.a library
		is likely to improve their performances by reducing the
		number of states (as identical states previously considered
		to be different are now recognized as equal).
-------------------------------------------------------------------------------
BUG FIX
Number:		604
Date: 		Thu Apr  8 12:15:12 MET DST 1999
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/xeuca, src/eucalyptus/*

Nature:		From the EUCALYPTUS user-interface, the manual pages of the
		Fc2Tools are now correctly displayed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		605
Date: 		Tue May 11 21:13:45 MET DST 1999
Authors:	Hubert Garavel and Aldo Mazzilli (INRIA/VASY)
Files:		com/xeuca, src/eucalyptus/xeuca_*,
		src/eucalyptus/eucalyptus.tcl src/eucalyptus/xeucarc_standard

Nature:		The EUCALYPTUS user-interface has been ported to Windows.
		During this process, several improvements have been brought:

		- The EUCALYPTUS windows can now be resized.

		- When saving preferences, the current size and position
		  of the EUCALYPTUS window is now registered in the
		  $HOME/.xeucarc file.

		- A "File / Reset Preferences" menu was added to restore
		  the default settings of EUCALYPTUS in the $HOME/.xeucarc
		  file.

		- When one tries to launch a window that is already open,
		  the window pops up in the foreground (previously, a
		  message "This window is already opened" was displayed
		  in the right window).

		- It is now possible to destroy an EUCALYPTUS sub-window
		  from the window manager (by sending the WM_DELETE event
		  under X-windows, or by clicking the "cross" button
		  on the top right corner, under Windows). Previously,
		  EUCALYPTUS did not catch events sent by the window
		  manager (destroying a window and trying to open it
		  again would lead to the message "This window is already
		  opened").

		- The "View / Change Presentation" windows has now two
		  columns instead of one.

		- The URLs of the "Web" button have been updated.

		- The "duplex" program is not longer used by EUCALYPTUS.

		- In the "Options" menu, some default options were not
		  set.
-------------------------------------------------------------------------------
BUG FIX
Number:		606
Date: 		Thu Jun 17 20:01:35 MET DST 1999
Authors:	Hubert Garavel and Marc Herbert (INRIA/VASY)
Files:		man/manl/caesar.indent.l, man/manl/declarator.l

Nature:		Some errors and inconsistencies have been removed from the
		manual pages of CAESAR.INDENT and DECLARATOR tools.
-------------------------------------------------------------------------------
BUG FIX
Number:		607
Date: 		Wed Jun 23 19:07:56 MET DST 1999
Author:		Radu Mateescu (INRIA/VASY)
File:		bin.*/xtl_expand

Nature:		A bug was fixed in the handling of character string constants
		that spread across several lines (i.e., contain sequences
		backslash-newline). In the presence of these strings, the
		whitespace between tokens was sometimes completely suppressed
		during macro-expansion, thus leading to erroneous output.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		608
Date: 		Thu Jun 24 09:46:40 MET DST 1999
Authors:	Radu Mateescu and Mihaela Sighireanu (INRIA/VASY)
Files:		bin.*/xtl_expand, bin.*/mcl_expand, bin.*/evaluator.a,
		man/manl/evaluator.l, src/xtl/*.mcl, src/eucalyptus/*,
		demos/demo{01,02,15,20,21,22}/*.mcl,

Nature:		A new version 3.0 of the EVALUATOR tool has been developed.
		This OPEN/CAESAR tool performs on-the-fly verification of
		regular alternation-free mu-calculus formulas on Labelled
		Transition Systems.

		The tool consists of two modules: a binary called mcl_expand
		and a new version of the library evaluator.a. Compared to the
		previous version, EVALUATOR 3.0 brings major improvements:

		- The input specification language of EVALUATOR 3.0 is more
		  powerful than the one of EVALUATOR 2.0.

		  Action formulas can now contain any combination of boolean
		  operators and basic predicates over transition labels (which
		  can be now given also as UNIX regular expressions over
		  character strings).

		  Regular transition sequences can be now succinctly described
		  using regular formulas built from action formulas and the
		  usual regular expression operators.

		  It is also possible now to define macro operators
		  parameterized by formulas and to group them into separate
		  libraries that may be included in the main specification.

		  The input language accepted by EVALUATOR 3.0 is defined in
		  the "evaluator" manual page. In general, EVALUATOR 3.0
		  still accepts *.mcl files containing formulas written for
		  EVALUATOR 2.0, but emits warnings to indicate obsolete
		  syntax. However, old-fashioned action formulas such as:
			"!SEND|RECV"
		  should now be written as:
			not ("SEND" or "RECV")

		- The model-checking algorithm of EVALUATOR 3.0 is more
		  efficient. It uses a new on-the-fly boolean resolution
		  algorithm, which has a much better average complexity than
		  the algorithm by Fernandez-Mounier used in EVALUATOR 2.0.
		  The new algorithm explores less states before deciding the
		  truth value of the formula. This leads sometimes to dramatic
		  reductions (several orders of magnitude) of the execution
		  time.

		- The diagnostics generated by EVALUATOR 3.0 are better.
		  Diagnostics are portions of the LTS explaining either the
		  satisfaction or the refutation of a formula: if the formula
		  is false, a diagnostic is a counterexample; if the formula
		  is true, a diagnostic is an example. In particular, the
		  diagnostics obtained for derived "pure" branching-time
		  logics like CTL and ACTL fully explain the semantics of
		  their operators. EVALUATOR 3.0 may also serve to search
		  regular execution sequences in the LTS, by asking for
		  diagnostics of regular formulas.

		The manual page ('man evaluator') has been entirely rewritten.

		The EUCALYPTUS graphical user-interface has been adapted to
		support EVALUATOR 3.0.

		All the demo files *.mcl containing mu-calculus formulas have
		been adapted for the new input language syntax used by
		EVALUATOR 3.0.

		The macro expander xtl_expand has been extended in order to
		handle properly the new syntax of .mcl files.

		In addition, two libraries containing temporal operators
		defined in regular alternation-free mu-calculus have been
		added to those already present in $CADP/src/xtl:
			- actl.mcl defines the ACTL temporal logic, and
			- actl_patterns.mcl defines a set of property patterns
			  in ACTL.
		These two libraries can be used for on-the-fly verification
		of ACTL formulas and are equipped with relevant diagnostic
		production features.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		609
Date: 		Thu Jun 24 16:52:14 MET DST 1999
Author:		Radu Mateescu (INRIA/VASY)
Files:		src/xtl/path.xtl, src/xtl/nondet.xtl

Nature:		Two new XTL library files have been added:
		  - path.xtl allows to compute and print on standard output
		    the shortest path from the initial state of the LTS to
		    (a state of) a given state set
		  - nondet.xtl uses the primitives of path.xtl to print the
		    shortest path leading to a nondeterministic state
		These new primitives are useful for obtaining simple
		diagnostic information about the LTSs coded in BCG format.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		610
Date: 		Mon Jun 28 16:04:55 MET DST 1999
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/xeuca, src/eucalyptus/*

Nature:		The VISCOPE tool, which is no longer maintained nor
		distributed by the PAMPA project, has been removed from the
		EUCALYPTUS graphical user interface.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		611
Date: 		Fri Jul  2 10:59:20 MET DST 1999
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_labels

Nature:		The options -tmp, -uncompress, -compress, -register, -short,
		-medium, and -size are now handled by the BCG_LABELS tool.
-------------------------------------------------------------------------------
BUG FIX
Number:		612
Date: 		Thu Jul 29 19:10:23 MET DST 1999
Authors:	Radu Mateescu (INRIA/VASY)
Files:		bin.*/xtl_expand

Nature:		A bug was fixed in the search of *.mcl and *.xtl files that
		are included in XTL and EVALUATOR source files using the
		library ... end_library construct.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		613
Date: 		Tue Jul 13 09:12:21 MET DST 1999
Report:		Volker Braun (Univ. of Dortmund)
Authors:	Marc Herbert and Hubert Garavel (INRIA/VASY)
Files:		man/manl/*, man/html, man/ps

Nature:		The CADP manual pages are now available, not only in the
		Unix manual format (i.e., nroff), but also as PostScript
		and HTML files.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		614
Date: 		Tue Jul 13 10:48:29 MET DST 1999
Report:		Axel Belinfante (Univ. of Twente), Joel Faedi (Univ. Henri
		Poincare, Nancy)
Author:		Hubert Garavel (INRIA/VASY)
Files:		gc/bin.*/libgc.a

Nature:		The previous version 4.10 of the Boehm-Demers garbage collector
		used in the CADP distribution did not work under Solaris 7.
		This caused CAESAR to abort during the simulation phase if the
		"-gc" option was selected:

		  STACK_GROWS_DOWN is defd, but stack appears to grow up
		  sp = 0xffbef56c, GC_stackbottom = 0x0
		  stack direction 3
		  Abort - core dumped

		The problem was solved by upgrading to version 4.14, which
		is the most recent version available.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		615
Date: 		Wed Jul 28 14:29:13 MET DST 1999
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		A minor bug was fixed in optimization E5, which caused
		CAESAR to core dump in some very special circumstances.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		616
Date: 		Thu Aug 12 15:15:01 MET DST 1999
Author:		Hubert Garavel (INRIA/VASY)
Files:		doc/Pecheur-99.ps

Nature:		A new paper was added in the 'doc' directory. This paper is
		a shorter version of a previous paper, Pecheur-98.ps
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		617
Date: 		Wed Aug 18 17:25:24 MET DST 1999
Authors:	Hubert Garavel and Aldo Mazzilli (INRIA/VASY)
Files:		tcl-tk/*, com/bcg_edit, com/xeuca, com/installator,
		bin.*/xsimulator.a, bin.*/libBCG_IO.a, xsimulator/text.tcl

Nature:		The version of TCL-TK used for CADP was upgraded from Tcl
		version 7.6 and Tk version 4.3 to Tcl/Tk version 8.0.4, and
		later to Tcl/Tk version 8.2. So doing, a number of changes
		have been brought to CADP:
		   - tcl-tk/bin.*/libtcl.a was replaced with libtcl8.2.so
		   - tcl-tk/bin.*/libtk.a was replaced with libtk8.2.so
		   - tcl-tk/bin.*/wish was upgraded
		   - tcl-tk/bin.*/expectk was removed (see below #631)
		   - a shell tcl-tk/com/wish was added
		   - a shell tcl-tk/com/tixwish was added
		   - a Windows version was added in tcl-tk/bin.win32

		As a consequence of using shared libraries and removing
		expectk, the size of the tcl-tk directory has significant
		decreased: TCL/TK 8.0.4 would use 11849 Mbytes, whereas
		TCL/TK 8.2 only uses 8476 Mbytes, including the added Windows
		binaries.

		As another consequence, the size of the binaries 'xsimulator'
		created when the XSIMULATOR tool is invoked has been reduced
		(from about 2 Megabytes to 90 Kbytes)

		All the CADP tools using TCL/TK (i.e., EUCALYPTUS, BCG_EDIT,
		MONITOR, INSTALLATOR, XSIMULATOR) have been updated to use
		the new shell-script.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		618
Date: 		Wed Aug 25 18:22:44 MET DST 1999
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/bcg_open, com/caesar.open, com/exp.open, com/fc2open

Nature:		All the OPEN/CAESAR shell-scripts have been updated to
		handle LD_LIBRARY_PATH information.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		619
Date: 		Wed Aug 25 19:02:12 MET DST 1999
Authors:	Hubert Garavel and Aldo Mazzilli (INRIA/VASY)
Files:		INSTALLATION_0, INSTALLATION_*

Nature:		A new file, INSTALLATION_0, was added to explain how to
		configure a Windows system before installing CADP.

		The other installation files have been updated to take
		into account the fact that Windows is now supported.
-------------------------------------------------------------------------------
BUG FIX
Number:		620
Date: 		Thu Sep 16 15:30:45 MET DST 1999
Author:		Radu Mateescu (INRIA/VASY)
Files:		incl/X_STRING.h

Nature:		A mistake was corrected in file incl/X_STRING.h: "<>" was
		replaced with "!="
-------------------------------------------------------------------------------
BUG FIX
Number:		621
Date: 		Fri Sep 17 18:47:57 MET DST 1999
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		A bug, which caused CAESAR.ADT to core dump in some rare
		circumstances when analyzing formal sorts, was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		622
Date: 		Fri Sep 24 16:16:40 MET DST 1999
Report:		Sebastien Gelgon (BULL/CP8)
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt

Nature:		The previous versions of CAESAR and CAESAR.ADT emitted
		cryptical messages, such as:
			file ``.t'' may be out of date (check its contents)
		or
			file ``.f'' may be out of date (check its contents)
		when reading the ".f", ".t" or ".h" files (which contain
		implementation in C of LOTOS sorts and operations) if version
		information was missing in these files.

		The rules regarding version information are the following:

		- Each ".t" file should start with a line of the form
			#define CAESAR_ADT_EXPERT_T x.y
		where x.y is equal to the number of the version of CAESAR.ADT
		for which the ".t" file was (hand-)written (e.g., x.y = 5.0).
		
		- Each ".f" file should start with a line of the form
			#define CAESAR_ADT_EXPERT_F x.y
		where x.y is equal to the number of the version of CAESAR.ADT
		for which the ".f" file was (hand-)written (e.g., x.y = 5.0).

		- Each hand-written ".h" file (i.e., ".h" files generated by
		CAESAR.ADT are not concerned by this rule) should start with
		a line of the form
			#define CAESAR_ADT_EXPERT x.y
		where x.y is equal to the number of the version of CAESAR.ADT
		available when the ".h" file was developed (e.g., x.y = 5.0).

		CAESAR and CAESAR.ADT insist on having these definitions
		by emitting warning messages if CAESAR_ADT_EXPERT_T,
		CAESAR_ADT_EXPERT_F, or CAESAR_ADT_EXPERT are not properly
		specified. The reason for this is to force users to stamp
		their hand-written data implementation files with version
		numbers, so that future versions of CAESAR and CAESAR.ADT
		will be able to ensure backward compatibility if the
		interfacing conventions are modified.

		If version information is missing from a file, then
		CAESAR and CAESAR.ADT assume that these files are old-
		fashioned files, compatible with CAESAR.ADT 4.1. A first
		warning is then emitted:
     			macro CAESAR_ADT_EXPERT_T not defined in file ``.t''
			(default value: 4.1)
		
		Then, a second warning is emitted, as there have been
		incompatible changes in interface conventions since
		CAESAR.ADT 4.1:
     			file ``.t'' seems obsolete according to the value of
			CAESAR_ADT_EXPERT_T
     			check and upgrade its contents as explained in the
			file $CADP/HISTORY.txt

		To avoid these warnings, one should simply define
			#define CAESAR_ADT_EXPERT_T 5.0
			#define CAESAR_ADT_EXPERT_F 5.0
			#define CAESAR_ADT_EXPERT 5.0
		at the beginning of ".t", ".f" and hand-written ".h" files,
		respectively.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		623
Date: 		Fri Sep 24 17:35:33 MET DST 1999
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		bin.*/caesar.adt, incl/X_STRING.h,
		demos/demo_04/EXP.t

Nature:		The C code generated by CAESAR.ADT for complex types
		(records and discriminated unions) was significantly
		improved.

		Previously, all these types were implemented as pointers
		to records or to discriminated unions (the so-called "boxed"
		representation).

		The new version of CAESAR.ADT attempts to implement all non-
		recursive types directly as records or discriminated unions
		(the so-called "unboxed" representation).

		In the case of mutually recursive types, CAESAR.ADT uses
		heuristics that attempt to implement as pointers a minimal
		number of types, in order to break all circular dependencies.

		However, the user has the possibility to break himself/herself
		the circular dependencies by specifying whether a type should
		be implemented by a pointer or not.

		To specify that a type T should not be implemented as a
		pointer, the user should add a directive of the form
			#define CAESAR_ADT_HASH_T 0
		in the ".t" file.

		To specify that a type T should be implemented as a pointer,
		the user should add a directive of the form
			#define CAESAR_ADT_HASH_T 1
		in the ".t" file.

		By default, if no such directive is given, CAESAR.ADT will
		do its best to implement T as a non pointer type.

		If there is a cyclical dependency between types that the user
		has forced to be implemented as non-pointer types, then
		CAESAR.ADT will stop with an error message.

		This improvement required important changes in the internal
		organization of CAESAR.ADT. From now on, the ".t" file will
		always be read (during the "type survey" phase) if it exists
		in the current directory, even if there is no LOTOS sort
		declared with a "(*! external *)" attribute or without
		associated constructor operation.

		This improvement leads to important memory savings for usual
		data structures such as records, packets, protocol data units,
		etc. For instance, in a SCSI-2 example studied at INRIA,
		the C code generated by the previous version of CAESAR.ADT
		required more the 955 Mbytes, whereas the C code generated
		by the new version only uses 7 Mbytes!

		As a consequence, for an external type T, the macro-definition
			#define CAESAR_ADT_POINTER_T
		specifying that T is a pointer type (see above #235) is no
		longer well-adapted. It should be replaced by the following
		macro-definition:
			#define CAESAR_ADT_UNCANONICAL_T
		stating that values of type T are not represented under
		normal form. This can occur if T is a pointer type, but
		also in other cases, for instance if T is a record containing
		pointer fields or a record with uninitialized padding bits
		between the fields, etc (and so on recursively).

		By default, if CAESAR_ADT_UNCANONICAL_T is not defined for
		an external type, it is assumed that values of type T are
		canonical (i.e., represented under normal form), thus
		enabling bit string comparison and hashing on these values.

		If the user forgets to define CAESAR_ADT_UNCANONICAL_T when
		appropriate, this can result in state explosion in exhaustive
		and on-the-fly verification, as identical values could yield
		different hash-code values, thus leading to consider identical
		states to be different. However, this risk was preferred to
		the burden of defining an opposite macro CAESAR_ADT_CANONICAL_T
		for each external canonical type T. Therefore, the user should
		be careful when defining non-canonical, external types.

		If T is not an external type, CAESAR.ADT will automatically
		define CAESAR_ADT_UNCANONICAL_T if appropriate, as a part
		of the implementation of T in C. CAESAR.ADT will emit a
		warning if the user attempts to define CAESAR_ADT_UNCANONICAL_T
		for a non external type.

		For backward compatibility, any existing macro-definition
			#define CAESAR_ADT_POINTER_T
		is understood as
			#define CAESAR_ADT_UNCANONICAL_T
		However, the latter is the recommended form.

		All the ".t" files enclosed in the CADP release that defined
		CAESAR_ADT_POINTER_T have been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		624
Date: 		Thu Sep 23 19:18:47 MET DST 1999
Report:		Alain Le Guennec (IRISA/PAMPA)
Authors:	Radu Mateescu and Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG.a

Nature:		A bug was fixed in the BCG_OT_READ_BCG_END() function,
		which stopped unexpectedly (with a message of the form
		"bcg_transition: complete_edge_table not implemented")
		if the access_mode parameter in the corresponding call of
		BCG_OT_READ_BCG_BEGIN() had the value 4, for instance when
		using the iterator BCG_OT_ITERATE_P_LN on a BCG file opened
		with access_mode equal to 4 (see "man bcg_read" for details).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		625
Date: 		Wed Sep 29 17:52:32 MET DST 1999
Report:		Alain Le Guennec (IRISA/PAMPA)
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		bin.*/libBCG.a

Nature:		When attempting to use an iterator not compatible with the
		access_mode parameter given to BCG_OT_READ_BCG_BEGIN() when
		BCG graph was opened, the BCG library emitted a cryptic message
		of the form
		   bcg_transition: illegal iteration for object
		The message has been improved, e.g.,
		   illegal iteration for a graph opened with access mode 0
		or:
		   illegal iteration for a graph opened with access mode
		   different from 4
		(see also item #634 below).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		626
Date: 		Thu Sep 30 15:41:44 MET DST 1999
Author:		Radu Mateescu and Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG.a, man/manl/bcg_read.l, man/manl/bcg_write.l
		src/open_caesar/generator.c, src/open_caesar/reductor.c

Nature:		The functions for reading and writing BCG files, i.e., the
		two functions BCG_OT_READ_BCG_BEGIN() from the "bcg_read"
		API and BCG_IO_WRITE_BCG_BEGIN() from the "bcg_write" API
		have been enhanced: if the name of the file to open for
		reading or writing is not suffixed by ".bcg", then the
		".bcg" suffix will be added automatically.

		This new feature simplifies the development of tools based
		upon the BCG technology. For instance, the "generator" and
		"reductor" tools have been simplified accordingly.

		This change is upward compatible, except in the special case
		where the "bcg_write" API was used to create BCG files without
		a ".bcg" extension. This special case should not occur, as the
		"bcg_write" manual page specified that a ".bcg" suffix had to
		be given when invoking BCG_IO_WRITE_BCG_BEGIN().
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		627
Date: 		Thu Sep 30 15:54:46 MET DST 1999
Report:		Bruno Hondelatte and Pierre Kessler (INRIA/VASY)
Author:		Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		bin.*/libBCG.a, bin.*/libBCG_IO.a, bin.*/libbcg_*.a,
		bin.*/bcg_io, incl/bcg_*.h,
		man/manl/bcg_read.l, man/manl/bcg_write.l

Nature:		The "bcg_read" and "bcg_write" interfaces for reading and
		writing BCG files (see "man bcg_read" and "man bcg_write"
		for details) have been improved in order to offer enhanced
		convenience and flexibility to the user.

		First, the error messages emitted when failing to open a BCG
		file (for either reading or writing) have been made more
		readable than the previous (cryptical) messages of the form
		"fopen error in BCG_OPEN" and "fopen error in BCG_OPEN_BINARY".

		Second, the function BCG_OT_READ_BCG_BEGIN() has been modified
		in such a way that, if the opening of a BCG file fails, the
		execution of the program will not be aborted. By default, the
		previous behaviour is retained: if the BCG file is unreadable
		an error message will be emitted and the program will stop.
		From now on, it is also possible, in this case, that function
		BCG_OT_READ_BCG_BEGIN() returns normally with its bcg_graph
		parameter set to NULL to report an opening failure. This new
		behaviour can be obtained by invoking the new function
			BCG_OT_READ_BCG_SURVIVE (BCG_TRUE);
		before invoking BCG_OT_READ_BCG_BEGIN().
		
		Third, the function BCG_IO_WRITE_BCG_BEGIN() has been modified
		in such a way that, if the opening of a BCG file fails, the
		execution of the program will not be aborted. By default, the
		previous behaviour is retained: if the BCG file is unwritable
		an error message will be emitted and the program will stop.
		From now on, it is also possible, in this case, that function
		BCG_IO_WRITE_BCG_BEGIN() returns normally a boolean result
		to report whether the BCG file could be open or not. This new
		behaviour can be obtained by invoking the new function
			BCG_IO_WRITE_BCG_SURVIVE (BCG_TRUE);
		before invoking BCG_IO_WRITE_BCG_BEGIN().

		This change is upward compatible in the sense that existing
		tools based upon the BCG technology do not have to be modified
		and will keep their current behaviour (with improved error
		messages). However, new tools can take advantage of the new
		features to recover from file opening errors.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		628
Date: 		Thu Sep 30 19:26:31 MET DST 1999
Author:		Aldo Mazzilli (INRIA/VASY)
Files:		incl/X_NATURAL.h

Nature:		The "X_NATURAL.h" file was modified to compile under Windows.
-------------------------------------------------------------------------------
BUG FIX
Number:		629
Date: 		Thu Sep 30 19:48:24 MET DST 1999
Report:		Judi Romijn (Univ. Nijmegen), Jie Dai (University of Idaho),
		Wayne Liu (Univ. of Waterloo)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.sun5/hostinfo

Nature:		The "hostinfo" binary provided in CADP 97b could core dump on
		some Solaris 7 systems (but not all). It was replaced with an
		upgraded version.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		630
Date: 		Fri Oct  1 11:55:30 MET DST 1999
Authors:	Aldo Mazzilli and Hubert Garavel (INRIA/VASY)
Files:		com/bcg_edit, src/bcg_edit

Nature:		The BCG_EDIT command has been ported to Windows. A few changes
		have been brought to enable the port:

		- The grid has now blue lines instead of grey dotted lines

		- With a two-button mouse, the middle button can be obtained
		  by pressing the Shift key together with the right button

		- Consequently, the bindings Shift + middle button and
		  Shift + right button are now longer devoted to region
		  selection, for which purpose Shift + left button remains
		  the only permitted binding.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		631
Date: 		Sat Oct  1 18:05:10 MET DST 1999
Report:		Axel Belinfante (Univ. Twente), Paulo Carreira (Oblog, Lisboa),
		Laurent Mounier (VERIMAG, Grenoble), Elie Najm (ENST, Paris)

Authors:	Aldo Mazzilli and Hubert Garavel (INRIA/VASY)
Files:		com/installator, src/installator, src/com. src/eucalyptus

Nature:		The Installator tool has been ported to Windows. So doing, it
		has been deeply modified to achieve architecture independance:

		- The new Installator no longer uses Expectk, which was not
		  available on Windows. It uses the plain Tcl/Tk "wish"
		  interpreter.

		- The new Installator uses the FTP client written in Tcl/Tk
		  by Steffen Traeger.

		- The script-shells used by installator have been renamed and
		  moved from $CADP/src/installator/com to $CADP/src/com.
		  These changes should be transparent to the end-user. They
		  were motivated by the need to factorize common shell-scripts
		  between Eucalyptus and Installator.

		  More precisely, the Eucalyptus shells xeuca_crlf, xeuca_edit,
		  xeuca_mail, xeuca_postscript, xeuca_print, xeuca_web have
		  been renamed into cadp_crlf, cadp_edit, cadp_mail, etc.
		  and moved to $CADP/src/com.

		  The shells run_mv, run_tst, and run_mail have been removed.
		  The shell install_logname was added. The shells cadp_version,
		  run_setup, run_rfl, run_df, and run_uncompress have been
		  renamed into install_version, install_setup, install_rfl,
		  etc., modified, and moved to $CADP/src/com.

		Many other improvements and new features have been introduced:

		- On machines without access to FTP, the new Installator emits
		  a proper error message ;  the previous version would block
		  with an error message `child process exited abnormally' when
		  Installator was checking what the latest version of CADP
		  available.

		- The new Installator emits an error message in advance if the
		  user tries to install CADP on a disk with unsufficient space.
		  The previous version would start the installation and then
		  stop with an "Error while decompressing" message.

		- If the "logname" command was displaying an empty string
		  (which should not occur in fact), the previos versions would
		  block with an error message "cannot execute child process".

		- There is an automatic focus in the password window.

		- There is an explicit message stating that multiples
		  architectures (sun4, sun5, iX86, etc.) can be selected.

		- The blue progression bars used during FTP transfer now
		  behave properly (with the previous version, the bars
		  sometimes exceeded 100%, so that they would start from
		  0% again, which was strange, but harmless).

		- On Unix machines, the new Installator checks whether the
		  sendmail daemon is running or not. If not, a warning is
		  emitted and Installator does not attempt to send the
		  prototype license file.

		- On Windows machines, the new Installator uses the Blat
		  mail sending client, a public domain software by Mark Neal,
		  Pedro Mendes, Gilles Vollant, and Tim Charron.

		- The new Installator allows to specify a return e-mail address
		  to which the CADP team will send the license file. This can
		  be useful for users installing CADP as "root" (under Unix)
		  or "administrator" (under Windows) who want the license to	
		  be sent back to their "real" e-mail address.
		
		- The e-mail address "caesar@imag.fr" was replaced with
		  "cadp@inrialpes.fr" (both are identical).

		- If e-mail cannot be sent properly, the new Installator emits
		  a error message and saves the prototype license file in the
		  user's home directory.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		632
Date: 		Wed Oct 20 15:39:57 MET DST 1999
Author:		Hubert Garavel (INRIA/VASY)
Files:		tcl-tk/*

Nature:		The version of TCL/TK shipped within CADP was upgraded to
		8.2.1, which is the most recent version until now, in order
		to fix some disorders noticed with Installator when using
		version 8.2.
-------------------------------------------------------------------------------
BUG FIX
Number:		633
Date: 		Wed Oct 27 09:34:30 MET DST 1999
Report:		Lynne Blair (Lancaster University), Alain Le Guennec (IRISA),
		Solofo Ramangalahy (IRISA)
Author:		Hubert Garavel
Files:		installator.shar

Nature:		On Linux RedHat 6.0, installator would issue error messages:

		  % /bin/sh installator.shar
		  : not a legal variable name
		  : not a legal variable name
		  'nstallator.shar: syntax error near unexpected token `in
	 	  'nstallator.shar: installator.shar: line 6:

		Although the reason of this problem is still unclear, the
		shell-script installator.shar was modified to avoid the
		use of lines commented out using ':'.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		634
Date: 		Wed Oct 27 09:56:17 MET DST 1999
Authors:	Radu Mateescu and Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG.a

Nature:		Two error messages have been added, allowing to handle
		properly the two error situations described below:

		- When an iterator on the successors (for instance,
		  BCG_OT_ITERATE_P_LN()) is used on a BCG object transition
		  previously opened using BCG_OT_READ_BCG_BEGIN() with
		  access_mode equal to 2, the following error message will be
		  issued:

		  "bcg_transition: illegal iteration for a graph opened
		   with access mode 2"

		- When an iterator on the predecessors (for instance,
		  BCG_OT_ITERATE_N_PL()) is used on a BCG object transition
		  previously opened using BCG_OT_READ_BCG_BEGIN() with
		  access_mode equal to 1, the following error message will be
		  issued:

		  "bcg_transition: illegal iteration for a graph opened
		   with access mode 1"

		These two error situations were not captured properly by the
		bcg_read interface and caused the applications to core dump.
-------------------------------------------------------------------------------
BUG FIX
Number:		635
Date: 		Wed Oct 27 11:03:22 MET DST 1999
Author:		Radu Mateescu and Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG.a, bin.*/libBCG_IO.a, bin.*/libbcg_draw.a,
		bin.*/libbcg_open.a, incl/bcg_iterator.h

Nature:		A bug was fixed in the implementation of the "bcg_read" API:
		for BCG files opened with access mode 4, the iterator on
		the predecessors of a given state were not computed properly
		(exactly as if the set of predecessors was empty).
-------------------------------------------------------------------------------
BUG FIX
Number:		636
Date: 		Wed Oct 27 14:38:31 MET DST 1999
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/xtl, src/xtl/nondet.xtl

Nature:		Two bugs were fixed in the variable linking phase of the
		XTL compiler. The XTL library "nondet.xtl" was also slightly
		modified (without introducing any semantic change)
		according to these bug fixes.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		637
Date:		Wed Oct 27 19:28:29 MET DST 1999
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/xtl, bin.*/libXTL.a, man/manl/xtl.l

Nature:		The XTL 1.1 tool has been improved, leading to a new version
		XTL 1.2, which allows the user to import external types and
		functions in an XTL specification (see the XTL manual page
		"man xtl" for details).

		This improvement allows to use in an XTL specification complex
		data types such as arrays, matrices, lists, trees, etc. and
		complex operations such as vector-matrix multiplication, tree
		traversals, etc. In particular, this enables the development of
		XTL libraries implementing temporal logics whose model-checking
		algorithms require complex numerical computations, as this is
		the case for probabilistic temporal logics.

		Besides declaring external types and functions in an XTL
		specification, the user must also provide an implementation
		in C of these types and functions that will be integrated to
		the C code generated by the XTL tool from the specification.

		The declaration of an external type is done as follows:

		  type MyType
		    ! implementedby "MYTYPE"
		    ! comparedby    "CMP_MYTYPE"
		    ! enumeratedby  "ITR_MYTYPE"
		    ! printedby     "PRT_MYTYPE"
		  end_type

		where the pragma '! implementedby' specifies the name of the
		corresponding C type; '! comparedby' specifies the equality
		operator for the type; '! enumeratedby' specifies an iterator
		for enumerating values of the type; and '! printedby' specifies
		a function for printing a value of the type in a file.

		The declaration of an external function is done as follows:

		  func MyFunc (MyType1, MyType2) : MyType
		    ! implementedby "MYFUNC"
		  end_func

		where the pragma '! implementedby' specifies the name of the
		corresponding C function.

		The implementation in C of external data types and functions
		provided by the user can be integrated in two different ways
		in an XTL specification.

		- The external types and functions may be implemented in
		  (one or more) C files file1.c, ..., filen.c that will
		  be directly included in the C code generated by XTL.
		  In this case, the following directive must be used in the
		  XTL specification:

		    include "file1.c", ..., "filen.c" end_include

		- The external types and functions may be implemented in
		  (one or more) separate libraries libLIB1.a, ..., libLIBn.a
		  together with (one or more) interfaces file1.h, ..., filem.h
		  that will be linked with the C code generated by XTL.
		  In this case, the following directives must be used in the
		  XTL specification:

		    include "file1.h", ..., "filem.h" end_include

		    flag "-Ldir -lLIB1 -lLIB2 ... -lLIBn" end_flag

		  The flag ... end_flag directive also allows to specify other
		  compiling and link-editing options (e.g., -Idir) for the C
		  compiler.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		638
Date: 		Fri Oct 29 14:43:26 MET 1999
Authors:	Moez Cherif (INRIA/VASY), Hubert Garavel (INRIA/VASY), Holger
		Hermanns (Univ. of Twente)
Files:		bin.*/bcg_min, man/manl/bcg_min.l

Nature:		A new tool named "bcg_min" was added to the CADP distribution.
		This tool performs minimization of Labelled Transition Systems
		modulo strong and branching bisimulation.

		Compared to Aldebaran 6.4, BCG_MIN offers the following
		advantages and new features:

		- BCG_MIN can handle larger graphs (e.g., several hundreds
		  thousands of states, several millions of transitions);

		- BCG_MIN uses BCG as its native format, thus leading to
		  speed improvement (because ".bcg" files are much smaller
		  than ".aut" files);

		- BCG_MIN uses the algorithm by Groote and Vaandrager for
		  computing branching bisimulation, which is usually more
		  efficient than the BDD-based method used in Aldebaran 6.4;
	
		- BCG_MIN (with option "-class") prints equivalence classes
		  in a user-friendly way, by relating the state numbers of
		  the minimized graph to the state numbers of the original
		  graph. In the case of branching equivalence, the tau-cycles
		  are properly displayed.

		- Last but not least, BCG_MIN supports not only standard
		  Labelled Transitions, but also "probabilistic" LTSs
		  and "stochastic" LTSs (i.e,, Discrete Time and Continuous
		  Time Markov Decision Processes).

		See the manual page ("man bcg_min" for details).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		639
Date: 		Thu Nov 11 16:19:30 MET 1999
Author:		Hubert Garavel (INRIA/VASY)
Files:		doc/Garavel-Sighireanu-99.ps, doc/=README.txt

Nature:		A new publication was added to the "doc" directory.
-------------------------------------------------------------------------------
BUG FIX
Number:		640
Date: 		Wed Dec  8 11:03:37 MET 1999
Report:		Fabrice Baray (ISIMA/LIMOS, France),
		Paulo Jorge Fernandez (Oblog, Portugal)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/xtl

Nature:		Two bugs were fixed in the XTL compiler. The first one (the
		unexpected detection of a multiple variable declaration during
		the variable linking phase) occurred when several quantifiers
		"exists" and/or "forall" with "among" clauses were nested.

		The second one (compile-time errors in the C code generated by
		XTL) occurred because XTL had not been updated after the
		changes brought to the BCG iterators (see #634 and #635 above).
-------------------------------------------------------------------------------
BUG FIX
Number:		641
Date: 		Thu Jan  6 17:58:10 MET 2000
Report:		Brian Ross (University of Glasgow, Scotland)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/rfl

Nature:		A "Year 2000" bug has been fixed, which caused the RFL script
		to generate licenses for period 1900-1901.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		642
Date: 		Wed Jan 19 11:24:55 MET 2000
Author:		Hubert Garavel (INRIA/VASY)
Files:		demos/demo_19/start, demos/demo_19/graphics/startsimu

Nature:		The demo_19 has been updated to work with the latest version
		of TCL/TK shipped within CADP.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		643
Date: 		Wed Jan 19 11:43:15 MET 2000
Author:		Hubert Garavel and Moez Cherif (INRIA/VASY)
Files:		src/installator/installator.tcl, src/eucalyptus/eucalyptus.tcl,
		src/bcg_edit/bcg_edit.tcl, src/monitor/main.tcl,
		src/xsimulator/main.tcl, demos/demo_19/graphics/startsimu

Nature:		All the TCL/TK scripts of CADP have been updated in order to
		reflect some changes of the latest version of TCL/TK. In
		particular, the bgerror procedure must now be defined in
		each TCL/TK application; otherwise, one can see messages
		of the form:
			bgerror failed to handle background error.
			...
			Error in bgerror: invalid command name "bgerror"
-------------------------------------------------------------------------------
BUG FIX
Number:		644
Date: 		Fri Jan 21 10:45:31 MET 2000
Report:		Alain le Guennec (IRISA)
Author:		Hubert Garavel (INRIA/VASY)
Files:		doc/Garavel-92-a.ps, man/*/caesar_graph.*

Nature:		The manual page for the "caesar_graph.h" API has been improved
		in two ways:

		- In the "CAESAR-specific note" attached to functions
		  CAESAR_DUMP_LABEL() and CAESAR_STRING_LABEL(), the
		  function name CAESAR_DUMP_LABEL() was incorrect; it has
		  been replaced with CAESAR_PRINT_LABEL().

		- The definition of functions CAESAR_HASH_STATE() and
		  CAESAR_HASH_LABEL() has been reinforced to stress the fact
		  that the results of these functions *must be* in the range
		  0..CAESAR_MODULUS-1.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		645
Date: 		Fri Jan 21 11:03:47 MET 2000
Report:		Alain le Guennec (IRISA)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/declarator.c

Nature:		The Declarator program was strengthened by adding tests that
		check whether the results of functions CAESAR_HASH_STATE() and
		CAESAR_HASH_LABEL() is in the range 0..CAESAR_MODULUS-1.
-------------------------------------------------------------------------------
BUG FIX
Number:		646
Date: 		Fri Jan 21 11:41:53 MET 2000
Report:		Alain le Guennec (IRISA)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/monitor/main.tcl

Nature:		The BCG monitor did not work properly if the graph would
		have labels containing a dot ('.') character.  This problem
		was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		647
Date: 		Fri Jan 21 18:07:02 MET 2000
Authors:	Moez Cherif and Hubert Garavel (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		In the EUCALYPTUS user-interface, several problems created
		by the new version of TCL/TK have been fixed:
		- Using the Cancel buttons would result in error messages
		- Using the "Browse" button would erase the current file entry
		- Using the Cancel button in a "Browse" window would not
		  restore the initial values.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		648
Date: 		Mon Jan 24 18:52:26 MET 2000
Authors:	Thierry Jeron, Pierre Morel, Severine Simon (IRISA) with the
		help of Hubert Garavel, Moez Cherif, Marc Herbert (INRIA/VASY)
Files:		bin.*/tgv.a, man/*/tgv.*, demos/demo_01, demos/demo_09,
		src/eucalyptus/eucalyptus.tcl

Nature:		The latest version of the test generation tool TGV developed
		by Thierry Jeron, Pierre Morel, Severine Simon (IRISA) has been
		integrated to the CADP toolbox. TGV is a tool for automatic
		generation of test cases for conformance testing developed by
		the Verimag laboratory and the PAMPA project of INRIA/IRISA.
		The VASY team provided help for integrating TGV within CADP
		and porting it to several architectures.

		The most recent version of TGV is fully compatible with the
		CADP tools. It is built on the Open/Caesar open architecture,
		and thus can be applied to various languages (LOTOS, UML...).
		Test purposes can be submitted to TGV either in ".aut" or
		".bcg" format. The test cases produced by TGV can be either
		in ".aut" or ".bcg" files. TGV now takes advantage of the
		Caesar_Hide_1 and Caesar_Rename_1 libraries of Open/Caesar.

		A manual page is available (see "man tgv"). The existing
		examples demo_01 and demo_09 have been enhanced to show
		use cases of the TGV tool.

		The EUCALYPTUS graphical interface has been enhanced to
		allow an easy access to the TGV tool (click on the
		"Generate tests..." option on a .lotos, .bcg, .aut or .exp
		graph).
-------------------------------------------------------------------------------
BUG FIX
Number:		649
Date: 		Tue Feb  1 19:05:29 MET 2000
Report:		Solofo Ramagalahy (IRISA/PAMPA)
Authors:	Moez Cherif and Hubert Garavel (INRIA/VASY)
Files:		src/bcg_edit/bcg_edit.tcl

Nature:		A bug that occured when trying to move the initial state of
		a graph with 1 state and 0 transition has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		650
Date: 		Tue Feb  1 19:21:15 MET 2000
Report:		Alain Le Guennec (IRISA/PAMPA)
Authors:	Moez Cherif and Hubert Garavel (INRIA/VASY)
Files:		src/monitor/main.tcl

Nature:		The label window of the BCG monitor has been made resizable
		both horizontally and vertically. An horizontal scrollbar has
		also been added.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		651
Date: 		Tue Feb  1 19:26:30 MET 2000
Author:		Radu Mateescu (INRIA/VASY)
Files:		doc/Mateescu-00-a.ps, doc/=README.txt

Nature:		A new publication regarding EVALUATOR 3.0 was added to the
		"doc" directory.
-------------------------------------------------------------------------------
BUG FIX
Number:		652
Date: 		Mon Feb 21 16:27:03 MET 2000
Report:		Paulo Carreira (Oblog, Lisboa)
Authors:	Marc Herbert and Hubert Garavel (INRIA/VASY)
Files:		bin.iX86/indent, bin.win32/indent, src/com/cadp_indent,
		bin.*/caesar.adt

Nature:		The "indent" program provided in $CADP/bin.iX86 did not work
		properly (some large C files were truncated). Because recent
		versions of Linux (such as RedHat 6.1) provide "indent" (see
		the "indent" package), this program is not longer included in
		CADP.

		Given that the different versions of "indent" on various
		platforms have different options, a shell-script named
		"cadp_indent" has been developed to provide a portable
		command across various platforms. CAESAR.ADT no longer invokes
		"indent" directly, but invokes "cadp_indent" instead.

		A version of "indent" compiled for Windows has been added in
		"bin.win32".
-------------------------------------------------------------------------------
BUG FIX
Number:		653
Date: 		Tue Feb 22 15:17:39 MET 2000
Author:		Hubert Garavel (INRIA/VASY)
Files:		gc/bin.*/libgc.a, bin.*/caesar.adt, bin.*/caesar	

Nature:		Item #614 above reports that the garbage collector library
		was upgraded from version 4.10 to 4.14 in order to cope with
		the Solaris 7 operating system.

		Unfortunately, all the beta-versions of CADP 99 issued between
		July 1999 and the beginning of March 2000 have a problem with
		garbage collection.

		Due to a mistake in setting compiler options, the garbage
		collector was not interfaced properly with the other tools:
		even if the "-gc" option was given to CAESAR and "caesar.open",
		garbage collection would not occur. This error was silent: the
		tools functioned normally, except that garbage collector was
		never activated, potentially leading to excessive memory
		consumption.

		This problem was discovered when porting the garbage collection
		library to Windows. Correct versions of the library have been
		put in the CADP distribution. For various reasons, it was also
		necessary to change the interface conventions used by CAESAR
		and CAESAR.ADT to activate garbage collection. This required
		to modify the C code generated by CAESAR.ADT.
		
		If you are using a version of CADP between beta-version 99-a
		to 99-f included, it is strongly advised to upgrade to beta-
		version 99-g or upper.

		If you have ``.h'' files generated by a previous version
		of CADP, it is recommended to remove them and generate them
		again. You can recognize ``.h''  files generated by the new
		version CAESAR.ADT as they check a macro-definition named
		CAESAR_ADT_GARBAGE_COLLECTION and invoke function GC_malloc().
		Obsolete ``.h'' files do not contain these two identifiers.

		The Windows version of the garbage collection library has
		also been added to CADP.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		654
Date: 		Fri Feb 25 12:02:39 MET 2000
Authors:	Hubert Garavel (INRIA/VASY), Laurent Mounier (VERIMAG),
		Severine Simon (INRIA/PAMPA)
Files:		bin.iX86/*, gc/bin.iX86/*, tcl-tk/bin.iX86/*, games/bin.iX86/*

Nature:		The Linux binaries and libraries contained in the CADP package
		have been ported from libc5 to libc6, in order to follow the
		evolutions of the GNU C library. This should allow CADP to run
		on recent versions of Linux without compatibility packages.
		For more information about libc5 and libc6, you can consult
			http://www.inrialpes.fr/vasy/cadp/patches97b.html
-------------------------------------------------------------------------------
BUG FIX
Number:		655
Date: 		Mon Mar  6 11:37:59 MET 2000
Author:		Marc Herbert and Hubert Garavel (INRIA/VASY)
Files:		bin.sun5/caesar, bin.sun5/caesar.adt, bin.sun5/caesar.indent,
		bin.sun5/mcl_expand, bin.sun5/xtl

Nature:		A minor bug was fixed in the libraries of the SYNTAX compiler
		generator which affected the sun5 (Solaris 2.*) platform only.
		Due to this bug, the error messages produced by CAESAR,
		CAESAR.ADT, CAESAR.INDENT, MCL_EXPAND, and XTL in case of
		syntax error were less detailed than for other platforms
		(the erroneous lines in the source code were not always
		displayed).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		656
Date: 		Thu Mar  9 10:56:00 MET 2000
Report:		Solofo Ramangalahy (INRIA/PAMPA)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/open_caesar/executor.c

Nature:		When the Executor program is started with option (2), the
		seed of the pseudo-random number generator is initialized with
		the system clock, i.e., the number of seconds elapsed since
		January, 1st, 1970. This could create problems when two
		successive executions of Executor where started very closely
		in time (i.e., were distant from less than one second, a
		situation likely to happen as machines are getting faster).
		In this case, the two executions would share the same seed.
		To avoid this problem, a "sleep(1)" statement has been inserted
		in Executor, so that two successive executions are separated
		by at least one second and, thus, have different seeds.
-------------------------------------------------------------------------------
BUG FIX
Number:		657
Date: 		Wed Mar 22 09:08:23 MET 2000
Report:		Severine Simon (INRIA/PAMPA), MIhaela Sighireanu (LIAFA, Paris)
Authors:	Moez Cherif and Hubert Garavel (INRIA/VASY)
Files:		com/bcg_edit, src/bcg_edit/bcg_edit.tcl

Nature:		The BCG_EDIT tool has been improved in several ways:

		(1) Checks have been implemented to prevent the user from
		moving states and (control points of) transitions (either
		straight or curved) out of the window.

		(2) A more robust error detection mechanism allows BCG_EDIT
		to recover when the "Preview" or "Print" command fails.

		(3) The new version of BCG_EDIT allows to resize the window
		within minimal and maximal size boundaries.

		(4) The new version of BCG_EDIT does not abort if one invokes
		"bcg_edit foo.bcg", where the file "foo.bcg" does not exist.

		(5) The new version of BCG_EDIT no longer stops if the C
		compiler (invoked by BCG_LIB when reading a BCG file) emits
		warning messages such as "gcc: file path prefix ... never
		used".

		(6) The new version of BCG_EDIT no longer stops if the
		environment variable $CADP_CC is not set.

		(7) The new version BCG_EDIT does some heuristic checks to
		verify that a ".ps" file to be read is not an ordinary
		PostScript file, but a graph layout encoded in the BCG-PSF
		format.

		(8) The grid is now aligned with the top left corner of
		the white window; it no longer overlaps the grey margin.

		(9) The "<Return>" (or "<Enter>") key is now active in
		the sub-windows opened by "Preview", "Print", "Load PS",
		"Load BCG", etc. It works for files and directories.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		658
Date: 		Wed Mar 22 12:38:55 MET 2000
Authors:	Severine Simon (INRIA/PAMPA), Hubert Garavel (INRIA/VASY)
Files:		bin.*/tgv.a, man/manl/tgv.l

Nature:		An improved version of TGV (TGV version 1.1) has been
		introduced in CADP. The improvements brought by TGV 1.1
		are the following:

		- Non-deterministic test purposes are now accepted.

		- Two new options "-keeplock" and "-outprior" have been added
		(see the "tgv" manual page for detailed information).

		- A bug that would cause occasional core dump has been
		  fixed.

		The "tgv" manual page has been updated. The EUCALYPTUS
		graphical user-interface was updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		659
Date: 		Thu Apr 20 17:31:07 MET DST 2000
Authors:	Severine Simon  (INRIA/PAMPA)
Files:		bin.*/tgv.a

Nature:		A bug in "-timer" option of TGV was fixed. Previously, in the
		test cases produced with option "-timer", some START/CANCEL of
		timers could be useless. Specially, the transition
			"START TAC, TNOAC; COMMENT(TNOAC<TAC)"
		was replaced by a simpler transition
			"START TNOAC"
		as it was useless to start TAC in this case.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		660
Date: 		Thu Apr  6 17:37:51 MET DST 2000
Report:		Paulo Carreira (Oblog, Lisboa), Ludovic Kuty (Univ. Liege)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/rfl

Nature:		In the license file produced by "rfl", the line
			contrat de mise a` disposition
		has been replaced with
			contrat de mise a disposition
		to avoid problems with some mailers that dropped the back-quote
		character silently, thus causing a global checksum error
-------------------------------------------------------------------------------
BUG FIX
Number:		661
Date: 		Thu Apr  6 19:22:45 MET DST 2000
Report:		Holger Hermanns (Univ. of Twente)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/xtl

Nature:		A bug was fixed in the code generation phase of XTL. The bug
		consisted in initializing a global variable with a non-constant
		value in the C code generated by XTL, which did not compile
		with the standard C compiler on iX86 (Linux) platforms, e.g.:

		xtl : expansion de ``prop''
		xtl : analyse syntaxique de ``prop''
		xtl : analyse semantique de ``prop''
		xtl :    - reification
		xtl :    - liaison des types
		xtl :    - liaison des variables
		xtl :    - liaison des fonctions
		xtl :    - typage des expressions
		xtl : traduction en C de ``prop''
		xtl : creation de la bibliotheque dynamique de ``brp_protocol''
		xtl : compilation C de ``prop''
		/tmp/xtl_3840.c:34: initializer element is not constant
			
		#052 erreur pendant la phase de compilation C :
     		compilation C de ``/tmp/xtl_3840.c'' echouee
     		abandon
-------------------------------------------------------------------------------
BUG FIX
Number:		662
Date: 		Tue Apr 25 13:04:53 MET DST 2000
Report:		Marc Herbert (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		demos/demo_17/Makefile_compo, demos/demo_24/Makefile

Nature:		The Makefile_compo file of demo_17 would erase the file
		SERVICE_WITHOUT_CRASHES.bcg, which is needed for verification.

		The Makefile of demo_24, when given option "cleanall" would
		erase the source LOTOS programs. This problem was fixed and
		the "cleanall" option was renamed into "clean".
-------------------------------------------------------------------------------
BUG FIX
Number:		663
Date: 		Tue May  9 20:30:00 MET DST 2000
Report:		Lynn Blair (Lancaster University, UK)
		Richard Harrison (Lancaster University, UK),
		Le Duc Hoa (Univ. Toulouse 1, France),
		Brian Ross (Univ. of Glasgow, UK),
		Cesar Viho (INRIA/PAMPA)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/installator/*, installator.shar, installator.com,
		INSTALLATION_0

Nature:		Several problems reported in the most recent versions of
		Installator for Windows and Linux have been fixed:

		- The new versions of Installator emit an error message if one
		  tries to execute them on a wrong machine architecture, e.g.:
	 	     this version of Installator was designed for architecture
		     iX86; it cannot be executed on architecture sun5

		- For Windows systems, the file "installator.shar" was renamed
		  into "installator.com", because Internet Explorer does not
		  recognize the ".shar" suffix as a special file and displays
		  it directly in the browser window. Changing ths ".shar"
		  suffix to ".com" makes Internet Explorer not display the
		  contents, and propose to execute it or to save it to a file.
		
		- For Windows systems with Cygwin32, the INSTALLATION_0 file
		  was extended with a "ln -s gunzip uncompress" instruction,
		  as the "uncompress" command is not present by default in
		  Cygwin beta-version 20.1.

		- For Windows systems with Cygwin32, the CADP documentation now
		  mentions that the environment variable CYGIWN must be set to
		  "binmode" before invoking Installator, otherwise all calls
		  to "uncompress" will fail with the following error message:
			uncompress: stdin: corrupt input
			restore of xxx failed
		  because "\n" are replaced with "\r\n" if the variable CYGWIN
		  is not set to "binmode".

		- For Linux systems, the new version of Installator is careful
		  enough to override the "noclobber" option that might have
		  been set by the user (when set, this option would make
		  Installator fail).

		- For Linux systems, the new version of Installator fixes a bug
		  that would (sometimes) cause the following error messages:
			: command not found
			: not a legal variable name
		  (this bug was due to the fact that the shell code generated
		  by the "shar" command of the "sharutils" package is not
		  accepted by the "bash" shell used by Linux).

		- For Linux systems, the new version of Installator fixes a bug
		  that would (sometimes) cause the following error messages:
			bgerror failed to handle background error.
    			Original error: syntax error in expression
			"double(round((double(93%)/(1024))*10))/10"
			Error in bgerror: invalid command name "bgerror"
		  (this bug was due to the fact that the "df" command of Linux
		  is not POSIX-compliant by default).
-------------------------------------------------------------------------------
BUG FIX
Number:		664
Date: 		Tue May 23 18:26:15 MET DST 2000
Report:		Moez Cherif (INRIA/VASY)
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		bin.*/libBCG.a, incl/bcg_predefined_declarations.h,
		bcg_read_1.h, bcg_write_1.h

Nature:		A portability problem was fixed in the BCG format with respect
		to the encoding of floating point numbers (which, so far, are
		mostly used for probabilistic and stochastic LTSs). The
		encoding is not the same on little-endians and big-endians
		machines, with the consequence that BCG graphs with floating-
		point numbers could not be read properly on Solaris if they had
		created on Linux, and vice-versa.

		This problem was solved by adopting the same byte-ordering for
		all the architectures. Two new functions BCG_READ_REAL() and
		BCG_WRITE_REAL() have been introduce to achieve portability.
		This change is upward compatible, except for BCG graphs that
		have been generated on Linux and that contain floating-point
		numbers: these graphs should be regenerated.
-------------------------------------------------------------------------------
BUG FIX
Number:		665
Date: 		Tue May 23 19:07:59 MET DST 2000
Report:		Irina Smarandache (INRIA/VASY)
Authors:	Radu Mateescu and Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG.a

Nature:		Minor bugs have been fixed in the BCG library, which occurred
		when trying to build non connected BCG graphs (i.e., BCG graphs
		with states that cannot be reached from the initial state, which
		is not so usual in model-checking verification). In particular,
		one bug was detected in the edge table of type 4: using this
		table for non-connected	graphs would cause memory accesses past
		the bounds of an array. This error was not visible to the
                end-user; it was revealed using the Purify software.
-------------------------------------------------------------------------------
BUG FIX
Number:		666
Date: 		Tue May 23 19:32:28 MET DST 2000
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libBCG.a

Nature:		A minor bug was fixed in the BCG library. In the function
		BCG_DELETE_OBJECT_TRANSITION(), there could be several calls
		to function BCG_DELETE_EDGE_TABLE_2() to delete the same table,
		which was more or less equivalent to deallocate several times
		the same memory area. This error was not visible to the
		end-user; it was revealed by the Purify software.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		667
Date: 		Thu May 25 12:01:13 MET DST 2000
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		man/manl/caesar_graph.l, man/manl/bcg_write.l,
		doc/Garavel-92-a.ps, doc/Tock-95.ps,
		src/open_caesar/declarator.c, bin.*/libBCG_IO.a

Nature:		The OPEN/CAESAR Reference Manual was modified to prohibit
		both newline ('\n') and carriage-return ('\r') characters in
		label strings produced by the functions CAESAR_PRINT_LABEL(),
		CAESAR_DUMP_LABEL(), and CAESAR_STRING_LABEL(). Previously,
		only carriage-returns were prohibited, which was a mistake.
		This change should have no impact, as the existing OPEN/CAESAR-
		compliant implementations obey this restriction already.
		Moreover, most OPEN/CAESAR libraries and tools assume implictly
		that labels cannot be split across several lines.

		The "declarator" tool was modified, so as to check that labels
		strings produced by functions CAESAR_DUMP_LABEL() and
		CAESAR_STRING_LABEL() do not contain '\n' nor '\r' characters.
	
		Similarly, the "bcg_write" API has been modified to express the
		same restriction: the labels strings passed to the function
		BCG_IO_WRITE_BCG_EDGE() should not contain newline or carriage-
		return characters. The implementation of BCG_IO_WRITE_BCG_EDGE()
		was modified so as to raise a fatal error if this pre-condition
		is violated.

		Finally, the Reference Manual of the BCG PostScript Format (see
		doc/Tock-95.ps) has been updated accordingly: it is now
		specified that a <Label> should not contain newline or
		carriage-return characters.
-------------------------------------------------------------------------------
BUG FIX
Number:		668
Date: 		Thu May 25 19:23:01 MET DST 2000
Report:		Alain Le Guennec (INRIA/PAMPA)
Authors:	Hubert Garavel, Marc Herbert, and Radu Mateescu (INRIA/VASY)
Files:		bin.*/libbcg_draw.a

Nature:		The PostScript code generated by BCG_DRAW was incorrect when
		a label string contained unbalanced parentheses, e.g., "GET(1".
		This problem was fixed by quoting properly the parentheses and
		back-quote characters in the PostScript code generated by
		BCG_DRAW.
-------------------------------------------------------------------------------
BUG FIX
Number:		669
Date: 		Wed Jun  7 20:33:45 MET DST 2000
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_labels

Nature:		A minor bug was fixed: when invoking commands such as:
			bcg_labels -hide H.hid F
		or:
			bcg_labels -rename R.ren F
		with a file F.bcg present in the current directory, the result
		of "bcg_labels" was stored into a file named F (without ".bcg"
		extension) while file F.bcg was left unchanged. 	
-------------------------------------------------------------------------------
BUG FIX
Number:		670
Date: 		Fri Jun  9 18:02:13 MET DST 2000
Report:		Mirna Bognar (Vrije Universiteit, Amsterdam, The Netherlands)
Author:		Radu Mateescu (INRIA/VASY)
Files:		src/xtl/ctl.xtl

Nature:		A bug in the macro-definition of the AX() operator was fixed,
		which caused a syntax error in the XTL files that used the
		ctl.xtl library. More precisely,
			macro AX (F : stateset) : stateset = Dia (true) and
			Box (F) end_macro
		should read:
			macro AX (F) = Dia (true) and Box (F) end_macro
-------------------------------------------------------------------------------
BUG FIX
Number:		671
Date: 		Tue Jun  13 11:23:45 MET DST 2000
Report:		Jan Friso Groote (CWI, The Netherlands),
		Solofo Ramangalahy (INRIA/PAMPA)
Authors:	Moez Cherif, Hubert Garavel, and Marc Herbert (INRIA/VASY)
Files:		src/eucalyptus/*

Nature:		Several improvements and bug fixes have been brought to the
		EUCALYPTUS graphical user-interface.

		(a) The new BCG_MIN tool (see above #638) was integrated into
		    EUCALYPTUS. It can be accessed by clicking on an LTS file
		    (e.g., a ".bcg" file) and then selecting "Reduce".

		(b) The semantics of the "Reduce" window was modified: there
		    is now an exclusive choice between "Reduce using BCG_MIN",
		    "Reduce using Aldebaran", and "Reduce using Fc2Tools". In
		    the previous version, both choices "Reduce using Aldebaran"
		    and "Reduce using Fc2Tools" were active by default, which
		    seemed to be a bit confusing, especially if different
		    equivalence relations were selected for Aldebaran and
		    Fc2Tools.

		(c) Similarly, exclusive choices have been introduced in all
		    contexts where several tools can be used for the same task:
		      - comparison using bisimulations (Aldebaran and Fc2Tools)
		      - temporal logics (Evaluator 3.0 and XTL)
		      - deadlock detection
		      - livelock detection
		    etc.

		(d) A major improvement was brought to Eucalyptus. The previous
		    version was basically intended to be "mono-threaded": only
		    a single tool could be used at a time. For instance, when
		    clicking on a file F1.bcg, then opening the "Reduce" window,
		    then clicking on file F2.bcg, and finally clicking "OK" in
		    the "Reduce" window would reduce F2.bcg instead of F1.bcg.
		    This problem was due to the fact that the last selected file
		    was stored in a global variable shared by all the windows.

		    The new version of EUCALYPTUS solves this problem, as it is
		    designed to be "multi-threaded": each window has a local
		    variable to store its selected file, which allows, for
		    instance, to reduce a file F1.bcg while visualizing another
		    file F2.bcg at the same time. However, it is forbidden to
		    launch the same action in parallel, e.g., to reduce graphs
		    F1.bcg and F2.bcg at the same time: in such case, a warning
		    message is emitted.

		(e) If the "Help" window was previously iconified, it pops up
		    in the foreground when the user clicks on the "Help" button
		    again.

		(f) When clicking on "Help/Tool Versions" and then on
		    "Help/Help Index", strage "\t\t\t" characters would appear
		    in the Help window. This minor problem was solved.

		(g) When displaying the manual pages of the Fc2Tools, erroneous
		    '\b' would appear. This problem was solved.

		(h) In the new version of EUCALYPTUS, the icon of the parent
		    directory ".." is always located on the left upper corner
		    of the left window.

		(i) The new version of EUCALYPTUS displays a better error
		    message when the user clicks on the icon of a directory
		    that cannot be read or accessed.

		(j) A bug was fixed in EUCALYPTUS on Linux: clicking on a
                    symbolic link to a directory, then on the ".." directory
                    would leave the interface in an inconsistent state. This
                    problem was due to the fact that, under Linux by default,
                    the "cd"  command does not behave as expected with respect
                    to symbolic links. The problem was fixed by creating the
                    "$CADP/com/src/cadp_shell" shell-script. This modification
                    was applied to Installator as well.

		(k) With the new version of EUCALYPTUS, the version number of
		    CADP is also displayed in the menu bar (together with the
		    version number of EUCALYPTUS).

		(l) When executing the Fc2Tools, the superflous messages of
		    the form:
			--- fc2min: blocks 1
			--- fc2min: blocks 2
			--- fc2min: blocks 3
			etc.
		   are now filtered by EUCALYPTUS.

		(m) On the icons of the left window, it is now possible to
		    use the 2nd and 3rd buttons of the mouse (in addition to
		    the 1st button). The manual page was updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		672
Date: 		Fri Jun 16 22:35:28 MET DST 2000
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		bin.win32/*, com/*, man/*

Nature:		The BCG tools have been ported to Windows. In particular,
		the "libbcg_io.a" library was renamed into "libbcg_iodyn.a"
		in order to avoid a naming conflict with the other library
		"libBCG_IO.a" (as Windows filenames are case-unsensitive).
		The pseudo-library "bin.win32/libm.a" was added and the
		BCG manual pages have been updated.
-------------------------------------------------------------------------------
BUG FIX
Number:		673
Date: 		Tue Jun 27 09:49:36 MET DST 2000
Report:		Yaroslav Usenko (CWI, The Netherlands)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/src/xeuca_convert

Nature:		A bug was fixed in the  "xeuca_convert" shell-script used
		by the EUCALYPTUS graphical-interface to perform automatic
		format conversion between various formats of LTSs (e.g.,
		from .bcg files and vice-versa. This bug was only noticeable
		on Linux systems, where it generated an error message of the
		form:
			cut: invalid byte or field list
			Try `cut --help' for more information
		and caused invalid format conversions.
-------------------------------------------------------------------------------
BUG FIX
Number:		674
Date: 		Wed Jun 28 11:24:12 MET DST 2000
Report:		Alain Le Guennec (INRIA/PAMPA)
Authors:	Moez Cherif, Hubert Garavel, and Marc Herbert (INRIA/VASY)
Files:		bin.*/libbcg_draw.a, src/bcg_edit/bcg_edit.tcl,

Nature:		BCG_DRAW and BCG_EDIT did not handle properly the case of BCG
		graphs with labels containing either the backslash character
		(e.g., "GATE !\") or containing parentheses that are not
		balanced (e.g., "GATE !("). This problem is now solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		675
Date: 		Wed Jun 28 11:24:12 MET DST 2000
Author:		Moez Cherif (INRIA/VASY)
Files:		com/src/xeuca_convert

Nature:		Another bug was fixed in "xeuca_convert": when the input file
		to convert was empty, the error code returned was incorrect
		("exit 0" instead of "exit 1").
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		676
Date: 		Fri Jul  7 16:35:22 MET DST 2000
Author:		Marc Herbert and Hubert Garavel (INRIA/VASY)
Files:		com/bcg_draw, bin.*/libbcg_draw.a, src/bcg_draw/*,
		src/com/cadp_postscript, src/com/cadp_psbox,
		man/*/bcg_draw.l, INSTALLATION_2, com/tst

Nature:		The BCG_DRAW tool was ported to Windows. This required several
		changes:

		- A new environment variable $CADP_PS_INTERPRETER was defined
		  (see its definition in the INSTALLATION_2 file).

		- The "cadp_postscript" shell-script was modified to support
		  the Gswin32/Gsview software for Windows.

		- A new script "cadp_psbox" was introduced to compute the
		  bounding box of PostScript files. The files
		  "src/bcg_draw/bcg_draw_bounding_box.ps" and
		  "src/bcg_draw/bcg_draw_showpage.ps" have been removed as
		  they are useless now. The new bounding box computation is
		  now 10-20% times faster.

		- Both "cadp_postscript" and "cadp_psbox" have been enhanced
		  so that, when $CADP_PS_VIEWER or $CADP_PS_INTERPRETER are not
		  defined, the PostScript tools are searched in the value of
	          $PATH as well as in several plausible default locations.

		- The "bcg_draw" manual page was updated accordingly.

		- The "tst" script was extended to check the value of both
		  variables $CADP_PS_VIEWER and $CADP_PS_INTERPRETER.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		677
Date: 		Thu Jul 13 10:37:44 MET DST 2000
Author:		Moez Cherif and Hubert Garavel (INRIA/VASY)
Files:		com/bcg_edit, src/bcg_edit/*,

Nature:		The behaviour of BCG_EDIT was improved (especially with respect
		to large graphs that take time to load):
		- When invoked, the new version of BCG_EDIT immediatly displays
		  an empty, white window with a grid.
		- When loading a graph, the new version of BCG_EDIT displays
		  the states and edges progressively (instead of waiting until
	          the whole graph is loaded). The "watch" cursor is displayed
		  and the menus are frozen while loading the graph.
-------------------------------------------------------------------------------
BUG FIX
Number:		678
Date: 		Mon Jul 31 14:40:09 MET DST 2000
Report:		Alain Le Guennec (INRIA/PAMPA)
Author:		Hubert Garavel and Moez Cherif (INRIA/VASY)
Files:		src/open_caesar/terminator.c
		src/open_caesar/simulator.i, src/xsimulator/main.tcl
		bin.*/exhibitor.a, bin.*/xsimulator.a

Nature:		Several Open/Caesar tools (Exhibitor, Terminator, Simulator,
		and Xsimulator) invoked "CAESAR_FORMAT_LABEL (1)" to obtain
		detailed information about hidden labels. This worked well in
		the case of LOTOS, but not for other Open/Caesar compliant
		compilers (such as the UMLAUT compiler for UML), for which
		CAESAR_MAX_FORMAT_LABEL () is equal to 0 (which is permitted
		by the "caesar_graph" API). All the aforementioned tools have
		been modified to solve the problem.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		679
Date: 		Thu Aug 24 20:45:29 MET DST 2000
Report:		Alain Le Guennec (INRIA/PAMPA), Radu Mateescu (INRIA/VASY),
			Severine Simon (INRIA/PAMPA)
Author:		Hubert Garavel (INRIA/VASY)
Files:		doc/Garavel-92-a.ps, man/*/caesar_graph.*

Nature:		Several typographic corrections have been brought to the
		reference documentation of the "caesar_graph" API. This should
		result in a better document, especially for new readers. The
		most significant changes are the following:
		- There is a better separation between LOTOS-specific notes
		  and the rest of the text (which is independent from LOTOS).
		- The notions of "gate" and "experiment offers" in labels
		  are now defined explicitly.
		- It is now clearly specified that CAESAR_ITERATE_STATE() does
		  not allocate its parameters CAESAR_S2 and CAESAR_L.
		- It is now forbidden for all the functions and procedures
		  specified in the Open/Caesar API to perform side-effect
		  input/output operations affecting the standard input and
		  standard output. In particular, debugging information should
		  be sent to the standard error or, preferably, to a named log
		  file. Otherwise, some Open/Caesar application programs that
		  rely on the standard input and output might not function
		  properly if the graph module performs conflicting accesses
		  to the standard input or the standard output.
-------------------------------------------------------------------------------
BUG FIX
Number:		680
Date: 		Tue Aug 29 00:03:53 MET DST 2000
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_io, bin.*/bcg_labels, bin.*/bcg_min,
		incl/bcg_file_1.h

Nature:		A bug was fixed in the tools BCG_IO, BCG_LABELS, and
		BCG_MIN, which occured when these tools were called with the
		same input and output files (e.g., "bcg_min -strong foo.bcg").
		This bug was twofold:
		- It could be the case that the "foo.bcg" file was read and
		  written at the same time. This problem was solved using an
		  intermediate temporary file.
		- When replacing the input file with the output one, the dynamic
		  library foo@1.o was left unchanged in the current directory.
		  This could be a problem, because foo@1.o was related to the
		  original file, but not the modified one. The solution is to
		  remove foo@1.o.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		681
Date: 		Tue Aug 29 00:07:53 MET DST 2000
Report:		Nicolas Zuanon (BULL/DYADE)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/caesar.aldebaran

Nature:		In the "caesar.aldebaran" shell-script used for compositional
		verification, minimization of BCG graphs is now performed using
		BCG_MIN rather than Aldebaran.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		682
Date: 		Wed Aug 30 11:43:17 MET DST 2000
Authors:	Holger Hermanns (Univ. of Twente), Hubert Garavel and Moez
		Cherif (INRIA/VASY)
Files:		bin.*/bcg_min, man/*/bcg_min.*

Nature:		The BCG_MIN tool was improved and modified:

		- The syntax of probabilistic and stochastic labels was
		  simplified: these labels are now written "rate 2.0" and
		  "prob 0.5" (instead of "rate !2.0" and "prob !0.5" as
		  formerly). The manual page was updated.

		- An existing BCG graph FILE.bcg can be upgraded to the new
		  label syntax using the following command:
			bcg_labels -rename -partial UPGRADER.ren FILE.bcg
		  where file "UPGRADER.ren" has the following contents:
			---------------------------------
			rename
			"[ ]*rate[ ]*![ ]*" -> "rate "
			"[ ]*prob[ ]*![ ]*" -> "prob "
			---------------------------------

		- The parsing of probabilistic and stochastic labels has been
		  made faster. In the new version of BCG_MIN, labels are parsed
		  only once, even if they occur in several transitions.

		- The new version of BCG_MIN issues an error message when
		  option "-prob" or "-rate" is set and when the graph contains
		  a label containing only spaces or blank characters.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		683
Date: 		Thu Aug 31 22:07:29 MET DST 2000
Author:		Hubert Garavel (INRIA/VASY)
Files:		incl/bcg_standard.h

Nature:		The following line:
				 #include <varargs.h>
		was deleted from file "bcg_standard.h". This line caused
		problems with Linux because <varargs.h> is uncompatible
		with <stdarg.h> and C++'s <stream.h>. Applications using
		<varargs.h> should include it directly, instead of relying
		directly on "bcg_standard.h".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		684
Date: 		Mon Sep  4 12:41:51 MET DST 2000
Report:		Howard Bowman (University of Kent at Canterbury, UK)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt

Nature:		A cryptic error message of CAESAR and CAESAR.ADT:
			variable or constant operation 10 was not declared
		was replaced by a more informative one:
			operation 10 used in value:
     		         X + 10
     			the profile of which might be:
     			   -> NAT
     			was not declared
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		685
Date: 		Wed Sep 20 17:00:45 MET DST 2000
Report:		Radu Mateescu (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		man/*/caesar_edge.*, man/*/bcg_read.*

Nature:		The manual pages were modified to specify that the C
		instructions "break" and "continue" can be used in the loops
		built using the iterators exported by the "bcg_read" and
		"caesar_edge" APIs.
-------------------------------------------------------------------------------
BUG FIX
Number:		686
Date: 		Wed Sep 20 19:21:23 MET DST 2000
Report:		Holger Hermanns (Univ. of Twente),
		Thierry Jeron (INRIA/PAMPA),
		Sheldon Lee Wen (Univ. of Lethbridge),
		Jacques Sincennes (Univ. of Ottawa)
Authors:	Hubert Garavel and Marc Herbert (INRIA/VASY)
Files:		bin.iX86/*, bin.win32/*

Nature:		Some CADP tools did not work properly on laptop computers
		running Linux or Windows, because when these computers are
		connected to or disconnected from the Internet, their IP address
		changes dynamically. This problem was solved. A similar problem
		was solved regarding the computation of "hostid" on Linux.
-------------------------------------------------------------------------------
BUG FIX
Number:		687
Date: 		Tue Oct 24 10:58:20 MET DST 2000
Report:		Moez Cherif (INRIA/VASY), Nicolas Zuanon (BULL/DYADE)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG.a

Nature:		A bug was fixed, which caused some BCG tools to emit the
		following error message
			bcg_temporary: error in BCG_CLEANUP
		followed by a core dump.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		688
Date: 		Tue Oct 24 12:15:24 MET DST 2000
Authors:	Holger Hermanns (Univ. of Twente), Moez Cherif and Hubert
		Garavel (INRIA/VASY)
Files:		bin.*/bcg_min, man/*/bcg_min.*

Nature:		The BCG_MIN tool was improved:

		- The new version handles mixed labels of the form:
			"label ; rate 2.0"
		  and
			"label ; prob 0.5"
		  in which a "normal" label is combined with stochastic or
		  probabilistic data. The manual page of BCG_MIN was updated
		  and significantly improved to describe this change.

		- Some error messages have been made more explanative, e.g.:

		   bcg_min: error when parsing label "rate 0.0000001"
		   rate value should be strictly positive
		   (comparisons are done with precision epsilon = 0.001000)

		   bcg_min: error when parsing label "prob 0.0000001"
		   probability value should belong to the range ]0..1]
		   (comparisons are done with precision epsilon = 0.001000)
-------------------------------------------------------------------------------
BUG FIX
Number:		689
Date: 		Fri Oct 27 11:26:36 MET DST 2000
Report:		Moez Cherif (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/open_caesar/simulator.i, src/open_caesar/simulator.c,
			bin.*/xsimulator.a

Nature:		The SIMULATOR and XSIMULATOR tools did not work properly in
		some cases: when the computation of a transition going out from
		the current state failed (because the evaluation of a data
		expression raised an exception, i.e., a signal 15), the
		simulators would still permit to proceed to the next state,
		which caused a core dump. This problem was fixed: moving to
		the next state is now forbidden.

		Moreover, on Solaris 2.*, only the first signal 15 was
		caught; subsequent signals 15 were not, causing the simulators
		to stop abruptly. This second problem was also fixed.
-----------------------------------------------------------------------------
IMPROVEMENT
Number:		690
Date: 		Sat Oct 28 23:28:20 MET DST 2000
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_cc, bin.*/*, com/bcg_draw, com/bcg_info,
		com/bcg_open, com/caesar.open, com/exp.open, com/fc2open,
		com/tst, INSTALLATION_2

Nature:		To achieve portability of CADP to Windows, the conventions
		regarding the C compiler (and namely the environment variable
		$CADP_CC) have been deeply revised. There were indeed a problem
		with the former semantics of $CADP_CC: when $CADP_CC was not
		defined, its default value was "cc". On Windows/Cygwin32, there
		is no "cc" command, only "gcc"; moreover, it was not sufficient
		to set "$CADP_CC" to "gcc", as more compiler options (e.g.,
		"-mno-cygwin" and linking options) had to be provided when
		invoking the C compiler.

		A new shell-script "cadp_cc" was developed. This script invokes
		the C compiler, using the $CADP_CC environment variable, if it
		is defined to fetch the C compiler, or, if not, attempting to
		locate the C compiler automatically.

		All the CADP tools and shell-scripts have been modified to
		invoke "cadp_cc" systematically (instead of "${CADP_CC:-cc}"
		as previously).

		The "cadp_cc" script simplifies the configuration task by the
		end-users, as in most cases, it is no longer needed to set the
		$CADP_CC environment variable (this variable should only be set
		if the operating system is Solaris, if the Sun C compiler is
		not installed and if the Gcc compiler can not be accessed from
		the $PATH and not installed in a standard location).

		The INSTALLATION_2 file was updated to reflect these changes.
		The "tst" command was modified to check the value of $CADP_CC.
-----------------------------------------------------------------------------
IMPROVEMENT
Number:		691
Date: 		Sat Oct 28 23:28:20 MET DST 2000
Report:		Marc Herbert (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/tst, src/com/cadp_edit, src/com/cadp_web,
		INSTALLATION_2

Nature:		The installation procedure was simplified. It is no longer
		advised to set the environment variable $LD_LIBRARY_PATH,
		unless on Solaris 2. The INSTALLATION_2 file and the "tst"
		shell-script have been enhanced to reflect these changes. In
		particular, on Solaris 2 machines, the new version of "tst"
		checks whether "/usr/lib" and "/usr/openwin/lib" are listed in
		$LD_LIBRARY_PATH.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		692
Date: 		Sun Oct 29 16:32:28 MET 2000
Report:		Marc Herbert (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_cpp, com/tst, demos/demo_19/start,
		INSTALLATION_2

Nature:		A new shell-script named "cadp_cpp" was developed, which
		invokes the C preprocessor depending on the architecture rather
		than invoking "cpp" directly (which is not recommended on GNU
		environments). Demo 19 was modified to use this new script.

		The installation directives given in file INSTALLATION_2 have
		been simplified. On Solaris 2 machines, it is no longer needed
		to include "/usr/ccs/lib" in the $PATH because "cpp" will be
		located and invoked directly by "cadp_cpp". On Linux machines,
		for the same reason, it is no longer required to include "/lib"
		in the $PATH.

		The "tst" command was simplified: it no longer checks the
		availability of the "cpp" and "ld" commands.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		693
Date: 		Wed Nov  1 09:39:14 MET 2000
Report:		Hubert Rappold (University College Dublin, Ireland),
		Solofo Ramangalahy (INRIA/PAMPA)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/tst, INSTALLATION_2

Nature:		The "tst" shell-script was enhanced to emit a warning
		message when run on an obsolete version of Linux, especially
		a Debian release whose number is < 2.2 or a RedHat release
		whose number is < 6.0. Those obsolete versions of Linux have a
		bogus C library (e.g. libc6 version glibc2.0.7 on Debian 2.1)
		that cause $CADP/tcl-tk/bin.iX86/wish to abort with core dump.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		694
Date: 		Wed Nov  1 15:29:03 MET 2000
Report:		Solofo Ramangalahy (INRIA/PAMPA)
Authors:	Hubert Garavel and Marc Herbert (INRIA/VASY)
Files:		com/tst, INSTALLATION_2

Nature:		The installation directives given in file INSTALLATION_2 have
		simplified. On Linux and Windows systems, it is no longer
		recommended to set the environment variable $MANPATH. The "tst"
		shell-script was enhanced to display the  value of $MANPATH and
		to emit a warning if this variable is set when not appropriate.
-------------------------------------------------------------------------------
BUG FIX
Number:		695
Date: 		Thu Nov  2 11:01:32 MET 2000
Report:		Solofo Ramangalahy (INRIA/PAMPA)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/evaluator.a

Nature:		A bug was fixed in the EVALUATOR model-checker. This bug
		caused a segmentation fault when the name of the .mcl file
		containing the formula to evaluate was given as an absolute
		pathname (i.e., starting with "/"). The problem did not occur
		in the common case where a relative pathname was used.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		696
Date: 		Fri Nov  3 16:41:20 MET 2000
Authors:	Moez Cherif, Hubert Garavel, Bruno Hondelatte, and Pierre
		Kessler (INRIA/VASY)
Files:		bin.*/ocis.a, tcl-tk/com/tixwish, tcl-tk/bin.*/tix*,
		tcl-tk/lib-tix, src/eucalyptus/eucalyptus.tcl

Nature:		A new simulator named "OCIS" (Open/Caesar Interactive
		Simulator) was added to the CADP release. This simulator
		reliens upon the Tix extension of Tcl-Tk, which has been
		included in the CADP release. OCIS can be invoked with the
		same syntax as any other Open/Caesar application program.
		It can also be started from the EUCALYPTUS graphical
		user-interface using the "Execute / Advanced Simulation" menu.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		697
Date: 		Fri Nov  3 19:21:05 MET 2000
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		bin.*/bcg_*, bin.*/libBCG.a, bin.*/libbcg_*, com/bcg_*,
		bin.*/caesar, bin.*/caesar.adt, bin.*/xtl, com/xeuca,
		demos/demo_05/Makefile, demos/demo_12/Makefile,
		demos/demo_16/=READ_ME.txt, demos/demo_19/start,
		man/*/bcg*, man/*/caesar.*, man/*/caesar.adt.l,
		man/*/xeuca.*, man/*/xtl.*, INSTALLATION_2

Nature:		For all the CADP tools having a "-cc" option (namely the
		BCG tools, CAESAR, CAESAR.ADT, and XTL), the semantics of the
		argument following "-cc" has been modified.

		Previously, the argument following "-cc" was assumed to be a
		C compiler name possibly followed by compiler options (e.g.,
		-cc 'gcc -O -lm'). From now on, the compiler name must not be
		specified, as it is determined by the "cadp_cc" shell-script
		and the environment variable CADP_CC. Therefore, the argument
		following "-cc" can only be a list of compiler options (e.g.,
		-cc '-O -lm').

		All the manual pages and demo examples have been updated.
		The EUCALYPTUS graphical user-interface has been updated too:
		the "Execution Files" and "C Compiler" windows for CAESAR,
		CAESAR.ADT, and XTL have been renamed into "Miscellaneous
		Options" and "C Compiler Options" respectively.
------------------------------------------------------------------------------
BUG FIX
Number:		698
Date: 		Tue Nov  7 11:42:31 MET 2000
Report:		Axel Belinfante and Jan Tretmans (Univ. of Twente),
		Nicolas Zuanon (BULL/DYADE)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		The format of the .xeucarc file used by EUCALYPTUS had a
		defect: the Screen_Background image was stored with an absolute
		pathname (this caused a problem when moving the .xeucarc file
		from one machine to another one). Moreover, the EUCALYPTUS
		interface did not start if the value of Screen_Background
		refers to a non-existing file.

		This problem was solved. The value of Screen_Background is no
		longer be stored as an absolute pathname if the background
		image is located in $CADP/src/eucalyptus/frames. Additionally,
		if the value of Screen_Background does not refer to an existing
		image file, then EUCALYPTUS will start with the default image
		"clouds1.gif".	
------------------------------------------------------------------------------
BUG FIX
Number:		699
Date: 		Tue Nov  7 14:49:02 MET 2000
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG.a

Nature:		In some circumstances, the dynamic library FILE@1.o
		associated to a BCG file FILE.bcg could become out-of-date with
		respect to FILE.bcg (for instance, after a command such as:
			mv TEST.bcg FILE.bcg
		which modifies FILE.bcg but not FILE@1.o). This would leave the
		user's environment in an inconsistent state.

		The identification string contained in each dynamic library
		FILE@1.o associated to a BCG file FILE.bcg has been enriched
		with additional information (including the version number of
		the BCG environment, the device number, the inode number, and
		the time of last modification of FILE.bcg). So, every upgrade
		of the BCG environment or any modification of FILE.bcg will
		render FILE@1.o obsolete, so that FILE@1.o will be regenerated
		as soon as a BCG tool is applied to FILE.bcg.
------------------------------------------------------------------------------
BUG FIX
Number:		700
Date: 		Wed Nov  8 10:41:11 MET 2000
Report:		Frederic Lang (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/bcg_io, bin.*/libBCG_IO.a

Nature:		A bug was fixed in the BCG_IO tool: the translation to the FC2
		format was incorrect when the LTS to translate had a single
		state and no transitions (the FC2 format generated was
		syntactically incorrect).
-------------------------------------------------------------------------------
BUG FIX
Number:		701
Date: 		Wed Nov  8 17:38:39 MET 2000
Report:		Christophe Discours (INRIA/VASY), Nicolas Zuanon (BULL)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/exp2c, bin.*/libexpopen.a

Nature:		A bug was fixed in the EXP.OPEN tool: the "behaviour" keyword
		of the EXP format was not taken into account, so that labels
		strings were always handled in a case-sensitive way.
-------------------------------------------------------------------------------
BUG FIX
Number:		702
Date: 		Thu Nov  9 10:47:48 MET 2000
Report:		Radu Mateescu (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/bcg_open, com/exp.open, com/fc2open

Nature:		A bug was fixed in various shell-scripts: BCG_OPEN, EXP.OPEN,
		and FC2OPEN fetched ".o" and ".a" file in a wrong directory
		($SRC instead of $BIN).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		703
Date: 		Thu Nov  9 12:35:36 MET 2000
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/evaluator.a

Nature:		The EVALUATOR model-checker has been improved in order to work
		more efficiently when verifying temporal formulas on explicit
		LTSs encoded as BCG files. The optimisations have been made
		by taking plain advantage of the functionalities offered by
		the BCG environment. As a result, the memory consumption and
		the execution time of EVALUATOR have been reduced by up to
		5% and 20%, respectively.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		704
Date: 		Thu Nov  9 14:29:12 MET 2000
Report:		Holger Hermanns (Univ. of Twente)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG.a

Nature:		The low-level BCG functions have been modified: every time
		a BCG file FILE.bcg is open for writing (this can be done using
		the BCG_OPEN_BINARY() or BCG_IO_WRITE_BCG_BEGIN() functions),
		all the existing dynamic libraries named FILE@1.o, FILE@2.o...
		(if any) will be removed. This removal will clean the user's
		environment automatically.
------------------------------------------------------------------------------
IMPROVEMENT
Number:		705
Date: 		Thu Nov  9 18:45:42 MET 2000
Authors:	Judi Romijn (Univ. of Nijmegen), Radu Mateescu (INRIA/VASY)
Files:		demos/demo_27

Nature:		A new demo (Philip's HAVi Protocol) was added to the CADP
		distribution.
------------------------------------------------------------------------------
IMPROVEMENT
Number:		706
Date: 		Mon Nov 13 15:34:53 MET 2000
Report:		Hubert Garavel (INRIA/VASY), Radu Grosu (SUNY Stony Brook, USA)
Author:		Radu Mateescu (INRIA/VASY)
Files:		demos/demo_01/*.{mcl,xtl}, demos/demo_02/*.{mcl,xtl}

Nature:		The demos demo_01 and demo_02 (Alternating Bit Protocol without
		and with data values, respectively) have been improved in order
		to allow a better understanding of temporal logic properties.

		The temporal formulas stating the correctness of the LOTOS
		specifications, written in XTL and in regular alternation-free
		mu-calculus (the input language of EVALUATOR), have been
		simplified: the old, monolithic formulas have been split into
		several smaller formulas, each one expressing a simpler
		property of the protocol. For completeness, the old formulas
		were also kept, but rewritten using simpler notations.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		707
Date: 		Mon Nov 13 17:54:59 MET 2000
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/tst, INSTALLATION_2

Nature:		The "tst" shell-script was ported to Windows and enhanced to
		perform additional verifications:

 		- It displays and checks the values of $EDITOR, $NAVIGATOR,
		 $CADP_PS_VIEWER, and $CADP_PS_INTERPRETER.

		- It checks more deeply the value of $CADP_CC. In particular,
		  it warns the user about the use of "/usr/ucb/cc" on sun4 and
		  sun5, as stated in the file INSTALLATION_2.

		- On Windows systems, it performs various verifications to
		  ensure that the version of Cygwin installed is up to date
		  and has been patched appropriately to remove known bugs.

		- It checks that the license is valid, that the user's "umask"
		  value, and that the user's shell startup file (".bashrc",
		  ".profile", ".cshrc"...) executes correctly, does not write
		  to the standard output, and does not overwrite the value of
		  the $PATH variable (all these configuration problems have
		  proven to create problems when installing or running the CADP
		  tools).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		708
Date: 		Mon Nov 14 11:02:13 MET 2000
Report:		Sari Mannynsalo (Nokia Research Center, Finland)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/tst, INSTALLATION_2

Nature:		The new version of "tst" warns about the incompatibilities
		between multiple versions of CADP installed on the same
		machine, especially the case where the $CADP variable points
		to one version of CADP whilst the $PATH variable gives access
		to commands that belong to another version of CADP.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		709
Date: 		Wed Nov 15 19:23:15 MET 2000
Report:		Solofo Ramangalahy (IRISA/PAMPA), Radu Mateescu (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_io, bin.*/bcg_min, man/*/bcg_io.*, man/*/bcg_min.*,
		src/eucalyptus/eucalyptus.tcl, src/com/xeuca_convert

Nature:		The "-parse" option of BCG_IO, BCG_MIN, and TGV was a bit
		confusing: selecting this option meant that labels would not be
		parsed. Moreover, the "-parse" option of BCG_IO could only be
		used when the input file was in Aldebaran format (but not when
		the input file was in SEQUENCE format, for instance), although
		this option mainly concerns the output file in BCG format (not
		the input file).

		In BCG_IO, two new options named "-parse" and "-unparse" have
		been introduced to control the production of output files in
		BCG format. Option "-parse" (resp. "-unparse") specifies that
		labels will be parsed (resp. will not be parsed) when building
		the output BCG file. By default, labels are parsed. In
		particular, the new version of BCG_IO can be used to parse or
		unparse the labels of an existing BCG file.

		The "-parse" option of BCG_IO associated to input files in
		Aldebaran format becomes obsolete, but is kept (with its
		previous semantics) for backward compatibility. Using this
		option is strongly discouraged as it may disapear from further
		CADP releases.

		The "Convert" functionality of the EUCALYPTUS user interface
		was updated accordingly. It now offer the choice between two
		formats: "BCG (With Label Parsing)" and "BCG (Without Label
		Parsing)". A bug in the "xeuca_convert" shell-script that
		occurred when generating "-ascii -small" and "-fc2 -verbose"
		formats was fixed.

		The "-parse" option of BCG_MIN was removed: from now on, the
		labels of the minimized LTS produced by BCG_MIN are parsed iff
		they were already parsed in the original LTS to minimize.

		The manual pages of BCG_IO or BCG_MIN have been updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		710
Date: 		Wed Nov 22 11:49:18 MET 2000
Authors:	Radu Mateescu and Irina Smarandache (INRIA/VASY)
Files:		demos/demo_{08,11,20}/REL_REL_FIFO.lib

Nature:		The demos demo_08, demo_11, and demo_20 on the rel/REL
		protocol have been improved by eliminating a data type
		TABLE that was defined in the file REL_REL_FIFO.lib but
		not used in the LOTOS specification.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		711
Date: 		Wed Nov 29 14:32:56 MET 2000
Author:		Hubert Garavel (INRIA/VASY)
Files:		doc/Garavel-Viho-Zendri-00.ps

Nature:		A new paper (describing how LOTOS and the CADP tools can be
		used for system-level design of hardware systems) was added to
		the CADP release.
-------------------------------------------------------------------------------
BUG FIX
Number:		712
Date: 		Mon Dec 11 11:14:32 MET 2000
Report:		Ghassan Chehaibar (BULL/DYADE)
Authors:	Hubert Garavel (INRIA/VASY) and Laurent Mounier (VERIMAG)
Files:		bin.*/projector.a, bin.*/aldebaran, bin.*/exp2c,
		bin.*/libexpopen.a

Nature:		A bug was fixed in the PROJECTOR tool: when generating an
		LTS file with more than 10,000,000 states and 10,000,000
		transitions, the ".aut" file generated by PROJECTOR was not in
		a proper format: the first line ("des") would overwrite the
		second line. The same change was made in ALDEBARAN and
		EXP.OPEN.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		713
Date: 		Mon Dec 11 16:32:19 MET 2000
Authors:	Hubert Garavel (INRIA/VASY) and Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran, bin.*/exp2c, bin.*/libexpopen.a

Nature:		The new version 6.5 of ALDEBARAN reads and writes BCG files
		directly. The previous version 6.4 of ALDEBARAN could read BCG
		files, but only by translating them implicitly to ".aut" files
		using the BCG_IO tool. This translation step was slow and is
		now avoided by a direct use of the "bcg_read"/"bcg_write"
		interface.

		The new versions of ALDEBARAN and EXP.OPEN now accept ".exp"
		files containing leaf automata encoded in an other format than
		".aut". In particular, leaf automata can be encoded in BCG
		format, which is read directly using the "bcg_read" interface.

		Finally, ALDEBARAN and EXP.OPEN have been enhanced to read
		other formats than ".aut" and ".bcg", for instance ".fc2" and
		".seq" (the translation is done implicitly using BCG_IO).
------------------------------------------------------------------------------
BUG FIX
Number:		714
Date: 		Tue Dec 12 10:12:19 MET 2000
Authors:	Hubert Garavel (INRIA/VASY) and Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran

Nature:		An inappropriate error message of ALDEBARAN was removed.
		When invoked on a non-existent file FILE.bcg,
		   aldebaran -info FILE.bcg
		no longer displays
		   Aldebaran fatal error: Unknown implementation file type
		but
		   Aldebaran fatal error: cannot read file "FILE.bcg"
------------------------------------------------------------------------------
BUG FIX
Number:		715
Date: 		Tue Dec 12 11:32:56 MET 2000
Report:		David Jacquemin (INRIA/VASY)
Author:		Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran

Nature:		In the ".aut" format, the initial state must always be numbered
		zero. The previous version 6.4 of ALDEBARAN could give an
		incorrect result when trying to minimize a ".aut" file in which
		the initial state of the LTS was different from zero. This
		problem is fixed: in such case, the new version of ALDEBARAN
		prints an an error message ("the initial state must always be
		numbered 0") and stops.
------------------------------------------------------------------------------
BUG FIX
Number:		716
Date: 		Tue Dec 12 17:12:19 MET 2000
Report:		Christophe Discours, Radu Mateescu (INRIA/VASY), and
		Wayne Biao Liu (University of Waterloo, Ontario, Canada)
Authors:	Hubert Garavel (INRIA/VASY), and Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran

Nature:		A bug was fixed in ALDEBARAN: when taking a ".bcg" file
		as input and producing a minimized ".aut" file as output, the
		previous version of ALDEBARAN forgot to surround labels with
		double quotes ("..."): as a consequence, the generated ".aut"
		files could not be parsed by BCG_IO.

		Moreover, ALDEBARAN and BCG_IO did not interpret the ".aut"
		format with exactly the same conventions. Both tools have been
		aligned, so that ALDEBARAN now follows the same conventions
		as BCG_IO. In particular, two labels with the same string are
		now considered as identical, whether surrounded by double
		quotes or not: for instance, A and "A" are identical, i and "i"
		are identical, etc.
------------------------------------------------------------------------------
BUG FIX
Number:		717
Date: 		Tue Dec 12 19:04:31 MET 2000
Report:		Marc Herbert (INRIA/VASY)
Authors:	Hubert Garavel (INRIA/VASY) and Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran

Nature:		A bug was fixed in ALDEBARAN: due to a buffer overflow, the
		"-output FILENAME.bcg" option would not work on Linux: instead
		of generating a BCG file named "FILENAME.bcg", ALDEBARAN
		would generate a file named "FILENAME.bcg^A" (where ^A is the
		<Control-A> character) containing corrupted lines in ".aut"
		format. This bug would cause demo_15, demo_16, and demo_25
		to fail on Linux.
------------------------------------------------------------------------------
BUG FIX
Number:		718
Date: 		Thu Dec 14 09:44:20 MET 2000
Report:		Hubert Garavel (INRIA/VASY)
Author:		Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran

Nature:		A bug was fixed in ALDEBARAN: when invoked with not enough
		arguments, as in:
			aldebaran -path
		or
			aldebaran -path 1
 		the previous version of ALDEBARAN would abort with a core dump.
		The new version prints a proper error message:
		"Aldebaran fatal error: Command -path needs 2 arguments"
------------------------------------------------------------------------------
IMPROVEMENT
Number:		719
Date: 		Thu Dec 14 11:43:41 MET 2000
Report:		Charles Pecheur (INRIA/VASY)
Authors:	Hubert Garavel (INRIA/VASY) and Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran

Nature:		In the previous version of ALDEBARAN, the "-dead" option
		printed at most 20 deadlock states. The new version of
		ALDEBARAN prints all the existing deadlock states.
------------------------------------------------------------------------------
BUG FIX
Number:		720
Date: 		Thu Dec 14 14:02:38 MET 2000
Report:		Izak van Langevelde (CWI)
Author:		Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran

Nature:		A mistake was fixed in ALDEBARAN diagnostic messages:
		when comparing two non-equivalent graphs modulo observation
		equivalence, the diagnostic printed was:
		"LTSs 1.aut and 2.aut are not related modulo safety preorder."
		The new version of ALDEBARAN prints the correct diagnostic:
		"LTSs 1.aut and 2.aut are not related modulo observational
		equivalence."
------------------------------------------------------------------------------
BUG FIX
Number:		721
Date: 		Thu Dec 14 15:53:48 MET 2000
Report:		Hubert Garavel (INRIA/VASY)
Author:		Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran

Nature:		Another mistake was fixed in ALDEBARAN diagnostic messages:
		when comparing on the fly two non-equivalent graphs modulo
		branching bisimulation ("-pequ -fly"), the diagnostics
		generated by ALDEBARAN were incorrect (wrong sequences, wrong
		state numbers).
------------------------------------------------------------------------------
BUG FIX
Number:		722
Date: 		Thu Dec 14 16:50:00 MET 2000
Authors:	Hubert Garavel and Marc Herbert (INRIA/VASY)
Files:		bin.*/aldebaran, man/*/aldebaran.*,
		src/eucalyptus/eucalyptus.tcl

Nature:		The default value of ALDEBARAN's "-bddsize" option was
		increased from 4 to 64 Mbytes, so as to reflect the increased
		capabilities of modern hardware. The manual page was updated.

		In the EUCALYPTUS user-interface, it is now possible to select
		the value of bddsize in the range 0...690 (the former range
		was 0...64).

		A cryptic error message of ALDEBARAN:
		"Error : Sorry: bdd::not enough memory"
 		was enhanced:
 		"Error : Sorry, not enough memory allocated for BDDs.
		 Use -bddsize option to increase the amount of memory".
------------------------------------------------------------------------------
IMPROVEMENT
Number:		723
Date: 		Thu Dec 14 17:47:12 MET 2000
Authors:	Aline Senart and Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran, man/*/aldebaran.*

Nature:		Three new options "-pmin -std", "-pequ -std" and "-pcla -std"
		have been added to ALDEBARAN: these options allow to reduce
		and compare graphs modulo branching bisimulation, using the
		algorithm of Groote and Vaandrager.
------------------------------------------------------------------------------
BUG FIX
Number:		724
Date: 		Fri Dec 15 16:50:00 MET 2000
Authors:	Hubert Garavel and Laurent Mounier (INRIA/VASY)
Files:		bin.*/aldebaran

Nature:		When invoked on an erroneous ".aut" file that happened to
		be empty, the previous version of ALDEBARAN would abort with
		a core dump. This problem is fixed now: in such case, a proper
		error message will be displayed:
		"Aldebaran fatal error: invalid descriptor line in file "F.aut"
------------------------------------------------------------------------------
IMPROVEMENT
Number:		725
Date: 		Mon Dec 18 15:20:51 MET 2000
Report:		Solofo Ramangalahy (IRISA)
Author:		Radu Mateescu (INRIA/VASY)
Files:		man/manl/evaluator.l

Nature:		The manual page of EVALUATOR 3.0 has been improved by defining
		more precisely the relative priorities of all boolean and
		regular operators contained in temporal formulas.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		726
Date: 		Mon Dec 18 16:23:52 MET 2000
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		The EUCALYPTUS user-interface has been enriched with new
		livelock detection features:

		- A "Find livelocks" menu entry was added for ".lotos" and
		  ".LOTOS" files (livelocks are searched on-the-fly using
		  EVALUATOR 3.0).

		- For ".exp" files, one can now search for livelocks using
		  EVALUATOR 3.0 as an alternative to Aldebaran.

		- For ".aut", ".bcg", ".fc2", and ".seq" files, one can now
		  search for livelocks using EVALUATOR 3.0 as an alternative
		  to Aldebaran and Fc2Tools.
-----------------------------------------------------------------------------
BUG FIX
Number:		727
Date: 		Tue Dec 19 17:23:14 MET 2000
Report:		Gavril Godza (Polytechnic University of Bucarest, Romania),
		Frederic Perret (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.win32/libBCG.a, bin.win32/bcg_min

Nature:		A bug of BCG_MIN on Windows was fixed: when typing
			bcg_min -strong SOURCE.bcg DEST.bcg
		if the file DEST.bcg already existed, it was not modified:
		instead, SOURCE.bcg file was modified, exactly as if the
		following command had been typed:
			bcg_min -strong SOURCE.bcg
-----------------------------------------------------------------------------
IMPROVEMENT
Number:		728
Date: 		Tue Dec 19 19:21:42 MET 2000
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		A significant change has been brought to the Petri net model
		used internally by the CAESAR compiler (this model was defined
		formally in [Garavel-89-c] and later summarized in the paper
		[Garavel-Sifakis-90]). In this model, the action attached to
		a transition is executed before evaluating the offer attached
		to the transition.

		This model has been extended by introducing the notion of
		"reactions" attached to transitions, i.e., various actions
		(variable assignment and/or variable reinitialization) that
		are executed after evaluating the offer. The optimizations
		operating on the Petri net model have been modified in
		consequence. This extension of the network model leads to
		important improvements in CAESAR 6.0:

		- On many LOTOS examples, the numbers of places, transitions,
		  and variables of the network models generated by CAESAR are
		  are significantly reduced using the new model. For instance,
		  on an example given by Elie Najm, the number of places
		  decreases from 17 down to 4, the number of transitions from
		  60 down to 47, and the number of variables from 16 to 1.
		
		- The reduction of the network size often causes a reduction
		  in size of the corresponding Labelled Transition System.
		  The reduction factor can be several orders of magnitude.
		  For instance, in the example given by Elie Najm, the size
		  of the corresponding LTS is reduced from 304,305 states
		  down to 83 states and 1,434,070 transitions down to 364
		  transitions.

		- As a consequence, the LTS generation is also faster. On
		  several LOTOS examples studied by Fabrice Baray, the new
		  version of CAESAR is 150 times faster than the previous
		  one (the LTS size being approximately the same).

		These improvements take place in most cases. However, in
		some rare cases, the size of the network does not decrease
		uniformly: for instance, the number of variables may increase
		while the numbers of places and transitions decrease. In
		other cases, the number of states in the LTS may decrease
		while the number of transitions in the Petri net increases.
		But these problems remain very minor statistically and should
		not hide the benefits obtained in all other cases.

		Finally, in a few cases, the speed in LTS generation may
		decrease significantly. This is especially the case for
		the example given in demo_19, which now runs very slowly
		using CAESAR 6.0. This can be explained as follows: the
		network model generated with CAESAR 6.0 is smaller in size,
		but the number of epsilon-transitions has increased (while
		the total number of transitions was decreasing). In the
		future, this problem will be solved by implementing a new
		semantics for epsilon-transitions (in preparation).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		729
Date:		Wed Jan  3 17:30:38 MET 2001
Authors: 	Hubert Garavel, Marc Herbert, Frederic Lang (INRIA/VASY)
Files:		com/svl, bin.*/svl_kernel, src/svl/standard, man/*/svl.*

Nature:		A new tool named SVL ("Script Verification Language") was
		added to the CADP toolbox. The SVL language and its associated
		compiler target at simplifying and automating the multiple
		operations required for compositional verification of LOTOS
		programs.

		The syntax and semantics of the SVL language, as well as the
		documentation of the SVL compiler are defined in the SVL
		manual page (see "man svl").

		The SVL tool distributed in CADP is SVL 2.0, which is an
		entirely new tool. A previous version SVL 1.0 was used
		internally by the VASY team, but never distributed externally.

		The SVL language subsumes two other formalisms previously
		used in CADP: the ``.des'' format and the ``.exp'' format.

		In particular, the ``.des'' format and the DES2AUT tool are
		totally replaced by the SVL approach. The DES2AUT tool and
		the ``caesar.aldebaran'' shell-script are kept to preserve
		compatibility, but might be removed in future versions of
		CADP. Therefore, migrating from DES2AUT to SVL is strongly
		advised.

		On the other hand, the ``.exp'' format is kept, as several
		CADP tools (ALDEBARAN, EXP2C, EXP2FC2) will continue using
		this format. It is likely that SVL will make the ``.exp''
		format less visible to the end users as the ``.exp'' files
		will be generated automatically by the SVL compiler.
-------------------------------------------------------------------------------
BUG FIX
Number:		730
Date:		Thu Jan  4 09:38:51 MET 2001
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		man/*/aldebaran.l

Nature:		Several corrections have been brought to the ALDEBARAN manual
		page:

		   - The ``-hide'' option no longer requires that hiding
		     files have a ``.hide'' extension. Any extension is
		     permitted, but ``.hid'' and ``.hide'' are the ones
		     recognized by the EUCALYPTUS interface.

		   - The ``-rename'' option no longer requires that renaming
		     files have a ``.rename'' extension. Any extension is
		     permitted, but ``.ren'' and ``.rename'' are the ones
		     recognized by the EUCALYPTUS interface.

		   - The rule for selecting the default method has refined:
		     method ``-std'' is not always the default method; in
		     some cases defined in the manual, ``-bdd'' or ``-fly''
		     can be the default.

		   - It is now specified that, when using ``-pequ -fly'',
		     one of the two filenames must be a completely generated
		     LTS that does not contain any "tau" transition.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		731
Date:		Mon Jan  8 11:50:40 MET 2001
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		bin.*/aldebaran, bin.*/exp2fc2, bin.*/exp2c,
		bin.*/libexpopen.a, man/*/aldebaran.l, demos/*/*.exp

Nature:		The syntax of ``.exp'' files has been enhanced:	

		   - It is now possible to enclose file names between double
		     quotes. This allows to use non-alphanumeric characters
		     in file names, exactly as in SVL. The previous syntax
		     of filenames (without double quotes) is kept for
		     backward compatibility, but its use is now discouraged.

		   - It is now permitted to use parentheses in the behaviour
		     expressions contained in an ``.exp'' file.

		   - The syntax of the ``hide'' operator was made stricter:
		     according to the previous definition of the ``.exp''
		     format, it was possible to hide not only using gate
		     names, but also character strings, e.g.,
		        hide "gate !offer" in ...
		     The EXP2C and EXP2FC2 rejected those character strings
		     in ``.exp'' files. ALDEBARAN accepted them syntactically
		     but did not process them. The new syntax only accept gate
		     names in the ``hide'' operator. It is worth noticing that
		     the SVL language accepts both gate names, character
		     strings, and even regular expressions in its hiding
		     operator.

		The ALDEBARAN, EXP2C, and EXP2FC2 have been modified to
		implement these changes.
-------------------------------------------------------------------------------
BUG FIX
Number:		732
Date:		Wed Jan 10 13:09:06 MET 2001
Author: 	Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2fc2

Nature:		Due to a porting issue, the Linux version of EXP2FC2 could
		loop indefinitely. This problem was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		733
Date:		Wed Jan 10 14:47:17 MET 2001
Report: 	Marc Herbert and Stephane Martin (INRIA/VASY)
Author: 	Frederic Lang (INRIA/VASY)
Files:		bin.*/aldebaran

Nature:		The parser for ``.exp'' files contained in ALDEBARAN has been
		corrected. The previous parser accepted empty behaviours (and,
		in particular, empty ``.exp'' files), which caused ALDEBARAN
		to make a core dump.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		734
Date:		Fri Jan 12 12:14:12 MET 2001
Author: 	Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c, bin.*/exp2fc2, man/*/aldebaran.*

Nature:		The syntax of ``.exp'' files has been modified in two ways:
		  - The ``hide'' operator has been given a lower precedence
		    than the parallel composition operators
		  - The parallel composition operators have been made
		    associative to the right.	
		Due to these modifications, the conventions for ``.exp'' files
		are now fully aligned with LOTOS. The definition of the
		``.exp'' format in the ALDEBARAN manual page was updated.
		The ALDEBARAN tool has been left unchanged in this respect
		as it already implemented the new conventions. The EXP2C
		and EXP2FC2 tools have been modified accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		735
Date:		Fri Jan 12 12:29:17 MET 2001
Authors: 	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		bin.*/aldebaran, man/*/aldebaran.*

Nature:		The parser for ``.exp'' files contained in ALDEBARAN has been
		modified so as to allow hiding operators only at the top level
		of a composition expression. The previous version of the parser
		allowed hiding operators occuring as operands of parallel
		composition operators, which ALDEBARAN does not handle properly
		(contrary to EXP2C and EXP2FC2). The definition of the ``.exp''
		format in the ALDEBARAN manual page has been made more precise
		in this respect.
-------------------------------------------------------------------------------
BUG FIX
Number:		736
Date:		Fri Jan 12 17:56:41 MET 2001
Report:		Wayne Liu (Univ. of Waterloo) and Marc Herbert (INRIA/VASY)
Authors: 	Hubert Garavel, Frederic Lang (INRIA/VASY), and Laurent
		Mounier (VERIMAG)
Files:		bin.*/aldebaran, man/*/aldebaran.*
		demos/demo_10/=README.txt, demos/demo_11/=README.txt

Nature:		The option ``-exp2aut'' of ALDEBARAN did not work well and
		would sometimes abort with an error message of the form:
		   bcg_edge: previous state not increasing in BCG_WRITE_EDGE

		This problem was solved by removing the ``-exp2aut'' option
		from ALDEBARAN, as this option was redundant with the EXP2AUT
		and GENERATOR tools, which provide the same functionality.
		Instead of invoking
			aldebaran -exp2aut INPUT.exp -output OUTPUT.bcg
		one should now invoke:
			exp.open INPUT.exp generator [-monitor] OUTPUT.bcg

		Demos 10 and 11 have been updated to avoid using ``-exp2aut''.
-------------------------------------------------------------------------------
BUG FIX
Number:		737
Date:		Fri Jan 12 19:21:10 MET 2001
Report:		Marc Herbert (INRIA/VASY)
Authors: 	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		bin.*/exp2c

Nature:		EXP2C would fail with an error message of the form:
			exp2c: Error found in   !
		if the ``.exp'' file referred to an LTS file having incorrect,
		unexpected contents, e.g., a ``.bcg'' file containing anything
		but a BCG graph (for instance, a text file). This problem was
		fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		738
Date:		Fri Feb  2 13:00:34 MET 2001
Author: 	Radu Mateescu (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		A bug was fixed in CAESAR.ADT: the iteration macro generated
		for a single-value type T1 did not work if this type T1 was
		used in another tuple type T2 (i.e., if T2 contained a field
		of type T1). Due to this bug, the iteration macro for T2
		did not iterate correctly over all values of tye T2.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		739
Date:		Thu Feb  8 19:33:39 MET 2001
Authors:	Moez Cherif, Frederic Lang, and Hubert Garavel (INRIA/VASY)
Files:		man/*/ocis.*

Nature:		A manual page for the OCIS simulator has been produced. This
		page is best viewed in HTML form (so as to display screen
		snapshots, which cannot be seen when typing "man svl").
-------------------------------------------------------------------------------
BUG FIX
Number:		740
Date: 		Fri Feb 16 09:41:49 MET 2001
Report:		David Fernandes Cruz Moura (Univ. Federal do Rio de Janeiro)
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		demos/demo_{01,02,15}/verify-all-requirements

Nature:		A bug in the scripts that perform repeated calls of EVALUATOR
		was fixed: the calls to the evaluator binary file (which was
		created in the current directory) have been preceded by './'
		in order to handle the case when the user's $PATH variable
		does not include the current directory.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		741
Date: 		Wed Feb 21 16:38:42 MET 2001
Report:		Frederic Perret and Nicolas Zuanon (DYADE)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/evaluator.a

Nature:		The parser used in the back-end of EVALUATOR 3.0 has been
		improved in order to avoid stack overflow errors of yacc.
		These errors occurred during the analysis of input files
		containing large formulas (several thousand operators) and
		was caused by the left recursion of some grammar rules. These
		rules have been rewritten using right recursion (of course,
		without changing the recognized language), which does not
		cause the overflow error anymore.
-------------------------------------------------------------------------------
BUG FIX
Number:		742
Date:		Tue Mar 13 19:37:15 MET 2001
Report: 	Nissim Etrog (Technion, Israel), Volker Braun (Univ. of
		Dortmund)
Author: 	Hubert Garavel (INRIA/VASY)
Files:		bin.sun5/aldebaran

Nature:		ALDEBARAN would make a segmentation fault and a core dump
		on some (but not all) machines running Solaris 7. The reason
		was that the ALDEBARAN binary program for Sparc was statically
		linked (in fact, it was only dynamically linked against the
		libdl.so.1 library). The new binary is fully dynamically
		linked and is a compliant SPARC binary.
-------------------------------------------------------------------------------
BUG FIX
Number:		743
Date:		Thu Mar 15 15:27:31 MET 2001
Report:		David Kendall (Univ. of Northumbria, Newcastle upon Tyne, UK)
Author:		Hubert Garavel (INRIA/VASY)
Files:		tcl-tk/com/tixwish, tcl-tk/bin.iX86

Nature:		The Linux version of the OCIS simulator worked well on
		RedHat 6.* distributions, but not on RedHat 7.* ones: it
		failed with an error message of the form:
		  $CADP/tcl-tk/bin.iX86/tixwish: error while loading shared
		  libraries: libtix4.1.8.0.so: cannot open shared object
		  file: No such file or directory
		This problem was caused the absence of dynamic libraries
		needed to execute the ``tixwish'' binary distributed in
		$CADP/tcl-tk/bin.iX86. This binary was replaced with a more
		recent one and the appropriate libraries have been added to
		the CADP distribution.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		744
Date:		Mon Mar 19 20:12:02 MET 2001
Report:		Greg Eakman (Boston University), Bruno Ondet (INRIA/VASY)
Authors: 	Hubert Garavel (INRIA/VASY) with the help of Ernie Boyd
Files:		src/com/cadp_cc, src/windows/gcc-crtdll-specs

Nature:		The BCG tools did not work with the recent version 1.1.8
		of the Cygwin software. They would fail with an error
		message of the form:
     		  seek must be permitted for a bcg_file in BCG_OPEN_BINARY

		This problem was due to a recent change in the GCC compiler
		version 2.95.2-6 (the option -mno-cygwin now links against
		the MSVCRT library instead of the CRTDLL library) which
		caused an incompatibility in the data structures used by
		the fstat() function. The ``cadp_cc'' shell-script was
		modified so as to continue linking against CRTDLL.
-------------------------------------------------------------------------------
BUG FIX
Number:		745
Date:		Tue Mar 20 09:55:14 MET 2001
Report:		Bruno Ondet (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)

Nature:		An error was fixed in the EUCALYPTUS graphical user
		interface, the menu "Find a Path Leading to a State ..."
		would stock its results in a ``.aut'' file instead of a
		``.seq''. This problem was solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		746
Date:		Mon Mar 26 17:09:04 MET DST 2001
Report: 	Stephane Bordier (Univ. Paris XI Orsay), Nicolas Zuanon
		(BULL/DYADE)
Author: 	Frederic Perret and Hubert Garavel (INRIA/VASY)
Files:		bin.*/ocis.a, src/ocis/ocis.tcl

Nature:		Several improvements have been made to the OCIS simulator:

		   - OCIS is now launched as a background process, so as
		     not to block the EUCALYPTUS graphical user-interface
		     when launching OCIS from the "Advanced Simulation".

		   - In the window open by the "Save", the "Save" and
		     "Ignore" buttons have been renamed into "Yes" and "No",
		     respectively.

		   - The default file "noname.bcg" for saving scenarios has
		     been renamed into "untitled.bcg". Also, when executing
		     the commands "New", "Load", "Reset" and "Quit", the
		     user can now choose a different name for saving the
		     current scenario.

		   - When the OCIS window is destroyed from the window manager
		     (by clicking on the button with a cross), a window now
		     pops up to ask the user if the current scenario should
		     be saved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		747
Date:		Mon Mar 26 19:25:37 MET DST 2000
Author:		Hubert Garavel (INRIA/VASY)
Files:		doc/Garavel-Mateescu-Smarandache-01

Nature:		A new paper on massively parallel model-checking was added
		to the CADP distribution.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		748
Date:		Thu Mar 29 16:22:19 MET DST 2001
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		demos/=READ_ME.txt, demos/demo_01, demos/demo_10,
		demos/demo_11, demos/demo_17, demos/demo_18, demos/demo_20,
		demos/demo_25, demos/demo_27

Nature:		To benefit from the new SVL tool, all the CADP demo examples
		related to compositional verification have been modified so as
		to use SVL. Concretely, all ``.des'' and ``.exp'' files, as
		well as Makefiles and ``.rename'' files, have been eliminated
		and replaced with (simpler and shorter) ``.svl'' files. The
		corresponding =README.txt files have been updated accordingly.

		Also, demo_25 has been improved by performing LTS minimization
		according to branching bisimulation (using the BCG_MIN tool)
		instead of observational equivalence (using the ALDEBARAN
		tool). So doing, the time needed for verification is
		significantly reduced.
-------------------------------------------------------------------------------
BUG FIX
Number:		749
Date:		Mon Apr  9 14:38:10 MET DST 2001
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/com/xeuca_man

Nature:		In the Windows version of EUCALYPTUS, the "Help" menu could
		fail because the GNU "man" compresses manual pages in the
		"catl" directory using gzip. The "xeuca_man" shell-script
		was modified to invoke gunzip when appropriate.
-------------------------------------------------------------------------------
BUG FIX
Number:		750
Date:		Mon Apr  9 14:46:26 MET DST 2001
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/bcg_draw, src/com/cadp_postscript

Nature:		In several occasions, the Windows version of BCG_DRAW would
		fail because the PostScript file generated by BCG_DRAW could
		be removed before being displayed by Ghostview. This problem
		occurred randomly: it was probably caused by a race condition
		in the Cygwin "bash" shell. Several shell scripts have been
		modified to avoid this problem.
-------------------------------------------------------------------------------
BUG FIX
Number:		751
Date:		Mon Apr  9 15:44:16 MET DST 2001
Author:		Hubert Garavel (INRIA/VASY)
Files:		gc/bin.*/libgc.a

Nature:		The garbage collector library was upgraded from version
		4.14 to version 5.3 in order to solve a bug that caused
		"caesar -gc" to create segmentation violations on Windows.
-------------------------------------------------------------------------------
BUG FIX
Number:		752
Date:		Tue Apr 10 15:42:17 MET DST 2001
Report:		Gavril Godza (Polytechnic University of Bucharest, Romania)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/xeuca, src/com/eucalyptus

Nature:		Several problems have been fixed in the Windows version of
		the EUCALYPTUS graphical user interface:

		- It is now possible to enter directories (folders) the name
		  of which contains spaces (e.g., "Documents and Settings",
		  "Program Files", etc.)

		- The new version of EUCALYPTUS carefully avoids creating
		  file names starting with "//", as these names have a
		  different meaning in Windows than in Unix.

		- The new version of EUCALYPTUS no longer displays spurious
		  white lines in the right window.

		- The "Visualize" menu for labelled transition systems has
		  been simplified and reorganized (see item #610 above).
        	  "Draw in 2 dimensions" and "Edit in 2 dimensions" have
		  have been renamed into "Edit" and "Draw", respectively.
-------------------------------------------------------------------------------
BUG FIX
Number:		753
Date:		Tue Apr 10 15:52:50 MET DST 2001
Report: 	Eric Madelaine (INRIA Sophia Antipolis)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG.a, bin.*/bcg_io

Nature:		A bug was fixed in the Windows version of BCG_IO: due to an
		error in string allocation, some ``.aut'' files generated by
		BCG_IO could contain spurious <control-D> characters.
-------------------------------------------------------------------------------
BUG FIX
Number:		754
Date:		Tue Apr 10 20:41:24 MET DST 2001
Author:		Radu Mateescu (INRIA/VASY)
Files:		incl/caesar_table_1.h

Nature:		In the declaration of CAESAR_CREATE_TABLE_1(), the type of
		the argument CAESAR_PRINT was not aligned on the Open/Caesar
		reference manual. This type was changed from
			void (*) (CAESAR_TYPE_FILE, CAESAR_TYPE_TABLE_1)
		to
			void (*) (CAESAR_TYPE_FILE, CAESAR_TYPE_POINTER)
		This change is upward compatible for all Open/Caesar appli-
		cations, as CAESAR_TYPE_TABLE_1 is defined as a synonym of
		CAESAR_TYPE_POINTER.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		755
Date:		Wed Apr 11 19:02:04 MET DST 2001
Authors:	Massimo Zendri (BULL/DYADE),  Hubert Garavel and Frederic
		Lang (INRIA/VASY)
Files:		demos/demo_28, demos/=README.txt

Nature:		A new demo example (describing a simple cache coherency
		protocol) has been added to the CADP distribution.
-------------------------------------------------------------------------------
BUG FIX
Number:		756
Date: 		Wed Apr 18 11:21:49 MET DST 2001
Report:		Benoit Fraikin (Universite de Sherbrooke, Canada)
Author:		Radu Mateescu (INRIA/VASY)
Files:		src/xtl/mu_calculus.xtl

Nature:		A minor error in a comment ("lfp" instead of "gfp") was
		fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		757
Date:		Fri Apr 27 14:32:21 MET 2001
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		bin.*/bcg_labels

Nature:		BCG_LABELS assumed that the initial state of the input graph
		was always 0. This problem was solved and BCG_LABELS now
		takes into account the initial state of the input graph.
-------------------------------------------------------------------------------
BUG FIX
Number:		758
Date:		Fri Apr 27 17:44:38 MET 2001
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		bin.*/bcg_io

Nature:		BCG_IO did not handle properly some FC2 graphs (those for
		which the initial state was different from 0 and specified
		using a declaration of the form ``hX>Y'' rather than
		``h"initial">Y'', where X is an entry in the logics table
		of the FC2 file and Y is the number of the initial state.
		This problem was solved if X=0 (assuming that the entry 0
		in the logics table is "initial"). The new version of BCG_IO
		should accept all FC2 files generated from Esterel programs
		using the OCFC2 tool.
-------------------------------------------------------------------------------
BUG FIX
Number:		759
Date:		Mon Jun  6 17:10:21 MET DST 2001
Author:		Frederic Perret (INRIA/VASY)
Files:		bin.*/ocis.a, src/ocis/ocis.tcl

Nature:		The preferences specified in the OCIS startup file .ocisrc
		were not taken into account. This problem was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		760
Date:		Thu Jun  7 12:22:48 MET DST 2001
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl, src/com/xeuca_ps

Nature:		The EUCALYPTUS graphical interface has been improved in
		three ways:

		- In the menu of commands applicable to explicit LTSs, a
		  new command "Display Labels" was added: it prints all the
		  labels attached to the transitions of an LTS.

		- The "Kill" button of the right window was not functioning
		  properly on Windows. This issue is solved.

		- The options specific to CAESAR.ADT ("-trace", "-debug"...)
		  that the user can set using the "Options" menu were only
		  passed to CAESAR.ADT when this tool was invoked directly,
		  but not when CAESAR.ADT was called indirectly by the
		  "caesar.open" script. This problem was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		761
Date:		Thu Jun  7 16:46:47 MET DST 2001
Report:		Frederic Lang (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/evaluator.a, bin.*/xtl, bin.*/xtl_expand

Nature:		A bug was fixed in the XTL_EXPAND, XTL and EVALUATOR tools:
		the preprocessed files (with extension ".xm" or ".xp")
		produced by XTL_EXPAND are created in the current directory
		instead of the directory in which the input file (with
		extension ".xtl" or ".mcl") is located. This avoids file
		opening errors when the directory of the input file is
		unwritable.
-------------------------------------------------------------------------------
BUG FIX
Number:		762
Date:		Thu Jun  7 18:01:29 MET DST 2001
Author:		Hubert Garavel (INRIA/VASY)
Files:		demos/demo_19/=READ_ME.txt, demos/demo_19/start,
		demos/demo_19/graphics/startsimu

Nature:		Various changes have been brought to the demo_19 example in
		order to adapt it to Windows.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		763
Date:		Thu Jun 14 18:26:42 MET DST 2001
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		demos/demo_06, demos/demo_21, demos/demo_22, demos/demo_23,
		demos/demo_24, demos/demo_26

Nature:		Six more demo examples have been simplified in order to take
		advantage of the new SVL technology. The Makefiles used
		previously in these examples have been replaced by shorter,
		simpler SVL files.
-------------------------------------------------------------------------------
BUG FIX
Number:		764
Date: 		Mon Jun 25 12:55:30 MET DST 2001
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		bin.*/des2aut, bin.*/exp2c, bin.*/libexp.open,
		bin.*/projector.a

Nature:		A subtle bug was fixed in the CADP tools for compositional
		verification: when an ``.exp'' file started with the keyword
		``behaviour'' (meaning that all lower-case letters in labels
		must be converted to upper-case letters in order to achieve
		case-unsensitivy in labels), there was a problem if the
		leaves of the behaviour expression contained in the ``.exp''
		file were LTSs generated by the PROJECTOR tool: the special
		labels of the form ":fail:*" generated by PROJECTOR were
		converted to upper-case and thus were not eliminated by the
		``-interfaceuser'' option of EXP.OPEN. To avoid the problem,
		the special labels have been renamed into ":FAIL:*" so as
		to remain invariant when upper-case conversion is applied.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		765
Date:		Thu Jun 25 14:36:55 MET DST 2001
Report:		Hubert Garavel (INRIA/VASY)
Authors:	Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl.*,
		demos/demo_01, demos/demo_02, demos/demo_14, demos/demo_15,
		demos/demo_20, demos/demo_21, demos/demo_22

Nature:		The SVL language has been enriched with a new statement
		(``verify''), which allows to evaluate mu-calculus formulas
		using the EVALUATOR 3.0 tool.

		The examples demo_01, demo_02, demo_15, demo_20, demo_21,
		and demo_22 have been greatly simplified by using the new
		``verify'' instruction, which allowed in particular to get
		rid of the ad hoc shell-scripts used previously, namely
		"verify-all-requirements" and "verify-all-properties".

		The readability of demo_14 was significantly improved by
		removing all the ``.hide'' and ``.rename'' files and by
		using the ``hide'' and ``rename'' operators of SVL instead.

		Also, in most examples, the verification commands
		contained in the =READ_ME.txt files and/or various shell-
		scripts have been gathered at a single place (in the
		``.svl'' files).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		766
Date:		Thu Jul  5 11:16:39 MEST 2001
Author:		Radu Mateescu (INRIA/VASY)
Files:		src/xtl/actl_pattern.mcl, src/xtl/mcl_pattern.mcl,
		src/xtl/READ_ME

Nature:		A new EVALUATOR 3.0 library "mcl_pattern.mcl" has been added
		and the previous library "actl_pattern.mcl" has been extended.
		These libraries encode the generic property patterns defined
		by Prof. Matthew Dwyer (Kansas State University) in regular
		alternation-free mu-calculus and in ACTL, respectively.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		767
Date: 		Mon Jul  9 13:09:32 MEST 2001
Author:		Hubert Garavel (INRIA/VASY)
Files:		man/*/installator.*, man/*/tst.*

Nature:		Two manual pages for INSTALLATOR and TST have been added.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		768
Date: 		Mon Jul  9 17:45:41 MEST 2001
Authors:	Manuel Aguilar, Hubert Garavel, and Radu Mateescu (INRIA/VASY)
Files:		demos/demo_29

Nature:		A new demo example (dynamic reconfiguration protocol for
		agent-based applications) was added to the CADP toolbox.
-------------------------------------------------------------------------------
BUG FIX
Number:		769
Date: 		Thu Jul 12 16:55:48 MEST 2001
Report:		Radu Mateescu (INRIA/VASY)
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		src/com/cadp_rm, demos/*, com/svl, src/svl/standard

Nature:		A minor problem was fixed for the Windows/Cygwin platform.
		The executable files created by Open/Caesar (such as
		"executor", "evaluator"...) could not be removed, as the
		Cygwin GCC compiler would add ".exe" extension to their names
		(e.g., "executor.exe", "evaluator.exe"...). To solve this
		problem, a new script "cadp_rm" was introduced, which performs
		file deletion in a portable way across platforms. Several
		demo examples and the SVL compiler have been modified to use
		this new shell-script.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		770
Date: 		Fri Jul 13 12:12:11 MEST 2001
Authors:	Hubert Garavel, Frederic Lang, Radu Mateescu et al (INRIA/VASY)
Files:		doc/Aguilar-Garavel-et-al-01.ps, doc/Garavel-Lang-01.ps

Nature:		Two new papers have been added: one describes a case-study
		done with EVALUATOR 3.0, and the other presents the principles
		of SVL.
-------------------------------------------------------------------------------
VERSION 2001    "Ottawa"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		771
Date: 		Tue Aug 28 16:34:50 MEST 2001
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.sun4, games/bin.sun4, gc/bin.sun4, tcl-tk/bin.sun4,
		INSTALLATION, INSTALLATION_2, INSTALLATION_4.

Nature:		The "sun4" architecture will no longer be supported after
		CADP 2001 "Ottawa": consequently, SunOS 4.1.* binaries have
		been removed from the CADP distribution. The installation
		files have been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		772
Date: 		Tue Aug 28 17:59:11 MEST 2001
Authors:	Hubert Garavel, Bruno Ondet, Frederic Perret (INRIA/VASY)
Files:		demos/demo_19/graphics/doc/*.{ps,pdf},
		demos/demo_25/cfs.{ps,pdf}, demos/demo_25/=READ_ME.txt,
		doc/=READ_ME.txt, doc/dvi/*.dvi, doc/ps, doc/pdf,
		man/pdf, man/*/projector.*, man/*/caesar.adt.*, man/*/svl.*,
		src/com/cadp_postscript, src/eucalyptus/eucalyptus.tcl

Nature:		The PostScript documents of the CADP distribution are now
		also available in Adobe's PDF format. This required many
		changes:

		- In the "demos" directory: PDF files have been added for
		  demos 19 and 25 and the existing PostScript files have been
		  compressed in order to save space.

		- In the "doc" directory: all PostScript documents for which
		  we had the LaTeX source available have been regenerated
		  using vectorial fonts instead of bitmap fonts; the PDF
		  files have been added; the existing documents have been
		  organized in three sub-directories named doc/dvi, doc/ps,
		  and doc/pdf; PostScript files have been compressed.

		- In the "man" directory: a new sub-directory named man/pdf
		  has been added; the manual pages referring to PostScript
		  files named doc/*.ps have been updated.

		- The shell-script src/com/cadp_postscript has been extended
		  to display compressed PostScript files (with extension
		  ".ps.Z"), which are uncompressed on the fly.

		- The EUCALYPTUS graphical user-interface has been extended
		  to handle compressed PostScript files.
-------------------------------------------------------------------------------
BUG FIX
Number:		773
Date: 		Fri Aug 31 15:28:31 MEST 2001
Report:		Bert Lisser (CWI, The Netherlands), Benoit Fraikin (Univ. of
		Sherbrooke, Canada)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_hostname, com/tst, com/rfl

Nature:		Three shell-scripts ("cadp_hostname", TST, and RFL) have been
		updated so as to avoid an incorrect warning emitted by "tst":
		   License file ``$CADP/LICENSE'' exists
		   *** No license exists for host ``xxx''
		   ==> Read the INSTALLATION file to apply the RFL procedure
-------------------------------------------------------------------------------
BUG FIX
Number:		774
Date:		Wed Oct  3 17:55:33 MEST 2001
Report:		Holger Hermanns (University of Twente)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel

Nature:		SVL could generate ``.exp'' files containing a "hide all but"
		operator, which is not available for this format. This was not
		accepted by the tools reading the EXP format (ALDEBARAN,
		EXP.OPEN, etc.). The "all but" feature is at now processed
		correctly using the BCG_LABELS tool.
-------------------------------------------------------------------------------
BUG FIX
Number:		775
Date:		Thu Oct  4 10:00:32 MEST 2001
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		com/svl, bin.*/svl_kernel, src/svl/standard

Nature:		Option -sh of SVL was not working properly (shell options
		passed to SVL were ignored). This problem was fixed.

		Also, all warnings and error messages issued by SVL have been
		rewritten in order to be simpler and self-explanative.
-------------------------------------------------------------------------------
BUG FIX
Number:		776
Date: 		Mon Oct 15 18:48:52 MEST 2001
Authors:	Hubert Garavel (INRIA/VASY) and Holger Hermanns (Univ. Twente)
Files:		man/*/bcg_min.*

Nature:		The manual page of BCG_MIN was modified to be compatible with
		the BCG_MIN tool: when option "-rate" is selected, BCG_MIN will
		check for conflicts between "rate" and hidden transitions (and
		remove conflicting "rate" transitions) if the "-branching"
		option is selected (when the "-strong" option is selected,
		no such checking is done).
-------------------------------------------------------------------------------
BUG FIX
Number:		777
Date: 		Thu Oct 18 15:54:17 MEST 2001
Report:		Thomas Arts (Ericsson, Sweden)
Author:		Frederic Lang (INRIA/VASY)
Files:		src/svl/standard, bin.*/svl_kernel

Nature:		When processing an instruction of the form:
			"file.bcg" = rename A -> B in "file.aut"
	 	SVL would generate "file.bcg" and remove it afterwards. SVL
		was designed under the assumption that two files with the
		same prefix would necessarily represent LTSs with the same
		behavior. Hence, if "file.aut" had to be converted to the BCG
		format, then the converted graph was stored in "file.bcg",
		but still considering that "file.bcg" was a temporary file
		that should be removed when SVL terminates.

		Although documented in the SVL manual, this assumption proved
		to be over-constraining, as users may ignore SVL conventions
		or forget about them. To avoid user files from being removed
		or modified accidentally, this assumption has been abandoned
		in the new version of SVL, in which every temporary file is
		given a unique name.
-------------------------------------------------------------------------------
BUG FIX
Number:		778
Date: 		Thu Oct 25 17:58:11 MEST 2001
Report:		Holger Hermanns (University of Twente)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel

Nature:		Strings enclosed in quotes were converted to uppercase. This
		has been changed since it did not satisfy the specification of
		SVL.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		779
Date:		Mon Nov 19 11:15:18 MET 2001
Report:		Thomas Arts (Ericsson, Sweden)
Authors: 	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		com/svl, man/*/svl.*, src/eucalyptus/eucalyptus.tcl

Nature:		SVL scripts can now be parameterized with arguments passed on
		the command line when the SVL compiler is invoked. These
		parameters are referred to using the classical notations: $#,
		$*, $@, $1, $2, etc., exactly as in Bourne shell scripts.

		The EUCALYPTUS graphical user-interface was modified: when
		an SVL script is to be executed, a window opens, in which it
		is possible to input the aforementioned parameters.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		780
Date: 		Mon Nov 19 16:28:20 MET 2001
Author:		Frederic Lang (INRIA/VASY)
Files:		demos/demo_20/=READ_ME.txt, demos/demo_27/=READ_ME.txt

Nature:		The =READ_ME.txt files of demos 20 and 27 have been extended
		with performance tables for compositional verification.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		781
Date: 		Thu Nov 22 12:06:30 MET 2001
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		bin.*/bcg_io, bin.*/libBCG_IO.a, man/*/bcg_io.*,
		src/eucalyptus/eucalyptus.tcl

Nature:		A new option ``-graphviz'' was added to BCG_IO in order to
		produce the ``.dot'' format needed by ATT's graph visualization
		package GRAPHVIZ. This offers to CADP users a new mean to
		visualize BCG graphs, in addition to the advanced capabilities
		already provided by BCG_DRAW and BCG_EDIT.

		In the EUCALYPTUS graphical user-interface, this functionality
		is now accessible using the "Convert" item in contextual menus.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		782
Date: 		Thu Jan 17 18:56:17 MET 2002
Authors:	Hubert Garavel, Frederic Lang, and Radu Mateescu (INRIA/VASY)
Files:		doc/*/Garavel-Mateescu-Smarandache-01.*,
		doc/*/Garavel-Lang-Mateescu-01.*,
		doc/*/Garavel-Lang-Mateescu-02.*,
		doc/*/Lang-02.*, doc/=READ_ME.txt

Nature:		A revised version of the Garavel-Mateescu-Smarandache-01 paper
		has been installed in the "doc" directory. Three new papers
		(on CADP 2001, SVL, and LOTOS NT respectively) have also been
		added.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		783
Date: 		Fri Jan 18 18:47:41 MET 2002
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/des2aut, bin.*/READ_ME, man/*/des2aut.*

Nature:		As foreseen (see item #729 above), the Des2Aut tool has been
		removed, since Des2Aut is superseded by SVL entirely.
-------------------------------------------------------------------------------
BUG FIX
Number:		784
Date: 		Thu Apr  4 10:36:30 MEST 2002
Report:		Solofo Ramangalahy (BULL)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/caesar.open

Nature:		A bug was fixed in the "caesar.open" shell-script, which
		prevented the "-include" option from working correctly.
-------------------------------------------------------------------------------
BUG FIX
Number:		785
Date:		Thu Apr  4 12:54:09 MEST 2002
Author:		Frederic Lang (INRIA/VASY)
Files:		src/svl/standard

Nature:		The string prefixing failure labels in PROJECTOR and EXP.OPEN
		had changed from ":fail:" to ":FAIL:". The change has now been
		passed on to SVL, checking the presence of ":FAIL:" in LTSs
		generated compositionally using abstraction.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		786
Date: 		Wed Apr 10 10:27:36 MEST 2002
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libcaesar.a

Nature:		Various enhancements have been brought to OPEN/CAESAR's
		"caesar_table_1" library:

		- Function CAESAR_PRINT_TABLE_1() now displays statistics
		  about the average, minimal, and maximal length of collision
		  lists.

		- When the user specifies a maximal number of elements in
		  the table (by giving to the parameter CAESAR_LIMIT_SIZE of
		  CAESAR_CREATE_TABLE_1() a value different from zero),
		  changes were made to reduce the number of pages, the size
		  of pages, and the number of hash table entries. For tables
		  with few elements, the gain in memory can be up to 75,000
		  bytes per table, together with a noticeable gain in speed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		787
Date: 		Mon Apr 15 17:11:43 MEST 2002
Author:		Radu Mateescu (INRIA/VASY)
Files:		doc/*/Mateescu-02.*

Nature:		A new paper on EVALUATOR has been added to the CADP release.
-------------------------------------------------------------------------------
BUG FIX
Number:		788
Date: 		Fri Apr 19 18:34:24 MEST 2002
Report:		Arnaud Gavara (Ecoles des Mines de Nancy, France)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/rfl

Nature:		In some cases (depending on the environment variable LC_ALL),
		the RFL command could generate an invalid license file, in
		which the dates were not expressed in English. This problem
		was solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		789
Date: 		Mon Apr 22 18:50:09 MEST 2002
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/cadp_memory, com/swapsize, INSTALLATION_2,
		src/com/open_caesar/predictor.c, man/*/predictor.l

Nature:		The "com/swapsize" command has been replaced by an improved
		version named "bin.*/cadp_memory". This new version brings
		support for the Windows operating system; it also gives more
		accurate results for Solaris and Linux; finally, it takes
		into account the new environment variable $CADP_MEMORY
		described in the updated version of file INSTALLATION_2.

		The PREDICTOR tool of OPEN/CAESAR has been modified to use
		"cadp_memory" instead of "swapsize". Its manual page has been
		updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		790
Date: 		Tue Apr 23 09:35:26 MEST 2002
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/cadp_hostinfo, bin.*/hostinfo, com/rfl, com/tst,
		src/eucalyptus/eucalyptus.tcl

Nature:		To avoid conflicts with other software, the program "hostinfo"
		in directory $CADP/bin.* has been renamed into "cadp_hostinfo".
		The RFL, TST, and EUCALYPTUS tools have been updated
		accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		791
Date: 		Tue Apr 30 09:12:56 MEST 2002
Author:		Hubert Garavel (INRIA/VASY)
Files:		incl/caesar_*.h, bin.*/libcaesar.a, bin.*/libbcg_open.a,
		bin.*/caesar, bin.*/exp2c, bin.*/libseq_open.a,
		man/*/caesar_standard.*, doc/*/Garavel-92-a.*

Nature:		The OPEN/CAESAR include files (contained in $CADP/incl) have
		been enhanced in several respects:

		- The C function prototypes have been activated in order to
		  enable C++ compiling.

		- A bug was fixed in file "caesar_diagnostic_1.h" regarding
		  the type of the first arguments of the two functions
		  CAESAR_CREATE_DIAGNOSTIC_1() and CAESAR_DELETE_DIAGNOSTIC_1()
		  which are of type (CAESAR_TYPE_DIAGNOSTIC_1 *) instead of
		  CAESAR_TYPE_DIAGNOSTIC_1.

		- The "caesar_graph.h" file was modified to ensure that types
		  CAESAR_TYPE_STATE and CAESAR_TYPE_LABEL are systematically
		  defined, since these types are used in function prototypes
		  (such as CAESAR_COMPARE_STATE()).

		- All OPEN/CAESAR compliant compilers (i.e., BCG_OPEN,
		  CAESAR, EXP.OPEN, and SEQ.OPEN) have been updated so as
		  not to define CAESAR_TYPE_STATE and CAESAR_TYPE_LABEL
		  any longer, but instead to import the definitions present
		  in file "caesar_graph.h" (this requires to set, in the C
		  code generated or used by these compilers, the macro
		  CAESAR_GRAPH_IMPLEMENTATION to an integer number expressing
		  the current OPEN/CAESAR version number).

		- The "caesar_graph" manual page was updated to explain how
		  to define the CAESAR_GRAPH_IMPLEMENTATION macro and the
		  CAESAR_TYPE_STATE and CAESAR_TYPE_LABEL types.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		792
Date: 		Tue Apr 30 20:37:14 MEST 2002
Report:		Jack Abily and Solofo Ramangalahy (BULL)
Author:		Hubert Garavel (INRIA/VASY)
Files:		incl/caesar_kernel.h, bin.*/caesar

Nature:		The C function prototypes contained in file "caesar_kernel.h"
		file, which defines the EXEC/CAESAR API, have been activated.
		Also, file "caesar_kernel.h" now defines the CAESAR_TYPE_STATE
		and CAESAR_TYPE_LABEL types, in the same way as for file
		"caesar_graph.h" (see item #791 above). The C code generated
		by CAESAR with option "-exec" has been updated to reflect
		these changes.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		793
Date:		Tue May 21 15:24:19 MEST 2002
Report:		Hubert Garavel (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		src/svl/standard, bin.*/svl_kernel, man/*/svl.l

Nature:		It is now possible to use shell variables in process calls.
		To this aim, process calls can be written between quotes.
		Examples:

		(1) % for PROC in RECEIVER TRANSMITTER MEDIUM1 MEDIUM2
		    % do
		       "$PROC.bcg" = generation of "bitalt.lotos":"$PROC"
		    % done
		generates in turn the graphs of "bitalt.lotos":RECEIVER,
		"bitalt.lotos":TRANSMITTER, "bitalt.lotos":MEDIUM1, and
		"bitalt.lotos":MEDIUM2.

		(2) % for PROC in P1 P2
		    % do
		    % for GATE in SEND RECV
		    % do
		       "$PROC_$GATE.bcg" =
			   generation of "spec.lotos":"$PROC [$GATE]"
		    % done
		    % done
		generates in turn the graphs of "spec.lotos":P1 [SEND],
		"spec.lotos":P1 [RECV], "spec.lotos":P2 [SEND], and
		"spec.lotos":P2 [RECV].

		Similarly, gates (occurring in parallel composition, semi-
		composition operators, and process calls) and process
		identifiers can now be specified using shell variables
		(enclosed between double quotes). In Example (2) above,
		"$PROC [$GATE]" can equivalently be written "$PROC" ["$GATE"].
		In particular, it is now possible to parameterize parallel
		composition expressions, as in the following SVL script:
		   "result.bcg" = "$1.bcg" |[ "$3" ]| "$2.bcg"
		   (* usage : svl arg1 arg2 arg3
		    * where arg1 and arg2 are two BCG graphs to compose in
		    * parallel, and arg3 denotes the gates on which these
		    * graphs must be synchronized. For instance,
		    *    svl file1 file2 "G1, G2"
		    * computes "file1.bcg" |[G1, G2]| "file2.bcg"
		    *)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		794
Date: 		Fri May 31 11:13:44 MEST 2002
Authors:	Hubert Garavel and Bruno Ondet (INRIA/VASY)
Files:		INSTALLATION_0, INSTALLATION_2, cadp_cygwin.com
		com/tst, src/com/cadp_postscript, src/com/cadp_psbox

Nature:		The directives for installation have been updated to take
		into account the recent versions of Cygwin, GhostScript,
		and Gsview, and to mention that ".profile" rather than
		".bashrc" should be used as the startup file.

		The "tst" command has been updated to report when an existing
		".bashrc" file should be renamed into ".profile", and to
		reflect the fact that recent versions of Cygwin (1.3.10 and
		beyond) come with a "/bin/indent" command.
-------------------------------------------------------------------------------
BUG FIX
Number:		795
Date: 		Thu Jun  6 11:31:57 MEST 2002
Report:		Clara Benac Earle (University of Kent at Canterbury, UK)
Author:		Frederic Lang (INRIA/VASY)
Files:		src/svl/standard

Nature:		ALDEBARAN might take a lot of memory when minimizing for the
		safety equivalence minimization ("-smin" option). In the case
		of abstraction interface graphs, when this minimization failed,
		SVL did not try to apply minimization for stronger equivalence
		first, before applying safety minimization. This was fixed:
		the safety minimization of abstraction interfaces now invokes
		the advanced minimization function of SVL, i.e., if ALDEBARAN
		fails, SVL will invoke first BCG_MIN with a stronger equiva-
		lence than safety, and later retry ALDEBARAN on the minimized
		graph.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		796
Date: 		Fri Jun  7 15:21:12 MEST 2002
Authors:	Hubert Garavel and Bruno Ondet (INRIA/VASY)
Files:		bin.*/caesar

Nature:		The maximal number of states that can be stored by CAESAR was
		increased from 16,777,216 (i.e., 2^24) up to 4,294,967,296
		(i.e., 2^32). On Intel-based machines (architectures "iX86"
		and "win32"), accesses have been made faster by using word
		operations instead of byte operations.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		797
Date: 		Tue Jun 25 09:19:03 MEST 2002
Report:		Vincent Bories-Azeau (CNES, Toulouse) and Gilles Stragier
		(INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		incl/bcg_*.h

Nature:		C function prototypes have been added to all BCG functions
		declared in the "bcg_*.h" include files. This enables
		programs written in C++ to invoke the BCG primitives.
-------------------------------------------------------------------------------
BUG FIX
Number:		798
Date: 		Tue Jun 25 18:50:22 MEST 2002
Report:		Salem Derisavi (Univ. of Illinois at Urbana/Champaign, USA)
Authors:	Holger Hermanns (Univ. of Sarrebruck, Germany) and Hubert
		Garavel (INRIA/VASY)
Files:		bin.*/bcg_min

Nature:		A bug in BCG_MIN was discovered: when minimizing certain
		stochastic systems, the reduced Markov chain produced by
		BCG_MIN was not always minimal (i.e., in some cases, it did
		not satisfy the strong lumping condition). This problem was
		fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		799
Date: 		Fri Jun 28 11:10:55 MEST 2002
Authors:	Hubert Garavel and Bruno Ondet (INRIA/VASY)
Files:		bin.*/bcg_io, bin.*/libBCG_IO.a, man/*/bcg_io.*,
		src/eucalyptus/eucalyptus.tcl

Nature:		Two new options ``-gml'' and ``-vcg'' were added to BCG_IO in
		order to produce the ``.gml'' and ``.vcg'' formats needed by
		the graph drawing tools TULIP and VCG (for more information
		see http://dept-info.labri.u-bordeaux.fr/~auber/projects/tulip
		and http://rw4.cs.uni-sb.de/~sander/html/gsvcg1.html
		respectively). This provides two new ways to visualize BCG
		graphs, in addition to BCG_DRAW and BCG_EDIT, and to the
		Graphviz connection (see above #781).

		In the EUCALYPTUS graphical user-interface, this functionality
		is now accessible using the "Convert" item in contextual menus.
-------------------------------------------------------------------------------
BUG FIX
Number:		800
Date: 		Sat Jun 29 10:41:33 MEST 2002
Report:		Jack Abily and Solofo Ramangalahy (BULL)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		In the C code generated by CAESAR (using any option such as
		"-aldebaran", "-bcg", "-exec", "-open", "-simulator"), two
		pointers remained uninitialized (one in the table of positions
		and one in the table of successors), which could lead to
		errors (segmentation fault / core dump) on some examples.
		This problem was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		801
Date: 		Thu Jul  4 19:59:46 MEST 2002
Author:		Hubert Garavel (INRIA/VASY)
Files:		doc/*/Garavel-Hermanns-02.*, doc/=READ_ME.txt

Nature:		A technical report explaining how to use CADP for
		compositional verification and performance evaluation of
		probabilistic/stochastic systems was added.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		802
Date:		Fri Jul 19 14:27:13 MEST 2002
Report: 	Nicolas Stouls (LSR-IMAG, Grenoble, France)
Author:		Hubert Garavel (INRIA/VASY)
Files:		man/*/bcg_read.*, man/*/bcg_write.*

Nature:		The "bcg_read" and "bcg_write" manual pages have been enhanced
		by giving the command-line needed to compile programs making
		use of the "bcg_read" and "bcg_write" APIs.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		803
Date: 		Fri Jul 19 14:41:51 MEST 2002
Report:		Thierry Heuillard (France Telecom R&D)
Author:		Hubert Garavel (INRIA/VASY)
Files:		INSTALLATION_0

Nature:		The directives for installing Cygwin on Windows have been
		enhanced in order to use the option "Use IE5 Settings" when
		FTP transfers must be done through a proxy.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		804
Date: 		Fri Aug  2 20:02:26 MEST 2002
Report:		Mostefa Belarbi (INSA Lyon, France)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/rfl

Nature:		RFL has been enhanced to check the validity of the arguments
		given with its options "-f", "-d", "-i", "-l", "-n", and "-a"
		and to emit better error messages when such arguments are
		missing or incorrect.
-------------------------------------------------------------------------------
BUG FIX
Number:		805
Date: 		Fri Aug 23 15:27:47 MEST 2002
Report:		Pavel Burget (Czech Technical University)
Author:		Hubert Garavel (INRIA/VASY)
Files:		gc/bin.*/libgc.a

Nature:		The Boehm-Demers garbage collection library has been upgraded
		from version 5.3 to version 6.0. The version 5.3 used so far
		was not compatible with Linux RedHat 7.3 and would cause a
		segmentation fault when invoking CAESAR with "-gc" option.
-------------------------------------------------------------------------------
BUG FIX
Number:		806
Date:		Wed Sep  4 17:08:11 MEST 2002
Author:		Frederic Lang (INRIA/VASY)
Files:		src/installator/installator.tcl

Nature:		In the case where $CADP and $CADP_TMP would be located in
                the same disk partition (which is unfrequent on Unix, but
		may occur on Windows/Cygwin), INSTALLATOR would not check
		properly that sufficient disk space is available to install
		CADP, and thus could finish abruptly. This problem was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		807
Date: 		Mon Sep 23 20:29:37 MEST 2002
Report:		Pierre-Olivier Ribet (LAAS-CNRS, Toulouse, France)
Authors:	Nicolas Decoubes, Hubert Garavel, and Bruno Ondet (INRIA/VASY)
Files:		com/bcg_info, bin.*/libbcg_info*, man/*/bcg_info.*,
		man/*/aldebaran.*

Nature:		Contrary to what was stated in the ALDEBARAN manual page,
		the "-path" option of ALDEBARAN does not always compute the
		shortest path leading to a given state: for one example
		considered at LAAS-CNRS, ALDEBARAN produced at path with 1232
		transitions whereas the shortest path has 852 transitions only.

		The problem has been addressed in several ways:
		- The manual page for ALDEBARAN was updated to mention that
		  option "-path" does not always produce the shortest path;
		- The BCG_INFO tool was enhanced with a new option "-path"
		  that computes the shortest path; see "man bcg_info" for
		  details.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		808
Date: 		Tue Sep 24 14:55:28 MEST 2002
Authors:	Hubert Garavel and Bruno Ondet (INRIA/VASY)
Files:		com/bcg_info, bin.*/libbcg_info*, man/*/bcg_info.*

Nature:		Besides the aforementioned "-path" option, BCG_INFO was
		enhanced with many new options, including "-branching",
		"-compact", "-deadlock", "-deterministic", "-hidden", "-line",
		"-unreachable", and "-verbose". See "man bcg_info" for a
		description of these new features.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		809
Date: 		Wed Sep 25 12:03:38 MEST 2002
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/xeuca, src/com/xeuca_man, src/eucalyptus/eucalyptus.tcl,
		src/eucalyptus/xeucarc_standard, man/*/xeuca.*

Nature:		The EUCALYPTUS graphical user interface has been updated in
		several respects:

		- To display general properties of LTSs, EUCALYPTUS now uses
		  "bcg_info" (instead of "aldebaran -info", which is kept
		  but only for ".exp" files).

		- To display the path leading to a given state (menu "Find
		  Path to State..."), EUCALYPTUS now uses "bcg_info -path"
		  rather than "aldebaran -path".

		- To search for deadlocks in LTSs, EUCALYPTUS now uses
		  "bcg_info -deadlock" rather than "aldebaran -dead".

		- Two new menu entries for LTSs have been added: "Find
   		  nondeterminism..." and "Find unreachable states", which
		  make use of the new features of BCG_INFO.
		
		- For ".aut", ".bcg", ".exp", ".fc2", and ".seq" files,
		  the menu entry "Information" was renamed into "Properties"
		  and moved at the bottom of the menu list.

		- The Eludo tool was removed from EUCALYPTUS, since the
		  Eludo toolkit can only be used on Sparc machines running
		  SunOS 4.1.3, whereas CADP no longer support SunOS 4.*
		  machines.
-------------------------------------------------------------------------------
BUG FIX
Number:		810
Date: 		Fri Sep 27 15:49:10 MEST 2002
Report:		Radu Mateescu (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libcaesar.a

Nature:		In function CAESAR_PRINT_TABLE_1() of OPEN/CAESAR's "table_1"
		library, the statistics displayed for "successes" and
		"failures" were permuted; the correct order was restored.
-------------------------------------------------------------------------------
BUG FIX
Number:		811
Date: 		Fri Sep 27 16:26:58 MEST 2002
Report:		Radu Mateescu (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libcaesar.a

Nature:		Function CAESAR_COPY_EDGE_LIST(L1, L2) had a bug: when list
		L2 was empty, the value of *L1 was left uninitialized instead
		of being set to NULL. This problem was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		812
Date: 		Fri Sep 27 17:45:04 MEST 2002
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libcaesar.a

Nature:		Contrary to the OPEN/CAESAR manual, the formatting function
		CAESAR_FORMAT_EDGE_LIST() had no effect: the ouptut of
		CAESAR_PRINT_EDGE_LIST() was controlled by CAESAR_FORMAT_EDGE()
		instead of CAESAR_FORMAT_EDGE_LIST(). This problem was solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		813
Date: 		Wed Oct  2 15:21:27 MEST 2002
Report:		Radu Mateescu (INRIA/VASY)
Author:		Laurent Mounier (VERIMAG)
Files:		bin.*/aldebaran

Nature:		A bug was corrected concerning the ``-imin'' option of
		ALDEBARAN (minimization modulo the tau*.a equivalence
		relation). On graphs larger than 65536 states, this option
		produced incorrect minimized graphs (not equivalent to the
		initial graphs modulo the tau*.a relation).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		814
Date: 		Fri Oct  4 10:27:16 MEST 2002
Author:		Hubert Garavel (INRIA/VASY)
Files:		incl/caesar_graph.h, man/*/caesar_graph.*, man/*/caesar_edge.*,
		doc/*/Garavel-92-a.*,
		bin.*/caesar, bin.*/libbcg_open.a, bin.*/libcaesar.a,
		src/open_caesar/declarator.c, src/com/cadp_decl, com/upc

Nature:		The CAESAR_RANK_LABEL() function was removed from OPEN/CAESAR's
		"caesar_graph" API, for three reasons:
		- This function was difficult to implement when the set of
		  labels was not known in advance, and in absence of any
		  particular information on the form/structure of labels.
		- The computations needed to implement CAESAR_RANK_LABEL(),
		  i.e., a quick sort on the label strings, would slow down
		  BCG_OPEN on graphs with many different labels.
		- Experience taught that this function, originally intended
		  to do a pre-sorting of label lists, was in fact seldom used.

		Two OPEN/CAESAR compliant compilers (CAESAR and BCG_OPEN)
		have been updated to remove the CAESAR_RANK_LABEL() function.
		The EXP.OPEN tool was left unchanged since it is to be replaced
		later by an entirely new version.

		The DECLARATOR tool was updated to detect the OPEN/CAESAR
		compilers that still produce the CAESAR_RANK_LABEL() function.

		Following the removal of CAESAR_RANK_LABEL(), the function
		CAESAR_CREATE_EDGE_LIST() of the "casar_edge" library was
		modified: from now on, the cases 3 and 4 are identical to the
		cases 5 and 6, respectively. For cases 1 and 2, the documen-
		tation was improved, with explanations being made independent
		from LOTOS.

		The "upc" program was updated so as to detect and report the
		uses of CAESAR_RANK_LABEL() and CAESAR_CREATE_EDGE_LIST().
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		815
Date: 		Fri Oct  4 18:28:33 MEST 2002
Report:		Alain Le Guennec (IRISA, Rennes, France)
Author:		Hubert Garavel (INRIA/VASY)
Files:		incl/caesar_graph.h, man/*/caesar_graph.*,
		doc/*/Garavel-92-a.*, bin.*/caesar, bin.*/libbcg_open.a,
		src/com/declarator.c, com/upc

Nature:		The CAESAR_DUMP_LABEL() function was removed from OPEN/CAESAR's
		"caesar_graph" API, for two reasons:
		- This function was prone to buffer overrun problems, since
		  it is impossible to predict, in the general case, the length
		  of the character string corresponding to a binary label;
		  thus, it was never possible to guarantee in advance that
		  the character string passed to CAESAR_DUMP_LABEL() would
		  be large enough to contain the character representation of
		  the binary label passed to CAESAR_DUMP_LABEL().
		- This function was not much used, especially in comparison
		  with CAESAR_STRING_LABEL(), which seemed to be preferred.

		Two OPEN/CAESAR compliant compilers (CAESAR and BCG_OPEN)
		have been updated to remove the CAESAR_DUMP_LABEL() function.
		The EXP.OPEN tool was left unchanged since it is to be replaced
		later by an entirely new version.

		The DECLARATOR tool was updated to detect the OPEN/CAESAR
		compilers that still produce the CAESAR_RANK_LABEL() function.

		The "upc" program was updated so as to detect and report any
		use of CAESAR_DUMP_LABEL().
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		816
Date: 		Mon Oct  7 12:14:14 MEST 2002
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		The code generated by CAESAR (with option "-open") for the
		CAESAR_STRING_LABEL() function of OPEN/CAESAR's "caesar_graph"
		API was optimized in the particular case of labels that
		consist of a gate only, without experiment offers (this
		encompasses the case of tau-transitions). For instance,
		on the alternating bit example given in "demos/demo_02" with
		65 different messages, the time needed by GENERATOR to
		produce the corresponding BCG file was reduced from 47.4
		down to 20.6 seconds.
-------------------------------------------------------------------------------
BUG FIX
Number:		817
Date: 		Thu Oct 17 16:12:33 MEST 2002
Report:		Bruno Ondet (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/open_caesar/declarator.c

Nature:		A minor memory leak problem was fixed in the DECLARATOR
		program, which checks if an OPEN/CAESAR compiler is compliant
		wrt the OPEN/CAESAR API.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		818
Date: 		Fri Oct 18 13:21:58 MEST 2002
Report:		Frederic Tronel (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		com/svl, bin.*/svl_kernel, man/*/svl.*

Nature:		Two improvements have been brought to SVL:
		- The "-expand" command now comes with a "-indent" option that
		  allows to set the number of blank characters used to indent
		  lines.
		- When the same reduction occurs right before and right after
		  a renaming, SVL eliminates the reduction occurring right
		  before. This optimizes "leaf reduction" in the presence of
		  renaming.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		819
Date: 		Mon Oct 21 15:55:14 MEST 2002
Report:		Robert de Simone (INRIA/TICK, Sophia-Antipolis, France)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/fc2open, bin.*/svl_kernel, man/*/fc2open.*,
		man/*/declarator.*, man/*/executor.*, man/*/evaluator.*,
		man/*/exhibitor.*, man/*/generator.*, man/*/ocis.*,
		man/*/predictor.*, man/*/projector.*, man/*/reductor.*,
		man/*/simulator.*, man/*/terminator.*, man/*/xsimulator.*,
		src/eucalyptus/default/fc2open,
		src/eucalyptus/default/fc2open2c,
		src/eucalyptus/fc2open.l, src/eucalyptus/eucalyptus.tcl,
		src/svl/standard	

Nature:		The FC2OPEN tool developed at Sophia-Antipolis, which allowed
		to map onto the OPEN/CAESAR "caesar_graph" API networks of
		communicating LTSs expressed in the "parallel" FC2 format,
		is no longer maintained (its source code was lost during the
		team reorganization consecutive to the creation of the Esterel
		Technology company). The documentation of CADP, the EUCALYPTUS
		graphical interface and the SVL language have been updated so
		as to remove any reference to FC2OPEN.
-------------------------------------------------------------------------------
BUG FIX
Number:		820
Date: 		Mon Oct 21 17:08:37 MEST 2002
Report:		Frederic Lang (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/exp2fc2

Nature:		A bug was fixed, which caused EXP2FC2 to loop indefinitely in
		certain cases.
-------------------------------------------------------------------------------
BUG FIX
Number:		821
Date: 		Tue Oct 22 20:00:09 MEST 2002
Report:		Dirk Keck (University of Stuttgart, Germany)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/libBCG.a, bin.*/libBCG_IO.a

Nature:		When generating BCG graphs with very long labels (more than
		5,000 characters), CAESAR and BCG would make segmentation
		fault errors due to string buffer overflow. This problem was
		addressed and solved: from now on, the "bcg_write" API accepts
		label strings of unlimited length. Moreover, code has been
		added in the BCG library in order to avoid "memory leak"
		problems detected by Purify (the table of gates and the table
		of labels are now properly disallocated when no longer used).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		822
Date: 		Wed Oct 23 18:09:47 MEST 2002
Authors:	Hubert Garavel, Bruno Ondet, and Radu Mateescu (INRIA/VASY)
Files:		com/seq.open, bin.*/libseq_open.a, man/*/seq.open.*,
		man/*/declarator.*, man/*/executor.*, man/*/evaluator.*,
		man/*/exhibitor.*, man/*/generator.*, man/*/ocis.*,
		man/*/predictor.*, man/*/projector.*, man/*/reductor.*,
		man/*/simulator.*, man/*/terminator.*, man/*/xsimulator.*,
		src/eucalyptus/eucalyptus.tcl

Nature:		A new tool named SEQ.OPEN was added to CADP. SEQ.OPEN is an
		OPEN/CAESAR-compliant compiler that maps a ".seq" file (coded
		in CADP's SEQUENCE format) onto OPEN/CAESAR's "caesar_graph"
		API, thus allowing the application of all OPEN/CAESAR tools
		(e.g., OCIS, EVALUATOR...) to this ".seq" file.

		It is worth noticing that the functionality provided by
		SEQ.OPEN could also be obtained by first converting the ".seq"
		file into a ".bcg" file (using BCG_IO) and then applying the
		OPEN/CAESAR tool on the resulting ".bcg" file (by means of
		BCG_OPEN). However, SEQ.OPEN is more efficient (e.g., up to
		50 times faster on large ".seq" files) as it avoids the
		preliminary translation into ".bcg" and does not store the
		entire ".seq" file in main memory.
		
		A first prototype of SEQ.OPEN was developed in December 2000,
		in the framework of the FormalFame collaboration between BULL
		and VASY. This tool served to model-check mu-calculus formulas
		on traces generated by BULL multiprocessor systems. In 2001
		and 2002, SEQ.OPEN was entirely rewritten in order to support
		the complete SEQUENCE format (including comments and multiple
		sequences separated by the "[]" operator) and to implement the
		entire "caesar_graph" API. SEQ.OPEN was also made two times
		faster by removing an internal call to the C compiler, by
		representing labels using file offsets, and by adding a
		hash-based cache to store labels and transitions.

		The CADP manual pages have been updated to reflect the
		existence of SEQ.OPEN, and the EUCALYPTUS graphical user-
		interface was modified to handle ".seq" files using SEQ.OPEN
		(for on-the-fly processing) rather than ".bcg" files.
-------------------------------------------------------------------------------
BUG FIX
Number:		823
Date: 		Thu Oct 24 20:32:32 MEST 2002
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		The EUCALYPTUS graphical user interface was improved:
		- The mechanism for checking the compatibility of ".xeucarc"
		  startup files contained a problem that was fixed.
		- The "Save preferences" feature could generate improper
		  version numbers; this was fixed.
		- All menu entries have been uniformized (single initial
		  capital letter, and "..." notion everywhere needed).
-------------------------------------------------------------------------------
BUG FIX
Number:		824
Date:		Mon Oct 28 16:44:11 MET 2002
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel

Nature:		On Linux, parsing of renaming rules in SVL scripts could have
		side effects on other labels of the SVL script. This problem
		was solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		825
Date: 		Mon Nov 4 15:38:46 MET 2002
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel, src/svl/standard	

Nature:		The SVL compiler was modified so as to use the new SEQ.OPEN
		tool (see item #822 above). Whenever an OPEN/CAESAR applica-
		tion program is launched on a ".seq" file, SVL will no longer
		invoke BCG_IO/BCG_OPEN, but will use SEQ.OPEN instead. A
		special variable $SEQ_OPEN_OPTIONS was added to SVL in order
		to contain particular options for SEQ.OPEN.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		826
Date: 		Tue Nov 12 12:32:29 MET 2002
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/caesar.aldebaran, man/*/caesar.aldebaran.*

Nature:		The "caesar.aldebaran" shell-script was removed from CADP,
		since this shell-script was made useless and obsolete by the
		introduction of SVL in January 2001 (see item #729 above).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		827
Date: 		Wed Nov 13 16:45:24 MET 2002
Report:		Bruno Ondet (INRIA/VASY)
Authors:	Hubert Garavel and Nicolas Descoubes (INRIA/VASY)
Files:		src/com/cadp_cc, src/com/windows/*

Nature:		The Windows version of CADP has been updated to cope with the
		evolution of the Cygwin software, which, in October 2002,
		moved from Gcc 2.95.3-10 to Gcc 3.2. Because of this compiler
		change, the BCG tools did not work with the latest version of
		Cygwin, and would fail with an error message of the form:
		   seek must be permitted for a bcg_file in BCG_OPEN_BINARY
		
		This problem was addressed by enhancing the "cadp_cc" shell
		script and the contents of the "src/com/windows" directory:
		a sub-directory named "bin.win32" was added; the existing file
		gcc-crtdll-specs was renamed into gcc-crtdll-specs-2.95.2-6;
		and a new file named "gcc-crtdll-specs-3.2" was added.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		828
Date: 		Wed Nov 20 11:31:03 MET 2002
Authors:	Damien Bergamini and Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_min

Nature:		During October-November 2002, many internal modifications
		have been brought to the BCG_MIN tool, in order to reduce the
		amount of memory required for graph minimization. The results
		can be summarized as follows:
		- Let m and n be the respective numbers of transitions and
		  states in the graph to be minimized, and
		- Let b be the number of "blocks" in the minimized graph
		  (note that b <= n)

		- For "normal" LTSs and strong bisimulation:
		  the number of bytes needed by BCG_MIN was reduced from
  		  16m + 24n + 32b down to 16m + 16n + 24b

		- For "normal" LTSs and branching bisimulation:
		  the number of bytes needed by BCG_MIN was reduced from
		  16m + 24n + 32b down to max (16m + 16n + 24b, 16m + 20n)

		- For probabilistic/stochastic LTSs and strong bisimulation:
		  the number of bytes needed by BCG_MIN was reduced from
  		  16m + 32n + 40b down to 16m + 24n + 28b

		- For probabilistic/stochastic LTSs and branching bisimulation:
		  the number of bytes needed by BCG_MIN was reduced from
		  16m + 32n + 40b down to max (16m + 24n + 28b, 16m + 28n)

		Additional changes have been made to increase speed, which
		make BCG_MIN about 15% faster on some examples.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		829
Date:		Thu Nov 21 16:21:40 MET 2002
Authors:	Hubert Garavel and Damien Bergamini (INRIA/VASY)
Files:		bin.*/bcg_io, bin.*/libBCG_IO.a, man/*/bcg_io.*,
                src/eucalyptus/eucalyptus.tcl

Nature:		A new option ``-etmcc'' has been added to BCG_IO in order to
		produce the ``.tra'' needed by the Erlangen Twente Markov Chain
		Checker (ETMCC). This enables the model-checking of performance
		properties expressed using the Continuous Stochastic Logic
		(CSL) against a labelled continuous-time Markov chain contained
		in a BCG graph.

                In the EUCALYPTUS graphical user-interface, this functionality
                is now accessible using the "Convert" item in contextual menus.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		830
Date: 		Fri Dec 13 19:14:53 MET 2002
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		doc/*/Garavel-Lang-02.*

Nature:		A new publication describing a semantical model (NTIF) to be
		used in future versions of CADP was added.
-------------------------------------------------------------------------------
BUG FIX
Number:		831
Date: 		Tue Jan 28 19:47:56 MET 2003
Report:		Ken Turner (Univ. of Stirling, Scotland, UK)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_which

Nature:		A bug (missing '$' before shell variable WHICH) has been
		fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		832
Date: 		Tue Jan 28 20:39:46 MET 2003
Report:		Ken Turner (Univ. of Stirling, Scotland, UK)
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		com/*, src/com/*, bin.*/bcg_*, bin/libBCG*.a, bin/libbcg*.a

Nature:		Changes have been undertaken in order to allow the presence
		of white spaces in file names (mostly needed for Windows, as
		in "/Program Files", "/Documents and Settings", etc.).
		This is a heavy task, since almost every CADP binary and
		shell scripts have to be patched. A first set of changes has
		been applied, but several tools remain to be patched.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		833
Date: 		Thu Jan 30 18:42:49 MET 2003
Authors		Holger Hermanns (Univ. Sarrebruck, Germany), Christophe
		Joubert (INRIA/VASY), and Radu Mateescu (INRIA/VASY)
Files:		doc/*/Hermanns-Joubert-03.*, doc/*/Mateescu-03-a.*

Nature:		Two new papers have been added:
		- The first one presents the forthcoming tools BCG_STEADY,
		  BCG_TRANSIENT, and DETERMINATOR for performance evaluation.
		- The second one presents the CAESAR_SOLVE library for
		  efficient resolution of boolean equation systems.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		834
Date: 		Fri Feb 14 18:20:11 MET 2003
Report:		Volker Braun (Univ. Dortmund, Germany), Lars-Ake Fredlung
		(SICS, Sweden), Jan Friso Groote (Tech. Univ. Eindhoven, The
		Netherlands), and Ken Turner (Univ. of Stirling, Scotland, UK)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/rfl, INSTALLATION_3

Nature:		The RFL command was enhanced so as to support other remote
		access protocols than rsh/rcp. From now on, ssh/scp and
		Kerberos' krsh/kcp are also supported. Also, the explanations
		given in INSTALLATION_3 have been improved.
-------------------------------------------------------------------------------
BUG FIX
Number:		835
Date: 		Tue Mar 11 11:04:06 MET 2003
Author:		Hubert Garavel (INRIA/VASY)
Files:		incl/caesar_hash.h, man/*/caesar_hash.*, doc/*/Garavel-92-a.*

Nature:		Hash functions CAESAR_1_HASH(), CAESAR_2_HASH(), and
		CAESAR_3_HASH() were improperly defined. The correct
		definition is
		   CAESAR_i_HASH (CAESAR_S, CAESAR_HASH_SIZE_STATE(),
		   CAESAR_MODULUS)
		instead of:
		   CAESAR_i_HASH (CAESAR_S, CAESAR_SIZE_STATE(),
		   CAESAR_MODULUS)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		836
Date: 		Wed Mar 12 14:20:54 MET 2003
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		demos/*

Nature:		Demos 03, 04, 07, 08, 16, and 24 have been equipped with SVL
		scripts. The corresponding =READ_ME.txt files have been
		simplified and most of their contents was transferred to
		the newly created ".svl" files. Also, for most demo examples,
		the existing ".svl" file was renamed into "demo.svl".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		837
Date: 		Wed Mar 12 16:12:51 MET 2003
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt, incl/X_NATURAL.h

Nature:		The C code generated by CAESAR.ADT was made more portable:
		- on Unix, it now uses the native raise() function, instead
		  of defining raise() as an alias for kill (getpid()). The
		  same modification was made in file incl/X_NATURAL.h.
		- <stdlib.h> is now included to get the declaration of exit().
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		838
Date: 		Wed Mar 12 18:32:11 MET 2003
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		bin.*/caesar

Nature:		The state vector generated by CAESAR is now sorted: fields are
		permuted using a heuristic that tends to minimize unused
		"padding" bits, which are introduced by the C compiler in
		order to align fields on byte/word boundaries properly. This
		permutation is similar to the one performed by CAESAR.ADT
		on fields of generated structure/union C types. It is
		transparent to the end-user. On randomly generated state
		vectors, the average reduction in state vector size is 20%.
		However, on the database of real LOTOS examples used for
		regression testing of CAESAR, the gain appears to be more
		limited (1.3%).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		839
Date: 		Thu Mar 13 10:20:51 MET 2003
Author:		Frederic Lang (INRIA/VASY)
Files:		src/svl/standard, man/*/svl.*, demos/demo_01/*.svl,
		demos/demo_02/*.svl, demos/demo_10/*.svl,
		demos/demo_11/*.svl, demos/demo_24/*.svl
		
Nature:		The choice of the default tool called by SVL to minimize an
		"explicit", "normal" LTS has been simplified:
		- If the reduction relation is strong or branching equivalence,
		  then SVL invokes BCG_MIN;
		- Otherwise, if the reduction relation is observational,
		  safety, or tau*.a, then SVL invokes ALDEBARAN.
		The SVL script files for demos 01, 02, 10, 11, and 24 have
		been simplified accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		840
Date: 		Mon Mar 17 13:17:56 MET 2003
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_edit

Nature:		The "cadp_edit" shell-script was modified to avoid a Windows-
		specific problem (files whose name starts with a "/" can not
		be opened using "wordpad.exe" or "write.exe"). Because of this
		problem, the "Help" button of INSTALLATOR would not open the
		help file (on Windows) and the "Edit .rhosts" button of
		INSTALLATOR would open an empty file (still on Windows).
-------------------------------------------------------------------------------
IMPROVEMENT

Number:		841
Date: 		Mon Mar 17 15:53:32 MET 2003
Authors:	Damien Bergamini, Hubert Garavel, and Bruno Ondet (INRIA/VASY)
Files:		bin.*/libcaesar.a, incl/caesar_hash.h,
		man/*/caesar_hash.*, doc/*/Garavel-92-a.*

Nature:		New hash functions named CAESAR_4_HASH(), CAESAR_5_HASH(),
		and CAESAR_6_HASH() --- together with their corresponding
		functions CAESAR_STATE_4_HASH(), CAESAR_STATE_5_HASH(), and
		CAESAR_STATE_6_HASH() --- have been added to OPEN/CAESAR's
		"caesar_hash" library.
-------------------------------------------------------------------------------
BUG FIX
Number:		842
Date: 		Tue Mar 18 13:14:17 MET 2003
Report:		Frederic Tronel (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		src/svl/standard, bin.*/svl_kernel

Nature:		When run with the "-debug" option, an SVL script performing
		abstractions in a "for" loop could re-use a ".sync" file that
		was automatically generated in a previous iteration, instead
		of re-generating it. This was incorrect if the interface file
		changed between successive iterations of the loop. This
		problem was solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		843
Date: 		Wed Apr  2 16:54:06 MEST 2003
Authors:	Damien Bergamini and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, incl/caesar_kernel.h

Nature:		The "caesar_kernel.h" file containing the EXEC/CAESAR API and
		the C code generated by CAESAR with option "-exec" have been
		modified:

		- From now on, base types (such as CAESAR_TYPE_BOOLEAN,
		  CAESAR_TYPE_NATURAL, ...) are defined in "caesar_exec.h"
		  rather than in the C code generated by CAESAR with option
		  "-exec". This increases the compatibility between EXEC/
		  and OPEN/CAESAR.

		- The "caesar_kernel.h" API now provides a function (actually,
		  a macro-definition) CAESAR_KERNEL_CURRENT_TRANSITION() that
		  gives the number of the last (visible or tau, but not
		  epsilon) transition fired in the Petri net generated by
		  CAESAR. This new functionality can be useful for measuring
		  the coverage of the Petri net transitions during execution.
		  It is only available when the C code generated by CAESAR
		  with option "-exec" is compiled with C compiler option
		  "-DCAESAR_KERNEL_TRANSITION_INFORMATION" (or if a directive
		     #define CAESAR_KERNEL_TRANSITION_INFORMATION
		  occurs before including "caesar_kernel.h" and the C code
		  generated by CAESAR).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		844
Date: 		Fri Apr  4 13:14:01 MEST 2003
Authors:	Damien Bergamini and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		The C code generated during the simulation phase of CAESAR
		was improved in two ways:

		- Each sequence of successive assignments of the form
		    P->CAESAR_PASS[I] |= A1;
		    ...
		    P->CAESAR_PASS[I] |= An;
		  was replaced with one unique assignment of the form:
		    P->CAESAR_PASS[I] |= (A1 | ... | An);
		  This reduction in the size of the generated C code applies
		  to all options ("-aldebaran", "-bcg", "-exec", or "-open")

		- For option "-exec", another optimization was added, which
		  avoids recomputing the table of positions and the list of
		  firable transitions when function CAESAR_KERNEL_NEXT() is
		  called twice (or more) on the same current state (for
		  details, see occurrences of variable CAESAR_SAME_STATE in
		  the generated C code). On the "ILU-medium" and "ILU-large"
		  benchmarks given to us by BULL, this optimization improves
		  by 17% the speed of the C code generated by CAESAR.
-------------------------------------------------------------------------------
BUG FIX
Number:		845
Date: 		Tue Apr 15 15:22:56 MEST 2003
Report:		Yehong Xing (BULL)
Authors:	David Champelovier, Frederic Lang, and Hubert Garavel (INRIA/
		VASY)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.indent

Nature:		Some error messages emitted by CAESAR and CAESAR.ADT were
		incorrect: when a syntactic error occurred in a LOTOS file
		included using the "library ... endlib" directive, the
		error message indicated an incorrect filename, e.g.,
		   [PRR:47] Warning : ``)'' is deleted
		instead of
		   [ERR:47] Warning : ``)'' is deleted
		if the syntactic error was at line 47 of file ERR.lib. This
		problem only occurred after the SYNTAX compiler generator
		attempted to repair the syntactic error using its global
		recovery scheme. This was due to a memory allocation error in
		the SYNTAX library, which was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		846
Date: 		Wed Apr 16 10:12:24 MEST 2003
Report:		Ghassan Chehaibar (BULL) and Radu Mateescu (INRIA/VASY)
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt

Nature:		For some syntactically incorrect LOTOS programs, CAESAR and
		CAESAR.ADT could make a core dump. This problem was due to the
		syntax recovery feature of SYNTAX, which can insert "fictive"
		tokens where actual tokens are missing. The problem was solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		847
Date: 		Thu Apr 17 14:45:47 MEST 2003
Report:		Bruno Vivien (INRIA/VASY)
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		For some semantically incorrect LOTOS programs containing a
		value expression enclosed between parentheses, e.g.,
            		eqns ofsort Bool
			true = ( 0 );
		CAESAR.ADT could make a core dump (while CAESAR would report
		the error correctly). This problem was solved.		
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		848
Date: 		Fri May  9 15:46:46 MEST 2003
Report:		Yehong Xing (BULL)
Author:		Hubert Garavel (INRIA/VASY)
Files:		lib/NATURAL.lib, lib/X_NATURAL.lib,
		demos/demo_12/maa.lotos, demos/demo_16/BRP.lib

Nature:		The Natural data type library included in CADP was enhanced.
		Previously, this library was a replacement to the standard
		NaturalNumber library provided by the LOTOS definition.
		The compatibility between the Natural and NaturalNumber
		libraries was improved in the sense that Natural is now an
		extension (or enrichment) of NaturalNumber; by importing the
		enhanced version of Natural, one also imports the standard
		NaturalNumber and BasicNaturalNumber libraries in a totally
		standard manner.

		A similar change was brought to the X_Natural library, which
		establishes a missing symmetry between Natural and X_Natural,
		the latter being nothing but the external implementation of
		the former. This is done by splitting the X_Natural library
		into three types (BasicNaturalNumber, NaturalNumber, and
		Natural).

		However, the latter change might create problems in existing
		LOTOS programs. To address this issue, you should first
		locate all files with either ".lotos" or ".lib" extension
		that import the X_Natural library. This can be done by typing
		the following shell command:

		   find / -name "*.lotos" -o -name "*.lib" -exec \
		   grep -i '\<X_NATURAL\>' \{\} /dev/null \; | tee _xnatural

		Then, for each file F listed in "_xnatural", you should
		try to compile F using CAESAR.ADT (if F is a ".lib" file,
		then you should try to compile a ".lotos" file that imports
		F). If compilation succeeds, no change must be done. If
		compilation fails, then you should replace, in file F (and
		in all LOTOS files dependent on F) lines of the form
			type T is ... NaturalNumber ...
		by
			type T is ... Natural ...
		if type T makes use of the data type operations defined in
		type Natural and not in type NaturalNumber (these operations
		are the following: 1, 2, 3, ..., 9, -, div, mod, ==, <>, <,
		<=, >, >=, gcm, and scm). Given that LOTOS is not case-
		sensitive, the change may consist in replacing
			type T is ... NATURALNUMBER ...
		by
			type T is ... NATURAL ...

		The demos 12 and 16 of CADP have been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		849
Date: 		Thu May 15 17:28:14 MEST 2003
Report:		Nicolas Descoubes (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/installator/bin.win32/blat.exe

Nature:		For recent versions of Cygwin, INSTALLATOR would fail to send
		the license file by e-mail, because the "x" (eXecute) bit was
		not set on the "blat.exe" file. This was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		850
Date: 		Wed May 21 20:05:14 MEST 2003
Report:		Marc Boyer (ENSEEIHT, Toulouse, France),
		Luka Hejtmanek (Masaryk University, Brno, Czech Republic),
		Jean-Christophe Pince (M3 Systems, Lavernose, France), and
		Maciej Szreter (IPIPAN, Warsaw, Poland)
Authors:	Hubert Garavel and Nicolas Descoubes (INRIA/VASY)
Files:		bin.iX86/*

Nature:		On recent versions of Linux (such as RedHat 9.0 and Mandrake
		9.1) the CADP binary tools would not execute properly (they
		would abort with a segmentation fault signal). This problem
		was solved by recompiling all CADP binaries.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		851
Date: 		Mon May 26 13:13:52 MEST 2003
Author:		Radu Mateescu (INRIA/VASY)
Files:		doc/*/Mateescu-03-c.*, doc/=README.txt

Nature:		A new publication about the CAESAR_SOLVE library was added
		to the "doc" directory.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		852
Date: 		Mon May 26 16:32:42 MEST 2003
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		demos/demo_12/maa.lotos, demos/demo_12/maa.f

Nature:		The REVERSE function of the MAA protocol is now implemented
		directly in C (in the "maa.f" file). Previously, it was
		specified in LOTOS. This simple change allows significant
		memory savings  (see the "=READ_ME.txt" file).
-------------------------------------------------------------------------------
BUG FIX
Number:		853
Date:		Mon Jun  2 18:18:42 MEST 2003
Author:		Nicolas Descoubes (INRIA/VASY)
Files:		src/monitor/main.tcl

Nature:		A minor problem was fixed in the MONITOR tool: during the
		generation of a large BCG graph, if the MONITOR window was
		hidden by another window and then brought to the front ground,
		the MONITOR window could remain frozen (i.e., grey) during a
		few seconds until the window was refreshed. This problem is
		now solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		854
Date: 		Thu Jun  5 14:48:55 MEST 2003
Authors:	Damien Bergamini and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		Further changes have been brought to CAESAR so as to generate
		faster C code for firing transition:

		- The CAESAR_PASS data structure becomes an array of 32-bits
		  words instead of an array of bytes. On the ILU-medium
		  example of BULL, this makes EXEC/CAESAR 5.8% faster.

		- When computing successor states, we delay as much as possible
		  the backup of the current state and the computation of the
		  successor marking, until it is certain that the transition
		  will be fireable. This avoids useless computations in the
		  case the transition would not be fireable, either because a
		  "when"-guard evaluates to false, or because the environment
		  refuses the rendezvous (the latter case only applies to
		  EXEC/CAESAR). On the ILU-medium example of BULL, this
		  improves speed by 24% on Linux and 36% on Solaris.

		- By considering, in EXEC/CAESAR mode, whether each variable
		  used as input in a rendezvous is a bit field or not, it
		  becomes possible to delay even more computations until it
		  is certain that the transition will be fireable.

		All these changes (combined to those mentioned in item #844
		above) lead to significant speed improvement (42% for the
		ILU-medium example on Solaris).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		855
Date: 		Mon Jun 16 18:59:42 MEST 2003
Report:		Solofo Ramangalahy (BULL)
Authors:	Damien Bergamini and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, incl/caesar_kernel.h

Nature:		The EXEC/CAESAR API was enhanced with new primitives that
		provide a finer access to the underlying Petri net model
		(see the "caesar_kernel.h" file).

		A first group of primitives provides statistical information
		about the number of Petri net transitions and the repartition
		of these transitions as epsilon, visible, and tau transitions:
		   CAESAR_KERNEL_NB_TRANSITIONS()
		   CAESAR_KERNEL_NO_TRANSITION()
		   CAESAR_KERNEL_EPSILON_TRANSITION_MIN_NUMBER()
		   CAESAR_KERNEL_EPSILON_TRANSITION_MAX_NUMBER()
		   CAESAR_KERNEL_VISIBLE_TRANSITION_MIN_NUMBER()
		   CAESAR_KERNEL_VISIBLE_TRANSITION_MAX_NUMBER()
		   CAESAR_KERNEL_TAU_TRANSITION_MIN_NUMBER()
		   CAESAR_KERNEL_TAU_TRANSITION_MAX_NUMBER()

		A second group of primitives gives transition properties,
		namely:
		   CAESAR_KERNEL_CURRENT_TRANSITION()   (see item #843 above)
		   CAESAR_KERNEL_TRANSITION_GATE()
 		which return the number and gate, respectively, of the last
		transition fired. In particular, the former function allows,
		in association with primitives of the first group above, to
		measure the coverage by counting the number of visible
		transitions fired.

		A third group of primitives allows to introduce randomness in
		the firing of tau transitions. The user can now provide a
		CAESAR_KERNEL_TAU() function (presumably based on random
		number generation) that is called every time a tau transition
		T is fireable: T will be fired iff CAESAR_KERNEL_TAU() returns
		true. By default, function CAESAR_KERNEL_TAU() always returns
		true, which expresses the default behaviour of EXEC/CAESAR,
		in which the first fireable tau transition is always selected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		856
Date: 		Tue Jun 17 15:23:56 MEST 2003
Author:		Hubert Garavel (INRIA/VASY)
Files:		games

Nature:		Following a remark from one user, the "games" directory was
		removed from the CADP distribution.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		857
Date: 		Thu Jun 19 16:55:48 MEST 2003
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		The C code generated by CAESAR (using "-exec" option) for
		function CAESAR_KERNEL_INIT() was improved to discover
		automatically (at run-time) if the user has modified the ".h"
		or ".t" file AFTER generating the ".c" file. This avoids the
		two following situations in which the ".c" file is no longer
		up to date after the modification of the ".h" or ".t" file:

		- Some sort S originally not defined as a bit field is now
		  a bit field; in such case, the ".c" file is incorrect, as
		  it takes the address ("&") of a bit field, and the user will
		  receive an error message while compiling the ".c" file.

		- Some sort S originally defined as a bit field is no longer
		  a bit field; in such case, the ".c" file is no longer
		  optimal and the user will receive a warning when the C code
		  executes; this warning indicates that the ".c" file must
		  be regenerated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		858
Date: 		Fri Jun 20 17:42:16 MEST 2003
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt

Nature:		Two limitations of CAESAR and CAESAR.ADT have been lifted:

		- The number of ".lib" files that can be included in a LOTOS
		  program was increased from 128 to 255.

		- The number of "significant" characters that are allowed in
		  C identifiers was increased from 32 to 48 (one should keep
		  in mind, however, that the ANSI C standard only permits 6
		  significant characters for external identifiers, because of
		  some obsolete link editors).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		859
Date: 		Fri Jun 20 19:29:14 MEST 2003
Report:		Jack Abily (BULL)
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		The ".h" file produced by CAESAR.ADT has been enhanced so as
		to allow this file to be included in several C files (i.e.,
		for separate compilation purpose). This is done by using a
		new macro CAESAR_ADT_INTERFACE that, if defined, will skip
		variable definitions, function definitions, as well as the
		inclusion of the ".f" file (since the ".f" file is supposed to
		contain user-defined functions, which are not guaranteed to be
		properly bracketed by CAESAR_ADT_INTERFACE).

		To use the ".h" file as a simple interface, one should either
		compile with the flag -DCAESAR_ADT_INTERFACE, or define the
		CAESAR_ADT_INTERFACE macro before including the ".h" file:
		   #define CAESAR_ADT_INTERFACE
		   #include "xxx.h"
-------------------------------------------------------------------------------
BUG FIX
Number:		860
Date: 		Mon Jun 23 19:23:12 MEST 2003
Report:		Knut Conrad (Humboldt University, Berlin, Germany)
Authors:	Damien Bergamini and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		A bug was fixed in optimisation E2. This optimization was too
		"aggressive" and could in some rare cases (0.13% of our entire
		non-regression data base) remove some places that were needed
		to preserve the flow of data, leading to an incorrect LTS
		(actually, an LTS smaller than needed, in which some states
		were missing and some transitions were cut). The bug was fixed
		by strengthening the preconditions for application of
		optimization E2.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		861
Date: 		Wed Jun 25 18:43:36 MEST 2003
Report:		Solofo Ramangalahy (BULL)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		The C code generated by CAESAR no longer declares useless
		variables (those named CAESAR_REGISTER_xxx). On the one hand,
		this avoids compiler warnings (e.g. when compiling with
		"gcc -Wall"). On the other hand, this reduces the stack size
		needed for firing transitions.
-------------------------------------------------------------------------------
BUG FIX
Number:		862
Date: 		Thu Jul 10 15:09:48 MEST 2003
Report:		Nicolas Descoubes (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		man/*/caesar_*.*

Nature:		In the OPEN/CAESAR manuals, whatever their format (".html",
		".l", ".ps", or ".pdf"), there was an error in the text notes
		regarding the various functions named "CAESAR_CREATE_*".
		Instead of:
		   CAESAR_CREATE_TABLE_1 (CAESAR_T, ...)
		the correct text should have been:
		   CAESAR_CREATE_TABLE_1 (&CAESAR_T, ...)
		This error (caused by a mistake in the translator used by
		VASY to generate manual pages automatically) has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		863
Date:		Mon Jul 21 17:48:21 MEST 2003
Report: 	Gregory Lestiennes (Universite Paris Sud, Orsay, France) and
		Ken Turner (Univ. of Stirling, Scotland, UK)
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		com/tst, INSTALLATION_4,
		src/com/install_uncompress, src/com/cadp_postscript

Nature:		On recent Linux and Cygwin distributions, the "compress" and
		"uncompress" commands are no longer available by default. This
		caused a problem for several CADP tools that relied on the
		presence of "uncompress". For instance, INSTALLATOR would stop
		with the following error messages:
		   Extracting files from archive CADP_iX86_...tar.Z
		   Error while decompressing
		   .../install_uncompress: ...: uncompress: command not found
		These tools and the installation directives have been updated
		so as to use "gzip -d" instead of "uncompress" on iX86 and
		win32 architectures.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		864
Date: 		Fri Sep 12 18:49:17 MEST 2003
Authors:	Hubert Garavel, Frederic Lang, Gordon Pace, and Radu Mateescu
		(INRIA/VASY)
Files:		doc/*/Garavel-03.*, doc/*/Pace-Lang-Mateescu-03.*

Nature:		Two new publications have been added in the "doc" directory.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		865
Date: 		Thu Sep 18 16:21:26 MEST 2003
Report:		Nicolas Descoubes (INRIA/VASY)
Authors:	Damien Bergamini and Hubert Garavel (INRIA/VASY)
Files:		bin.*/libbcg_info.a

Nature:		The BCG_INFO tool was modified in order to improve its
		performance when handling very large graphs:

		- The algorithm used for option "-nondeterministic" was
		  improved. From now on, this algorithm opens BCG files in
		  mode 0 instead of mode 1 (see "man bcg_read").

		- When BCG_INFO is called without option, it no longer
		  displays unreachable states (since this would require to
		  open the BCG file in mode 1).

		As a consequence, BCG_INFO is now much faster. For instance,
		on the cwi_33949_165318 example of the VLTS benchmark suite
		(33 million states and 165 million transitions), BCG_INFO
		now answers in 5 minutes, compared to several hours (or even
		segmentation faults) with the previous version.
-------------------------------------------------------------------------------
BUG FIX
Number:		866
Date: 		Thu Sep 18 17:46:13 MEST 2003
Report:		Ken Turner (University of Stirling, Scotland, UK)
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		LOTOS allows to define operation identifiers containing
		special characters such as "+", "-", "/", "--", etc.
		The C code generated by CAESAR.ADT for LOTOS identifiers
		containing the characters "\" and/or "%" was incorrect, as
		these characters have a special meaning in C (they provide an
		escape mechanism in C strings and printf() format strings).
		This bug was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		867
Date: 		Tue Sep 23 18:57:40 MEST 2003
Authors:	Hubert Garavel and Damien Bergamini (INRIA/VASY)
Files:		com/bcg_info, bin.*/libbcg_info.a, man/*/bcg_info.*

Nature:		A new option "-order" was added to BCG_INFO. The purpose of
		this option is described in the "bcg_info" manual page.
-------------------------------------------------------------------------------
BUG FIX
Number:		868
Date: 		Wed Oct  1 17:13:49 MEST 2003
Report:		Tomas Barros (INRIA/OASIS, Sophia-Antipolis, France)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/evaluator.a

Nature:		A bug was fixed in the EVALUATOR model-checker, which generated
		an incorrect error message when the tool was invoked on a BCG
		graph whose initial state number was different from zero.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		869
Date: 		Fri Oct 3 13:04:09 MEST 2003
Authors		Frederic Tronel, Frederic Lang, Hubert Garavel and David
		Champelovier (INRIA/VASY)
Files:		bin.*/bcg_graph, man/*/bcg_graph.*

Nature:		A new tool, named BCG_GRAPH, was added to the CADP package.
		This tool generates several useful kinds of automata such as
		bugs, FIFO queus, chaos automata.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		870
Date: 		Mon Oct  6 12:53:33 MEST 2003
Report:		Hubert Garavel (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl.*

Nature:		The syntax of SVL has been extended in two ways:

		- The "reduction" operator of SVL and the meta-operators
		  related to it have been enhanced with new attributes for
		  dealing with the stochastic and probabilistic bisimulations
		  implemented in BCG_MIN; one can now use the following SVL
		  clauses:
		 	strong stochastic reduction ...
		 	branching stochastic reduction ...
		 	strong probabilistic reduction ...
		 	branching probabilistic reduction ...

		- New SVL behavioural operators ("bag", "chaos", "fifo", ...)
		  have been introduced to take advantage of the facilities
		  provided by the new BCG_GRAPH tool.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		871
Date: 		Thu Oct 16 16:14:07 MES 2003
Report:		Radu Mateescu (INRIA/VASY)
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		bin.*/libbcg_open.a

Nature:		The implementation provided by BCG_OPEN for the two functions
		CAESAR_PRINT_LABEL() and CAESAR_STRING_LABEL() defined in the
		OPEN/CAESAR API has been made faster. For instance, on the
		alternating bit protocol of demo_02 with 50 messages, the
		following command:
		    bcg_open bitalt_protocol.bcg generator result.bcg
		is now 4 times faster.		
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		872
Date: 		Thu Oct 16 17:25:46 MEST 2003
Report:		Nicolas Descoubes (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG.a, man/*/bcg.*

Nature:		The default values for the compression parameters of the BCG
		format (i.e., the default values for the three BCG general
		options "register", "-short", and "-medium", which are grouped
		altogether by the "-size" option) have been adapted. The
		previous default values (2, 2, 4) defined in 1993 were no
		longer optimal for the larger BCG models that can be generated
		in 2003. The new default values have been set to (4, 1, 3)
		after exhaustive experiments done on the VLTS benchmark suite.

		In practice, for the various BCG graphs that can be generated
		from the CADP demos, one observes an average reduction of 11%
		in the size of BCG files. For large graphs (more than 10^5
		transitions), the average reduction is 11.9%. For small graphs
		(less than 10^5 reduction), the file sizes slightly increases
		(by 3,9%), but this is negligible as the files are small.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		873
Date: 		Tue Oct 21 14:54:03 MEST 2003
Report:		Hubert Garavel (INRIA/VASY)
Author:		Nicolas Descoubes (INRIA/VASY)
Files:		bin.*/libbcg_draw.a

Nature:		The PostScript files generated by BCG_DRAW have been enhanced
		with a directive:
		   %%Page: 1 1
		so as to avoid the following warning from the Gsview software
		running on Windows:
		   DSC error
		   %%Pages: doesn't match the number of %%Page
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		874
Date: 		Thu Oct 23 18:05:41 MEST 2003
Report:		Marius Minea (Institute e-Austria, Timisoara, Romania)
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		com/tst

Nature:		The "tst" command (self-testing command of CADP) was enhanced
		in several ways:

		- "tst" now displays the version number of the "gcc" compiler,
		  and the version number of the "glibc" library (on Linux).

		- "tst" now detects the case where $CADP is not set to an
		  absolute pathname (i.e., does not start with a "/").

		- "tst" now detects the case where $CADP is set to a Windows
		  pathname (e.g., "C:\...").

		- "tst" now detects the case where $CADP is set to a pathname
		  ending with a trailing "/", which causes "tst" to emit
		  incorrect warning messages of the form:

		     *** The tool ``...'' is not searched in ``$CADP/bin.iX86''
		     but in ``/.../bin.iX86'' instead
		     You might have two versions of CADP installed
		     ==> Reorder your ``$PATH'' variable to have ...
		         and remove all obsolete versions of CADP, if any

		  as the "tst" script is unable to figure out that "//" and
		  "/" are in fact equivalent.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		875
Date: 		Fri Oct 24 12:55:34 MEST 2003
Report:		Alban Catry, Radu Mateescu and Nicolas Descoubes (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		doc/*/Garavel-92-a.*, man/*/caesar_*.*

Nature:		The OPEN/CAESAR manual pages (especially the "caesar_graph",
		"caesar_edge", and "caesar_table_1" pages) have been improved.
		In addition to English language corrections, several notes
		have been added. In particular, it is now said explicitly that
		functions CAESAR_COPY_STATE(), CAESAR_COPY_LABEL(), and
		CAESAR_START_STATE() do not allocate memory for their second
		parameter.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		876
Date: 		Mon Oct 27 17:08:09 MET 2003
Authors:	Hubert Garavel and Damien Bergamini (INRIA/VASY)
Files:		bin.*/caesar

Nature:		The CAESAR compiler was modified so as to minimize the memory
		size used by transition labels under their binary form (this
		size is the result returned by the CAESAR_SIZE_LABEL() function
		of the OPEN/CAESAR API). Three technical approaches have been
		implemented:

		- CAESAR now uses bitfield information when generating the
		  definition of the binary label type.

		- CAESAR now permutes the fields of the binary label type
		  (i.e., the fields corresponding to LOTOS experiment offers)
		  in the same way as it permutes the state vector fields.

		- The field containing the Petri net transition number inside
		  the binary label type was made more compact by introducing a
		  dedicated number type CAESAR_TYPE_PACKED_TRANSITION_NUMBER.

		In practice, on the entire non-regression testing base of
		CADP, these changes reduced the size of binary labels by 45%.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		877
Date: 		Wed Oct 29 10:59:58 MET 2003
Authors:	Hubert Garavel and Damien Bergamini (INRIA/VASY)
Files:		bin.*/caesar

Nature:		The implementation generated by CAESAR (with option "-open")
		for the CAESAR_HASH_LABEL_SIZE() function of the OPEN/CAESAR
		API was made more accurate. In many cases, this function now
		returns a greater value than previously. This, combined with
		the average label size reduction (see item #876 above),
		improves the quality of hashing on binary labels by increasing
		the relative percentage of binary label representation on
		which user-defined hashing functions can operate.

		Reminder: before any LTS processing, one should not forget to
		invoke the CAESAR_INIT_GRAPH() function of the OPEN/CAESAR
		API. The former versions of CAESAR used to generate an empty
		definition for CAESAR_INIT_GRAPH(), so that omitting to invoke
		this function was harmless when using "caesar.open" (but not
		"bcg.open", "seq.open", etc.). At present, the definition
		generated by CAESAR for CAESAR_INIT_GRAPH() is no longer empty
		and cannot be ommitted, otherwise CAESAR_HASH_LABEL_SIZE()
		will return an incorrect value.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		878
Date: 		Mon Nov 17 15:17:12 MET 2003
Report:		Katsumi Wasaki (Shinshu University, Nagano, Japan), and
		Carlos Eduardo Araujo Vieira (University of Ceara, Brazil)
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_cc, src/com/windows/gcc-crtdll-specs-3.3

Nature:		The win32 version of CADP was adapted to support the Gcc 3.3
		compiler included in the latest versions of Cygwin. This
		suppresses various error messages of the form:
		   gcc: installation problem, cannot exec `cpp0': No such
		   file or directory
		   <command line>:20:13: warning: "system" re-asserted
		   <command line>:22:1: warning: "__STDC_HOSTED__" redefined
		   <command line>:1:1: warning: "__STDC__" redefined
		   <command line>:23:9: warning: "cpu" re-asserted
		   <command line>:24:13: warning: "machine" re-asserted
		   /lib/mingw/crt1.o(...):crt1.c: undefined reference to
		   `__p__fmode'
		   etc.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		879
Date: 		Mon Nov 17 15:57:10 MET 2003
Report:		Ken Turner (University of Stirling, Scotland, UK)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/tst, src/com/cadp_which, cadp_cygwin.com

Nature:		The "tst" command was enhanced to compare, on win32, both
		files "/bin/sh.exe" and "/bin/bash.exe", and if different,
		to warn the user that the shell-script "cadp_cygwin.com"
		should be executed.

		The "cadp_which" command was modified on win32 so as to
		function properly even when the "cadp_cygwin.com" shell-
		script has not been applied properly.

		The "cadp_cygwin.com" shell-script was modified in several
		ways:
		- Obsolete features related to old features of Cygwin have
		  been removed.
		- Version 1.5.5 of Cygwin is now supported.
		- It is now possible to execute "cadp_cygwin.com" several
		  times, e.g., after each upgrade of Cygwin.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		880
Date:		Tue Nov 18 10:20:32 MET 2003
Authors:	Damien Bergamini and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		In the C code generated by CAESAR with "-open" option, the
		array CAESAR_UNIQUE_GATE[] was removed and replaced with a
		new array named CAESAR_UNIQUE_GATE_AND_PROFILE[]. Then,
		the C code generated for functions CAESAR_COMPARE_LABEL()
		and CAESAR_HASH_LABEL() has been revised, with two main
		advantages:

		- The CAESAR_COMPARE_LABEL() function becomes faster.

		- The CAESAR_HASH_LABEL() function becomes faster and gives
		  a better hash dispersion: the previous hash function only
		  considered the gate and the profile of a label, thus giving
		  the same hash value for labels with the same gate and
		  profile, but different experiment offers; the new hash
		  function reduces the risk of collisions by hashing also on
		  all experiment offers of canonical type (i.e., of any type
		  but a pointer type).

		In the alternating bit protocol of demo_02 with 100 messages,
		the number of hash collisions for all reachable labels was
		reduced from 101 to 0.

		In the bounded retransmission protocol of demo_16 with 10
		messages, the number of hash collisions for all reachable
		labels was reduced from 48 to 10 (only conflicts for non-
		canonical sorts remain).	

		On the entire list of full-LOTOS programs used for regression
		testing of CAESAR, the average number of hash collisions for
		labels was divided by 3.9 on Solaris and divided by 2.5 on
		Linux.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		881
Date: 		Thu Nov 20 09:35:16 MET 2003
Report:		Katsumi Wasaki (Shinshu University, Nagano, Japan)
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		com/tst

Nature:		The "tst" command was improved in two ways:

		- On Windows, it now detects and report the case where Cygwin
		  is not installed in C:\ but in a sub-directory, such as
		  C:\cygwin.

		- On Linux, it now detects and reports obsolete versions of
		  the Glibc library (i.e., versions strictly older than Glibc
		  2.3) and warns about potential 'undefined symbols' problems.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		882
Date: 		Thu Nov 20 12:33:53 MET 2003
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt

Nature:		In the front-end part of the CAESAR and CAESAR.ADT compilers
		for LOTOS specifications, the static semantics analysis
		phase has changed slightly. From now on, binding of process
		identifiers is done before binding of gate identifiers. For
		the user, the effect is the same, except for incorrect LOTOS
		specifications that contain both erroneous process and gate
		identifiers; for such specifications, CAESAR and CAESAR.ADT
		will stop just after displaying error messages related to
		processes (previously, error messages related to gates were
		displayed first).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		883
Date: 		Mon Nov 24 17:09:52 MET 2003
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_windows, com/tst

Nature:		A new shell-script named "cadp_windows" was added. This shell-
		script is used to adapt the Windows distribution of CADP.
		Specifically, "cadp_windows":

		- removes symbolic links in the $CADP directory (symbolic
		  links are a Cygwin-specific extension and are not handled
		  by pure Win32 applications, such as CADP binary programs),

		- modifies text files by expanding tabulations and converts
		  "\n" into "\r\n", so that text files can be read by simple
		  Windows editors such as Notepad.

		The "tst" command has also been adapted. On Windows, it now
		detects the existence of symbolic links in the $CADP directory
		and, in such case, suggests to execute the "cadp_windows"
		shell-script.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		884
Date: 		Tue Nov 25 14:38:08 MET 2003
Authors:	Hubert Garavel and Damien Bergamini (INRIA/VASY)
Files:		bin.*/libcaesar.a

Nature:		The CAESAR_PRINT_TABLE_1() function of the OPEN/CAESAR library
		now displays more accurate statistics for hash collision lists.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		885
Date: 		Tue Nov 25 16:31:47 MET 2003
Author:		Radu Mateescu (INRIA/VASY)
Files:		src/xtl/ctl.mcl

Nature:		A new library file for EVALUATOR (description of the CTL
		logic in modal mu-calculus) was added.
-------------------------------------------------------------------------------
BUG FIX
Number:		886
Date: 		Wed Nov 26 11:27:32 MET 2003
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/bcg_edit

Nature:		The BCG_EDIT tool, when given the "-version" option, would
		fail with the following message:
		    grep: can't open /incl/bcg_version.h
		This problem was solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		887
Date: 		Mon Dec  1 12:11:47 MET 2003
Report:		Frederic Lang (INRIA/VASY)
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		bin.*/libBCG_IO.a

Nature:		The Linux version of the BCG_IO tool would generate incorrect
		Fc2 files. Precisely, the command:
		   bcg_io file.bcg file.fc2
		would generate in the Fc2 file an extra number at the end of
		certain labels, which was then rejected by Fc2 tools such as
		Fc2Link. This bug, which seemed to occur only on Linux, was
		fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		888
Date: 		Mon Dec  1 17:11:03 MET 2003
Authors:	Frederic Tronel, Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		doc/*/Tronel-Lang-Garavel-03.*, doc/*/Mateescu-03-b.*

Nature:		Two new papers have been added in the "doc" directory: the
		former deals with the compositional verification using CADP
		of the ScalAgent deployment protocol for software components;
		the latter is about action-based temporal logics for
		asynchronous systems.
-------------------------------------------------------------------------------
BUG FIX
Number:		889
Date: 		Tue Dec  2 13:10:55 MET 2003
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		com/bcg_edit, src/com/bcg_edit/bcg_edit.tcl

Nature:		In the "Help" menu of the BCG_EDIT tool, the "BCG Postscript
		Format" entry did not work correctly when selected:
		- On Solaris, nothing happened,
		- On Windows, a dialog box would open with the message
		     Error: "/Program: not found"
		These problems were fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		890
Date: 		Wed Dec  3 15:31:21 MEST 2003
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2fc2

Nature:		A bug was fixed in EXP2FC2, which did not translate the "||"
		operator into the Fc2 format correctly. The reason was that
		EXP2FC2 required synchronization only on labels present on
		both sides of the "||" operator (whereas it should synchronize
		on all labels instead).
-------------------------------------------------------------------------------
BUG FIX
Number:		891
Date: 		Thu Dec 11 13:05:45 MET 2003
Report:		Nicolas Descoubes (INRIA/VASY) and Solofo Ramangalahy (BULL)
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt, com/cadp_cc

Nature:		On Linux and Windows systems with Gcc version 3.*, the CAESAR
		and CAESAR.ADT compilers performed unecessary recompilations.
		This problem was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		892
Date: 		Fri Dec 12 13:51:28 MET 2003
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt

Nature:		CAESAR.ADT was enhanced with a sort finiteness analysis
		(fixpoint computation, 250 lines of C code) that classes
		LOTOS sorts into three categories:
		- sorts whose value domain is finite,
		- sorts whose value domain is infinite but bounded by a
		  user-defined iterator, which only enumerates a restricted,
		  finite subset of values,
		- sorts whose value domain is infinite and not bounded by
		  an iterator.
		For each sort of the third category, a comment was added in
		the C code generated by CAESAR.ADT so as to remind the user
		that it is possible to define an iterator manually for this
		sort.

		Then, CAESAR was modified to take advantage of the sort
		finiteness analysis performed by CAESAR.ADT: CAESAR will now
		emit a warning if the generated simulator program contains
		an iteration over the domain of some infinite sort S that
		lacks an iterator in the ".h" file. This warning is emitted
		before compiling and executing the simulator program; it has
		the following form:

		   #185 warning during simulation:
		        foreseeable impossibility to enumerate the domain of
		        some LOTOS sort
		        graph exploration is likely to abort because no
		        iterator exists to enumerate the domain of sort S

		Later, when executing the simulator program after it is
		compiled, if the iteration over the domain of S is actually
		reached, the usual error messages will be displayed:

		   #226 theoretical limitation :
     		        domain of an infinite (or complex) sort cannot be
		        enumerated; no available iterator for sort S
		   #203 system error during simulation:
     		        termination on SOFTWARE_TERMINATION signal (files
		        completed)
		        quit
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		893
Date: 		Tue Dec 16 11:17:27 MET 2003
Author:		Hubert Garavel (INRIA/VASY)
Files:		incl/caesar_standard.h, bin.*/libcaesar.a,
		man/*/caesar_standard.*, src/open_caesar/generator.c,
		src/open_caesar/reductor.c, src/open_caesar/executor.c

Nature:		A new function named CAESAR_SIGNALS() was added to the
		"caesar_standard" library of OPEN/CAESAR. This function
		allowed to simplify and shorten the source code of the
		GENERATOR, REDUCTOR, and EXECUTOR tools.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		894
Date: 		Fri Dec 19 15:57:30 MET 2003
Report:		Matts Kindahl (Uppsala University, Sweden)
Authors:	Damien Bergamini and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, man/*/caesar_graph.*

Nature:		The C code fragment generated by CAESAR for producing the
		character string corresponding to a label was improved.

		This C code fragment is used by the "-bcg" option of CAESAR
		and by the "-open" option of CAESAR (in order to implement the
		CAESAR_STRING_LABEL() function of OPEN/CAESAR's "caesar_graph"
		interface). It is not used by the "-aldebaran" and "-exec"
		options of CAESAR.

		This C code fragment, which could be slow, was made faster by
		implementing a hash-based cache table, which avoids useless
		recomputations.

		In the alternating bit protocol of demo_02 with 100 messages,
		CAESAR with "-bcg" option was made 32% faster after this
		change. In the bounded retransmission protocol of demo_16
		with 10 messages, CAESAR was made 6.5% faster. In the worst
		case where all labels are different, a small penalty (-4.2%)
		can be observed though.

		Similarly, the CAESAR_STRING_LABEL() function, which is used
		intensively in tools such as GENERATOR and EVALUATOR, was
		made faster (26% faster for GENERATOR and 2-4 times faster
		for EVALUATOR). In the worst case, a small penalty (-2%) is
		also observed.

		In the manual page for "caesar_graph", the implementation
		note that warned about the potential inefficiency of function
		CAESAR_PRINT_LABEL() was removed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		895
Date: 		Tue Dec 23 17:17:12 MET 2003
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		bin.*/libcaesar.a, man/*/caesar_rename_1.*,
		doc/*/Garavel-92-a.*

Nature:		The documentation of the CAESAR_APPLY_RENAME_1() function of
		the "caesar_rename_1" library was improved: it now specifies
		that it is forbidden to call CAESAR_APPLY_RENAME_1() by giving
		to its second argument the value returned by a former call to
		CAESAR_APPLY_RENAME_1(), as in the following example:
		CAESAR_APPLY_RENAME_1 (..., CAESAR_APPLY_RENAME_1 (..., ...))
		A test was added in the code of CAESAR_APPLY_RENAME_1() so
		as to detect and reject this situation.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		896
Date: 		Wed Feb 10 16:21:53 MET 2004
Report:		Hubert Garavel (INRIA/VASY)
Author:		David Champelovier (INRIA/VASY)
Files:		bin.*/mcl_expand, demos/demo_02/*.mcl, demos/demo_29/*.mcl

Nature:		The formula language of the EVALUATOR 3 model-checker was
		enhanced with a concatenation operator (noted `#') operating
		on label strings and regular expressions. Precisely, the
		syntax of strings was extended with the following rule:

			<string> ::= ...
			          |  <string1> # <string2>

		and the syntax of regular expressions was extended with the
		three following rules:

			<regexp> ::= ...
			          |  <regexp1> # <regexp2>
			          |  <string1> # <regexp2>
				  |  <regexp1> # <string2>

		This syntactic extension, combined with the use of the
		MCL_EXPAND preprocessor, allows to define parameterized
		action predicates.

		For instance, the "macros.mcl" file of demo_02 now defines
		two parameterized macros GET (N) and PUT (N) instead of
		several macros GET_0, GET_1, ..., PUT_0, PUT_1, etc.

		Similarly, the "macros.mcl" of demo_29 was simplified; it
		has now only 183 lines instead of 783 lines.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		897
Date: 		Mon Feb 16 14:58:29 MET 2004
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		doc/Garavel-Mateescu-04, doc/=READ_ME.txt, doc/biblio.bib

Nature:		A new publication entitled "SEQ.OPEN: A Tool for Efficient
		Trace-Based Verification" was added to the CADP release.
		This paper describes SEQ.OPEN, an OPEN/CAESAR-compliant
		compiler for the SEQUENCE format.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		898
Date: 		Mon Feb 16 15:04:24 MET 2004
Authors:	Gregory Batt, Damien Bergamini, Hidde de Jong, Hubert Garavel,
		and Radu Mateescu (INRIA)
Files:		doc/Batt-Bergamini-deJong-et-al-04, doc/=READ_ME.txt,
		doc/biblio.bib

Nature:		A new publication entitled "Model Checking Genetic Regulatory
		Networks using GNA and CADP" was added to the CADP release.
		This paper describes a connection between the GNA (Genetic
		Network Analyzer) tool and CADP, which enables the analysis of
		genetic regulatory networks using standard equivalence checking
		and model checking techniques.
-------------------------------------------------------------------------------
BUG FIX
Number:		899
Date: 		Wed Feb 25 15:03:06 MET 2004
Report:		Wendelin Serwe (INRIA/VASY)
Authors:	Damien Bergamini and Hubert Garavel (INRIA/VASY)
Files:		src/bcg_edit/bcg_edit.tcl

Nature:		Two bugs were fixed in the BCG_EDIT tool:
		- In some cases, refresh would not be done and the BCG_EDIT
		  window could remain grey.
		- Modifying the Postscript Options (e.g., the radius value)
		  would have no effect.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		900
Date: 		Wed Feb 25 17:50:28 MET 2004
Report:		Jack Abily and Solofo Ramangalahy (BULL)
Authors:	Damien Bergamini and Hubert Garavel (INRIA/VASY)
Files:		incl/caesar_kernel.h, bin.*/caesar

Nature:		The "caesar_kernel.h" file defining the EXEC/CAESAR API was
		enhanced with new functionalities (some of which borrowed
		from the OPEN/CAESAR API).

		Several new primitives have been added: CAESAR_CREATE(),
		CAESAR_DELETE(), CAESAR_CREATE_STATE(), CAESAR_DELETE_STATE(),
		CAESAR_SIZE_STATE(), and CAESAR_ALIGNMENT_STATE().

		Then, two new primitives, CAESAR_KERNEL_SAVE_STATE() and
		CAESAR_KERNEL_RESTORE_STATE() have been added to save and
		restore the current simulation state to/from memory. These
		functions are useful, e.g., to hardware/software cosimulation.
		The following code fragment shows how these functions can be
		used:

		   main ()
		   {
		   CAESAR_TYPE_STATE CAESAR_S;

		   CAESAR_KERNEL_INIT (NULL);
		   CAESAR_CREATE_STATE (&CAESAR_S);
		   ...
		   /* saving the current simulation state into CAESAR_S */
		   CAESAR_KERNEL_SAVE_STATE (CAESAR_S);
		   ...
		   /* advancing the simulation by one step */
		   CAESAR_KERNEL_NEXT ();
		   ...
		   /* backtracking to saved state CAESAR_S */
		   CAESAR_KERNEL_RESTORE_STATE (CAESAR_S);
		   ...
		   CAESAR_DELETE_STATE (&CAESAR_S);
		   }

		The C code generated by CAESAR with "-exec" option was
		modified so as to implement the new primitives added to
		the EXEC/CAESAR API.
-------------------------------------------------------------------------------
BUG FIX
Number:		901
Date: 		Tue Mar  9 16:47:14 MET 2004
Report:		Andrea Martins Araujo (Univ. Federal do Rio de Janeiro, Brasil)
Author:		Damien Bergamini (INRIA/VASY)
Files:		src/bcg_edit/bcg_edit.tcl

Nature:		If a label of BCG GRAPH would contain braces, e.g., as in the
		following label "GET !1 !true !{}", BCG_EDIT would abort with
		the following error message:
		   Error in startup script: list element in braces
		   followed by "\))" instead of space
		   ...
		This problem was solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		902
Date: 		Mon Apr 19 21:39:27 MEST 2004
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libseqopen.a

Nature:		Two bugs have been fixed in the SEQ.OPEN tool:
		- On Windows, ``.seq'' files with lines terminated with CR-LF
		  ("\r\n") instead of LF ("\n") were rejected by SEQ.OPEN,
		  unless the "-seqno" option was selected.
		- The value given to the CAESAR_HINT_HASH_SIZE_LABEL variable
		  is now equal to 0, and not to sizeof (CAESAR_BODY_LABEL).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		903
Date: 		Fri Apr 23 10:50:16 MEST 2004
Report:		Axel Belinfante (University of Twente, The Netherlands),
		Olivier Bonaventure (Universite de Liege, Belgium),
		Francois Germeau (Universite de Liege, Belgium),
		Michel Jankowski (Universite de Liege, Belgium),
		Charles Pecheur (INRIA/VASY),
		Meurig Sage (University of Glasgow, UK),
		Frederic Tronel (INRIA, VASY), and many others
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt, bin.*/caesar, bin.*/caesar.indent,
		lib/*.lib, incl/X_*.h,
		demos/demo_02/BITALT.t, demos/demo_03/DATALINK.t,
		demos/demo_05/list.lotos, demos/demo_05/user.c,
		demos/demo_07/overtaking.lotos,
		demos/demo_08/REL_REL_FIFO.lib,
		demos/demo_09/INRES_PROTOCOL.lib
		demos/demo_09/INRES_SERVICE.lib, demos/demo_10/BITALT.t
		demos/demo_11/rel_rel.t, demos/demo_11/REL_REL_FIFO.lib,
		demos/demo_16/BRP.t, demos/demo_16/brp_service.t,
		demos/demo_16/brp_protocol.t, demos/demo_18/transit_node.t,
		demos/demo_20/REL_REL_FIFO.lib, demos/demo_20/rel_rel.t,
		demos/demo_23/*.f, demos/demo_26/*.f, demos/demo_31/TYPES.lib,
		demos/demo_31/SCSI_A.f, demos/demo_31/SCSI_A.t,
		demos/demo_31/SCSI_B.f, demos/demo_31/SCSI_C.f

Nature:		The CAESAR.ADT and CAESAR tools have been modified so as to
		address two issues:

		a) The former versions of CAESAR.ADT could generate iterators
		   only for "simple" LOTOS sorts, namely natural numbers,
		   enumerated types (including singleton types), and tuple
		   types (see $CADP/doc/pdf/Garavel-89-c.pdf for details).
		   However, more "complex" types would not be supported, even
		   if their domain of values was finite, such as the following
		   LOTOS sort T with two constructors:
		      A (*! constructor *) : BOOL -> T
                      B (*! constructor *) : BOOL, BOOL -> T
		   For those types, CAESAR.ADT would generate an error message
		   about infinite or too complex types; this error message
		   would appear as soon as CAESAR would try to enumerate the
		   domains of these types. A workaround was to provide, for
		   these types, hand-written iterators defined in the ".t"
		   and/or ".f" files.

		b) In the particular case of "tuples of tuples" types, the
		   iterators generated by CAESAR.ADT for those types would not
		   work properly: the C compiler would reject them because of
		   name clashes between variables declared in iterators.

		These two issues are now solved by the recent version 5.2 of
		CAESAR.ADT, which can now generate iterators for all LOTOS
		sorts with a finite domain of values. In particular, for the
		previously so-called "complex" sorts, it is no longer needed
		to provide ".t" and/or ".f" files containing hand-written C
		code for enumerating the domain of these sorts.

		However, this improvement requires important changes in the
		definition of the iterators generated by CAESAR.ADT. One must
		now distinguish between two different forms of iterators:

		- "Old-style" iterators are described in the [Garavel-89-c]
		  paper. In a LOTOS specification, an old-style iterator is
		  specified using a special comment of the form:
		     sort S (*! implementedby S ...
		                enumeratedby ENUM_S ... *)
		  It consists of one single C macro-definition ENUM_S to be
		  used as follows for enumerating all values of sort S:
		     S LOOP_VARIABLE;
		     {
		        ENUM_S (LOOP_VARIABLE) {
		           ... loop body parameterized by LOOP_VARIABLE
		        }
		     }
		  For instance, the old-style iterator for enumerating the
		  integer range 0..15 has the form:
		     #define ENUM(X) for ((X) = 0; X <= 15; ++(X))

		- "New-style" iterators are introduced with CAESAR.ADT 5.2.
		  In a LOTOS specification, a new-style iterator is specified
		  using a special comment of the form:
		     sort S (*! implementedby S ...
		                iteratedby FIRST_S and NEXT_S ... *)
		  It consists of two C macro-definitions FIRST_S and NEXT_S
		  with the following profiles
		     FIRST_S() : returns a constant value of sort S
		     NEXT_S(X) : tries to advance X to the next value of S
			         and returns a non-zero value iff there exists
		                 such a value
		  To enumerate all values of sort S, a new-style iterator
		  must be used as follows:
		     S LOOP_VARIABLE;
		     LOOP_VARIABLE = FIRST_S();
		     do {
		        ... loop body parameterized by LOOP_VARIABLE
		     } while (NEXT_S (LOOP_VARIABLE));
		  For instance, the new-style iterator for enumerating the
		  integer range 0..15 has the form:
		     #define FIRST() 0
		     #define NEXT(X) ((X)++ < 15)

		Given that there exist two forms of iterators, which one
		should be preferred? The rule is simple: From now on, the
		use of new-style iterators is highly recommended in LOTOS
		files and in their associated hand-written ".t" and ".f"
		files. Specifically, any further use of "enumeratedby"
		clauses in special comments is discouraged; "iteratedby"
		clauses should be used instead. (Backward compatibility
		issues will be discussed later below).

		Consequently, the following changes have been brought to the
		CADP toolbox:

		- The CAESAR.ADT compiler was modified to handle special
		  comments of the form "iteratedby ... and ..." and to
		  generate appropriate C code for new-style iterators. The
		  "-map" and "-external" options of CAESAR.ADT have been
		  extended accordingly.

		- The CAESAR.INDENT pretty-printer was modified to accept
		  special comments of the form "iteratedby ... and ...".

		- The CAESAR compiler was modified to handle special
		  comments of the form "iteratedby ... and ...". In the
		  generated C code, CAESAR can now invoke new-style
		  iterators instead of old-style ones according to rules
		  detailed below. The "-map" option was also updated.

		- In all "*.lib" files contained in directory $CADP/lib,
		  special comments of the form "enumeratedby" have been
		  replaced with "iteratedby" ones.

		- Consequently, in all "X_*.h" files contained in directory
		  $CADP/incl, definitions of old-style iterator macros of
		  the form ADT_ENUM_xxx() have been removed and replaced
		  with corresponding pairs of ADT_ENUM_FIRST_xxx() and
		  ADT_ENUM_NEXT_xxx() macros.

		- In all demo examples containing iterator macros, the
		  "*.lib", "*.h", "*.f", and "*.t" macros have been updated
		  accordingly. The improvement is particularly evident in
		  the case of demo_23, where all the "*.f" containing old-
		  style iterators (a total of 2,464 lines of C code) have
		  been replaced with equivalent, yet shorter ".t" files
		  (only 111 lines in total) containing new-style iterators.

		Although we recommend to migrate, as much as possible, to
		new-style iterators, we implemented specific policies to
		ensure a maximal backward compatibility for already existing
		LOTOS programs (together with their associated ".t" and ".f"
		files) making use of old-style iterators. In some cases
		however, backward compatibility cannot be ensured, thus
		leaving migration as the only available option.

		First, to avoid migration problems, one should carefully erase
		the ".h" files generated by former versions of CAESAR.ADT
		and the ".c" files generated by former versions of CAESAR.

		The backward compatibility rules implemented in CAESAR.ADT and
		CAESAR are the following:

		(1) If an "iteratedby" comment is present when a LOTOS sort
		    S is declared, then CAESAR.ADT will generate a new-style
		    iterator for S, and CAESAR will invoke this new-style
		    iterator whenever it is necessary to enumerate all values
		    in the domain of S.

		(2) If an "enumeratedby" comment is present when a LOTOS sort
		    S is declared, then CAESAR.ADT will generate *both* an
		    old-style iterator and a new-style iterator for S, and
		    CAESAR will invoke the old-style iterator whenever it is
		    necessary to enumerate all values in the domain of S.

		(3) If neither "iteratedby" nor "enumeratedby" comment is
		    present when a LOTOS sort S is declared, then CAESAR.ADT
		    and CAESAR will consider, by default, that sort S has a
		    new-style iterator, the name of which is unspecified and
		    provided automatically by CAESAR.ADT and CAESAR. Thus,
		    CAESAR.ADT will generate a new-style iterator for S, and
		    CAESAR will invoke this new-style iterator whenever it is
		    necessary to enumerate all values in the domain of S.

		Note: following rules (1)-(3), a new-style iterator will
		always be generated, independently of whether an "iteratedby"
		or "enumeratedby" comment is present or not.

		Note: in the syntax of special comments attached to LOTOS
		sorts, it is not allowed to specify simultaneously
		"enumeratedby" and "iteratedby" for the same LOTOS sort.

		Note: rule (3) breaks backward compatibility (but only if
		hand-written old-style iterators are given in the ".t" file
		or if the old-style iterators generated by CAESAR.ADT are
		invoked in some hand-written C program). Previously, any LOTOS
		sort without special comment would be given an old-style
		iterator by default. From now on, it will be given a new-style
		iterator by default. In that case, we decided to give priority
		to new-style iterators instead of old-style ones.

		In addition to the general rules (1)-(3), the following rules
		detail how particular cases are handled:

		(4) In the C code generated by CAESAR.ADT, all iteration
		    macros (either old-style or new-style) are enclosed
		    between #ifdef ... and #endif. This allows users to
		    provide their own iterators by defining their own macros
		    in the ".t" file. Because of #ifdef clauses, the C code
		    generated by CAESAR.ADT will not override the actual
		    macro-definitions provided by the user.

		(5) The new version of CAESAR.ADT will analyze (during its
		    "type survey" phase) the ".t" file (if present) to
		    determine whether it contains hand-written (old-style or
		    new-style) iterators for the LOTOS sorts. Similarly, the
		    new version of CAESAR does the same with the ".h" file,
		    which can be either generated automatically by CAESAR.ADT
		    or provided by the user.

		    Note: for a new-style operator, the existence test is
		    done by checking the existence of both macros, i.e.,
		       #if defined(FIRST) && defined (NEXT)
		    If only one macro is defined (i.e., if FIRST() exists
		    but not NEXT(), or vice versa), a warning will be emitted.

		(6) Because the tests on iterator existence mentioned in rules
		    (4) and (5) are implemented using #ifdef conditions, the
		    new-style iterators provided by the user must always be
		    defined as C macro-definitions and not as C functions (for
		    old-style iterators, this is always the case). Otherwise,
		    the #ifdef condition would always be false. Thus, the rule
		    will be to define FIRST() and NEXT() as macros, even if
		    they could be also defined as C functions. Anyway, if
		    the C code for new-style iterators is so complex that it
		    must be enclosed in functions, say FIRST_FUNCTION() and
		    NEXT_FUNCTION(), it is always possible (and required) to
		    define FIRST() and NEXT() as wrappers around these
		    functions, i.e.,
		       #define FIRST() FIRST_FUNCTION()
		       #define NEXT(X) NEXT_FUNCTION(&(X))

		(7) If a LOTOS sort S is specified to be "external" using a
		    special comment of the form "(*! ... external *)", and if
		    CAESAR needs to enumerate the value domain of S, then a
		    ".t" file should be present and should contain an iterator
		    for S. CAESAR.ADT will not generate iterators for external
		    sorts and CAESAR will emit warning/error messages when
		    trying to enumerate the value domain of external sorts
		    without hand-written iterators.

		(8) As regards hand-written old-style iterators given in the
		    ".t" file: it is strongly recommended to rewrite them
		    into new-style iterators. However, to preserve backward
		    compatibility, CAESAR.ADT will generate macro-definitions
		    in which new-style iterators are derived from old-style
		    ones. These new-style operators provided for backward
		    compatibility are functionally correct but slower: when
		    used to enumerate a domain with N values, they take a
		    quadratic amount of time O(N^2) instead of a linear one
		    O(N). Therefore, migrating towards hand-written new-style
		    iterators is advised.

		(9) The new version of CAESAR.ADT analyzes the constructors
		    of each LOTOS sort in order to detect whether the value
		    domain of each sort is finite or infinite (this is done
		    by computing fixed points, since an infinite sort is
		    characterized by the existence of recursive constructor
		    definitions). Even if a sort S has an infinite value
		    domain, the user can always define, in the ".t" file, an
		    iterator for S that enumerates only a finite subset of
		    the value domain of S. If such an iterator is present,
		    CAESAR and CAESAR.ADT will consider that sort S, although
		    infinite in theory, is actually bounded. Otherwise, sort S
		    will be considered as "truly" infinite. In any case,
		    CAESAR.ADT will not generate iterators for infinite sorts
		    and CAESAR will emit warning/error messages when trying
		    to enumerate the value domain of external sorts without
		    hand-written iterators.

		Note: For an external, infinite or "complex" sort S, the
		previous versions of CAESAR.ADT would generate, in the ".h"
		file, a "fake" iterator CAESAR_ADT_NO_ITERATOR_S() that
		would, in turn, invoke a macro CAESAR_ADT_NO_ITERATOR ("S")
		that would itself trigger an exception (using the raise (15)
		signal) as soon as the iterator is invoked. This is no longer
		the case: the new version of CAESAR.ADT generates no iterator
		at all for such sorts and the CAESAR_ADT_NO_ITERATOR_S() and
		CAESAR_ADT_NO_ITERATOR() macros are no longer defined.
		Consequently, the new version of CAESAR no longer tries to
		invoke such macros: instead, during its "type survey" phase,
		it checks for the existence of iterators in the ".h" file;
		if it is required to invoke an interator that does not exist,
		CAESAR will emit first a warning message, followed by an
		error message during the simulation phase when the iterator
		is actually invoked. Note that ".c" files generated by former
		versions of CAESAR should be erased and regenerated, as they
		might contain invocations to the CAESAR_ADT_NO_ITERATOR_S()
		and CAESAR_ADT_NO_ITERATOR() macros.

		(10) Beyond rules (1)-(3), there are two cases in which the
		    new version of CAESAR.ADT tries to generate an old-style
		    iterator for some LOTOS sort S:
		    - when S is declared with an "enumeratedby" comment, as
		      specified by rule (2)
		    - when S is declared with an "iteratedby" comment or
		      without comment, but appears as a field of a tuple
		      sort S' declared with an "enumeratedby" comment (i.e.,
		      S' has a unique constructor with one or several
		      parameters of sort S).
		    The second case intends to provide backward compatibility
		    as much as possible.

		(11) There are situations in which it is not possible to
		    generate an old-style iterator for some sort S, because
		    of issues a) and b) listed above. This happens when
		    S is finite and S does not have a hand-written iterator
		    given in the ".t" file and
		    - either S is a "complex" sort
		    - or S is a tuple sort, the unique constructor of which
		      has at least one parameter of sort S' such that S' is
		      either a tuple sort, or an external sort declared with
		      an "iteratedby" comment, or a sort declared with an
		      "iteratedby" comment for which a hand-written iterator
		      exists in the ".t" file.
		    In such case, CAESAR.ADT will emit a warning message
		    reporting that the old-style iterator cannot be produced.

		Note: To summarize the benefits of new-style iterators, the
		new version of CAESAR.ADT can generate an iterator for any
		LOTOS sort S that is not declared as external and for which
		no hand-written iterator is given in the ".t" file and that
		has a finite value domain.
-------------------------------------------------------------------------------
BUG FIX
Number:		904
Date: 		Mon Apr 26 13:25:23 MEST 2004
Report:		Bruno Ondet (INRIA/VASY)
Author:		Nicolas Descoubes (INRIA/VASY)
Files:		com/tst, com/installator

Nature:		Two bugs have been fixed in the INSTALLATOR and "tst" tools:
		both tools would fail if the environment variable $CADP_TMP
		was set to a non-existent directory, or to a non-writable
		directory, or to a relative pathname (i.e., not starting
		with a `/'). From now on, both INSTALLATOR and "tst" will
		check that $CADP_TMP is set to the absolute pathname of a
		writable directory and, if not, emit a proper error message.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		905
Date: 		Tue Apr 27 13:02:01 MEST 2004
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		com/installator, src/installator/installator.tcl

Nature:		Many improvements have been made to the INSTALLATOR assistant:

		- INSTALLATOR now handles file and directory name that contain
		  spaces (such as "Program Files", "Documents and Settings",
		  etc.)

		- A "Retry" button was added when the FTP connection needed
		  to search for the most recent (beta-)version of CADP fails.

		- A "Show Prototype License File" was added to display the
		  prototype license file before it is sent to the CADP team.

		- Environment variables $LANG and $LC_ALL are now set to
		  standard values so as to ensure a correct functioning in
		  any country.

		- The builtin FTP client of INSTALLATOR now opens "passive"
		  connections (instead of "active" ones), which is more
		  compatible with firewall policies that may exist on the
		  side of CADP users. This avoids most "FTP error" messages,
		  but will not bypass strict firewalls (or iptable/ipchains
		  configurations) that disable all FTP downloads.

		- Two new buttons labelled "Look instead for a stable version"
		  and "Look instead for a beta version" have been added. They
		  allow to switch easily from a stable version to a beta-
		  version and vice-versa. These buttons allow to recover
		  easily from the omission of the "-beta" version.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		906
Date: 		Tue Apr 27 15:42:26 MEST 2004
Report:		Wendelin Serwe (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		com/svl, bin.*/svl_kernel, man/*/svl.l

Nature:		The semantics of "root leaf reduction" and "node reduction"
		have been modified in order to benefit from the most efficient
		CADP tools available up to date. For instance, certain
		invocations of ALDEBARAN for reducing composition expressions
		have been replaced with invocations of BCG_MIN and GENERATOR.

		Also, to ease the debugging of SVL scripts, the SVL compiler
		has been modified to keep the intermediate files present in
		the current directory when a command called by SVL fails.
-------------------------------------------------------------------------------
BUG FIX
Number:		907
Date:		Tue Apr 27 16:31:48 MEST 2004
Report:		Wendelin Serwe (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel, src/svl/standard

Nature:		A bug was fixed in SVL. If some label occurring in a hide,
		rename, or abstraction expression had leading blank characters
		(inside quotes), these blank characters were ignored, since
		SVL would remove quotes while creating the rename, hide, or
		synchronization file.
-------------------------------------------------------------------------------
BUG FIX
Number:		908
Date: 		Fri Apr 30 18:49:46 MEST 2004
Authors:	Nicolas Descoubes, Hubert Garavel, and Frederic Lang
		(INRIA/VASY)
Files:		bin.win32/libBCG.a

Nature:		Two problems have been solved in the BCG library:

		- In some cases, under Windows, the BCG tools could emit a
		  warning message of the form:
		     "bcg_dynamic: stat error on the bcg file"
		  This was due to an error in the system function tmpfile(),
		  which we replaced by a correct function.

		- The value returned by the system function getdtablesize()
		  was increased from 20 to 40, which now allows to open 37
		  BCG files simultaneously (instead of 17 as before).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		909
Date: 		Tue May  4 14:54:12 MEST 2004
Report:		Jaco van de Pol (CWI, Amsterdam, The Netherlands)
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		bin.*/libcaesar.a, doc/*/Garavel-92-a.*,
		man/*/caesar_hide_1.*, man/*/caesar_rename_1.*

Nature:		The definition of the "gate mode" used in the OPEN/CAESAR
		libraries "hide_1" and "rename_1" was slightly extended.
		Previously, the "gate" extended from the beginning of the
		label up to the first space or tabulation character; now, it
		extends up to the first space, tabulation character, `?', `!',
		or `(' character. This definition is compatible with the
		conventions used in the LOTOS and muCRL languages, but it may
		break compatibility with some (hypothetical) langages that
		would allow the `?', `!', or `(' characters in their gate
		names. The manual pages for the "hide_1" and "rename_1"
		libraries have been made more precise, by defining exactly the
		notion of "the first word of S"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		910
Date: 		Tue May  4 15:17:19 MEST 2004
Report:		Nicolas Descoubes (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		incl/caesar_standard.h, incl/bcg_standard.h
		doc/*/Garavel-92-a.*, man/*/caesar_standard.*

Nature:		The "caesar_standard.h" include file was modified to ensure
		compatibility with ISO C:

		- It no longer includes <malloc.h> (which does not exist on
		  Mac OS X) but includes <stlib.h> instead. The same change
		  was made also to "bcg_standard.h".

		- Migration from <varargs.h> to <stdarg.h> was achieved.
		  The CAESAR_VARARGS() macro-definition was removed. The
		  prototypes of functions CAESAR_ERROR() and CAESAR_WARNING()
		  was modified to include a first parameter CAESAR_FORMAT
		  (exactly like printf()) in order to be conformant with
		  <stdarg.h>: this change should be totally transparent to the
		  end-users.
-------------------------------------------------------------------------------
BUG FIX
Number:		911
Date: 		Wed May  5 17:58:28 MEST 2004
Report:		Jaco van de Pol (CWI, Amsterdam, The Netherlands)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/ocis.a

Nature:		When launching the OCIS simulator in graphical mode, the
		CAESAR_INIT_GRAPH() primitive was called twice, which was
		inefficient and possibly erroneous, since initialization
		actions that perform side effects should be executed only
		once.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		912
Date: 		Wed May  5 18:48:13 MEST 2004
Report:		Jaco van de Pol (CWI, Amsterdam, The Netherlands)
Authors:	Radu Mateescu and Hubert Garavel (INRIA/VASY)
Files:		bin.*/evaluator.a

Nature:		The EVALUATOR 3 model-checker is developed using Lex/Yacc.
		When linking the "evaluator.a" library against other binary
		objects (e.g., mcrl.open) also developed using Lex/Yacc,
		name clashes would occur at link edit time. This problem was
		solved by prefixing all Lex/Yacc-related identifiers in
		EVALUATOR 3 with a constant string ("evaluator_yy").
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		913
Date: 		Tue May 25 16:08:34 MEST 2004
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		installator.shar, installator.com, cadp_cygwin.com,
		src/com/install_uncompress

Nature:		The INSTALLATOR assistant was made more portable:

		- An increasing number of operating systems no longer have
		  the "uudecode" command installed by default. From now on,
		  INSTALLATOR will build itself its own version of "uudecode"
		  if the standard "uudecode" is absent from the host machine.
		  Consequently, the "cadp_cygwin.com" shell-script for
		  Windows was simplified, as it no longer needs to install
		  "uudecode": this is now done by INSTALLATOR.

		- Similarly, INSTALLATOR will build itself its own version of
		  "uncompress" if the host machine has neither "uncompress",
		  nor "compress", nor "gunzip", nor "gzip". Also, the
		  "install_uncompress" shell-script was adapted to perform
		  the installation of CADP using "uncompress", "gzip", etc.
		  depending on what exists. Consequently, the shell-script
		  "cadp_cygwin.com" no longer creates a symbolic link named
		  "uncompress" that points to "gunzip".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		914
Date: 		Tue Jun  1 15:19:44 MEST 2004
Authors:	Susanne Graf (VERIMAG) and Wendelin Serwe (INRIA/VASY)
Files:		demos/demo_32

Nature:		A new demo (prepared by Susanne Graf in 1994 and slightly
		updated by Wendelin Serwe ten years later) was added to the
		CADP tool set. This demo is about a distributed, lazy cache
		memory preserving sequential consistency.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		915
Date: 		Wed Jun  2 18:41:59 MEST 2004
Authors:	Frederic Tronel and Frederic Lang (INRIA/VASY)
Files:		demos/demo_33

Nature:		A new demo, dealing with a randomized binary distributed
		consensus protocol proposed by Ben-Or in 1983, was added to
		the CADP tool set.
-------------------------------------------------------------------------------
BUG FIX
Number:		916
Date: 		Tue Jun  8 16:58:07 MEST 2004	
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_cc, src/com/cadp_mail, src/com/cadp_psbox,
		src/com/cadp_tail, src/com/install_version,
		src/com/xeuca_convert, src/com/xeuca_man, src/com/xeuca_ps,
		src/com/xeuca_version, com/tst, com/upc,
		./src/eucalyptus/eucalyptus.tcl,
		./src/installator/installator.tcl

Nature:		Changes were made to the CADP tool set in order to support
		the Linux distribution "gentoo" and, precisely, to avoid
		error messages such as:
		 > tail: `-10' option is obsolete; use `-n 10' since this
		 > will be removed in the future
		To solve this problem, all invocations of the form `head -N',
		`tail -N', and `tail +N' have been replaced, respectively,
		by `head -n N', `"$CADP"/src/com/cadp_tail -n N', and
		`"$CADP"/src/com/cadp_tail -n +N', where "cadp_tail" is a
		new command.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		917
Date: 		Tue Jun 15 11:59:34 MEST 2004
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		INSTALLATION_0, INSTALLATION_2

Nature:		The INSTALLATION_0 and INSTALLATION_2 documentation files have
		been simplified and adapted to the latest versions of Linux
		and Cygwin/Windows, and to explain how the $MANPATH variable
		should be set.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		918
Date: 		Tue Jun 15 15:21:10 MEST 2004
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_web, INSTALLATION_2

Nature:		On Solaris and Linux, when the environment variable $NAVIGATOR
		is not set, it is no longer replaced with "netscape" (since
		most recent Linuxes do not have Netscape installed); instead,
		several browsers are tried, including Mozilla, Firefox, etc.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		919
Date: 		Wed Jun 16 16:04:29 MEST 2004
Authors:	Nicolas Descoubes, Hubert Garavel, and Damien Bergamini
		(INRIA/VASY)
Files:		tcl-tk/*, bin.*/xsimulator.a, src/ocis/ocis.tcl,
		src/eucalyptus/eucalyptus.tcl, src/xsimulator/main.tcl,
		src/bcg_edit/bcg_edit.tcl, src/installator/installator.tcl,
		src/monitor/main.tcl, src/com/cadp_x11,
		demos/demo_19/graphics/startsimu

Nature:		Several changes were made to port the graphical tools of CADP
		to Mac OS X:
		- The version of Tcl/Tk shipped with CADP was upgraded to
		  version 8.4.6.
		- The version of Tix shipped with CADP was upgraded to
		  version 8.2.
		- A new shell-script named cadp_x11 was added.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		920
Date: 		Thu Jul  1 16:49:43 MEST 2004	
Authors:	Nicolas Descoubes and Wendelin Serwe (INRIA/VASY)
Files:		doc/pdf/Aguilar-Garavel-et-al-01.pdf,
		doc/pdf/Chehaibar-Garavel-et-al-96.pdf,
		doc/pdf/Garavel-98.pdf,
		doc/pdf/Garavel-Lang-01.pdf,
		doc/pdf/Garavel-Mounier-96.pdf,
		doc/pdf/Garavel-Viho-Zendri-00.pdf,
		doc/pdf/Mateescu-00-a.pdf,
		doc/pdf/Mateescu-96.pdf,
		doc/pdf/Mateescu-Sighireanu-00.pdf,
		doc/pdf/Pace-Lang-Mateescu-03.pdf,
		doc/pdf/Sighireanu-Mateescu-97.pdf

Nature:		Several PDF files included in the CADP distribution were
		incorrect (i.e., produced by a bogus PDF document generator).
		These files have been replaced with correct ones.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		921
Date: 		Fri Jul  2 17:04:15 MEST 2004
Report:		Stefan Blom (CWI, Amsterdam, The Netherlands)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/arch, src/com/cadp_cc, src/com/cadp_cpp, src/com/cadp_crlf,
		src/com/cadp_rm, src/com/install_df, src/com/xeuca_shell,
		src/com/cadp_which, src/com/xeuca_ps, src/com/xeuca_term

Nature:		The CADP tool set was ported to AMD's "Opteron" processors
		running in 32-bit mode under Linux.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		922
Date: 		Mon Jul  5 18:17:49 MEST 2004
Report:		Hubert Garavel (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		src/svl/standard

Nature:		The warning messages possibly issued by CAESAR.ADT and CAESAR
		(in the ".err" file) during the compilation of a LOTOS
		description are now reproduced by the SVL compiler in the SVL
		log file. SVL also reports the occurrence of such message to
		the user, and keeps the ".err" file in the current directory
		until the ``svl -clean'' command is executed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		923
Date: 		Thu Jul  8 19:29:23 MEST 2004
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a, incl/caesar_standard.h,
		man/*/caesar_standard.*, doc/*/Garavel-92-a.*

Nature:		A new function named CAESAR_TEMPORARY_FILE() was added to
		OPEN/CAESAR's "standard" library.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		924
Date: 		Tue Jul 13 11:21:45 MEST 2004
Report:		Jack Abily (BULL) and Axel Belinfante (University of Twente)
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_cc, src/linux/bin.iX86/libcpatch-2.2.5.a

Nature:		Backward compatibility support was added for the old GNU C
		library "glibc 2.2.5" used in former versions of Linux such
		as Redhat 7.2. This avoids error messages about undefined
		symbols at link edit time, such as:
		   > .../CADP/bin.iX86/libBCG.a(bcg_read_2.o): In function
		   > `BCG_STRING_TO_UPPER': undefined reference to
		   > `__ctype_toupper_loc'
		or:
		   > .../CADP/bin.iX86/libBCG.a(bcg_stream.o): In function
		   > `BCG_PRINT_IN_DOUBLE_QUOTE': undefined reference to
		   > `__ctype_b_loc'
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		925
Date: 		Tue Jul 13 14:47:58 MEST 2004
Author:		Damien Bergamini (INRIA/VASY)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		A new tool named CAESAR.BDD was added to the CADP tool set.
		This tool uses Binary Decision Diagrams to compute structural
		properties of Basic Petri Nets. See the "caesar.bdd" manual
		page for details.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		926
Date: 		Tue Jul 13 17:11:50 MEST 2004
Authors:	Damien Bergamini and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, man/*/caesar.*

Nature:		The optimization E7 of CAESAR, which removes all network
		transitions that never fire according to Petri net rules,
		was redesigned.

		The former optimization E7 was based on the explicit
		enumeration of all reachable markings ("explicit-state"
		approach); it was optional and only executed if the "-e7"
		option was given on the command-line when invoking CAESAR.

		The new optimization E7 is based on Binary Decision Diagrams
		and relies on the CAESAR.BDD tool (see item #925 above).
		Since this new optimization is much faster, it is no longer
		optional: it is performed by default every time CAESAR is
		invoked.

		Experiments have shown that the new optimization E7 could
		handle large LOTOS examples that could not be processed by
		the old optimization, due to lack of memory. We found no
		counter-example that the old optimization, but not the new
		one, could handle.

		Moreover, on several hundreds of LOTOS examples handled by
		both the old and new optimizations, the new optimization
		proved to be faster than the old optimization by 19%.

		On the same hundreds of examples, it appeared that applying
		the new optimization E7 is as fast as applying no optimization
		E7, either new or old (in fact, it is even slightly faster
		by 0.6%). Thus, the time spent in BDD computations to remove
		dead transitions is totally compensated by the state space
		reductions and time savings arising from a smaller network.
		
		The semantics of CAESAR's command-line options was modified
		as follows:
		- A new option "-e7old" was added for backward compatibility,
		  so as to retain the former behaviour of CAESAR. This option
		  performs the old optimization E7 instead of the new one.
		- Option "-e7" no longer performs the old optimization E7;
		  its new meaning is to disable the new optimization E7.
		- In absence of both "-e7" and "-e7old", the new optimization
		  E7 is peformed by default.

		In summary, there are now three cases:
		- If you do not want optimization E7: use "-e7" option.
		- If you want the old optimization E7: use "-e7old" option.
		- If you want the new optimization E7: use no option.

		The CAESAR manual page was updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		927
Date: 		Thu Jul 15 12:03:01 MEST 2004
Report:		Nicolas Descoubes (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/com/xeuca_info

Nature:		Changes were brought to the "xeuca_info" shell-script in order
		to support recent Linux distributions and, precisely, to avoid
		error messages of the form:
		 > cut: invalid byte, character or field list
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		928
Date: 		Fri Jul 16 14:40:55 MEST 2004
Author:		Damien Bergamini (INRIA/VASY)
Files:		./INSTALLATION_MACOS, ./INSTALLATION_WINDOWS, ./INSTALLATION_0

Nature:		Following the efforts under way to port CADP to Mac OS X,
		the documentation files have been updated:
		- A new file named INSTALLATION_MACOS explains the preliminary
		  steps needed to get CADP working on Mac OS X.
		- The already existing file INSTALLATION_0 was renamed into
		  INSTALLATION_WINDOWS, and a symbolic link INSTALLATION_0
		  pointing to INSTALLATION_WINDOWS was installed for backward
		  compatibility.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		929
Date: 		Tue Jul 20 11:33:57 MEST 2004
Report:		Humberto Osorio (Universidade Federal do Ceara, Brazil)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.iX86/*

Nature:		The Linux binaries of CADP tools have been made compatible
		with recent Linux distributions based on the Linux 2.6 kernel,
		such as Mandrake version 10.
-------------------------------------------------------------------------------
BUG FIX
Number:		930
Date: 		Wed Jul 21 20:30:43 MEST 2004
Report:		Lars-Ake Fredlund (SICS, Sweden), Marc Herbert (INRIA/VASY),
		and Guy Tremblay (Universite du Quebec a Montreal, Canada)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/*

Nature:		8-bit characters are now allowed in LICENSE files. Previously,
		only 7-bit characters were permitted, and the use of 8-bit
		characters would generate error messages of the form:
		   > *018 protection violation:
		   >      falsified license
		   >      wrong global checksum
		   >      quit
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		931
Date: 		Fri Jul 23 16:54:03 MEST 2004
Report:		Gert Huisman (Vrije Universiteit Amsterdam, The Netherlands),
		and Christophe Joubert (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/*, com/rfl, INSTALLATION_3

Nature:		The CADP licensing mechanism was enhanced to allow multiple
		license files. In addition to the primary license file named
		"$CADP/LICENSE", it is now possible to have a secondary
		license file named "$CADP/LICENSE.1", and even a tertiary
		license file named "$CADP/LICENSE.2". These files will be
		checked in the following order: primary, then secondary, then
		tertiary. This feature is intended to administrators of
		clusters or large networks with hundreds of machines:
		secondary/ tertiary license files allow to obtain licenses
		for machines that were down or otherwise unavailable at the
		time the primary license file was prepared.
-------------------------------------------------------------------------------
BUG FIX
Number:		932
Date: 		Sat Aug  7 11:28 MES 2004
Report:		Katsumi Wasaki (Shinshu University, Nagano, Japan)
Author:		Hubert Garavel (INRIA/VASY)
Files:		demos/demo_04/EXP.t, incl/caesar_kernel.h

Nature:		The two files "EXP.t" and "caesar_kernel.h" were changed so as
		to remplace the inclusion of <malloc.h> (which does not exist
		on Mac OS X) by the inclusion of <stdlib.h>. This suppresses
		the following error messages emitted by CAESAR and CAESAR.ADT:
		   > .. malloc.h: No such file or directory
		   > #127 error in file ``.h'' during type survey:
		   >      survey program is rejected by the C compiler
		   >      quit
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		933
Date: 		Tue Aug 24 14:57:26 MEST 2004
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c, bin.*/libexpopen.a, bin.*/libexp_open.a,
		com/exp.open, man/*/exp.open.*

Nature:		The EXP.OPEN 1.0 tool, which allows to compile networks of
		communicating LTSs into the OPEN/CAESAR "caesar_graph" API,
		was replaced by a new version EXP.OPEN 2.0 entirely rewritten
		from scratch.

		The input language of EXP.OPEN 2.0 (i.e., the contents of
		".exp" files) is a superset of the input language of EXP.OPEN
		1.0. That is, the networks of communicating LTSs accepted by
		EXP.OPEN 1.0 (i.e., LTS files combined using LOTOS parallel
		composition and gate hiding operator) are still accepted by
		EXP.OPEN 2.0, which also brings the following extensions:

		- The "hide" operator was generalized so that labels can be
		  defined using regular expressions, possibly in a separate
		  file, according to the conventions of the "caesar_hide_1"
		  library.

		- Two new operators, "rename" and "cut", were added to the
		  input language of EXP.OPEN 2.0. Like the generalized "hide"
		  operator, these operators allow labels to be specified using
		  regular expressions, possibly in a separate file.

		- The generalized parallel composition ("par") operator of
		  E-LOTOS was also added; this operator provides advanced
		  features, including "n among m" synchronization.

		- Finally, operators brought from various formalisms were
		  also added to the input language of EXP.OPEN 2.0, namely:
		    - a parallel composition operator based on the notion of
		      synchronization vectors (as in the MEC and FC2 tools),
		    - the parallel composition operators of the CCS, CSP, and
		      mCRL process algebras,
		    - the renaming, cut, and hiding operators of the CCS and
		      CSP process algebras.

		The command-line syntax of EXP.OPEN 2.0 also extends that of
		EXP.OPEN 1.0 with new functionalities:
	
		- New "-branching" and "-ratebranching" options allow to use
		  partial order methods to reduce (at least, partially) state
		  spaces while preserving branching and stochastic branching
		  bisimulations, respectively. By default, strong bisimulation
		  is preserved.

		- A new "-network" option allows to translate the EXP.OPEN 2.0
		  input language into other (lower-level) formats. Currently,
		  two such formats are supported: the Petri net format of the
		  PEP tool (use "-network pep" option) and the parallel FC2
		  format (use "-network fc2").

		- New options ("-ccs", "-csp", "-elotos", "-lotos", "-mcrl")
		  allow to interpret the input language of EXP.OPEN 2.0
		  according to the conventions used in the languages CCS, CSP,
		  E-LOTOS, LOTOS, and muCRL, respectively. These conventions
		  rule, for instance, the case sensitivity in identifiers,
		  the string denoting the silent action ("i", "tau", etc.),
		  the semantics of the "||" operator, etc.

		EXP.OPEN 2.0 corrects all known bugs in EXP.OPEN 1.0. In
		particular:
		- the scope of nested "hide" operators is now correctly
		  handled,
		- there is no more limitation in the number of labels that
		  EXP.OPEN can process, and
		- function CAESAR_HASH_SIZE_STATE() of the OPEN/CAESAR
		  "caesar_graph" API now returns a correct result.

		In the demonstration examples present in the $CADP/demos
		directory, EXP.OPEN 2.0 uses about 2 times less memory than
		EXP.OPEN 1.0, and runs from 1.5 to 45 times faster.

		EXP.OPEN 2.0 provides the user with a better understanding of
		the generated LTS by indicating, for each of its actions, the
		history of successive operations (synchronizations, hidings,
		renamings) that engendered this action.

		Note: EXP.OPEN 2.0 uses a new library named "libexp_open.a",
		which replaces the older "libexpopen.a".

		See the EXP.OPEN manual page for more information.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		934
Date: 		Tue Aug 24 16:09:39 MEST 2004
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2fc2, com/exp2fc2, man/*/exp2fc2.*

Nature:		The EXP2FC2 program (which contained a few bugs and only
		supported the input language of EXP.OPEN 1.0) was replaced
		by a simple shell-script that invokes EXP.OPEN 2.0 with the
		"-network fc2" option. Indeed,
		     exp2fc2 FILE.exp FILE.fc2
		is equivalent to:
		     exp.open -case -network fc2 FILE.exp
		The manual page for EXP2FC2 was updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		935
Date: 		Thu Aug 26 14:57:26 MEST 2004
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		com/rfl

Nature:		The option "-l" of the RFL shell-script was enhanced so as to
		support the secondary and ternary license files, if any (see
		item #931 above).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		936
Date: 		Fri Aug 27 10:36:35 MEST 2004
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		com/*, src/com/*, ./INSTALLATION_1, ./INSTALLATION_2,
		./INSTALLATION_3, ./INSTALLATION_4

Nature:		Most CADP shell-scripts were modified in order to support
		spaces in file names. However, this work is not complete yet,
		so the use of spaces in file names is still discouraged.

		Also, the documentation files INSTALLATION_* were updated:
		double quotes were added around every occurrence of $CADP to
		deal with the presence of spaces in directory and file names.
-------------------------------------------------------------------------------
BUG FIX
Number:		937
Date: 		Tue Aug 31 11:38:51 MEST 2004
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		com/tst, src/com/cadp_adjust, src/com/cadp_windows,
		src/installator/installator.tcl, ./INSTALLATION_4

Nature:		The existing "cadp_windows" shell-script was renamed into
		"cadp_adjust". This shell-script fixes two issues arising on
		Windows:

		- The Cygwin symbolic links are not recognized by standard
		  Win32 applications, among which the CADP binaries; the
		  script "cadp_adjust" solves this problem by replacing all
		  symbolic links by their target.

		- The text files of CADP contain only LF characters and, thus,
		  do not display properly on certain Windows applications
		  such as Notepad; the script "cadp_script" solves this
		  problem by replacing every LF character by a pair CR/LF.

		The INSTALLATOR assistant was modified to invoke "cadp_adjust"
		automatically when installing CADP on a Windows system.

		The "INSTALLATION_4" file (directives for manual installation
		of CADP) was modified to mention that "cadp_adjust" must be
		invoked.

		Finally, the "tst" shell-script was adapted to detect whether
		"cadp_adjust" has been been correctly applied.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		938
Date: 		Wed Sep  1 15:13:28 MEST 2004
Report:		Damien Bergamini (INRIA/VASY)
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		bin.macOS/xsimulator.a

Nature:		The XSIMULATOR tool was ported to Mac OS X. It will launch
		automatically the X11 server if this server is not already
		running. This is done by invoking the $CADP/src/com/cadp_x11
		shell-script.
-------------------------------------------------------------------------------
BUG FIX
Number:		939
Date: 		Mon Sep  6 10:30:49 MEST 2004
Author:		David Champelovier (INRIA/VASY)
Files:		com/caesar.open

Nature:		The "caesar.open" shell-script no longer sets the environment
		variable $CADP_LANGUAGE to "-english", as this was overriding
		the genuine value of $CADP_LANGUAGE set by the user and the
		"-french" option possibly passed to "caesar.open".
-------------------------------------------------------------------------------
BUG FIX
Number:		940
Date: 		Tue Sep  7 14:44:02 MEST 2004
Report:		Damien Bergamini (INRIA/VASY)
Author:		Nicolas Descoubes (INRIA/VASY)
Files:		src/bcg_edit/bcg_edit.tcl

Nature:		A bug was fixed in the BCG_EDIT tool. After selecting "Load
		BCG" in the "File" menu, and then making a double click
		(instead of a simple click) on a directory name different
		from the parent directory "..", a warning message would occur:
		   > bad listbox index "": must be active, anchor, end,
		   > @x,y, or a number
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		941
Date: 		Thu Sep  9 15:05:57 MEST 2004
Report:		Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Authors:	Damien Bergamini and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.bdd, bin.*/caesar, man/*/caesar.bdd.*

Nature:		The CAESAR.BDD tool was enhanced in several ways:
		- The Basic Petri Net format was extended with, for each
		  unit, the list of its sub-units;
		- CAESAR.BDD now handles properly user interrupts (Ctrl-C);
		- CAESAR.BDD now returns different exit codes for each cause
		  of error;
		- A bug with option "-unit" was fixed.
		The CAESAR compiler was also enhanced to recover from the
		various errors faced by CAESAR.BDD, to display relevant error
		messages, to abort optimization E7 properly, and to continue
		its execution.
-------------------------------------------------------------------------------
BUG FIX
Number:		942
Date: 		Mon Sep 13 10:30:10 MEST 2004
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		demos/demo_26/*

Nature:		The ADT_ENUM_NEXT_NAT() iterators defined in the ".f" files of
		demo_26 have been updated to avoid a "macro redefined" warning
		produced by the C compiler. Also, all the ".f" files have been
		renamed into ".t" files, to follow the CAESAR.ADT conventions.
-------------------------------------------------------------------------------
BUG FIX
Number:		943
Date: 		Mon Sep 13 10:59:08 MEST 2004
Report:		David Champelovier (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG_IO.a

Nature:		A bug was fixed in the BCG_IO_WRITE_BCG_END() function of
		the "bcg_write" API; in some cases, this bug would cause a
		segmentation fault / core dump on Linux.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		944
Date:		Fri Sep 17 11:33:25 MEST 2004
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		com/rfl, com/installator, src/installator/*, installator.shar

Nature:		The CADP installation procedure was enhanced so that CADP
		users can receive by e-mail a reminder message a fixed number
		of days (by default, 30 days) before their license expires.
		This new feature required the following changes:

		- LICENSE files now contain the e-mail address of the person
		  to whom the reminder message will be sent;

		- LICENSE files also contain the number of days in advance at
		  which the reminder must be set;

		- The RFL shell-script was extended with two new options
		  ("-e" and "-r") that extract from LICENCE files the e-mail
		  address and the number of days, respectively;

		- INSTALLATOR now always asks for an e-mail address (before,
		  this was optional for Unix and only mandatory on Windows);
		  incidentally, this will solve the problem of LICENSE files
		  sent to the CADP team from the "root" account of Unix,
		  which could be returned only to "root" and not to a real
		  user e-mail address.
-------------------------------------------------------------------------------
BUG FIX
Number:		945
Date: 		Fri Sep 24 10:03:30 MEST 2004
Report:		Marc Herbstritt (Albert-Ludwigs University, Freiburg, Germany),
		Venkatesh P. Ranganath (Kansas State University, USA), and
		Judi Romijn (Technical Univ. of Eindhoven, The Netherlands)
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		src/installator/installator.tcl, src/com/install_uncompress

Nature:		On recent Linux systems equipped with GNU tar version 1.14,
		the INSTALLATOR assistant would fail with the following error
		message:
		   > Extracting files from archive CADP_...tar.Z
		   > ./src/linux/bin.iX86/
		   > ./src/linux/bin.iX86/libcpatch-2.2.5.a
		   > ./gc/bin.iX86/
		   > ./gc/bin.iX86/COPYRIGHT_GC
		   > ...
		   > ./bin.iX86/cadp_hostinfo
		   > ./bin.iX86/bcg_graph
		   > ./bin.iX86/caesar.bdd
		   > Error while decompressing

		This problem (which did not occur with the previous version
		1.13.25 of GNU tar) is due to an unexpected change in the
		behaviour of GNU tar, the new version of which writes a
		message (of the form "tar: Read 1536 bytes from -") to the
		stderr stream even if the extraction performed successfully.
		The presence of such messages on the stderr stream confused
		INSTALLATOR, which believed that an error occurred.

		This problem was fixed. Additionally, to prevent similar
		errors arising from further modifications of GNU tar, gzip,
		or uncompress, various buttons were added ("Abort", "Retry",
		"Continue"), so that the user can decide to continue if he/she
		believes that extraction performed correctly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		946
Date: 		Fri Sep 24 10:50:51 MEST 2004
Report:		Christophe Lohr (Concordia University, Montreal, Canada), and
		Philippe Marty (Universite de Paris-Sud, Orsay, France)
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		src/installator/installator.tcl,
		./INSTALLATION_3, ./INSTALLATION_4

Nature:		The INSTALLATOR assistant was modified to address the case
		of machines that cannot send prototype license files using
		e-mail (and also the case of machines that can send e-mail
		actually, but in an undetectable way, i.e. a way that cannot
		be predicted reliably in advance).

		By default, the new version of INSTALLATOR will send the
		prototype license files using the FTP protocol, i.e., by
		uploading these files onto the VASY FTP server. However,
		INSTALLATOR will still provide the user with 3 possibilities:
		"Send by FTP", "Send by e-mail", and "Save to disk".
-------------------------------------------------------------------------------
BUG FIX
Number:		947
Date: 		Mon Sep 27 09:12:00 MEST 2004
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel

Nature:		A bug was fixed in SVL to handle non-quoted identifiers
		correctly when the "-case" option is set.
-------------------------------------------------------------------------------
BUG FIX
Number:		948
Date: 		Thu Sep 30 17:04:45 MEST 2004
Report:		Greg Eakman (Boston University, Massachussets, USA)
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		com/installator, src/installator/installator.tcl,
		src/com/install_clone, src/com/install_lock,
		src/installator/bin.win32/install_lock.exe

Nature:		A double problem with the Windows version of INSTALLATOR was
		solved. This problem comes from the "locks" that Windows puts
		on files and directories when they are in use. When locked,
		a file or a directory cannot be removed or modified. Thus,
		the Windows version of INSTALLATOR would fail to upgrade
		CADP properly if, for instance, a binary program of CADP was
		already executing (first problem). Also, when INSTALLATOR
		was launched from an existing CADP installation (i.e., by
		running the command "$CADP/com/installator"), rather than
		launched from the "installator.com" file, this would create
		a lock on the existing "$CADP/com" directory (because of the
		existence of a running program in this directory), and thus
		this directory would become unwritable and would prevent CADP
		from being upgraded properly (second problem).

		To solve these two Windows-specific locking problems, the
		following changes were made to INSTALLATOR:

		- When "$CADP/com/installator" is launched to upgrade an
		  existing version of CADP (located in directory "$CADP"),
		  INSTALLATOR will start by "cloning" itself, i.e., copying
		  all its files in "/tmp" and re-launching itself from there.
		  This avoids creating a lock on "$CADP/com" and, thus, solves
		  the second problem.

		- In addition, a test was added to terminate the execution of
		  INSTALLATOR if the "$CADP" directory is locked, i.e., if
		  some CADP program is already executing. This addresses the
		  first problem.
-------------------------------------------------------------------------------
BUG FIX
Number:		949
Date: 		Mon Oct  4 17:01:07 MEST 2004
Report:		Hubert Garavel and Radu Mateescu (INRIA/VASY)
Author:		Nicolas Descoubes (INRIA/VASY)
Files:		com/upc, com/rfl, com/cadp_hostname

Nature:		A minor problem of RFL on Solaris was fixed. This problem
		(upper-case letters instead of lower-case letters in prototype
		license files) only occurred when RFL invoked "/usr/bin/tr"
		instead of "/usr/ucb/tr".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		950
Date: 		Mon Oct  4 19:14:13 MEST 2004
Report:		Hubert Garavel (INRIA/VASY)
Author:		Nicolas Descoubes (INRIA/VASY)
Files:		com/tst

Nature:		Changes were brought to "tst" in order to allow a better
		detection of the Glibc version number. The modified version
		of "tst" now uses three different methods to ensure that the
		Glibc version number will be properly detected.
-------------------------------------------------------------------------------
BUG FIX
Number:		951
Date: 		Fri Oct  8 14:46:09 MEST 2004
Report:		Frederic Lang (INRIA/VASY)
Authors:	Damien Bergamini and Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_min

Nature:		A bug in the implementation of the branching stochastic
		bisimulation was fixed in the BCG_MIN tool. Due to this bug,
		the reduction was not "total" in the sense that one single
		call to "bcg_min -rate -branching" would not always yield the
		minimal stochastic LTS (in some cases, several calls would
		be necessary).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		952
Date: 		Tue Oct 12 12:17:52 MEST 2004
Report:		Solofo Ramangalahy (BULL) and
		Ken Turner (University of Stirling, Scotland, UK)
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		com/rfl, src/com/install_rfl, src/installator/installator.tcl

Nature:		The RFL and INSTALLATOR tools were modified to provide a
		better support for the SSH protocol. Previously, the RFL
		command tried to estblish remote connections using, first,
		"rsh", then "ssh", then "krsh", and thus could be slow (due
		to timeouts) for machines supporting "ssh" but not "rsh".

		To address this issue, a new "-p" option was added to RFL,
		which specifies the protocol ("rsh", "ssh", or "krsh") to be
		tried first when attempting remote connections. The shell
		"install_rfl" was also modified to support this "-p" option.
		Finally, INSTALLATOR was modified to offer the choice between
		these three protocols.	
-------------------------------------------------------------------------------
BUG FIX
Number:		953
Date: 		Tue Oct 12 15:29:32 MEST 2004
Report:		Tomas Barros (INRIA/OASIS, Sophia-Antipolis, France)
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		installator.shar

Nature:		The Mac OS X version of "installator.shar" was modified to
		solve a problem with the version of "uudecode" present on
		MacOS X 10.3; for security purpose, this particular version
		of "uudecode" requires a "-s" option, otherwise it removes
		the last "/" in the pathnames, leading to error messages of
		the form:
		   > installator.shar: line 807: /tmp/_sh01984/cmp:
		   > No such file or directory
		This problem was solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		954
Date: 		Mon Oct 18 11:20:53 MEST 2004
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c, man/*/exp.open.*

Nature:		A new "-interface" option was added to EXP.OPEN 2.0. This
		option allows to synthesize an "interface" expressing the
		synchronization constraints imposed on one LTS by (a subset
		of) its neighbour LTSs in a parallel composition expression.
		Practically, EXP.OPEN with option "-interface" generates a
		C file containing an OPEN/CAESAR graph module (implicit LTS)
		and a ".sync" file containing a list of labels. The graph
		module can be then translated into an interface (explicit LTS)
		using the GENERATOR tool. The resulting LTS can then be given,
		together with the ``.sync'' file, to the PROJECTOR tool. See
		the updated "exp.open" manual page for more details.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		955
Date: 		Tue Oct 19 16:42:10 MEST 2004
Authors:	Nicolas Descoubes, Hubert Garavel, Christophe Joubert, and
		Radu Mateescu (INRIA/VASY)
Files:		man/*/bcg_info.*, man/*/bcg_labels.*, man/*/bcg_min.*,
		man/*/caesar_*.*, doc/*/Garavel-92-a.*

Nature:		Various mistakes have been fixed in the BCG_INFO, BCG_LABELS,
		and BCG_MIN manual pages, and in the OPEN/CAESAR reference
		manual.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		956
Date: 		Thu Oct 21 15:03:55 MEST 2004
Authors:	Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		incl/caesar_hash.h, bin.*/libcaesar.a,
		man/*/caesar_hash.*, doc/*/Garavel-92-a.*

Nature:		In the "hash" library of OPEN/CAESAR, the existing macro-
		definitions CAESAR_STATE_i_HASH(), where i = 0..6, and
		CAESAR_LABEL_0_HASH() have been turned into functions, so that
		they can be passed as actual parameters to other functions.

		Also, new functions CAESAR_LABEL_i_HASH(), where i= 1..6, and
		CAESAR_STRING_0_HASH() have been added to the "hash" library.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		957
Date: 		Thu Oct 21 16:55:58 MEST 2004
Author:		Hubert Garavel (INRIA/VASY)
Files:		incl/caesar_standard.h, bin.*/libcaesar.a,
		man/*/caesar_standard.*, doc/*/Garavel-92-a.*

Nature:		The "standard" library of OPEN/CAESAR was enhanced in three
		ways:

		- Better explanations about CAESAR_ALIGNMENT_POINTER() and the
		  notion of alignment factor have been added.

		- Five new "functional" types have been added, respectively:
		  CAESAR_TYPE_GENERIC_FUNCTION, CAESAR_TYPE_COMPARE_FUNCTION,
		  CAESAR_TYPE_HASH_FUNCTION, CAESAR_TYPE_CONVERT_FUNCTION,
		  and CAESAR_TYPE_PRINT_FUNCTION.

		- A new function CAESAR_FUNCTION_NAME() was added, which
		  allows a better display of the predefined function names
		  of the OPEN/CAESAR library.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		958
Date: 		Thu Oct 21 18:16:09 MEST 2004
Authors:	Frederic Lang and David Champelovier (INRIA/VASY)
Files:		com/svl, bin.*/svl_kernel, src/svl/standard

Nature:		SVL was improved in order to work correctly when the $CADP
		environment variable contains spaces or blank characters.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		959
Date: 		Mon Oct 25 15:21:22 MEST 2004
Author:		Hubert Garavel (INRIA/VASY)
Files:		incl/caesar_block_1.h, bin.*/libcaesar.a,
		man/*/caesar_block_1.*, doc/*/Garavel-92-a.*

Nature:		A new OPEN/CAESAR library named "block_1" was added to CADP.
		This library provides some form of object-orientation for
		memory blocks of different classes (ordinary, empty, state,
		label, or string).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		960
Date: 		Wed Nov  3 16:32:35 MET 2004
Authors:	Hubert Garavel and Nicolas Descoubes (INRIA/VASY)
Files:		incl/caesar_mask_1.h, bin.*/libcaesar.a,
		man/*/caesar_mask_1.*, doc/*/Garavel-92-a.*

Nature:		A new OPEN/CAESAR library named "mask_1" was added to CADP.
		This library allows to perform sequences of hiding and
		renaming operations on memory blocks (labels, strings, ...)
		in the style of BCG_LABELS command-line options.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		961
Date: 		Wed Nov  3 17:33:08 MET 2004
Authors:	Hubert Garavel and Nicolas Descoubes (INRIA/VASY)
Files:		src/open_caesar/generator.c, src/open_caesar/generator2.c,
		src/open_caesar/reductor.c, src/open_caesar/reductor2.c,
		src/open_caesar/READ_ME, incl/bcg_options.h

Nature:		The GENERATOR and REDUCTOR tools have been enhanced with
		new command-line options:

		- Options "-uncompress", "-compress", "-register", "-short",
		  "-medium", "-size", and "-tmp" allow to control the
		  generated BCG graph. For these options, the "bcg_options.h"
		  header file was added in directory $CADP/incl.

		- Options "-hide" and "-rename" (together with the qualifiers
		  "-total", "-partial", "-gate", "-single", and "-multiple")
		  perform on-the-fly hiding and/or renaming of labels. These
		  options are implemented using the recent "mask_1" library
		  (see item #960 above).

		The source C code of GENERATOR and REDUCTOR is available
		in directory $CADP/src/open_caesar. The former versions of
		GENERATOR and REDUCTOR (which are easier to read and to
		understand than the latest versions) are kept in that
		directory for user information (see the READ_ME file for
		information).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		962
Date: 		Mon Nov 15 12:34:39 MET 2004
Author:		Hubert Garavel (INRIA/VASY)
Files:		incl/caesar_stack_1.h, bin.*/libcaesar.a,
		man/*/caesar_stack_1.*, doc/*/Garavel-92-a.*

Nature:		The programming interface of OPEN/CAESAR's "stack_1" library
		was improved:
		- A new function type CAESAR_TYPE_OVERFLOW_FUNCTION_STACK_1
		  was added to caesar_stack_1.h.
		- Consequently, the type of the 3rd argument CAESAR_OVERFLOW
		  of function CAESAR_CREATE_STACK_1() was changed into
		  CAESAR_TYPE_OVERFLOW_FUNCTION_STACK_1. The explanations
		  given in the "stack_1" manual page regarding this argument
		  were simplified.

		This change is fully compatible at the binary level, meaning
		that all OPEN/CAESAR application tools available under binary
		form (".a" or ".o") need not be recompiled with the modified
		"caesar_stack_1.h" file and can be directly linked against the
		modified "libcaesar.a" library.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		963
Date: 		Wed Nov 17 15:27:24 MET 2004
Authors		Nicolas Descoubes and Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_labels

Nature:		The code of the BCG_LABELS tool was greatly simplified by
		taking advantage of the recent "mask_1" library (see item
		#960 above). This simplification should be totally transparent
		to the end-user.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		964
Date: 		Thu Nov 25 14:28:06 MET 2004
Report:		Damien Bergamini (INRIA/VASY)
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		./tst

Nature:		The "tst" shell-script was improved in order to detect, on
		MacOS, situations in which the maximal size allocated to the
		execution stack is unsufficient. For instance, setting a limit
		of 512 kbytes to the execution stack might cause BCG_MIN to
		abort with a core dump. The improved "tst" will warn about
		such situations.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		965
Date: 		Wed Dec  1 17:59:33 MET 2004
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG_IO.a, man/*/bcg_write.*

Nature:		In function BCG_IO_WRITE_BCG_BEGIN() of the "bcg_write" API,
		it is now permitted to give a NULL value to the parameter
		bcg_creation_comment.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		966
Date: 		Fri Dec  3 15:07:12 MET 2004
Authors:	Holger Hermanns (Saarland University), Christophe Joubert,
		Hubert Garavel, and David Champelovier (INRIA/VASY)
Files:		bin.*/bcg_steady, bin.*/bcg_transient, bin.*/READ_ME
		man/*/bcg_steady.*, man/*/bcg_transient.*

Nature:		Two new tools, BCG_STEADY and BCG_TRANSIENT, for performance
		evaluation have been integrated into the CADP toolbox. The
		BCG_STEADY tool performs steady-state analysis, and the
		BCG_TRANSIENT tool performs transient analysis. For details,
		see the manual pages.
-------------------------------------------------------------------------------
BUG FIX
Number:		967
Date: 		Fri Dec 10 14:44:28 MET 2004
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel, src/svl/standard, man/man.*/svl.*

Nature:		A semantic bug was fixed in SVL. An ``abstraction'' operator
		with a synchronization set of the form ``all but'' followed
		by an empty list of gates or labels was processed exactly as
		an ``abstraction'' operator without synchronization set. SVL
		was modified to implement the correct semantics, namely:

		- In the former case, synchronization is required on all gates
		  or labels (depending on the matching mode) that occur in the
		  interface graph, except "i".

		- In the latter case, synchronization is required on all gates
		  or labels (depending on the matching mode) that occur in any
		  of the interface and/or specification graphs, except "i".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		968
Date: 		Mon Dec 13 09:10:15 MET 2004
Author:		Wendelin Serwe (INRIA/VASY)
Files:		incl/caesar_hash.h, bin.*/libcaesar.a,
		man/*/caesar_hash.*, doc/*/Garavel-92-a.*

Nature:		The dispersion of the hash function CAESAR_STRING_0_HASH() was
		improved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		969
Date: 		Mon Dec 13 15:34:45 MET 2004
Author:		Hubert Garavel (INRIA/VASY)
Files:		incl/caesar_block_1.h, incl/caesar_area_1.h,
		bin.*/libcaesar.a,
		man/*/caesar_block_1.*, man/*/caesar_area_1.*,
		doc/*/Garavel-92-a.*

Nature:		The recent "block_1" library of OPEN/CAESAR was renamed into
		"area_1" in order to avoid confusion with the notion of block
		used in the "solve_1" library to be added soon to OPEN/CAESAR
		(see item #979 below). Consequently, the include files and
		manual pages named "caesar_block_1.*" have been renamed into
		"caesar_area_1.*".

		Also, the "area_1" library was extended with the notion of
		empty area.

		Finally, a new function CAESAR_HASH_STRING_AREA_1() was added.
-------------------------------------------------------------------------------
BUG FIX
Number:		970
Date: 		Mon Dec 13 19:01:18 MET 2004
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		incl/caesar_table_1.h, bin.*/libcaesar.a,
		man/*/caesar_table_1.*, doc/*/Garavel-92-a.*,
		com/upc

Nature:		The "table_1" library of OPEN/CAESAR, and especially its
		CAESAR_CREATE_TABLE_1() function, have been enhanced in
		subtle ways. The rationale for these changes are threefold:

		- Take advantage of the new "area_1" library to improve and
		  simplify the programming interfaces (API) of "table_1":
		  in particular, the use of "area_1" now allows to specify
		  both the memory size and the memory alignment for the base
		  and mark fields (the previous "table_1" API only allowed
		  to specify the memory size).

		- Make the "table_1" more generic (so that it becomes simpler
		  to use the table to store other objects than states) by
		  using the functionnalities of the "area_1" library for
		  automatic selection of hash functions, printing functions,
		  etc. This removes odd dependencies of the "table_1" with
		  respect to the notion of states.

		- Solve an issue that occurred when the base field and the
		  mark field had different memory alignments; the mark field
		  would be improperly aligned, possibly resulting in run-time
		  errors (segmentation faults) unless the programmer took
		  explicit provision to avoid this problem; from now on, the
		  "table_1" library will insert appropriate padding bytes
		  before and after the mark field, so that base and mark
		  fields are always aligned properly.

		Strictly speaking, these changes are not upward compatible
		with the previous versions of the "table_1" library. We
		introduced these changes nevertheless since we believed that
		they were required for a long-term future. However, we took
		great care to ensure backward compatibility as much as
		possible, although we cannot guarantee this in all cases.
		Users facing problems with this migration should contact
		the cadp@inrialpes.fr mailing-list.

		All the changes concern the CAESAR_CREATE_TABLE_1() function,
		which has 10 parameters. Specifically, the changes concern
		the 2nd, 3rd, 7th, 8th, 9th, and 10th parameters.

		* Changes for the 2nd parameter (CAESAR_BASE_SIZE)

		From now on, the parameter CAESAR_BASE_SIZE is declared of
		type CAESAR_TYPE_AREA_1 instead of CAESAR_TYPE_NATURAL. In
		most cases, this change should be upward compatible. However,
		we strongly advise users of the "table_1" library to examine
		every call to CAESAR_CREATE_TABLE_1() and to update the actual
		values supplied for the CAESAR_BASE_SIZE parameter: instead
		of a mere natural number, the actual value should be formed
		using the appropriate primitives provided by the "area_1"
		library. These primitives allow to specify memory alignment
		constraints for the base field and to make special cases of
		base fields (states, labels, strings, etc.) explicit.

		* Changes for the 3rd parameter (CAESAR_MARK_SIZE)

		From now on, the parameter CAESAR_MARK_SIZE is declared of
		type CAESAR_TYPE_AREA_1 instead of CAESAR_TYPE_NATURAL. In
		most cases, this change should be upward compatible. However,
		we strongly advise users of the "table_1" library to examine
		every call to CAESAR_CREATE_TABLE_1() and to update the actual
		values supplied for the CAESAR_MARK_SIZE parameter: instead
		of a mere natural number, the actual value should be formed
		using the appropriate primitives provided by the "area_1"
		library. These primitives allow to specify memory alignment
		constraints for the mark field and to make special cases of
		mark fields (states, labels, strings, etc.) explicit.

		* Changes for the 7th parameter (CAESAR_COMPARE)

		A new type CAESAR_TYPE_COMPARE_FUNCTION_TABLE_1 was added to
		"caesar_table_1.h". This new type is used to declare the 7th
		parameter of CAESAR_CREATE_TABLE_1(), which is now declared as
		   CAESAR_TYPE_COMPARE_FUNCTION_TABLE_1 CAESAR_COMPARE;
		instead of
		   CAESAR_TYPE_BOOLEAN (*CAESAR_COMPARE)(CAESAR_TYPE_POINTER,
		   CAESAR_TYPE_POINTER)
		Both forms are equivalent from a type-checking point of view.
		Additionally, the semantics of CAESAR_CREATE_TABLE_1() was
		modified in the case where CAESAR_COMPARE is NULL. Formerly,
		in such case, a NULL value of CAESAR_COMPARE was replaced by
		CAESAR_COMPARE_STATE() provided that the memory size of the
		base field was equal to CAESAR_SIZE_STATE(), otherwise a
		run-time error would occur. From now on, a NULL value of
		CAESAR_COMPARE() is replaced by a default function determined
		by the CAESAR_USE_COMPARE_FUNCTION_AREA_1() of the "area_1"
		library. The explanations regarding the CAESAR_COMPARE
		parameter in the "table_1" manual page have been simplified
		accordingly.

		* Changes for the 8th parameter (CAESAR_HASH)

		The 8th parameter of CAESAR_CREATE_TABLE_1() is now declared
		as
		   CAESAR_TYPE_HASH_FUNCTION CAESAR_HASH;
		where the type CAESAR_TYPE_HASH_FUNCTION is defined as
		   typedef CAESAR_TYPE_NATURAL (*CAESAR_TYPE_HASH_FUNCTION)
		   (CAESAR_TYPE_POINTER, CAESAR_TYPE_NATURAL);
		instead of
		   CAESAR_TYPE_NATURAL (*CAESAR_HASH) (CAESAR_TYPE_POINTER,
		   CAESAR_TYPE_NATURAL, CAESAR_TYPE_NATURAL);
		Both forms are *not* equivalent from a type-checking point of
		view, since from now on, CAESAR_HASH() has only 2 parameters
		whereas it had 3 parameters previously. This change was needed
		to give a uniform profile to hash functions throughout all
		OPEN/CAESAR APIs. Therefore, from now on, one should no longer
		use for the CAESAR_HASH parameter certain functions of the
		"hash" library, such as CAESAR_0_HASH(), CAESAR_1_HASH(), etc.
		However, the new version of the "table_1" library tries to
		provide some (limited) upward compatibility by detecting when
		certain functions with 3 parameters are used, in which case the
		missing parameter is supplied automatically. However, relying
		on this undocumented feature is not recommended, as it could
		disappear from further versions of CADP.

		Additionally, the semantics of CAESAR_CREATE_TABLE_1() was
		modified in the case where CAESAR_HASH is NULL. Formerly,
		in such case, a NULL value of CAESAR_HASH was replaced by
		CAESAR_HASH_STATE() provided that the memory size of the
		base field was equal to CAESAR_SIZE_STATE(), otherwise a
		run-time error would occur. From now on, a NULL value of
		CAESAR_HASH() is replaced by a default function determined
		by the CAESAR_USE_HASH_FUNCTION_AREA_1() of the "area_1"
		library. The explanations regarding the CAESAR_HASH parameter
		in the "table_1" manual page have been simplified accordingly.

		* Changes for the 9th parameter (CAESAR_PRINT)

		A new type CAESAR_TYPE_PRINT_FUNCTION_TABLE_1 was added to
		"caesar_table_1.h". This new type is used to declare the 9th
		parameter of CAESAR_CREATE_TABLE_1(), which is now declared as
		   CAESAR_TYPE_PRINT_FUNCTION_TABLE_1 CAESAR_PRINT;
		instead of
		   void (*CAESAR_PRINT) (CAESAR_TYPE_FILE,
		   CAESAR_TYPE_POINTER);
		Both forms are equivalent from a type-checking point of view.
		Additionally, the semantics of CAESAR_CREATE_TABLE_1() was
		modified in the case where CAESAR_PRINT is NULL. Formerly,
		in such case, a NULL value of CAESAR_PRINT was replaced by
		CAESAR_PRINT_STATE() provided that the memory size of the
		base field was equal to CAESAR_SIZE_STATE(), otherwise a
		run-time error would occur. From now on, a NULL value of
		CAESAR_PRINT() is replaced by a default function determined
		by the CAESAR_USE_PRINT_FUNCTION_AREA_1() of the "area_1"
		library; this function will print both the base field and
		the mark field (if not empty) whereas the mark field was
		never displayed formerly. The explanations regarding the
		CAESAR_PRINT parameter in the "table_1" manual page have
		been simplified accordingly.

		* Changes for the 10th parameter (CAESAR_OVERFLOW):

		A new type CAESAR_TYPE_OVERFLOW_FUNCTION_TABLE_1 was added to
		"caesar_table_1.h". This new type is used to declare the 10th
		parameter of CAESAR_CREATE_TABLE_1(), which is now declared as
		   CAESAR_TYPE_OVERFLOW_FUNCTION_TABLE_1 CAESAR_OVERFLOW;
		instead of
		   void (*CAESAR_OVERFLOW) ();
		Both forms are equivalent from a type-checking point of view.
		The explanations regarding the CAESAR_OVERFLOW parameter in
		the "table_1" manual page have been simplified.

		* Changes for the memory structure of table_1 items:

		From now on, padding bytes are automatically inserted before
		and after the mark field, so that base fields and mark fields
		are always properly aligned with respect to their alignments
		constraints specified using the 2nd and 3rd parameters of
		CAESAR_CREATE_TABLE_1(). This changes a fundamental invariant
		of the "table_1": the base field and mark field are no longer
		concatenated, meaning that there may be extra bytes between
		the last byte of the base field and the first byte of the mark
		field. The CAESAR_RETRIEVE_B_M_TABLE_1() function can be used
		to access the mark field. Unfortunately, this change is *not*
		upward compatible, so that user programs using the "table_1"
		might need to be modified appropriately.

		* Other changes:

		The manual page for caesar_table_1 (which is part of the
		OPEN/CAESAR reference manual in $CADP/doc/*/Garavel-92-a.*)
		was updated (and simplified) to reflect all these changes.

		The "upc" command was modified to remind the users that calls
		to function CAESAR_CREATE_TABLE_1() might have to be adapted.

		All the CADP tools using the "table_1" library have been
		updated to integrate these evolutions.
-------------------------------------------------------------------------------
BUG FIX
Number:		971
Date: 		Tue Dec 14 14:10:52 MET 2004
Author:		Frederic Lang (INRIA/VASY)
Files:		com/exp2fc2

Nature:		A minor bug in the EXP2FC2 script, which impacted SVL, was
		fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		972
Date: 		Wed Dec 15 09:41:06 MET 2004
Report:		Tomas Barros (INRIA/OASIS, Sophia Antipolis, France)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c

Nature:		If a label in an LTS of the input composition expression would
		contain special characters, e.g., '"', '%', '\', etc., the C
		program generated by exp2c would contain errors. This problem
		was solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		973
Date: 		Wed Dec 15 11:21:59 MET 2004
Report:		Tomas Barros (INRIA/OASIS, Sophia Antipolis, France)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c

Nature:		The EXP.OPEN tool now issues a warning message when the
		synchronization of a set of LTSs through a respective set of
		gates (or labels, depending on the semantics of the parallel
		composition operator considered) cannot ever happen because
		one of the LTSs does not contain a transition with the
		appropriate gate (or label).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		974
Date: 		Wed Dec 15 16:15:30 MET 2004
Authors:	Hubert Garavel (INRIA/VASY), Holger Hermanns (Saarland Univ.,
		Germany), Christophe Joubert (INRIA/VASY), Frederic Lang
		(INRIA/VASY), Radu Mateescu (INRIA/VASY)
Files:		bin.*/determinator.a, man/*/determinator.*

Nature:		A new tool named DETERMINATOR was added to the CADP toolbox.
		This tool provides determinization features for both ordinary
		LTSs and extended Markovian models containing ordinary,
		probabilistic and/or stochastic transitions.
-------------------------------------------------------------------------------
BUG FIX
Number:		975
Date: 		Thu Dec 16 11:01:51 MET 2004
Report:		Thierry Heuillard (France Telecom R&D)
Author:		Wendelin Serwe (INRIA/VASY)
Files:		bin.win32/tgv.a

Nature:		A bug was fixed in the Windows version of TGV: TGV would stop
		with a segmentation fault after displaying the two lines:
		  > SP initialisation
		  >   - SPEC initialised
		This problem did not occur on Solaris nor Linux.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		976
Date: 		Thu Dec 16 11:09:04 MET 2004
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/tgv.a, man/*/tgv.*

Nature:		Various improvements were brought to the TGV tool:
		- It was ported to MacOS X.
		- It now accepts hiding files with ".hid" suffix (in addition
		  to ".hide").
		- It now accepts renaming files with ".ren" suffix (in addition
		  to ".rename").
		- The manual page was corrected in several places. Especially,
		  it now makes clear that one should use "-bcg -unparse"
		  options instead of "-aldebaran -unparse".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		977
Date:		Fri Dec 17 16:41:38 MET 2004
Authors:	Nicolas Descoubes, Hubert Garavel, Frederic Lang, Bruno Ondet,
		and Gordon Pace (INRIA/VASY)
Files:		bin.*/projector.a, man/*/projector.*

Nature:		The PROJECTOR 1.0 tool was replaced by a new version 2.0,
		which introduces the following changes and improvements:

		- PROJECTOR 2.0 is more efficient than PROJECTOR 1.0. Speedups
		  of up to 4 times have been observed.

		- Synchronisation sets can now be specified using regular
		  expressions, and using complementation ("all but" operator).

		- New options ("-gate", "-total", and "-partial") allow to
		  specify whether the regular expressions contained in
		  synchronisation sets must be interpreted as gates, full
		  labels, or label substrings.

		- The new "-monitor" option allows to open a graphical window
		  to get real-time monitoring information, such as number of
		  states and transitions generated, labels encountered, etc.

		- PROJECTOR 2.0 is fully compatible with PROJECTOR 1.0, except
		  that interfaces files must now be given in the BCG format,
		  while PROJECTOR 1.0 required the ".aut" format. However,
		  when SVL is used, it will perform such file format
		  conversions automatically whenever necessary.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		978
Date: 		Fri Dec 17 17:01:54 MET 2004
Report:		Frederic Tronel (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl.*

Nature:		SVL was enhanced to support the new PROJECTOR 2.0 tool:

		- Following the recent evolution of the PROJECTOR tool, the
		  SVL language was extended to allow abstractions with
		  synchronization on the complement of a set ("sync all but"),
		  and synchronization on labels and gates specified as regular
		  expressions ("gate", "total", and "partial" abstractions).

		- A new notation was introduced to enable the description of
		  label lists and renaming rule lists using shell variables
		  in hide, rename, abstraction, parallel composition, and
		  LOTOS process invocations.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		979
Date: 		Fri Dec 17 17:13:40 MET 2004
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a, incl/caesar_solve_1.h,
		man/*/caesar_solve_1.*, doc/*/Garavel-92-a.*

Nature:		The OPEN/CAESAR environment was enhanced with a new generic
		library (named CAESAR_SOLVE_1) for solving boolean equation
		systems on the fly. A manual page for this library (23 pages)
		was written.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		980
Date: 		Fri Dec 17 18:39:55 MET 2004
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/bisimulator.a, man/*/bisimulator.*

Nature:		A new tool named BISIMULATOR was added to the CADP toolbox.
		This tool allows to check equivalence and preorder relations
		between LTSs on the fly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		981
Date: 		Mon Dec 20 15:24:47 MET 2004
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel, src/svl/standard, man/man.*/svl.*

Nature:		SVL was extended to support the new BISIMULATOR tool. From
		now on, BISIMULATOR becomes the default tool (in place of
		ALDEBARAN) for comparing LTSs and behaviours. As BISIMULATOR
		works on-the-fly, the default comparison method is now "fly"
		instead of "std".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		982
Date: 		Tue Dec 21 09:47:41 MET 2004
Authors:	Hubert Garavel (INRIA/VASY), Holger Hermanns (Saarland Univ.,
		Germany), and Christophe Joubert (INRIA/VASY)
Files:		demos/demo_30

Nature:		A new demo (Markovian analysis of the Hubble space telescope)
		was added to the CADP toolbox.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		983
Date: 		Tue Dec 21 12:09:38 MET 2004
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel, src/svl/standard

Nature:		SVL now generates extended ".exp" files containing generalized
		hiding and renaming operators (thus allowing "hide all but"
		constructs and different matching semantics to be used inside
		".exp" files). Such ".exp" files are accepted by EXP.OPEN 2.0.
		This modification has the advantage to avoid the generation
		of intermediate BCG graphs.

		At the same time, on-the-fly reduction of ".exp" files using
		ALDEBARAN has been removed from SVL, for the following
		reasons:

		- ALDEBARAN cannot process these extended ".exp" files;

		- On-the-fly reduction is generally slower than standard
		  reduction;

		- On-the-fly reduction does not bring the usual advantages
		  of on-the-fly verification, namely the ability to provide
		  verification verdicts without exploring the entire state
		  space.

		As a consequence, the four shell variables predefined in SVL
		DEFAULT_REDUCTION_TOOL_LTS, DEFAULT_REDUCTION_TOOL_EXP,
		DEFAULT_REDUCTION_METHOD_LTS, and DEFAULT_REDUCTION_METHOD_EXP
		have been replaced by the variables DEFAULT_REDUCTION_TOOL
		and DEFAULT_REDUCTION_METHOD. Warning messages are issued at
		reduction time if one of the former variables is defined.

		Equivalence and preorder checking of ".exp" files using the
		ALDEBARAN tool is still supported in SVL. However, such ".exp"
		files should neither contain hiding nor renaming operators
		(because ALDEBARAN does not handle them properly). Otherwise,
		an error message is emitted. In general, the (more efficient)
		BISIMULATOR tool should be preferred, as it accepts any LTS
		given using the OPEN/CAESAR "graph module" API, including
		enhanced ".exp" files.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		984
Date: 		Tue Jan  4 18:26:15 MET 2005
Authors:	Christophe Joubert and Radu Mateescu (INRIA/VASY)
Files:		doc/*/Joubert-Mateescu-04.*, doc/*/Joubert-Mateescu-05.*,
		doc/=READ_ME.txt, doc/biblio.bib

Nature:		Two new papers were added in the "doc" directory of the CADP
		toolbox:
		- The paper "Joubert-Mateescu-04" describes a method for
		  distributed on-the-fly equivalence checking.
		- The paper "Joubert-Mateescu-05" presents a distributed
		  on-the-fly resolution algorithm for single block boolean
		  equation systems.
-------------------------------------------------------------------------------
BUG FIX
Number:		985
Date: 		Thu Jan  6 14:04:27 MET 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c

Nature:		A table overflow error was corrected in EXP.OPEN 2.0, which
		sometimes caused erroneous results when the graph module
		explored by EXP.OPEN 2.0 contained less labels than one of
		the input graphs.
-------------------------------------------------------------------------------
BUG FIX
Number:		986
Date: 		Thu Jan  6 15:19:43 MET 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel

Nature:		A bug was corrected in SVL, which caused erroneous expansion
		of the "leaf reduction" macro operator.
-------------------------------------------------------------------------------
BUG FIX
Number:		987
Date: 		Mon Jan 10 17:00:53 MET 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel, svl/src/standard, man/*/svl.*

Nature:		Three minor bugs were corrected in SVL:

		- Cleaning after macro operator expansion no longer removes
		  "generation" operators when their operand is a "rename"
		  expression (such a "rename" operator may now be part of a
		  ".exp" file).

		- The temporary BCG file containing the LTS generated from
		  a ".exp" file is now given a new file name (previously,
		  its name was the same as the ".exp" file by replacing the
		  ".exp" suffix with a ".bcg" suffix). This new scheme avoids
		  clashes between file names.

		- The SVL_SYNC_TO_HIDE() function defined in "svl/src/standard"
		  was corrected to take into account the fact that ".sync"
		  files may now be begin with either the "Sync" or "sync"
		  keywords.
-------------------------------------------------------------------------------
BUG FIX
Number:		988
Date: 		Mon Jan 10 17:18:54 MET 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c

Nature:		A minor bug was corrected in EXP.OPEN, which caused a warning
		message when compiling the C code generated by EXP2C.
-------------------------------------------------------------------------------
BUG FIX
Number:		989
Date: 		Mon Jan 17 16:50:11 MET 2005
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		com/tst

Nature:		The "tst" shell-script was modified not to emit a spurious
		warning "*** No license exists for host ..." when the current
		host name appears to be suffixed by its domain name (for
		instance, "cadp.inria.fr" instead of "cadp").
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		990
Date: 		Mon Jan 24 16:53:29 MET 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl.*

Nature:		The SVL tool has been enhanced with a new "refined abstraction"
		operator. This operator allows to restrict a behaviour within
		a parallel composition expression (among other operators) with
		respect to constraints induced by synchronization with some of
		its concurrent neighbours. Compared to normal "abstraction",
		the user does not need to provide a synchronization set, as
		this set will be built automatically using EXP.OPEN. As a
		consequence, the synchronization constraints computed in such
		a way are more precise.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		991
Date: 		Thu Jan 27 16:33:43 MET 2005
Authors:	Damien Bergamini, Adrian Curic, Nicolas Descoubes,
		Hubert Garavel, Christophe Joubert, Radu Mateescu,
		Irina Smarandache-Sturm, and Gilles Stragier (INRIA/VASY)
Files:		bin.*/distributor.a, bin.*/bcg_merge,
		src/monitor/READ_ME, src/monitor/distributor.tcl,
		man/*/distributor.*, man/*/bcg_merge.*

Nature:		Two new tools named DISTRIBUTOR and BCG_MERGE have been added
		to the CADP toolbox. These tool allow distributed state space
		generation on a network of workstations or a cluster of PCs.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		992
Date: 		Tue Feb  1 15:11:24 MET 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl.*

Nature:		The semantics of SVL meta-operations, in particular "leaf" and
		"node reduction", was improved. Expansion of these operations
		now distributes "reduction" across "generation", "abstraction",
		and "refined abstraction". The cleaning function was also
		modified accordingly.

		Additionally, "node reduction" now distributes hiding operators
		as far as possible towards the leaves, in order to allow better
		reductions of intermediate state spaces.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		993
Date: 		Tue Feb  1 16:16:55 MET 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c, com/exp.open, man/*/exp.open.*

Nature:		A new "-labels" option was added to EXP.OPEN. Given as input
		a network of communicating automata (".exp" file), this option
		displays on the standard output all labels that might occur
		in the LTS generated from this network, assuming that all
		the synchronizations are possible.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		994
Date: 		Wed Feb  2 08:39:35 MET 2005
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/evaluator.*, man/*/evaluator.*

Nature:		An enhanced version of the EVALUATOR on-the-fly model checker
		was installed in the CADP toolbox. The new version 3.5 of
		EVALUATOR supersedes the former version 3.0 still remaining
		fully compatible with it. The main differences between both
		versions are the following:

		- EVALUATOR 3.5 uses the resolution algorithms provided by
		  the CAESAR_SOLVE library (see item #979 above) whereas
		  EVALUATOR 3.0 contained an ad hoc resolution engine. This
		  improves the modularity by clearly separating the
		  translation of the verification problem (done in EVALUATOR)
		  from the resolution (done in CAESAR_SOLVE).	

		- The analysis of regular alternation-free mu-calculus
		  formulas is enhanced with the detection of formulas that
		  lead to disjunctive or conjunctive boolean equation systems.
		  These systems can be solved more efficiently using algorithm
		  A4 of CAESAR_SOLVE, which does not keep in memory the
		  dependencies between boolean variables. Since most of the
		  formulas encountered in practice are of this type, this
		  enhancement results in important memory reductions
		  (proportional to the number of transitions in the graph
		  under verification) w.r.t. EVALUATOR 3.0.

		- Another optimization, performed on the system of modal
		  equations used as intermediate representation by EVALUATOR,
		  consists in expanding on-line the propositional variables
		  that occur only once in the right-hand side of an
		  equation. On most practical examples, this reduces by a
		  factor of 3 the number of variables and induces the same
		  reduction on the time and memory necessary for resolution.

		- The generation of diagnostics (examples and counterexamples)
		  is improved in order to reflect more accurately the
		  structure of the temporal formulas. In the diagnostics
		  produced by EVALUATOR 3.0, each state was associated to a
		  state of the graph being checked, which caused the
		  duplication of transitions in the diagnostic. For instance,
		  when evaluating the formula ``<A.A.A> true'' on the graph
		  consisting of a single A-loop ``S --A--> S'', the diagnostic
		  produced by EVALUATOR 3.0 was the graph with a single state
		  S and three A-loop transitions attached to S. To the
		  contrary, the diagnostics produced by EVALUATOR 3.5 is the
		  sequence ``S1 --A--> S2 --A--> S3 --A--> S4'', which is a
		  better explanation that the formula requires to traverse
		  three successive A-transitions.

		- Several new command-line options were added to EVALUATOR 3.5
		  to benefit from all features of CAESAR_SOLVE, namely: use of
		  the breadth-first search based algorithm A2 to produce
		  small-depth diagnostics ("-bfs" option, with its dual "-dfs"
		  option), use of the memory-efficient algorithm A3 to check
		  properties on acyclic graphs ("-acyclic"), and possibility
		  to display the underlying boolean equation system in a
		  textual form ("-bes").

		Also, the manual page for EVALUATOR was updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		995
Date: 		Thu Feb 10 11:13:57 MET 2005
Report:		Tomas Barros (INRIA/OASIS, Sophia-Antipolis, France)
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		bin.iX86/*

Nature:		The CADP binaries have been ported to Linux Fedora Core 3
		(they no longer make a segmentation fault error when being
		run on this recent version of Linux).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		996
Date: 		Fri Feb 11 16:44:38 MET 2005
Author:		Frederic Lang and Radu Mateescu (INRIA/VASY)
Files:		bin.*/bisimulator.a, man/*/bisimulator.*, bin.*/svl_kernel,
		src/svl/standard, man/*/svl.*

Nature:		The BISIMULATOR tool was enhanced with comparisons modulo two
		new equivalence relations and their associated preorders:
		trace equivalence (option "-trace") and weak trace equivalence
		(option "-weaktrace"), which considers only visible
		transitions. The generation of counterexamples for these
		equivalences and their preorders was also implemented.

		These equivalence relations have been also added to the SVL
		language. They are implemented as follows:

		- Comparisons modulo these equivalences are done by invoking
		  BISIMULATOR with options "-trace" and "-weaktrace".

		- Reductions modulo these equivalences are done in two steps.
		  First, DETERMINATOR is invoked to eliminate non-determinism
		  (and, for weak trace reduction only, tau-transitions using
		  the "-tauclosure" option). Second, BCG_MIN is used to merge
		  equivalent states modulo strong bisimulation.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		997
Date: 		Wed Feb 16 14:24:08 MET 2005
Report:		Samson Bisaro (Universite Henri Poincare, Nancy, France)
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		com/tst

Nature:		The "tst" shell-script was enhanced to detect whether the
		GR-security extensions are installed in the Linux kernel
		and, if so, to emit a warning message (as the CADP tools may
		face problems in this case). The "tst" shell-script was also
		enhanced to identify Fedora Core distributions and to display
		their version number.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		998
Date: 		Fri Feb 18 11:47:45 MET 2005
Authors:	Hubert Garavel (INRIA/VASY), Holger Hermanns (Saarland Univ.),
		Radu Mateescu (INRIA/VASY), Christophe Joubert (INRIA/VASY),
		and David Champelovier (INRIA/VASY)
Files:		demos/demo_31

Nature:		A new demo example (SCSI-2 bus arbitration protocol) was
		added. This demo illustrates major topics, such as formal
		modelling of hardware protocols, compositional state space
		generation, model checking of mu-calculus formulas, and
		performance evaluation combined with functional verification.
		This demo example is presented in an FME'02 paper by Garavel
		and Hermanns (see doc/*/Garavel-Hermanns-02.pdf).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		999
Date: 		Fri Feb 18 12:04:16 MET 2005
Author:		Radu Mateescu (INRIA/VASY)
Files:		demos/demo_34

Nature:		A new demo (Computer Integrated Manufacturing architecture)
		was added to the CADP toolbox.
-------------------------------------------------------------------------------
BUG FIX
Number:		1000
Date: 		Tue Feb 22 17:26:15 MET 2005
Report:		Christophe Joubert (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_info

Nature:		A bug was fixed in BCG_INFO. Due to a numerical overflow,
		BCG_INFO could abort with a segmentation fault when invoked
		on large models with its "-nondeterministic" option, as in:
		   bcg_info -nondeterministic - vasy_6020_19353.bcg
		where vasy_6020_19353.bcg is an element of the VLTS benchmark
		suite.
-------------------------------------------------------------------------------
BUG FIX
Number:		1001
Date: 		Wed Feb 23 11:01:23 MET 2005
Authors:	Frederic Perret and David Champelovier (INRIA/VASY)
Files:		bin.*/ocis.a

Nature:		Many issues have been fixed in the OCIS simulator:

		- The new version of OCIS correctly displays deadlock states.

		- The menus of OCIS' main window have been improved.

		- When EXHIBITOR is running, the "OK" button of the OCIS
		  window from which EXHIBITOR was launched is desactivated,
		  so that two instances of EXHIBITOR cannot be launched at
		  the same time.

		- The BCG files containing the scenarios stored by OCIS have
		  been made smaller: they no longer contain so-called
		  "unexplored" transitions; this change is upward compatible
		  in the sense that the new version of OCIS can reload the
		  scenarios stored by both the old and new version of OCIS.

		- The file selection window was improved in several ways: all
		  clicks on the "Save" button are now ignored until a file
		  name is selected; when a scenario save operation fails
		  (i.e., because the current directory or the BCG file is
		  write-protected), the interface now reacts properly;
		  navigation in directories now works correctly when loading
		  and saving scenarios, sequence files, PostScript files,
		  etc.; when saving a PostScript file, a ".ps" suffix is now
		  added automatically if not already present; when saving a
		  sequence tree, a ".seq" suffix is now added automatically
		  if not already present; when quitting, OCIS no longer
		  proposes to store the current scenario if this one is
		  unmodified.
-------------------------------------------------------------------------------
BUG FIX
Number:		1002
Date: 		Thu Feb 24 13:01:12 MET 2005
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		bin.*/ocis.a

Nature:		More improvements have been brought to the OCIS simulator:

		- A bug was fixed: when launching EXHIBITOR from OCIS on a
		  ".seq" file several times, the first launch would execute
		  properly, but the next launches would face an issue: the
		  pathname of the ".seq" file was an absolute one, which
		  prevented to start a new search; from now on, only the
		  basename of this file is displayed, which solves the
		  problem.

		- OCIS was ported to MacOS X. A bug was fixed in the MacOS X
		  version of OCIS: the communication protocol between C and
		  Tcl would emit error messages of the form "Wrong parameter
		  format".

		- On MacOS X, the "$CADP/src/com/cadp_x11" script is now
		  invoked automatically, so as to start the X11 environment
		  if not already running.
-------------------------------------------------------------------------------
BUG FIX
Number:		1003
Date: 		Thu Feb 24 16:23:25 MET 2005
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/libcaesar.a, man/*/caesar_hash.*, doc/*/Garavel-92-a.*

Nature:		The "hash" library of OPEN/CAESAR was enhanced in several
		ways:

		- The CAESAR_1_HASH() function was modified so as to return
		  the same results as the s_hash() function of SPIN when
		  given identical input parameters.

		- The CAESAR_1_HASH() function was corrected so that it no
		  longer reads bytes outside of the memory zone to be hashed.

		- The CAESAR_2_HASH() function was modified so as to return
		  the same results as the d_hash() function of SPIN when
		  given identical input parameters.

		- The CAESAR_2_HASH() function was corrected so that it no
		  longer reads bytes outside of the memory zone to be hashed.

		- The CAESAR_6_HASH() function was entirely rewritten; the
		  previous version could cause a segmentation fault error
		  and could return different results depending on the memory
		  alignment of the memory zone to be hashed.

		- Three new functions CAESAR_7_HASH(), CAESAR_STATE_7_HASH(),
		  and CAESAR_LABEL_7_HASH() have been added. These functions
		  are inspired from those of Bob Jenkins in SPIN 4.2.2.
-------------------------------------------------------------------------------
BUG FIX
Number:		1004
Date: 		Fri Feb 25 14:10:06 MET 2005
Report:		Benjamin Fontan (ENSICA, Toulouse, France)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.iX86/*

Nature:		A license problem with Linux laptops was solved. This problem
		occurred when these laptops were booted on a local area
		network and then disconnected from the network, or vice-versa.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1005
Date: 		Mon Feb 28 19:04:47 MET 2005
Authors:	Frederic Lang, Radu Mateescu, and Hubert Garavel (INRIA/VASY)
Files:		demos/demo_01, demos/demo_02, demos/demo_03, demos/demo_07,
		demos/demo_08, demos/demo_09, demos/demo_10, demos/demo_11,
		demos/demo_14, demos/demo_16, demos/demo_17, demos/demo_20,
		demos/demo_24, demos/demo_25, demos/demo_26, demos/demo_28,
		demos/demo_29, demos/demo_32, demos/demo_33

Nature:		Many CADP demos have been adapted to use the new BISIMULATOR
		tool rather than ALDEBARAN. This was done by modifying the
		"=READ_ME.txt" and "demo.svl" files only.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1006
Date: 		Thu Mar  3 12:32:49 MET 2005
Authors:	Damien Bergamini, Hubert Garavel, and Radu Mateescu
		(INRIA/VASY)
Files:		src/eucalyptus

Nature:		The EUCALYPTUS user-interface was updated so as to reflect
		the recent evolutions of CADP:

		- In the  "Options" menu, a "Bisimulator" entry was added,
		  which allows to enable the "-stat" option of BISIMULATOR
		  and to choose the name of the Boolean Equation System
		  file produced by BISIMULATOR.

		- In the "CAESAR and CAESAR.ADT" sub-menu of the "Options"
		  menu, the semantics of "Optimization E7" was modified to
		  take into account the changes in the "-e7" option of
		  CAESAR (see above item #926).

		- In the contextual menu for ".lotos" and ".LOTOS" files, a
		  "Compare" entry was added, which invokes BISIMULATOR.

		- In the contextual menu for ".bcg" files, an "Evaluate
		  performance..." entry was added, which invokes the
		  BCG_STEADY and BCG_TRANSIENT tools.

		- The "Help" menu of EUCALYPTUS was updated with the new
		  tools recently added in CADP. The help page for the
		  obsolete Des2Aut tool was removed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1007
Date: 		Thu Mar  3 16:14:59 MET 2005
Report:		Ken Turner (University of Stirling, Scotland, UK)
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		A bug was fixed in the C code generated by CAESAR.ADT for
		constant operations: when a constant operation F1 was defined
		using a non-constructor operation F2, and when the definition
		of F2 contained an occurrence of some other constant operation
		F3, a dependence between F1 and F3 would exist. From now on,
		CAESAR.ADT properly detects the existence of "recursive"
		constants (e.g., when F1 and F3 are identical) and rejects them
		with an explicit error message. Also, the C code generated by
		CAESAR.ADT now properly orders the definitions of constants
		to avoid using a constant before it is assigned.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1008
Date: 		Thu Mar  3 17:28:39 MET 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl.*

Nature:		To compute the graph of a parallel composition expression,
		SVL may now automatically use the partial order reduction
		features of EXP.OPEN ("-branching" and "-ratebranching"
		options). The use of partial order reduction depends on
		the context in which the parallel composition expression
		occurs:

		- If the parallel composition expression occurs in the
		  context of a "stochastic branching reduction", then the
		  "-ratebranching" option of EXP.OPEN is used .

		- If the parallel composition expression occurs either in
		  the interface part of an "abstraction" operator, or in
		  the context of a "reduction" or "comparison" modulo an
		  equivalence relation that is weaker or equal to branching
		  equivalence (i.e., observational, tau*.a, safety, or weak
		  trace), then the "-branching" option of EXP.OPEN is used.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1009
Date: 		Mon Mar 14 11:24:40 MET 2005
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.win32/libm.a, bin.win32/libcaesar.a, incl/bcg_standard.h
		incl/caesar_system.h, incl/caesar_standard.h,

Nature:		A new include file named "caesar_system.h" was added, which
		gathers OS-specific definitions previously contained in file
		"caesar_standard.h" and "bcg_standard.h", such as system(),
		popen(), and pclose(). On Windows, such functions are no
		longer contained in the "bin.win32/libcaesar.a" library
		(since they are useful to both BCG and OPEN/CAESAR tools) but
		in the `fake' "bin.win32/libm.a" library. This change should
		be transparent to most users.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1010
Date: 		Mon Mar 14 12:35:39 MET 2005
Authors:	David Champelovier, Hubert Garavel, and Frederic Lang
		(INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.indent,
		exp2c, mcl_expand, svl_kernel, xtl

Nature:		The CAESAR, CAESAR.ADT, CAESAR.INDENT, EXP2C, MCL_EXPAND, SVL,
		and XTL compilers have been enhanced so as to support 8-bit
		characters in source files.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1011
Date: 		Fri Mar 18 11:28:59 MET 2005
Authors:	Frederic Perret, David Champelovier, Radu Mateescu, and
		Hubert Garavel (INRIA/VASY)
Files:		bin.*/ocis.a

Nature:		The OCIS interactive simulator was improved: from now on, it
		can re-read a simulation scenario contained in a BCG graph and
		reply this scenario during the current simulation session.
		Typically, the BCG graph can be either a simulation scenario
		previously explored and saved using OCIS, or an execution
		trace produced by EXHIBITOR or EXECUTOR, or a diagnostic
		generated by EVALUATOR for a temporal logic property. To do
		so, OCIS needs to decide whether this BCG graph is a subset
		or not of the graph being explored during the current OCIS
		session. This amounts to checking graph inclusion modulo the
		preorder associated to strong equivalence; if so, a diagnostic
		is generated, which can be subsequently read and replayed by
		OCIS as an ordinary simulation scenario. This is done by
		invoking BISIMULATOR and DETERMINATOR from OCIS automatically.
-------------------------------------------------------------------------------
BUG FIX
Number:		1012
Date: 		Wed Mar 23 11:22:41 MET 2005
Report:		Judi Romijn (Technical Univ. of Eindhoven, The Netherlands)
Author:		David Champelovier (INRIA/VASY)
Files:		src/monitor/distributor.tcl

Nature:		A bug was fixed in the real-time monitoring window of the
		DISTRIBUTOR tool (this window is created by giving the
		"-monitor" option to DISTRIBUTOR). On large examples,
		DISTRIBUTOR could emit the following error messages:
		> bgerror failed to handle background error.
		> Original error: too many nested evaluations (infinite loop?)
		> ... <snip>
		> fatal error on master node (Exit requested by user)
		> Closing pipe to monitor
-------------------------------------------------------------------------------
BUG FIX
Number:		1013
Date: 		Wed Mar 23 11:55:43 MET 2005
Report:		Christophe Joubert (INRIA/VASY)
Author:		David Champelovier (INRIA/VASY)
Files:		src/monitor/distributor.tcl

Nature:		A bug was fixed in the real-time monitoring window of the
		DISTRIBUTOR tool. When the graph under generation became
		large, the progression bars in the "Progress" tab of the
		monitoring window would block after a certain time. This was
		due to an arithmetic overflow problem, which was solved by
		replacing integer numbers with floating-point numbers.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1014
Date: 		Thu Mar 24 10:36:03 MET 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		com/exp.open, bin.*/exp2c, man/*/exp.open.*

Nature:		A new "-info" option was added to the EXP.OPEN tool. This
		option displays information about the LTSs referenced in the
		input composition expression, using the bcg_info tool.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1015
Date: 		Thu Mar 24 10:45:40 MET 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		demos/demo_35, demos/demo_36

Nature:		Two new demo examples have been added to the CADP toolbox:
		- demo_35 features a distributed summation algorithm using
		  the "n among m" synchronization operator proposed by
		  H. Garavel and M. Sighireanu in 1999.
		- demo_36 features a distributed Erathostenes sieve, which
		  is verified using compositional verification and partial
		  order reduction
-------------------------------------------------------------------------------
BUG FIX
Number:		1016
Date: 		Thu Mar 24 15:09:39 MET 2005
Report:		Gregory Batt (INRIA Rhone-Alpes/HELIX),
		Ludovic Apvrille (ENST, Sophia-Antipolis, France), and
		Dave Parker (Univ. of Birmingham, UK)
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		src/installator/installator.tcl

Nature:		A bug was fixed in the INSTALLATOR assistant, which would
		sometimes freeze when or after performing FTP transfers. In
		the log file, this bug produced the following error message:
		   > too many nested calls to Tcl_EvalObj (infinite loop?)
		   >    (procedure "Trace" line 9)
		   >    invoked from within
		   > ...
		   > "DisplayMsg "C: 421 Service not available, closing
		   > control connection."
		   > ...
-------------------------------------------------------------------------------
BUG FIX
Number:		1017
Date: 		Fri Mar 25 16:06:22 MET 2005
Report:		Gwen Salaun (INRIA/VASY)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		A bug was fixed in optimization U2 of CAESAR. Under some rare
		circumstances, this optimization could merge two concurrent
		units into one single sequential unit.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1018
Date: 		Fri Mar 25 16:46:15 MET 2005
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		incl/caesar_table_1.h, bin.*/libcaesar.a
		man/*/caesar_table_1.* doc/*/Garavel-92-a.*

Nature:		The "caesar_table_1" library of OPEN/CAESAR was modified so
		as to increase its maximal capacity from (2^24)-1 elements up
		to 2^29 elements. This change increases the memory size of a
		table, but in a reasonable manner.

		In particular, the constant CAESAR_NULL_INDEX_TABLE_1 was
		modified: its value changed from 16777215 to -1.

		Consequently, all OPEN/CAESAR applications using the include
		file "caesar_table_1.h" should be recompiled to take into
		account the new value of CAESAR_NULL_INDEX_TABLE_1. This
		does not preserve binary compatibility, since a ".o" or ".a"
		file produced with any version of CADP older or equal to
		CADP 2003-y can not be used with the "libcaesar.a" library
		provided in a version of CADP equal or newer to CADP 2003-z.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1019
Date: 		Tue Mar 29 19:02:17 MEST 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c

Nature:		The implementation of the CAESAR_ITERATE_STATE() function
		provided by EXP.OPEN was modified, which reduces execution
		time with a negligible memory overhead. For instance,
		reachability analysis becomes 1.26 times faster for demo_20
		and 1.36 times faster for demo_35.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1020
Date: 		Wed Mar 30 09:45:43 MEST 2005
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		bin.win32/*, src/windows/*, src/com/cadp_cc

Nature:		The Windows binaries of CADP tools have been modernized.
		Previously, these binaries were compiled against Microsoft's
		CRTDLL library, which is now more or less deprecated. From
		now on, these binaries are compiled against Microsoft's MSVCRT
		library. Precisely:
		- The "cadp_cc" shell-script was modified to compile against
		  MSVCRT instead of CRTDLL.
		- The directory "src/windows" was removed.
		- The Mingwin libraries used to compile the CADP tools have
		  been upgraded to mingw-runtime-3.7 and w32api-3.2.
-------------------------------------------------------------------------------
BUG FIX
Number:		1021
Date: 		Tue Apr  5 12:51:09 MEST 2005
Report:		Frederic Lang (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/bcg_edit

Nature:		A bug was fixed in the BCG_EDIT tool. When the environment
		variable $PRINTER would contain white spaces (for instance,
		"Microsoft Office Document Image Writer"), BCG_EDIT would
		emit an error message "test: too many arguments". A similar
		problem was fixed for environment variable $CADP_PS_VIEWER.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1022
Date: 		Thu Apr  7 12:22:41 MEST 2005
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar.new, doc/*/Garavel-Serwe-04.*

Nature:		A prototype version of CAESAR (named CAESAR.NEW) was added
		to the CADP toolbox. This prototype version implements the
		state space reductions described in a recent paper by Garavel
		and Serwe (see doc/*/Garavel-Serwe-04.*).
		Eventually, the features provided by CAESAR.NEW will be
		integrated into the "official" version of CAESAR. In the
		meantime, it is possible to use CAESAR.NEW in place of CAESAR
		by typing the following shell commands:
		   $ cd $CADP/bin.`$CADP/com/arch`
		   $ mv caesar caesar#6.2
		   $ mv caesar.new caesar
-------------------------------------------------------------------------------
BUG FIX
Number:		1023
Date: 		Wed Apr 13 18:31:25 MEST 2005
Report:		Howard Bowman (University of Kent at Canterbury, UK)
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.new

Nature:		Two minor problems were fixed in the C code generated by
		CAESAR and CAESAR.ADT. This C code was not fully compliant to
		ISO C, so that recent C compilers would emit two warnings:
		  > warning: old-style declaration or incorrect type for: main
		and
		  > warning: implicit function declaration: exit
-------------------------------------------------------------------------------
BUG FIX
Number:		1024
Date: 		Fri Apr 15 10:26:04 MEST 2005
Report:		Frederic Lang (INRIA/VASY)
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		src/monitor/distributor.tcl

Nature:		The real-time monitoring window of DISTRIBUTOR (which is
		created using the "-monitor" option of DISTRIBUTOR) did not
		work on Windows. This problem was solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		1025
Date: 		Thu Apr 21 17:29:48 MEST 2005
Report:		Husain Aljazzar (University of Konstanz, Germany),
		Holger Hermanns (Saarland University, Germany)
Author:		David Champelovier (INRIA/VASY)
Files:		bin.*/bcg_transient

Nature:		When invoked with a list of several "time instants" given on
		the command-line, BCG_TRANSIENT could produce incorrect
		numerical results (transition throughputs) for one or several
		instants located at the end of the list. This issue was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1026
Date: 		Tue May 17 18:11:59 MEST 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		demos/demo_35

Nature:		The demo_35 (distributed summation algorithm) was entirely
		rewritten. The network topology is now properly isolated in
		the data type part (it is defined using a "neighbourhood"
		function).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1027
Date: 		Fri May 20 13:33:39 MEST 2005
Author:		Radu Mateescu (INRIA/VASY)
Files:		doc/*/Bergamini-Descoubes-Joubert-Mateescu-05.*

Nature:		A new paper on BISIMULATOR was added to the CADP toolbox.
		In particular, this paper provides a performance comparison
		between ALDEBARAN and BISIMULATOR.
-------------------------------------------------------------------------------
BUG FIX
Number:		1028
Date: 		Wed Jun 22 11:17:14 MEST 2005
Report:		Hubert Garavel (INRIA/VASY)
Author:		David Champelovier (INRIA/VASY)
Files:		bin.*/src/com/cadp_cc

Nature:		Two minor problems were fixed in the Windows version of CADP:
		CAESAR.ADT and CAESAR would regenerate ".h" and ".c" files
		systematically, even if the source LOTOS file did not change.
		This was not time-effective.

		One problem was caused by the stat() function of Mingwin
		that does not recognize Cygwin's mount points, such as the
		fact that "/usr/lib" is mounted on "/lib", and thus would
		conclude that include files located in "/usr/lib" did not
		exist, thus forcing recompilation. This problem was solved
		by modifying the "-datation" option of the "cadp_cc"
		shell-script.

		Another problem was that some error messages of the GCC
		compiler were unduly understood as file dependencies, thus
		forcing recompilation. Again, the "cadp_cc" shell-script was
		corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1029
Date: 		Fri Jun 24 15:41:32 MEST 2005
Report:		Husain Aljazzar (Univ. of Konstanz, Germany)
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.new

Nature:		The C code generated by CAESAR using "-open" option was
		slightly modified (namely, the declaration of the functional
		parameter CAESAR_LOOP of function CAESAR_ITERATE_STATE was
		made more accurate) so that this C code can now be processed
		by the "protoize" tool.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1030
Date: 		Fri Jun 24 16:04:23 MEST 2005
Authors:	Frederic Lang and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/projector.a

Nature:		The hash function associated to a hash table in PROJECTOR was
		modified to improve its dispersion. This makes PROJECTOR much
		faster when many labels are identical up to character
		permutations.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1031
Date: 		Fri Jun 24 16:57:29 MEST 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		src/svl/standard

Nature:		SVL now minimizes the interfaces given to the PROJECTOR 2.0
		tool modulo branching bisimulation before safety equivalence,
		so as to minimize large interfaces in a faster way.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1032
Date: 		Fri Jun 24 19:23:16 MEST 2005
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		bin.win32/distributor.a

Nature:		A problem was fixed in the Windows version of DISTRIBUTOR.
		When the SFU (Microsoft's Services for Unix) software was
		installed, DISTRIBUTOR would not work properly because the
		Unix commands contained in C:\SFU would take precedence over
		the Unix commands provided by Cygwin. This would generate an
		error message of the form:
		> This command is not supported. Please type help for further
		and DISTRIBUTOR would stop.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1033
Date: 		Mon Jul 18 16:34:05 MEST 2005
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		bin.*/caesar.adt, bin.*/caesar, bin.*/caesar.new

Nature:		From now on, when a ".h" file (resp., a ".f" or a ".t" file)
		does not start with the special macro-definition
			#define CAESAR_ADT_EXPERT ...
		(resp. CAESAR_ADT_EXPERT_F or CAESAR_ADT_EXPERT_T), CAESAR
		and CAESAR.ADT will emit a warning that this macro-definition
		is missing. In such case, the default CAESAR.ADT version
		number will be 5.2 instead of 4.1 (which means that one
		assumes that the ".h", ".f", or ".t" file was written for
		version 5.2 of CAESAR.ADT rather than for version 4.1, which
		lasted from 1993).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1034
Date: 		Mon Sep  5 16:12:02 MEST 2005
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		demo_37

Nature:		A new demo example was added: the ODP (Open Distributed
		Processing) trader.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1035
Date: 		Tue Sep  6 18:20:19 MEST 2005
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		src/exec_caesar/main.c, demos/demo_19/main.c,
		demos/demo_19/driver.c, demos/demo_19/gate_functions.c,
		demos/demo_19/start

Nature:		The "main.c" file containing the entry point of EXEC/CAESAR
		was enhanced. The main() function can now accept an optional
		argument that, if present, will be the file name to which the
		transitions will be logged as they are executed. If this
		argument is absent, no logging will take place. If this
		parameter is equal to "-", then logging will take place on the
		standard output.

		The source files of demo_19 were adapted accordingly. The
		"main.c" program of demo_19 was removed, as it is now subsumed
		by the enhanced file "src/exec_caesar/main.c. The "driver.c"
		program and the "start" shell-script were also simplified.
		Finally, file "driver.c" was renamed into "gate_functions.c".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1036
Date: 		Wed Sep  7 14:37:13 MEST 2005
Authors:	Frederic Lang, Gwen Salaun and Wendelin Serwe (INRIA/VASY)
Files:		doc/*/Lang-05.*, doc/*/Salaun-Serwe-05.*, doc/=READ_ME.txt,
		doc/biblio.bib

Nature:		Two new papers were added in the "doc" directory of the CADP
		toolbox:
		- The paper "Lang-05" presents the principles and the main
		  functionalities of the EXP.OPEN 2.0 tool.
		- The paper "Salaun-Serwe-05" discusses translation issues
		  between the hardware process algebra CHP and LOTOS.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1037
Date: 		Fri Sep  9 17:56:40 MEST 2005
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		incl/caesar_kernel.h, demos/demo_19/gate_functions.c

Nature:		In the standard EXEC/CAESAR include file "caesar_kernel.h",
		four macro definitions have been added:
		  CAESAR_KERNEL_ASSERT_EOL(), CAESAR_KERNEL_ASSERT_INPUT(),
		  CAESAR_KERNEL_ASSERT_OUTPUT(), CAESAR_KERNEL_ASSERT_TYPE()
		These macros are useful to check the arguments passed to
		EXEC/CAESAR gate functions. The "gate_functions.c" file of
		demo_19 was modified to take advantage of these new macros.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1038
Date: 		Fri Sep  9 18:49:56 MEST 2005
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		demos/demo_38

Nature:		A new demo was added: it features the LOTOS description of an
		asynchronous hardware architecture implementing the DES (Data
		Encryption Standard). The demo illustrates two key points:
		the compositional verification of the control part of this
		architecture, and rapid prototyping by C code generation using
		EXEC/CAESAR.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1039
Date: 		Mon Sep 12 15:17:16 MEST 2005
Author:		Radu Mateescu (INRIA/VASY)
Files:		demos/demo_39

Nature:		A new demo was added: it features the LOTOS description of a
		turntable system for drilling products. The demo illustrates
		both functional verification (model checking) and performance
		evaluation.
-------------------------------------------------------------------------------
BUG FIX
Number:		1040
Date: 		Mon Sep 12 19:25:04 MEST 2005
Report:		Alexandre Mota (Univ. Federal de Pernambuco, Recife, Brazil)
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/tst

Nature:		On RedHat Linux version 3WS, the "tst" shell-script would emit
		an incorrect warning:
		> *** The CADP software might not work correctly on RedHat 3WS
		> ==> Please upgrade to RedHat 6.0 or higher
		This erroneous message was removed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1041
Date: 		Mon Sep 19 17:45:37 MEST 2005
Report:		Jaco van de Pol (CWI, Amsterdam, The Netherlands)
Author:		Frederic Lang (INRIA/VASY)
Files:		com/exp.open, bin.*/exp2c

Nature:		Two bugs were fixed in Exp.Open:
		- The -mcrl option was not recognized due to a mistake in the
		  "com/exp.open" command.
		- While generating a synchronization label file for Projector
		  ("-interface" option), Exp.Open assumed erroneously that the
		  hidden action was systematically written "i". Thus, when
		  written differently, the hidden action was considered by
		  Projector as synchronizable, which led to wrong behaviours.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1042
Date: 		Thu Sep 22 11:54:27 MEST 2005
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a, incl/caesar_solve_1.h,
		man/*/caesar_solve_1.*, doc/*/Garavel-92-a.*

Nature:		The interface of the CAESAR_SOLVE library of OPEN/CAESAR was
		enhanced with several new types and functions, which facilitate
		the creation of boolean equation systems:

		- The enumerated type CAESAR_TYPE_BLOCK_SIGN_SOLVE_1 consists
		  of the two constant values
		    CAESAR_MINIMAL_FIXED_POINT_SOLVE_1()
		  and
		    CAESAR_MAXIMAL_FIXED_POINT_SOLVE_1()
		  denoting the sign of an equation block (minimal or maximal
		  fixed point).

		- The enumerated type CAESAR_TYPE_VARIABLE_KIND_SOLVE_1
		  consists of the two constant values
		    CAESAR_DISJUNCTIVE_VARIABLE_SOLVE_1()
		  and
		    CAESAR_CONJUNCTIVE_VARIABLE_SOLVE_1()
		  denoting the kind of a boolean variable (disjunctive or
		  conjunctive).

		- The following types
		    CAESAR_TYPE_BLOCK_SIGN_FUNCTION_SOLVE_1
		    CAESAR_TYPE_VARIABLE_KIND_FUNCTION_SOLVE_1
		    CAESAR_TYPE_AREA_FUNCTION_SOLVE_1
		    CAESAR_TYPE_BOOLEAN_FUNCTION_SOLVE_1
		    CAESAR_TYPE_NATURAL_FUNCTION_SOLVE_1
		  denote pointers to functions with various profiles, which
		  occur as arguments of the CAESAR_CREATE_SOLVE_1() function.
-------------------------------------------------------------------------------
BUG FIX
Number:		1043
Date: 		Fri Sep 23 16:33:51 MEST 2005
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a

Nature:		A bug was corrected in the breadth-first resolution algorithm
		of the CAESAR_SOLVE library. In some cases, the error caused
		a loss of information in the diagnostic generated by this
		algorithm.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1044
Date: 		Tue Sep 27 15:12:55 MEST 2005
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a,
		man/*/caesar_solve_1.*, doc/*/Garavel-92-a.*

Nature:		A new on-the-fly resolution algorithm, named A5, was added to
		the CAESAR_SOLVE boolean resolution library of OPEN/CAESAR.
		Similarly to algorithm A0 already present in the library,
		algorithm A5 is based upon a depth-first search of the
		dependency graph between boolean variables and is able to
		solve general equation blocks (containing any combinations of
		disjunctions and conjunctions in the right hand sides of the
		equations).

		Algorithm A5 is optimized to perform a faster detection of
		examples (resp. counterexamples) in maximal (resp. minimal)
		fixed point equation blocks. This detection is based upon a
		generalization of Tarjan's algorithm for computing strongly
		connected components.  Algorithm A5 proves to be much faster
		(between one and two orders of magnitude) than all the other
		algorithms of CAESAR_SOLVE when it is invoked many times on
		the same equation block (e.g., for detecting tau-confluent or
		redundant transitions during the on-the-fly reductions).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1045
Date: 		Wed Sep 28 12:31:44 MEST 2005
Report:		Tomas Barros (INRIA/OASIS, Sophia-Antipolis, France)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c, man/*/exp.open.*

Nature:		Exp.Open now allows to write labels containing special
		characters, such as double quotes. To this aim, labels may
		contain escape character sequences such as '\"' or '\\',
		following the definition of character constants of the ANSI
		C specification.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1046
Date: 		Thu Sep 29 13:30:25 MEST 2005
Report:		Tomas Barros (INRIA/OASIS, Sophia-Antipolis, France)
Author:		Frederic Lang (INRIA/VASY)
Files:		com/exp.open, bin.*/exp2c, man/*/exp.open.*

Nature:		When some LTS of an Exp.Open composition expression was in
		a format other than BCG (i.e., ALDEBARAN, FC2, or SEQ),
		Exp.Open did translate this LTS into BCG automatically, by
		calling the bcg_io tool. Doing this, labels were parsed as
		explained in the bcg_write manual page. This prevented using
		labels whose syntax does not fulfill the BCG conventions. To
		palliate this limitation, a new -unparse option was added,
		which turns label parsing off.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1047
Date:		Fri Oct  7 13:27:11 MEST 2005
Author:		Gwen Salaun (INRIA/VASY)
Files:		doc/*/Chirichiello-Salaun-05.*

Nature:		A new paper related to the use of CADP for the verification
		of Web services was added to the CADP toolbox.
-------------------------------------------------------------------------------
BUG FIX
Number:		1048
Date:		Mon Oct 10 10:18:21 MEST 2005
Report:		Radu Mateescu (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		demos/demo_24/demos.svl, demos/demo_31/demo.svl,
		demos/demo_39/demo.svl

Nature:		Three SVL scripts called the SVL_RECORD_FOR_CLEAN() macro
		(defined in "src/svl/standard") using regular expressions as
		arguments, instead of plain filenames as required. This bug
		was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1049
Date: 		Mon Oct 10 16:28:25 MEST 2005
Authors:	Frederic Lang and Radu Mateescu (INRIA/VASY)
Files:		src/open_caesar/reductor.c, src/open_caesar/reductor3.c,
		bin.*/reductor.a, man/*/reductor.*

Nature:		The new version 4.0 of Reductor was released. The archive file
		"bin.*/reductor.a" of the CADP toolbox replaces the source file
		"src/open_caesar/reductor.c", which was archived in a new file
		named "src/open_caesar/reductor3.c".

		As before, Reductor 4.0 still allows to eliminate all invisible
		transitions on-the-fly (-taustar option) by merging the source
		and target states of every invisible transition. Reductor 4.0
		also has the following new features:

		- In addition to invisible transitions, Reductor 4.0 allows to
		  eliminate also some nondeterministic transitions that are
		  irrelevant as regards safety equivalence (-safety option).

		- Reductor 4.0 allows to compute the minimal quotient of the
		  graph (-minimal option) modulo either strong bisimulation
		  (-strong option), tau*.a bisimulation (-taustar option), and
		  safety equivalence (-safety option). Reductor 4.0 also allows
		  to display the equivalence classes of the quotient (-class
		  option).

		As in Bisimulator, state equivalence checking is implemented
		using the efficient "caesar_solve_1" library (solving Boolean
		Equation Systems). Moreover, the closure algorithm used to
		eliminate invisible transitions (tau*.a and safety reductions)
		is faster than in earlier versions.

		The Reductor manual page was updated.
------------------------------------------------------------------------------
IMPROVEMENT
Number:		1050
Date:		Thu Oct 13 18:05:22 MEST 2005
Authors:	Hubert Garavel, Bruno Ondet, and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/libcaesar.a,
		man/*/caesar_table_1.*, doc/Garavel-92-a.*

Nature:		The implementation of the "table_1" module of the OPEN/CAESAR
		library was enhanced in three ways so as to reduce its memory
		cost (especially for tables containing a little number of
		items):

		- Depending on the size of base fields, the actual value given
		  to the CAESAR_LIMIT_SIZE parameter of CAESAR_CREATE_TABLE_1()
		  (or the default value given to CAESAR_LIMIT_SIZE when the
		  actual value specified by the user is equal to zero) is now
		  decreased automatically if it exceeds the total number of
		  different base fields.

		- Depending on the (possibly decreased) value given to
		  CAESAR_LIMIT_SIZE, the memory cost of the "table_1" was
		  reduced by representing internal memory cells using a
		  variable number of bytes (1, 2, 3 or 4 bytes) instead of a
		  fixed number (4 bytes) as done previously.

		- Depending on the (possibly decreased) value given to
		  CAESAR_LIMIT_SIZE, the actual value given to the
		  CAESAR_HASH_SIZE parameter of CAESAR_CREATE_TABLE_1()
		  (or the default value given to CAESAR_HASH_SIZE when the
		  actual value specified by the user is equal to zero) is now
		  decreased automatically if it exceeds CAESAR_LIMIT_SIZE,
		  i.e., the maximal number of items that can be stored in the
		  table.

		The "caesar_table_1" manual page was updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1051
Date:		Wed Oct 19 17:19:55 MEST 2005
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		./bin.*/caesar, ./bin.*/caesar.adt, ./bin.*/caesar.new,
		./com/tst,
		./src/open_caesar/simulator.c, ./src/open_caesar/simulator.i,
		./src/open_caesar/declarator.c, ./src/open_caesar/executor.c,
		./src/open_caesar/generator.c, ./src/open_caesar/predictor.c,
		./src/open_caesar/terminator.c, ./src/open_caesar/reductor3.c,
		./src/open_caesar/generator2.c, ./src/open_caesar/reductor2.c,
		./man/*/caesar_stack_1.*, ./man/*/caesar_standard.*,
		./man/*/bcg_write.*, ./man/*/bcg_read.*,
		./demos/demo_05/user.c, ./demos/demo_05/=READ_ME.txt,
		./demos/demo_12/main.c, ./demos/demo_12/=READ_ME.txt

Nature:		In order to avoid warnings emitted by recent C compilers,
		such as Sun C compiler 5.7 (SunStudio 10), various changes
		have been brought to the CADP source files written in C, as
		well as to the C code generated by CAESAR, CAESAR.ADT, and
		CAESAR.NEW. We can mention the following enhancements:
		- addition of missing #include directives,
		- addition of missing calls to exit(), and
		- addition of "int" result type when declaring the main()
		  function.
------------------------------------------------------------------------------
IMPROVEMENT
Number:		1052
Date: 		Thu Oct 20 10:42:31 MEST 2005
Report:		Thomas Arts (Computer Science Lab, Ericsson, Sweden),
		Clara Benac Earle (University of Kent at Canterbury, UK),
		Olivier Bonaventure (University of Liege, Belgium),
		Romaric Charton (LORIA, Nancy),
		Wan Fokkink (CWI, Amsterdam, The Netherlands),
		Hubert Garavel (INRIA/VASY),
		Francois Germeau (University of Liege, Belgium),
		Jean-Charles Henrion (University of Liege, Belgium),
		Marc Herbert (INRIA/VASY),
		Guoping Jia (Verimag, Grenoble),
		Frederic Lang (INRIA/VASY),
		Izak van Langevelde (CWI, Amsterdam, The Netherlands),
		Wayne Liu (University of Waterloo, Ontario, Canada),
		Stephane Martin (INRIA/VASY),
		Radu Mateescu (INRIA/VASY),
		Charles Pecheur (INRIA/VASY),
		Wendelin Serwe (INRIA/VASY), and
		Arno Wouters (CWI, Amsterdam, The Netherlands)
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		bin.*/aldebaran, bin.*/aldebaran.old, com/aldebaran

Nature:		The Aldebaran binary tool (version 6.6) was replaced by the
		new shell-script "com/aldebaran" (version 7.0), which invokes
		the tools Bcg_Info, Bcg_Io, Bcg_Labels, Bcg_Min, Bcg_Open,
		Bisimulator, Determinator, Evaluator, Exp.Open, Exhibitor,
		Generator, and Reductor. In the same time, the binary files
		"bin.*/aldebaran" corresponding to version 6.6 were renamed
		into "bin.*/aldebaran.old".

		Aldebaran 7.0 may also invoke Aldebaran 6.6, either when the
		new option -old (which must be the first option on the command
		line) is set, or to perform minimization modulo observational
		equivalence and comparison modulo delay equivalence, which are
		not supported by other CADP tools.

		Aldebaran 7.0 fixes 24 out of the 25 known bugs of Aldebaran
		6.6. In addition, Aldebaran 7.0 relaxes the following
		limitations of Aldebaran 6.6:

		- Aldebaran 7.0 accepts as input the full Exp.Open 2.0
		  language instead of the subset consisting of LOTOS parallel
		  composition and hiding. In particular, the restriction
		  that forbidded hiding operators whose scope does not contain
		  the whole expression is now relaxed.

		- As regards comparison modulo branching bisimulation,
		  Aldebaran 7.0 does not require anymore that one of the
		  graphs be free of invisible transitions.

		- Comparisons modulo branching and observational preorders
		  are now supported.
------------------------------------------------------------------------------
IMPROVEMENT
Number:		1053
Date: 		Fri Oct 28 19:55:44 MEST 2005
Report:		Hubert Garavel (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/bisimulator.a, man/*/bisimulator.*

Nature:		The counterexamples produced by BISIMULATOR when the two LTSs
		compared are not equivalent were made more readable. Labels of
		error transitions indicating non equivalent states, which
		previously were of the following form:
			"Absent in LTS1: a"
			and
			"Absent in LTS2: b"
		where a (resp. b) is a transition label belonging to the second
		(resp. the first) LTS given as input to BISIMULATOR, were
		respectively changed into:
			"Present in lts2.bcg: a"
			and
			"Absent in lts2.bcg: b"
		where "lts2.bcg" is the name of the BCG file denoting the
		second LTS given as input to BISIMULATOR.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1054
Date: 		Mon Nov 21 16:54:06 MET 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/reductor.a, man/*/reductor.*

Nature:		Two new reduction options preserving branching bisimulation
		were added in Reductor: the "-tauconfluence" option yields a
		graph in which tau-confluence has been eliminated; the
		"-taucompression" option yields a graph in which every cycle of
		tau-transitions has been merged into a single state.
-------------------------------------------------------------------------------
BUG FIX
Number:		1055
Date:		Tue Nov 29 16:48:20 MET 2005
Report:		Gwen Salaun (INRIA/VASY)
Author:		Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar.indent

Nature:		Two bug fixes and two enhancements were brought to the
		CAESAR.INDENT pretty-printer for LOTOS:

		- CAESAR.INDENT no longer removes white spaces before or
		  after the keywords "accept", "actualizedby", "any", "par",
		  "renamedby", and "using". For instance, "any Bool" is no
		  longer translated into "anyBool".

		- From now on, CAESAR.INDENT handles ".lib" files containing
		  "library"..."endlib" directives (i.e., nested include
		  files). Previously, such directives would cause syntax
		  errors to be reported.
		
		- From now on, CAESAR.INDENT no longer inserts extra spaces
		  after the ":", "!" and "?" keywords. For instance,
		     G ! 5 ? B : Bool
		  is now formatted as:
		     G !5 ?B:Bool

		- In type definitions, the formatting of "sortnames" clauses,
		  "opnnames" clauses, and "S1 for S2" lists was improved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1056
Date: 		Fri Dec 16 15:11:44 MET 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		com/exp.open, bin.*/exp2c, bin.*/libexp_open.a,
		man/*/exp.open.*

Nature:		Two new partial order reductions were added to Exp.Open: the
		"-deadpreserving" option yields a reduced graph that contains
	 	the same deadlock states as the entire graph, and the
		"-weaktrace" option yields a reduced graph that is equivalent
		to the entire graph modulo weak trace equivalence.
-------------------------------------------------------------------------------
BUG FIX
Number:		1057
Date: 		Fri Dec 16 16:30:39 MET 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		demos/demo_04/EXP.t

Nature:		The PRINT_EXP (F, E) function defined in the "EXP.t" file of
		demo_04 was modified to take into account the case where
		E == NULL. This avoid a segmentation fault when invoking
		"reductor -class" on Solaris.
-------------------------------------------------------------------------------
BUG FIX
Number:		1058
Date: 		Fri Dec 16 18:12:58 MET 2005
Author:		Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar.indent, man/*/caesar.indent.*

Nature:		Two problems have been fixed in the CAESAR.INDENT tool:
		- When pretty-printing a ".lib" file, a missing "\n" is now
		  added at the end of file;
		- The unsecure mktemp() function is no longer invoked; instead
		  the "secure" mkstemp() is now invoked (except on Windows,
		  where this function does not exist in the Mingwin32 API).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1059
Date: 		Mon Dec 19 14:21:19 MET 2005
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		incl/caesar_kernel.h

Nature:		A collection of logging macro-definitions was added to the
		EXEC/CAESAR's interface file "caesar_kernel.h".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1060
Date: 		Tue Dec 20 11:48:01 MET 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		com/aldebaran, man/*/aldebaran.*

Nature:		The diagnostics issued by the new ALDEBARAN shell-script are
		now stored in file "aldebaran.bcg". This behaviour is coherent
		with respect to other tools such as BISIMULATOR and EVALUATOR,
		which issue diagnostics in files "bisimulator.bcg" and
		"evaluator.bcg", respectively.
-------------------------------------------------------------------------------
BUG FIX
Number:		1061
Date: 		Tue Dec 20 12:56:17 MET 2005
Report:		Hubert Garavel (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		src/svl/standard

Nature:		The BCG files containing the diagnostics issued by ALDEBARAN
		were not removed from the directory when calling SVL with
		the -clean option. This problem was solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		1062
Date: 		Tue Dec 20 14:14:11 MET 2005
Author:		Frederic Lang (INRIA/VASY)
Files:		demos/demo_10/demo.svl, demos/demo_11/demo.svl,
		demos/demo_14/demo.svl, demos/demo_37/demo.svl

Nature:		The diagnostics generated by the ALDEBARAN shell-script for
		a livelock detection is a graph that contains cycles. In four
		demo examples, the SVL script stored these diagnostics into
		".seq" files, thus causing an error as these diagnostics are
		not traces. This bug was solved by replacing ".seq" files by
		".bcg" files.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1063
Date: 		Thu Dec 22 12:11:02 MET 2005
Authors:	Frederic Lang and Radu Mateescu (INRIA/VASY)
Files:		bin.*/reductor.a, man/*/reductor.*

Nature:		A new "-divergence" option, to be used with "-taucompression",
		was added to REDUCTOR. Instead of full tau-compression, which
		removes every strongly connected component of tau-transitions,
		the new "-divergence" option allows to keep a self-looping
		tau-transition in place of every strongly connected component
		of tau-transitions, thus preserving the livelocks of the
		original, entire graph.
-------------------------------------------------------------------------------
BUG FIX
Number:		1064
Date: 		Thu Dec 22 16:37:23 MET 2005
Report:		Hubert Garavel (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/bisimulator.a

Nature:		A bug was fixed in BISIMULATOR's diagnostic generation for
		branching equivalence. In a few cases, some transitions of
		the diagnostic were labelled by invisible actions instead
		of the visible actions occurring in the LTSs being compared.
-------------------------------------------------------------------------------
BUG FIX
Number:		1065
Date: 		Wed Jan  4 11:14:46 MET 2006
Report:		David Champelovier (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/bisimulator.a

Nature:		Another bug was fixed in BISIMULATOR's diagnostic generation
		for branching equivalence. Because of the bug, BISIMULATOR
		would in some cases abort with a core dump when writing the
		BCG file containing the diagnostic.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1066
Date: 		Fri Jan  6 18:29:04 MET 2006
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/bisimulator.a

Nature:		The comparison modulo branching and observational equivalences
		in BISIMULATOR was improved.

		The encoding of branching equivalence in terms of boolean
		equation systems was enhanced in order to reduce the number
		of tau-closures (transitive reflexive closures over tau-
		transitions) computed when one of the states being compared
		does not have outgoing tau-transitions. The new encoding
		allows to identify (on the fly) the cases where branching
		equivalence becomes identical to tau*.a equivalence, and
		to simplify the equations accordingly. We observed that this
		can reduce the number of boolean variables by up to 40% and
		the number of boolean operators by up to 60%.

		The encoding of observational equivalence was improved in
		the case where the explicit LTS (represented as a BCG file)
		is deterministic and does not have invisible transitions.
		In this case, observational equivalence becomes identical
		(modulo the presence of deadlock states) to tau*.a equivalence.
		This allows to simplify the equations and to reduce the number
		of boolean variables and operators by one order of magnitude.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1067
Date:		Mon Jan  9 11:48:22 MET 2006
Author:		David Champelovier (INRIA/VASY)
Files:		./INSTALLATION_MACOS,
		./com/installator, ./src/com/install_uncompress

Nature:		We ported INSTALLATOR to MacOS X 10.4 "Tiger": modifications
		were made in order to avoid a problem with the "uncompress"
		command in MacOS X 10.4. Also, the installation directives
		given in file INSTALLATION_MACOS were updated.
-------------------------------------------------------------------------------
BUG FIX
Number:		1068
Date: 		Mon Jan  9 15:07:21 MET 2006
Report:		Mohammad Torabi Dashti (CWI, Amsterdam, The Netherlands)
Author:		Radu Mateescu (INRIA/VASY)
Files:		man/*/evaluator.*

Nature:		In the manual page for EVALUATOR, a syntactic error was
		corrected in an example given to illustrate action predicates
		involving Unix regular expressions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1069
Date:		Wed Jan 11 09:51:24 MET 2006
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		doc/*/Mateescu-05.*, doc/*/Garavel-Mateescu-Bergamini-06.*

Nature:		Two new papers were added to CADP, one about state space
		reductions for weak equivalences, and another one about
		the DISTRIBUTOR and BCG_MERGE tools.
-------------------------------------------------------------------------------
BUG FIX
Number:		1070
Date: 		Thu Jan 26 11:42:57 MET 2006
Report:		Wendelin Serwe (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c

Nature:		A table overflow error was corrected in EXP.OPEN 2.0, which
		sometimes caused a segmentation fault when parallel operators
		had synchronization sets containing gates or labels that did
		not occur in any of the parallel behaviours.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1071
Date: 		Wed Feb  1 15:04:17 MET 2006
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/bisimulator.a, man/*/bisimulator.l

Nature:		A new option "-tauconfluence" was added to BISIMULATOR. This
		option, which can be used in conjunction with branching and
		observational equivalences, reduces the implicit LTS
		(represented as an OPEN/CAESAR program) on-the-fly by applying
		tau-confluence, a form of partial order reduction preserving
		branching equivalence. In some cases, this option improves the
		speed and memory consumption significantly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1072
Date: 		Thu Feb  2 13:32:10 MET 2006
Report:		Nicolas Descoubes (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/xtl

Nature:		A bug was fixed in the XTL model checker, which caused it to
		loop forever in certain cases and on some versions of Linux
		and Windows operating systems. The error was apparently in
		the Gcc compiler, some versions of which behave incorrectly
		when they are invoked with the "-O2" option. Replacing the
		"-O2" by "-O3" option solved the problem.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1073
Date:		Thu Feb 16 19:16:51 MET 2006
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		demo_19/*, demo_38/gate_functions.c

Nature:		The C files containing the EXEC/CAESAR's gate functions for
		demo_19 and demo_38 have been enhanced to make use of the
		logging macro-definitions recently added to "caesar_kernel.h"
		(see item #1059 above). Also, various issues have been fixed
		in demo_19.
-------------------------------------------------------------------------------
BUG FIX
Number:		1074
Date:		Fri Feb 17 19:13:52 MET 2006
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.new

Nature:		A problem was fixed in the C code generated by CAESAR with
		"-exec" option (i.e., using the EXEC/CAESAR framework). The
		visible gate "delta" expressing the termination of a LOTOS
		program (i.e., the "exit" operator in LOTOS) was translated
		into a C function named exit(), which caused a confusion with
		the predefined C function having the same name. From now on,
		the "delta" gate will be translated into a C gate function
		named CAESAR_EXIT() instead of exit().
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1075
Date:		Tue Feb 21 10:13:43 MET 2006
Report:		Patrice Moreaux (Universite de Savoie, France)
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		src/com/cadp_postscript

Nature:		The BCG_DRAW and EUCALYPTUS tools have been enhanced to use
		automatically, on Solaris and Linux, an alternative PostScript
		viewer ("gv", "ggv", or "kghostview") when the "ghostview"
		PostScript viewer "ghostview" is missing.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1076
Date:		Tue Feb 21 12:56:19 MET 2006
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_cc

Nature:		The "cadp_cc" shell-script was enhanced to handle properly,
		on Solaris, the case where the Sun C compiler is installed
		elsewhere than in its standard location /opt/SUNWspro/bin/cc.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1077
Date:		Tue Feb 21 17:34:28 MET 2006
Authors:	David Champelovier, Hubert Garavel, and Frederic Lang (INRIA/
		VASY)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.new,
		bin.*/exp2c, bin.*/libBCG.a, bin.*/bcg_lib,
		demos/demo_12/main.c,
		incl/X_NATURAL.h, incl/bcg_predefined_declarations.h,
		src/open_caesar/simulator.i

Nature:		Many changes have been brought to CADP in order to support
		the Intel C/C++ compiler "icc" version 9.0. These changes
		concerned existing C files as well as C code generated by
		tools such as CAESAR, CAESAR.ADT, CAESAR.NEW, EXP2C, and
		BCG_LIB. They aimed at avoiding warnings emitted by "icc",
		such as:
		- warning #108: implicitly-signed bit field of length 1
		- warning #180: argument is incompatible with formal parameter
		- warning #592: variable "bcg1_return" is used before its
		  value is set
		- warning #1011: missing return statement at end of non-void
		  function "CAESAR_INFORMATION_LABEL"
		- warning #1011: missing return statement at end of non-void
		  function "CAESAR_COMPARE_LABEL"
		- warning #1011: missing return statement at end of non-void
		  function "CAESAR_ADT_ITR_NEXT_FUNCTION_xxx"
		- warning #1011: missing return statement at end of non-void
		  function "EXPOPEN_SELECT_STATE"
		- warning #1011: missing return statement at end of non-void
		  function "Bcg1_GET_VALUE"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1078
Date: 		Thu Feb 23 13:39:51 MET 2006
Report:		Hubert Garavel and Jerome Fereyre (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a, incl/caesar_solve_1.h,
		bin.*/bisimulator.a, bin.*/evaluator.a,
		man/*/caesar_solve_1.*, doc/*/Garavel-92-a.*

Nature:		The functions CAESAR_READ_SOLVE_1() and CAESAR_WRITE_SOLVE_1()
		belonging to the CAESAR_SOLVE_1 library were improved as
		follows.

		- For each function, the parameter:
		    CAESAR_PATHNAME of type CAESAR_TYPE_STRING
		  previously denoting the pathname of a ".bes" file was
		  replaced by a parameter:
		    CAESAR_FILE of type CAESAR_TYPE_FILE
		  denoting a pointer to an already open file. Consequently,
		  CAESAR_READ_SOLVE_1() and CAESAR_WRITE_SOLVE_1() no longer
		  invoke fopen() and fclose() internally; this should be done
		  outside.

		- Two new parameters were added to CAESAR_READ_SOLVE_1():
		    CAESAR_BLOCK_UNIQUE_RESOLUTION of type
		       CAESAR_TYPE_BOOLEAN_FUNCTION_SOLVE_1
		    CAESAR_BLOCK_SOLVE_MODE of type
		       CAESAR_TYPE_NATURAL_FUNCTION_SOLVE_1
		  These parameters are pointers to functions returning, for
		  each index of an equation block in the system, a boolean
		  value indicating whether that block will be solved one or
		  several times, and the resolution mode used for that block,
		  respectively. If the actual values of these parameters are
		  different from NULL, they will be given to the corresponding
		  parameters in the call to CAESAR_CREATE_SOLVE_1() performed
		  by CAESAR_READ_SOLVE_1(), which creates the boolean equation
		  system read from the file. If these parameters are set to
		  NULL, the corresponding parameters of CAESAR_CREATE_SOLVE_1()
		  are determined by the contents of the input file. These two
		  parameters allow to do last minute changes of the resolution
		  of the boolean equation system contained in the input file.

		- One new parameter was added to CAESAR_WRITE_SOLVE_1():
		    CAESAR_DIAGNOSTIC of type CAESAR_TYPE_BOOLEAN
		  If this parameter is set to CAESAR_FALSE, the portion of the
		  boolean equation system written into the output file will
		  contain all equations defining the variables upon which the
		  variable CAESAR_V depends. Otherwise, the output file will
		  contain only the equations defining the variables contained
		  in the diagnostic of the CAESAR_V variable.

		As these changes are NOT backward-compatible with former
		versions of the CAESAR_SOLVE_1 library, user applications
		invoking CAESAR_READ_SOLVE_1() and/or CAESAR_WRITE_SOLVE_1()
		should be updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1079
Date: 		Fri Feb 24 12:12:28 MET 2006
Report:		David Champelovier (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/xtl

Nature:		A bug was fixed in the XTL tool, which caused a core dump in
		the particular situation when the input BCG file becomes
		unreadable between the moment at which XTL was launched and
		the moment the C code generated by the tool is executed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1080
Date: 		Thu Mar  2 14:29:51 MET 2006
Report:		Frederic Lang (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a, bin.*/reductor.a

Nature:		A bug was fixed in the CAESAR_SOLVE library, which caused a
		segmentation fault when invoking the REDUCTOR tool with the
		"-taucompression -divergence" options.
-------------------------------------------------------------------------------
BUG FIX
Number:		1081
Date: 		Fri Mar  3 17:32:17 MET 2006
Report:		Gwen Salaun (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c

Nature:		A bug was fixed, which caused EXP.OPEN 2.0 to abort with a
		segmentation fault while generating the C code corresponding
		to a composition expression containing the "label par"
		operator.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1082
Date: 		Mon Mar  6 19:37:52 MET 2006
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl.*

Nature:		The SVL language and compiler were extended to integrate
		several recent functionalities of CADP:

		- Comparison using BISIMULATOR may now use one of the "dfs"
		  or "bfs" methods; this gives access to the "-dfs" and "-bfs"
		  options of BISIMULATOR for selecting depth-first search or
		  breadth-first search algorithms.

		- Temporal logic formula verification (i.e., the "verify"
		  operator in SVL) may now use the "dfs", "bfs", or "acyclic"
		  methods; this triggers the "-dfs", "-bfs", and "-acyclic"
		  options of EVALUATOR, thus allowing to choose among a depth-
		  first search algorithm, a breadth-first search algorithm, or
		  an algorithm dedicated to acyclic graphs.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1083
Date: 		Fri Mar 10 08:45:50 MET 2006
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		bin.*/determinator.a, bin.*/reductor.a,
		man/*/determinator.l, man/*/reductor.l,
		com/aldebaran, man/*/aldebaran.*,
		demo_31/demo.svl, demo_39/demo.svl

Nature:		A new version 5.0 of Reductor was released, together with a
		new version of Determinator. The new version of Reductor
		includes several functionalities previously available in
		Determinator. The main changes wrt version 4.0 of Reductor
		are the following:

		- The "-minimal" option of Reductor was renamed into "-total"
		  (since "-minimal" does not always generate a minimal graph).
		  A new "-partial" option (opposite of "-total") was added
		  for symmetry.

		- New equivalences have been added to Reductor, namely
		  "-trace" (which implements trace reduction, previously
		  available in Determinator as normal determinization),
		  "-weaktrace" (which implements weak trace reduction,
		  previously available in Determinator as determinization
		  with tau-elimination), and "-taudivergence".

		- Consequently, the determinization of ordinary Labelled
		  Transition Systems is no longer supported by Determinator.
		  Option "-rate" of Determinator becomes the default option.
		  The options "-normal" and "-tauclosure" of Determinator are
		  now deprecated. The Reductor tool should be used instead:
		  Precisely, one should use ``reductor -trace'' instead of
		  ``determinator -normal'', and ``reductor -weaktrace''
		  instead of ``determinator -normal -tauclosure''.

		The Aldebaran 7.0 shell-script was modified; it now invokes
		Reductor instead of Determinator to perform determinization,
		trace reduction and weak trace reduction. This change is
		transparent to the end user.

		The demos 31 and 39, which invoked ``determinator -rate''
		have been simplified to drop the "-rate" option.

		The Aldebaran, Determinator, and Reductor manual pages have
		been updated accordingly. The Reductor manual page, in
		particular, was deeply revised.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1084
Date: 		Fri Mar 10 18:38:46 MET 2006
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl.*,
		demo_07/demo.svl, demo_32/demo.svl

Nature:		The SVL language and compiler have been modified to reflect
		the changes brought to Reductor 5.0:

		- The "reduction" operator of SVL is now equipped with a new
		  clause "with reductor" and three new equivalence names
		  ("tau-confluence", "tau-compression", and "tau-divergence").

		- A new "partial" or "total" optional attribute was added to
		  the "reduction", "root reduction", "leaf reduction", "root
		  leaf reduction", and "node reduction" operators. Total
		  reduction has the same meaning as reduction alone. Partial
		  reduction denotes an on-the-fly reduction performed using
		  Reductor, which is generally faster but produces a larger
		  graph than total reduction.

		- To compute "tau-confluence", "tau-compression", and
		  "tau-divergence", SVL invokes Reductor by default. To
		  compute "trace" and "weak trace" equivalence, SVL now
		  invokes Reductor instead of Determinator. To compute
		  "tau*.a" and "safety" equivalences, SVL now invokes
		  Reductor by default instead of Aldebaran.

		Demo_07 and demo_32 have been modified so as to remove
		occurrences of "using fly" in SVL scripts.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1085
Date: 		Wed Mar 15 11:35:00 MET 2006
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		co,/tst, incl/bcg_standard.h, incl/caesar_standard.h,
		./INSTALLATION_2

Nature:		Many changes have been brought to CADP tools for a smoother
		support of Intel's ICC 9.0 compiler for Linux and Sun's
		SunStudio 11 compiler for Solaris:

		- The "tst" shell-script now recognizes ICC and displays its
		  version number.

		- The "tst" shell-script also displays the version number of
		  Sun's C compiler and, when necessary, emits a warning about
		  the C compilers available on Solaris.

		- "tst" now emits a warning message if the version of ICC
		  is l_cc_c_9.0.030 or older, as these versions of ICC
		  contain a bug (issue Q338282 : "sign extension on cast from
		  unsigned short to int when optimized"), detected by VASY,
		  that prevents BCG tools from working properly when using
		  optimization option "-O1" (which is activated by default
		  in ICC). This issue was fixed by Intel in version
		  l_cc_c_9.0.031.

		- On Linux, "tst" no longer displays any warning message when
		  $CADP_CC is set to a value different from "gcc" (as "icc"
		  is also a valid value). Also, "tst" no longer complains
 		  in the particular case where, under Linux, $CADP_CC is set
		  to "icc" and $LD_LIBRARY_PATH contains the path of ICC's
		  dynamic libraries.

		- "tst" now checks the C compiler contained in $CADP_CC by
		  trying to compile and execute a simple C program.

		- The INSTALLATION_2 file was enhanced to provide better
		  explanations on how to set $CADP_CC (especially for Solaris
		  users) and how to use Parasoft's Insure software.

		- The include files "bcg_standard.h" and "caesar_standard.h"
		  have been adapted to work with ICC.
-------------------------------------------------------------------------------
BUG FIX
Number:		1086
Date: 		Thu Mar 16 12:05:45 MET 2006
Report:		Wendelin Serwe (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		src/svl/standard

Nature:		If the diagnostic produced by the SVL's "verify" (respectively,
		"comparison") operator was a trace and if some labels in this
		trace contained the sub-string "TRUE" or "FALSE", these labels
		were displayed after the expected verification (respectively,
		comparison) result, i.e., TRUE or FALSE. This bug was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1087
Date: 		Thu Mar 16 15:32:42 MET 2006
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/reductor.a

Nature:		In some cases, the labelled transition system generated by
		``reductor -total -safety'' was not minimal modulo safety
		equivalence. This bug was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1088
Date: 		Thu Mar 16 16:23:16 MET 2006
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_min

Nature:		BCG_MIN now emits a warning message when the "-epsilon" option
		is used for standard labelled transition systems, i.e., when
		neither the "-rate" nor "-prob" option is given on the
		command-line.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1089
Date: 		Fri Mar 24 18:14:16 MET 2006
Report:		Sven Johr, Holger Hermanns, and Reza Pulungan (Saarland
		University, Germany)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_min, bin.*/determinator.a,
		man/*/bcg_min.*, man/*/determinator.*

Nature:		A new option "-format" was added to BCG_MIN and DETERMINATOR.
		This option allows to control the representation of floating-
		point numbers finely. Previously, the floating-point numbers
		(rate or probabilities) occurring on the transitions of the
		Markov chains generated by BCG_MIN and DETERMINATOR were
		displayed using the "%f" format of sprintf(), i.e. with at
		most 6 digits after the radix character ".", thus causing a
		loss of precision (transitions with slightly different values
		being considered as identical). From now on, the format for
		floating-point numbers can be specified using the "-format"
		option.

		Also, the following (incompatibble) changes have been brought
		to BCG_MIN and DETERMINATOR:

		- When no "-format" option is given, the default format used
		  by BCG_MIN and DETERMINATOR is now "%g" instead of "%f".
		  For instance, this allows to display a probability value
		  as 1.23e-9 instead of 0.000000.

		- For BCG_MIN, when no "-epsilon" option is given, the default
		  precision is now 1e-6 instead of 1e-3. Thus, the behaviour
		  of BCG_MIN is now aligned on that of DETERMINATOR.

		The manual pages for BCG_MIN and DETERMINATOR have been
		updated accordingly.
------------------------------------------------------------------------------
IMPROVEMENT
Number:		1090
Date:		Fri Mar 24 19:20:19 MET 2006
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/evaluator.a, man/*/evaluator.*

Nature:		The "-bes" option of EVALUATOR was improved in two ways:

		- When this option is given on the command-line, EVALUATOR no
		  longer stops after producing the text file containing the
		  boolean equation system; from now on, EVALUATOR continues
		  evaluating the formula and generating the diagnostics.

		- If the file name specified after "-bes" has the extension
		  ".bes.gz", it will be compressed using gzip(1), which yields
		  substantial file size reductions for large boolean equation
		  systems.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1091
Date: 		Mon Mar 27 19:33:42 MEST 2006
Authors:	Antonella Chirichiello (Univ. La Sapienza, Roma, Italy),
		Gwen Salaun, and Wendelin Serwe (INRIA/VASY)
Files:		demos/demo_40

Nature:		A new demo (Web services for stock management and on-line book
		auction) was added to CADP.
-------------------------------------------------------------------------------
BUG FIX
Number:		1092
Date: 		Tue Mar 28 17:58:42 MEST 2006
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.new

Nature:		In the C code generated by CAESAR (and CAESAR.NEW) using the
		"-exec" option (i.e., the C code produced for the EXEC/CAESAR
		environment), the name of the gate function generated for the
		"delta" gate of LOTOS was renamed into "EXIT()" instead of
		"CAESAR_EXIT()" (see also item #1074 above). This avoids a
		potential name conflict in case the LOTOS specification with
		functionality "exit" would also contain a visible gate named
		"caesar_exit", or "Caesar_Exit", etc.
-------------------------------------------------------------------------------
BUG FIX
Number:		1093
Date: 		Tue Mar 28 18:55:08 MEST 2006
Report:		Reza Pulungan (Saarland Univ., Germany)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel

Nature:		A bug was fixed in the SVL tool, which generated incorrect
		".exp" files when the gates to synchronize did not start with
		a letter (e.g., when these gates were numbers).
-------------------------------------------------------------------------------
BUG FIX
Number:		1094
Date: 		Thu Mar 30 16:19:48 MEST 2006
Report:		Wendelin Serwe (INRIA/VASY)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.new

Nature:		In the C code generated by CAESAR (and CAESAR.NEW) using the
		"-exec" option, the gate functions were not declared before
		being used. With recent C compilers, such as SunStudio 11,
		this caused warnings of the form:
		   warning: implicit declaration of function `G'
		This issue was solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		1095
Date: 		Thu Mar 30 17:45:25 MEST 2006
Report:		Wendelin Serwe (INRIA/VASY)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.new

Nature:		In the special case of LOTOS specifications not containing
		any visible nor tau transition, the C code generated by CAESAR
		(and CAESAR.NEW) with option "-exec" would not compile
		properly. This issue was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1096
Date: 		Thu Mar 30 21:48:36 MEST 2006
Report:		Reza Pulungan (Saarland Univ., Germany)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_io, man/*/bcg_io.*

Nature:		A new option "-format" (similar to the "-format" option added
		to BCG_MIN and DETERMINATOR recently) was added also to the
		"-etmcc" option of BCG_IO. This option controls the format
		under which floating-point numbers (rates or probabilities)
		are written into the ".tra" file to be read by the ETMCC
		model checker.

		This change is potentially incompatible, as floating-point
		numbers are now displayed, by default, using format "%g"
		instead of "%f". However, the former behaviour can still be
		obtained using option ``-format "%f"''.
-------------------------------------------------------------------------------
BUG FIX
Number:		1097
Date: 		Thu Apr  6 19:24:20 MEST 2006
Report:		Wendelin Serwe (INRIA/VASY)
Authors:	Radu Mateescu and David Champelovier (INRIA/VASY)
Files:		bin.*/ocis.a

Nature:		Recent versions of OCIS could not execute properly. At link
		edit time, an error message of the form:
		  Undefined symbol CAESAR_TAU_CLOSURE_REACH_DEADLOCK_EDGE_LIST
		would be emitted. This issue was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1098
Date: 		Fri Apr  7 17:02:48 MEST 2006
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		doc/=READ_ME.txt

Nature:		The CADP publication list was entirely reorganized. New
		sections were added to reflect the new software architecture
		of CADP. Sections related to obsolete or deprecated CADP tools
		were moved at the end of the list. The corresponding Web page
		   http://www.inrialpes.fr/vasy/publications/cadp.html
		was updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1099
Date: 		Fri Apr  7 18:04:11 MEST 2006
Report:		Frederic Lang (INRIA/VASY)
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		bin.*/libcaesar.a

Nature:		An issue was fixed in function CAESAR_TEST_REGEXP() defined in
		the "caesar_regexp.h" library. In some cases, this function
		would modify the character string pointed by its first
		argument. On Linux, this could cause a segmentation fault
		when running EXP.OPEN.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1100
Date:		Mon Apr 10 16:37:41 MEST 2006
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/bisimulator.a, man/*/bisimulator.*

Nature:		The "-bes" option of BISIMULATOR was improved in two ways
		(see also item #1090 above):

		- When this option is given on the command-line, BISIMULATOR
		  no longer stops after producing the text file containing the
		  boolean equation system; from now on, BISIMULATOR continues
		  comparing the graphs and generating the diagnostics.

		- If the file name specified after "-bes" has the extension
		  ".bes.gz", it will be compressed using gzip(1), which yields
		  substantial file size reductions for large boolean equation
		  systems.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1101
Date: 		Tue Apr 18 11:25:22 MEST 2006
Authors:	Christophe Joubert and Radu Mateescu (INRIA/VASY)
Files:		doc/*/Joubert-Mateescu-06.*

Nature:		A new paper on distributed verification was added in the
		"doc" directory.
-------------------------------------------------------------------------------
BUG FIX
Number:		1102
Date:		Wed Apr 26 18:51:34 MEST 2006
Report:		Ken Turner (University of Stirling, Scotland, UK)
Author:		Hubert Garavel (INRIA/VASY)
Files:		tcl-tk/com/wish, tcl-tk/com/tixwish

Nature:		On Windows, if the environment variable $CYGWIN was set and
		if its value contained the substring "tty", all the CADP tools
		based on Tcl/Tk (e.g., Installator, Eucalyptus) would fail
		with the following error message:
		   [main] echo ... tty_list::allocate_tty: No tty allocated
		   while executing ...
		The Wish and Tixwish shell-scripts included in CADP have been
		modified so as to remove the "tty" substring from $CYGWIN
		when present.
-------------------------------------------------------------------------------
BUG FIX
Number:		1103
Date: 		Tue May  2 14:18:30 MEST 2006
Report:		Gwen Salaun and Wendelin Serwe (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/bisimulator.a

Nature:		A bug was fixed in the counterexample generation feature of
		BISIMULATOR. The bug, which occurred only when checking
		branching equivalence, caused in some cases the insertion in
		the counterexample of certain transition sequences that were
		absent from both LTSs being compared.
-------------------------------------------------------------------------------
BUG FIX
Number:		1104
Date:		Wed May  3 18:57:38 MEST 2006
Report:		Wendelin Serwe (INRIA/VASY)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		incl/X_STRING.h

Nature:		The two macro-definitions of ADT_CMP_STRING (X1, X2) and
		ADT_PRINT_STRING (F, X) have been modified to handle the
		cases where string pointers X, X1, and/or X2 are NULL (this
		situation can arise when using CAESAR.NEW, which resets dead
		variables to NULL automatically).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1105
Date:		Thu May  4 10:34:21 MEST 2006
Report:		Jacques Abily and Sylvie Lesmanne (Bull)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.new, man/*/caesar.*

Nature:		CAESAR and CAESAR.NEW have been enhanced with a "-external"
		option that generates automatically a prototype file (with
		suffix ".c.proto") containing skeletons for EXEC/CAESAR's gate
		functions, i.e., functions associated to all visible gates of
		the LOTOS specification. These gate functions are incomplete:
		they must be completed manually (at all places marked "...")
		with input/output operations required to interface the C code
		generated from the LOTOS specification with its real, external
		environment. Option "-external" must be used together with
		"-exec" option. Three new additional options ("-indent",
		"-oldstyle", and "-newstyle") have been also added to control
		the form of the generated C code.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1106
Date: 		May  5 10:37:35 MEST 2006
Report:		Gwen Salaun and Wendelin Serwe (INRIA/VASY)
Authors:	David Champelovier, Hubert Garavel, and Frederic Lang (INRIA/
		VASY)
Files:		src/eucalyptus/eucalyptus.tcl, src/com/xeuca_convert

Nature:		A new version 2.6 of EUCALYPTUS was released, which reflects
		the changes brought to the command-line CADP tools. As regards
		the menu bar, the changes are the following:

		- In the menu "File / Save Preferences", the preferred options
		  for BISIMULATOR, EVALUATOR, and TGV are now stored in file
		  ~/.xeucarc.

		- Following the replacement of ALDEBARAN by a shell-script
		  (see item #1052 above), the menu "Options / ALDEBARAN" was
		  removed. The "-labels" option of ALDEBARAN can now be set
		  in the "Reduce" window of ALDEBARAN.

		- The former menu "Options / EVALUATOR and XTL" was splitted
		  into "Options / EVALUATOR" and "Options / XTL". The new
		  menu "Options / EVALUATOR" gives access to the recent
		  options of EVALUATOR, including "-verbose", "-silent",
		  "Boolean Equation System printing...", etc.

		- A new menu "Options / EXP.OPEN" was added to specify the
		  command-line options of EXP.OPEN 2.0.

		- The "Help" menu was updated. In particular, the manual
		  page for the (now obsolete) EXP2FC2 tool is no longer
		  proposed in the Help window.

		As regards the contextual menus attached to files in the
		left window of EUCALYPTUS, the following changes were made:

		- In the "Compare..." menu, tau-confluence option was added
		  for the BISIMULATOR tool and the ALDEBARAN tool is no
		  longer proposed (since BISIMULATOR is superior to ALDEBARAN
		  in every respect, except that it does not support the
		  delay equivalence, which is never used in practice).
		  Also, a bug that prevented the comparison between a ".aut"
		  and a ".bcg" file was fixed.

		- In the "Convert" menu for ".exp" files, a bug was fixed that
		  prevented ".exp" files from being translated into the FC2
		  format. Also, the translation into the PEP format is now
		  proposed.

		- A new menu "Evaluate performance..." was added to invoke
		  the BCG_STEADY and BCG_TRANSIENT tools.

		- In the "Evaluate temporal formula..." menu, the access to
		  options "-bfs", "-dfs" and "-acyclic" of EVALUATOR was made
		  safer. EUCALYPTUS only proposes three possibilities ("-bfs",
		  "-dfs", and "-dfs -acyclic") thus preventing from selecting
		  "-bfs" and "-acyclic" simultaneously.

		- In the "Find Deadlock..." menu, the ALDEBARAN tool is no
		  longer proposed.

		- In the "Find Livelock..." menu, the ALDEBARAN tool is no
		  longer proposed.

		- In the "Properties" menu, the ALDEBARAN tool is no longer
		  used to display properties of ".exp" files; EXP.OPEN is used
		  instead, with its "-info" option.

		- In the "Reduce..." menu, many changes have been made. On-
		  the-fly reduction using the REDUCTOR tool is now proposed
		  for several types of files, including ".lotos" files.
		  Generally, the ALDEBARAN tool is still proposed, but for
		  observational equivalence only, as other equivalences are
		  more efficiently implemented by BCG_MIN and REDUCTOR. On
		  ".exp" files however, ALDEBARAN is no longer proposed in
		  the "Reduce..." menu, since ALDEBARAN does not implement
		  observational equivalence for ".exp" files. Finally, the
		  new "-format" option of BCG_MIN and the new default value
		  for the "-epsilon" option of BCG_MIN (see above item #1089)
		  are now reflected by EUCALYPTUS.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1107
Date:		Fri May 19 16:39:31 MEST 2006
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		demos/demo_05/user.c, demos/demo_12/main.c,
		demos/demo_19/gate_functions.c, incl/caesar_standard.h,
		src/exec_caesar/main.c, src/open_caesar/declarator.c,
		src/open_caesar/executor.c, src/open_caesar/generator.c,
		src/open_caesar/generator2.c, src/open_caesar/predictor.c,
		src/open_caesar/reductor2.c, src/open_caesar/reductor3.c,
		src/open_caesar/simulator.c, src/open_caesar/terminator.c

Nature:		Minor changes have been made to source C code files included
		in CADP so as to avoid warnings from the "lint" verifier of
		Sun Studio 11.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1108
Date:		Tue May 23 18:38:20 MEST 2006
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.indent

Nature:		CAESAR.INDENT was modified to produce nicer results when
		pretty-printing LOTOS specifications, and especially data type
		definitions:
		- A newline character is now inserted after keyword "opns"
		- No newline character is any more inserted after keyword "=>"
		- Equations occurring after a "forall" clause are shifted to
		  the right by one tabulation
		- Spaces are no longer inserted around keyword ":" in variable
		  declarations (which have the form X:S or X1, ..., Xn:S)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1109
Date:		Tue Jun  6 16:46:50 MEST 2006
Report:		Gert Huisman (Vrije Universiteit Amsterdam, The Netherlands)
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		com/rfl

Nature:		Two new options ("-v" and "-t") have been added to the "rfl"
		shell-script. These options will be used when sending e-mail
		messages to warn users about CADP license expiration. They
		will allow to mention the CADP version number and the date at
		which the license was requested. These are useful information
		for users running different versions of CADP on the same
		machine(s).
-------------------------------------------------------------------------------
BUG FIX
Number:		1110
Date:		Tue Jun  6 19:57:26 MEST 2006
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/rfl

Nature:		When installing CADP on certain versions of Windows and
		Cygwin tools, the prototype license files sent by Installator
		would contain extra '^M' (\r) characters. This was solved
		by modifying the "rfl" shell-script so as to remove these
		extra-characters.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1111
Date:		Wed Jun  7 19:21:08 MEST 2006
Report:		Christophe Joubert (University of Malaga, Spain)
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		./INSTALLATION_2, ./INSTALLATION_4,
		./src/com/installator/installator.tcl

Nature:		When installing CADP on a FAT or NTFS partition accessed from
		Linux (using SAMBA), the installation would fail silently as
		symbolic links are not supported by FAT nor NTFS. Two actions
		have been taken to address this issue:

		- This problem is now documented in files INSTALLATION_2 and
		  INSTALLATION_4.

		- Installator now checks whether it is possible to create
		  symbolic links on the partition chosen by the user to
		  install CADP; if not, an error message is displayed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1112
Date: 		Mon Jun 26 14:25:14 MEST 2006
Report:		Nathalie Lepy (INRIA/VASY)
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl, src/com/cadp_web,
		./INSTALLATION_2

Nature:		The EUCALYPTUS graphical user-interface was enhanced in
		several ways:

		- On Unix systems, the default browser (i.e., the default
		  value of the environment variable $NAVIGATOR) is now
		  "firefox" instead of "netscape".

		- The contents of the "Web" menu have been redesigned. The
		  new "Web" menu gives access to various Web pages providing
		  useful information about CADP: tutorials, manual pages,
		  case studies, FAQ, etc.

		- Two problems have been fixed in the "Compare..." and
		  "Reduce..." menus for files with ".LOTOS" extension
		  (i.e., files to be pre-processed using APERO).

		- The "More" menu for files with a ".lotos" or ".LOTOS"
		  extension has been renamed into "More commands". For
		  ".LOTOS", this menu now contains the "Compile abstract
		  data types" entry. For ".lotos" and ".LOTOS" files, two
		  new entries have been added: "Generate external types/
		  functions" (the corresponding menu entry "Options /
		  Caesar.adt / Generate external prototype files" has been
		  removed) and "Generate gate functions...".

		- In the XTL-related section of the "Verify temporal
		  properties..." menu, the "Expand only" option has been
		  made active.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1113
Date: 		Mon Jun 26 17:28:52 MEST 2006
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt, man/*/caesar.adt.*

Nature:		From now on, CAESAR.ADT will indent, not only the generated
		".h" file as usual, but also the ".f.proto" and ".t.proto"
		files if the "-external" option is selected. The "-indent"
		option can be use to prevent these files from being indented.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1114
Date: 		Mon Jun 26 19:33:52 MEST 2006
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.new, man/*/caesar.*

Nature:		From now on, if the "-external" option is given, CAESAR and
		CAESAR.NEW will no longer stop if the ".c" file already exists
		and is up to date: CAESAR will generate both the ".c" and the
		".c.proto" files.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1115
Date: 		Mon Jun 26 19:43:50 MEST 2006
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		From now on, if the "-external" option is given, CAESAR.ADT
		will no longer stop if the ".h" file already exists and is up
		to date: CAESAR.ADT will generate the ".h", ".f.proto", and
		".t.proto" files.
-------------------------------------------------------------------------------
BUG FIX
Number:		1116
Date: 		Wed Jun 28 12:42:03 MEST 2006
Report:		Nathalie Lepy (INRIA/VASY)
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		In the EUCALYPTUS interface, when evaluating an XTL formula
		on a BCG file, the "Expand only" option has been made active.
-------------------------------------------------------------------------------
BUG FIX
Number:		1117
Date: 		Mon Jul  3 17:25:10 MEST 2006
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		com/tst

Nature:		When running the "tst" shell-script on Linux, if the process
		stack size was set to unlimited, an error message was issued:
                   tst: line 1055: [: unlimited: integer expression expected
		This problem was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1118
Date: 		Mon Jul  3 18:24:33 MEST 2006
Report:		David Champelovier and Frederic Lang (INRIA/VASY)
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		src/com/cadp_tail

Nature:		Under some circumstances, the "cadp_tail" command would emit
		an error message:
		   cadp_tail: line 69:  2548 Broken pipe        tail "$@
		This problem was solved by handling SIGPIPE signals correctly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1119
Date: 		Mon Jul  3 19:12:41 MEST 2006
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_indent

Nature:		The "cadp_indent" command can now detect automatically the
		Sun pretty-printer ("indent") even if it is not located in
		/opt/SUNWspro/bin/indent. It can also use the GNU "indent"
		if present.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1120
Date: 		Tue Jul  4 19:39:32 MEST 2006
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.indent

Nature:		The LOTOS pretty-printer was enhanced, as regards variable
		declarations. Single variable declarations are formatted
		without spaces ("X:S"), while multiple variable declarations
		are formatted with spaces ("X1, ..., Xn : S"), so as to
		enhance readability.
-------------------------------------------------------------------------------
BUG FIX
Number:		1121
Date: 		Wed Jul  5 17:08:48 MEST 2006
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.bdd

Nature:		A semantic error was fixed in the "-unit" option of the
		CAESAR.BDD tool. The algorithm implementing this option was
		entirely redesigned so as to be compatible with the definition
		of "concurrent units" given in the [Garavel-Serwe-04] paper.
-------------------------------------------------------------------------------
BUG FIX
Number:		1122
Date: 		Fri Jul  7 11:41:30 MEST 2006
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		src/com/cadp_indent

Nature:		The "cadp_indent" command was modified so as to cope with
		core files on Linux (which are not named "core", but
		"core.pid", where pid is a process number).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1123
Date:		Fri Jul  7 17:33:12 MEST 2006
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old, bin.*/caesar.new, com/rfl,
		demo_20/=READ_ME.txt, demo_27/=READ_ME.txt,
		demo_28/=READ_ME.txt

Nature:		The "caesar" binary (version 6.2 of CAESAR) was renamed into
		"caesar.old". The "caesar.new" binary (version 7.0 of CAESAR)
		was renamed into "caesar" and becomes the default.

		The statistics of demos 20, 27 and 28 have been updated
		accordingly, so as to reflect the reduction factor obtained
		using CAESAR 7.0. On all CADP demos, we observed that this
		divides the number of states generated by an average factor
		of 45 (with a maximum factor of 4,400) and the numbers of
		transitions by an average factor of 38 (with a maximum factor
		of 3,100).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1124
Date: 		Mon Jul 10 18:29:19 MEST 2006
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		com/exp.open, bin.*/exp2c, man/*/exp.open.*,
		src/eucalyptus/eucalyptus.tcl, src/com/xeuca_convert

Nature:		A new "-network tina" option was added to the EXP.OPEN 2.0
		compiler, so as to convert the input language of EXP.OPEN
		into the Petri net format of the TINA toolbox. The EUCALYPTUS
		graphical interface was enhanced to give access to this new
		functionality in the "Convert..." menu associated to ".exp"
		files.
-------------------------------------------------------------------------------
BUG FIX
Number:		1125
Date: 		Wed Jul 12 11:37:40 MEST 2006
Report:		Nathalie Lepy (INRIA/VASY)
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		The Tcl/Tk code of EUCALYPTUS was modified to handle properly
		the situation where a user replaces, in the interface panels,
		an (integer or floating-point) number with the empty string.
		From now on, quotes are added around numbers so that empty
		strings can be detected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1126
Date: 		Wed Jul 19 12:16:21 MEST 2006
Author:		Radu Mateescu (INRIA/VASY)
Files:		doc/*/Mateescu-06-a.*

Nature:		An overview paper on the CAESAR_SOLVE library for on-the-fly
		resolution of alternation-free boolean equation systems was
		added.
-------------------------------------------------------------------------------
BUG FIX
Number:		1127
Date:		Fri Jul 21 11:32:08 MEST 2006
Report:		David Champelovier (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		src/svl/standard

Nature:		On Windows, some ".sync" files produced by SVL automatically
		for Projector were incorrect. This bug was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1128
Date: 		Tue Jul 25 11:46:23 MEST 2006
Report:		David Champelovier (INRIA/VASY)
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		bin.macOS/projector.a

Nature:		The Mac OS X version of the PROJECTOR tool was modified so as
		to get rid of the following error message:

		> /usr/bin/ld: warning -L: directory name ('$CADP'/bin.macOS)
		> does not exist
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1129
Date: 		Tue Jul 25 12:16:11 MEST 2006
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		bin.*/reductor.a, bin.*/tgv.a, bin.*/xsimulator.a,
		com/bcg_open, com/caesar.open, com/exp.open, com/seq.open,
		src/open_caesar/generator.c, src/open_caesar/generator2.c,
		src/open_caesar/reductor2.c, src/open_caesar/reductor3.c

Nature:		Many CADP programs and shell-scripts have been modified so as
		to add double quotes around occurrences of $CADP in $LDFLAGS
		and $LD_LIBRARY_PATH. This change is yet another step towards
		the acceptance and proper handling of white spaces in file
		names.
-------------------------------------------------------------------------------
BUG FIX
Number:         1130
Date:           Tue Jul 25 12:24:23 MEST 2006
Report:         Wendelin Serwe (INRIA/VASY)
Author:         Radu Mateescu (INRIA/VASY)
Files:          bin.*/bisimulator.a, man/*/bisimulator.*

Nature:         A bug was fixed in the counterexample generation for branching
		equivalence in BISIMULATOR. In some cases, the counterexamples
		produced contained some transition sequences which were not
		included in the input LTSs. The new counterexamples are correct
		w.r.t. this criterion and illustrate properly the cases where
		the non equivalence of the LTSs is determined by the non
		equivalence of the source states of some transitions (the cases
		erroneously handled before were precisely of this type).
		The description of the -diag option in the manual page of the
		tool was updated accordingly. (The present bug fix completes a
		previous, partial bug fix for the same problem - see item #1103
		above).
-------------------------------------------------------------------------------
BUG FIX
Number:		1131
Date: 		Fri Sep  8 18:35:41 CEST 2006
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/tst

Nature:		The "tst" shell-script was enhanced in several ways to be
		fully compatible with the Solaris 10 operating system:

		a) When running on Solaris 10, "tst" no longer emits the
		   following warning:

		   > Current operating system is ``SunOS 5.10''
		   > *** The CADP software is intended for SunOS 5.5 (Solaris
		   >     2.5) or higher
		   > ...

		b) When "indent" is missing on the current, "tst" explains
		   how to obtain it from Sun Web site:

		   > *** Can't find command ``indent''
		   > ==> Add directory /opt/SUNWspro/bin to your ``$PATH''
		   >     variable
    		   > If this directory does not exist, we recommend that you
		   > install the Sun Studio 11 (or higher) tool suite, which
		   > you can freely download from www.sun.com (follow
		   > Downloads, then Development Tools)

		c) When the default C compiler (i.e., gcc) is missing, the
		   explanation message was improved.
-------------------------------------------------------------------------------
BUG FIX
Number:		1132
Date:		Mon Sep 18 14:08:55 MEST 2006
Report:		Wendelin Serwe (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/evaluator.a

Nature:		A minor error was fixed in the way a certain error message was
		printed by EVALUATOR.
-------------------------------------------------------------------------------
BUG FIX
Number:		1133
Date:		Tue Sep 19 11:50:01 MEST 2006
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/evaluator.a

Nature:		A portability issue was fixed in the lexical scanning of .blk
		files containing modal equation systems given as arguments
		to the "-block" option of EVALUATOR. On Windows systems, this
		issue caused an infinite loop of EVALUATOR when parsing .blk
		files containing comments enclosed between "(*" and "*)".
-------------------------------------------------------------------------------
BUG FIX
Number:		1134
Date: 		Wed Sep 20 15:16:37 MEST 2006
Report:		Reza Pulungan (Saarland University, Germany)
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		src/com/install_df

Nature:		The "install_df" script used by INSTALLATOR was modified so
		as to avoid a fatal error in INSTALLATOR. This error occurred
		on Windows only for filesystems (mount points) with long names.
		After entering the download password, the following error
		message would be displayed:
		   > syntax error in expression "double(round((double(27%) /
		   >    (1024))*10))/10": unexpected close parenthesis
		   > syntax error in expression "double(round((double(27%) /
		   >    (1024))*10))/10": unexpected close parenthesis
		   >    while executing
		   > "expr double(round((double($TAILLE) / (1024))*10))/10"
		   >    (procedure "Get_Free_Space" line 7)
		   >    invoked from within
		   > "Get_Free_Space $CADP(TMP_ARCHIVE)"
		   >    (procedure "Check_Required_Space" line 28)
		   > ...
		This problem is solved now.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1135	
Date: 		Thu Sep 21 11:49:31 MEST 2006
Report:		Jan Rakow (OFFIS, Oldenburg, Germany)
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		com/tst

Nature:		The "tst" shell-script emits a warning when the maximal stack
		size is not large enough (this can cause problems with those
		CADP programs making intensive use of recursion). In such
		case, it emits a warning message:

		> *** The maximal stack size for executing your programs is
		>     currently limited to 2042 kbytes (see the ``ulimit -s''
		>     command'')
		> ...

		Unfortunately, it appears that command "ulimit -s" is not
		fully implemented in Cygwin, so that it is not possible to
		increase the stack size this way. The "tst" warning message
		was improved to explain this situation.
-------------------------------------------------------------------------------
BUG FIX
Number:		1136
Date: 		Fri Sep 22 12:53:34 MEST 2006
Report:		Reza Pulungan (Saarland University, Germany)
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		bin.win32/*

Nature:		The CADP licensing mechanism was enhanced to handle the case
		where, on Windows, the CADP tools are invoked from a current
		directory that is not on the same disk as the disk on which
		CADP is installed, for instance, when the user home directory
		is on disk D: while CADP is installed on disk C:.
-------------------------------------------------------------------------------
BUG FIX
Number:		1137
Date: 		Fri Sep 22 17:15:32 MEST 2006
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		src/com/cadp_print, com/tst, INSTALLATION_2

Nature:		The "cadp_print" shell-script was modified to fetch "lpr"
		in "/usr/ucb" on Solaris. This suppresses the need for having
		"/usr/ucb" present in the $PATH on Solaris, thus simplifying
		the installation for Solaris users. The INSTALLATION_2 file
		and the "tst" shell-script have been modified accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1138
Date:		Fri Sep 22 17:22:09 MEST 2006
Report:		Damien Thivolle (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		src/xtl/actl.mcl

Nature:		The translation in modal mu-calculus of the inevitability
		operator AU_A_A() of ACTL was improved. When using
		EVALUATOR to verify temporal formulas containing this
		operator, the new translation always leads to gains in time
		and memory, sometimes up to a factor 8.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1139
Date: 		Mon Sep 25 16:43:31 MEST 2006
Report:		Claude Jard (ENS Cachan, Bretagne, France)
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		bin.macOS/*

Nature:		The CADP licensing mechanism was enhanced to handle the case
		of disconnected Mac OS X machines without DHCP (i.e., using
		fixed IP addresses). Upon disconnection, the names of these
		machines change, e.g., from "xxx.domain.com" into "xxx.local".
-------------------------------------------------------------------------------
BUG FIX
Number:		1140
Date: 		Thu Oct  5 16:43:49 MEST 2006
Report:		Jerome Fereyre (INRIA/VASY)
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		bin.*/cadp_hostinfo

Nature:		The "cadp_hostinfo" tool was modified to avoid intermittent
		blockings that occurred on a Linux cluster with biprocessor
		nodes.
-------------------------------------------------------------------------------
BUG FIX
Number:		1141
Date: 		Mon Oct  9 10:43:07 MEST 2006
Author:		David Champelovier (INRIA/VASY)
Files:		com/bcg_open

Nature:		Following the change described in item #1129 above, a residual
		bug (missing backslash) was fixed in the bcg_open script. This
		bug caused warnings of the form
		   > .../bcg_open: line 1: "/common/Cadp"/com/arch:
		   > No such file or directory
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1142
Date: 		Tue Oct 10 11:49:02 MEST 2006
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_cc

Nature:		From now on, CADP will use "cc" (instead of "gcc") as the
		default C compiler on Solaris systems.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1143
Date: 		Tue Oct 10 12:15:24 MEST 2006
Author:		Hubert Garavel (INRIA/VASY)
Files:		INSTALLATION_2, INSTALLATION_WINDOWS

Nature:		The installation guidelines have been updated and simplified
		to get rid of obsolete platforms (architectures and operating
		systems). In particular, compared to the previous stable
		version CADP 2001, the following platforms are no longer
		supported:
		- Sparc stations running Solaris 7
		- PC computers running Windows 98 or Windows NT4
		- PC computers running Linux with kernel version <= 2.2 and/or
		  glibc version < 2.3
		It may happen that recent versions of CADP still work on some
		of these old architectures, but we do not make statements on
		this, as we have discontinued testing CADP on these platforms.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1144
Date: 		Wed Oct 11 15:38:10 MEST 2006
Author:		Radu Mateescu (INRIA/VASY)
Files:		doc/=READ_ME.txt, doc/biblio.bib,
		doc/*/Mateescu-Sighireanu-00.*, doc/*/Mateescu-Sighireanu-03.*,
		doc/*/Mateescu-06-b.*

Nature:		The paper Mateescu-Sighireanu-00 (24 pages) was replaced
		with Mateescu-Sighireanu-03 (32 pages), which provides the
		most complete reference on EVALUATOR 3.0 (please note that,
		for EVALUATOR 3.5, the reference paper is Mateescu-06-a).
		Also, a new case-study paper, Mateescu-06-b, was added.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1145
Date: 		Wed Oct 11 17:37:23 CEST 2006
Report:		Wendelin Serwe (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_psbox, src/com/cadp_web

Nature:		The "cadp_psbox" and "cadp_web" have been modified so as to
		fetch "gs" and "mozilla" in "/usr/sfw/bin". This is suitable
		on Solaris 10 systems.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1146
Date: 		Wed Oct 11 19:13:27 MEST 2006
Authors:	Hubert Garavel, Radu Mateescu, and Wendelin Serwe (INRIA/VASY)
Files:		doc/pdf/*.pdf

Nature:		Many PDF files (those corresponding to INRIA research reports)
		have been reformatted, so as to obtain a well-centered title
		page.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1147
Date: 		Tue Oct 17 11:49:48 MEST 2006
Report:		David Champelovier (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		INSTALLATION_2

Nature:		The installation guidelines for Windows have been updated to
		specify that the CADP software must be installed on the same
		disk as the Windows operating system itself. Usually, Windows
		is installed on "C:\", so should be CADP (installing CADP on
		another disk, such as "E:\" will not work).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1148
Date: 		Tue Oct 17 18:56:42 MEST 2006
Author:		Frederic Lang (INRIA/VASY)
Files:		doc/*/Lang-06.*, doc/=READ_ME.txt, doc/biblio.bib

Nature:		A new paper on refined interface generation using EXP.OPEN
		and SVL was added in the "doc" directory of the CADP toolbox.
-------------------------------------------------------------------------------
BUG FIX
Number:		1149
Date: 		Fri Oct 20 14:22:24 MEST 2006
Report:		David Champelovier (INRIA/VASY)
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		com/bcg_draw, com/bcg_info, com/bcg_open, com/caesar.open,
		com/exp.open, com/seq.open, com/svl, com/tst,
		src/com/cadp_basename, src/com/cadp_edit,
		src/com/xeuca_convert, src/svl/standard

Nature:		Under Solaris, SVL did not detect the presence of ".err" error
		files generated by CAESAR.ADT and CAESAR if the "basename"
		command found in the $PATH was "/usr/bin/basename" instead of
		"/usr/ucb/basename" or "/usr/xpg4/basename". This was caused
		by the fact that "/usr/bin/basename" interprets its second
		argument as a regular expression, not a string. This bug was
		fixed.

		A new shell-script "cadp_basename" was added, which addresses
		this issue by ensuring that "/usr/bin/basename" will not be
		invoked on Solaris. Consequently, all the CADP shell scripts
		have been modified to invoke "cadp_basename" instead of
		"basename" whenever needed.

		The "tst" shell-script has been enhanced to emit a warning
		if neither "/usr/ucb/basename" nor "/usr/xpg4/basename" are
		available on a Solaris machine.
-------------------------------------------------------------------------------
BUG FIX
Number:		1150
Date: 		Mon Oct 23 10:08:10 MEST 2006
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		com/tst

Nature:		The "tst" shell-script was modified to avoid an error on
		Solaris machines working with a non-English language (e.g.,
		French-speaking versions of Solaris).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1151
Date: 		Mon Oct 23 11:41:03 MEST 2006
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		INSTALLATION_2, com/tst, com/installator

Nature:		The installation directives have been simplified: it is no
		longer required to set the $LD_LIBRARY_PATH variable on
		Solaris machines (Sun's documentation even discourages using
		$LD_LIBRARY_PATH in production software, as this can result
		in an overall performance degradation).

		The checks performed by the "tst" shell-script regarding the
		setting of $LD_LIBRARY_PATH have been adapted accordingly.
		The "installator" shell-script was also modified.
-------------------------------------------------------------------------------
BUG FIX
Number:		1152
Date: 		Wed Oct 25 15:12:17 MEST 2006
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		com/upc, src/com/cadp_cc, src/com/cadp_indent,
		src/com/cadp_postscript, src/com/cadp_psbox, src/com/cadp_web

Nature:		A minor bug was fixed in several CADP shell-scripts (variable
		$PATH was set but not exported).
-------------------------------------------------------------------------------
BUG FIX
Number:		1153
Date: 		Thu Oct 26 14:46:49 MEST 2006
Report:		Reza Pulungan (Saarland University, Germany),
		Jan Friso Groote (Technical Univ. Eindhoven, The Netherlands)
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		com/tst

Nature:		The "tst" shell script was enhanced in four ways:

		- On Solaris, when $CADP_CC is not set and "/opt/SUNWspro/bin"
		  is not in the $PATH, "tst" no longer emits an error message
		  "cc" not found".

		- When "$CADP/com" and/or "$CADP/bin.*" are missing from the
		  $PATH, "tst" no longer emits a sequence of warnings of the
		  form:
		  > *** The tool ``bcg_draw'' is not searched in ``$CADP/com''
		  >     but in ``'' instead
		  >     You might have two versions of CADP installed
		  > ==> Reorder your ``$PATH'' variable to have ``$CADP/com''
		  >     first and remove all obsolete versions of CADP, if any

		- On Windows, "tst" now detects the case where "$CADP" contains
		  a Cygwin-specific mount point (such as "/cygdrive/c/...")
		  and emits a warning message, as CADP programs will not
		  understand Cygwin conventions because they are pure Win32
		  applications.

		- On Opteron machines running Linux, "tst" now emits a proper
		  warning message if the 32-bit developement library is not
		  installed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1154
Date: 		Thu Oct 26 16:12:22 MEST 2006
Author:		Frederic Lang (INRIA/VASY)
Files:		src/svl/standard

Nature:		The "standard" shell-script for SVL was modified to avoid a
		bug that occurs with the Solaris "test" command, which fails
		when executing the following command:
			A="(" ; if test "$A" = "("; then echo 0; fi
		Note that this problem does not occur on Linux.
-------------------------------------------------------------------------------
BUG FIX
Number:		1155
Date: 		Thu Oct 26 18:57:43 MEST 2006
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		com/rfl

Nature:		The "rfl" shell-script was modified so as to remove all "\r"
		characters that remained in license files generated on Windows.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1156
Date: 		Fri Oct 27 17:06:23 MEST 2006
Report:		Tomas Barros (Universidad Diego Portales, Santiago, Chile)
Authors:	Hubert Garavel, Frederic Lang, and Marie Vidal (INRIA/VASY)
Files:		bin.*/bcg_labels, man/*/bcg_labels.*,
		src/eucalyptus/eucalyptus.tcl

Nature:		Two new options "-parse" and "-unparse" have been added to
		BCG_LABELS. See the corresponding man page for details.
		The EUCALYPTUS graphical interface was enhanced so as to
		give access to these options.

		Additionally, a mistake was fixed in EUCALYPTUS: when clicking
		on "Disable parsing of BCG labels", TGV was invoked with
		"-parse" option instead of "-unparse". This issue was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1157
Date: 		Mon Oct 30 10:17:08 MET 2006
Report:		Juan Jose Sanchez Penas (University of Corunha, Spain)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		On computer screens with 1024x768 pixels only (such as 14''
		laptops screens), the "Reduce" window of EUCALYPTUS (for
		labelled transitions systems) was too high; thus, the "OK"
		button located at the window bottom could not be accessed.
		the contents of this window have been compacted so as to
		reduce its height.
-------------------------------------------------------------------------------
BUG FIX
Number:		1158
Date: 		Mon Oct 30 11:10:03 MET 2006
Report:		Radu Mateescu (INRIA/VASY)
Author:		Marie Vidal (INRIA/VASY)
Files:		./src/bcg_draw/bcg_draw_header.ps

Nature:		Using BCG_EDIT, there was a problem with arrow heads inclined
		at 45 degrees exactly: the arrow heads would disappear in a
		random way, from the screen and/or printed PostScript material.
		This issue (an incorrect test to decide whether two vertices
		overlap or not) was solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1159
Date: 		Mon Oct 30 12:36:34 MET 2006
Report:		David Champelovier (INRIA/VASY)
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		com/tst, com/upc, src/com/cadp_echo, src/svl/standard

Nature:		Under Solaris, the command "/bin/echo" has a different
		behaviour than "echo" on all other architectures supported
		by CADP: it does not understand the "-n" option (see items
		#433 and #435 above) and interprets octal characters such
		as '\015'. But its exists a Solaris command, "/usr/ucb/echo"
		with the desired behaviour.

		A new shell-script "cadp_echo" was added, which addresses
		this issue by ensuring that "/usr/ucb/echo" will used when
		needed. A few CADP shell scripts have been modified to invoke
		"cadp_echo" instead of "echo".

		The "tst" shell-script has been enhanced to emit a warning
		if "/usr/ucb/echo" is missing from a Solaris machine.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1160
Date: 		Thu Nov 16 19:18:00 MET 2006
Report:		Yaroslav Usenko (Technical Univ. of Eindhoven, The Netherlands)
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_postscript

Nature:		Support for the Evince PostScript viewer has been added to
		BCG_DRAW and BCG_EDIT.
-------------------------------------------------------------------------------
BUG FIX
Number:		1161
Date: 		Thu Nov 30 12:30:38 MET 2006
Author:		David Champelovier (INRIA/VASY)
Files:		incl/X_ACTION.h, incl/X_BIT.h, incl/X_BOOLEAN.h

Nature:		A minor bug was fixed in the include files that implement
		LOTOS sorts directly in C. The following macro-definitions
		   #define CAESAR_ADT_BITS_ACTION : 1
		   #define CAESAR_ADT_BITS_BIT : 1
		   #define CAESAR_ADT_BITS_BOOL : 1
		have been replaced with
		   #define CAESAR_ADT_BITS_ADT_ACTION : 1
		   #define CAESAR_ADT_BITS_ADT_BIT : 1
		   #define CAESAR_ADT_BITS_ADT_BOOL : 1
-------------------------------------------------------------------------------
BUG FIX
Number:		1162
Date: 		Thu Nov 30 12:41:58 MET 2006
Author:		David Champelovier (INRIA/VASY)
Files:		incl/X_ACTION.h, incl/X_BIT.h, incl/X_BOOLEAN.h

Nature:		The three following C types implementing external LOTOS sorts:
		   ADT_ACTION, ADT_BIT, and ADT_BOOL
		have been implemented as "unsigned char" instead of "char".
-------------------------------------------------------------------------------
BUG FIX
Number:		1163
Date: 		Thu Nov 30 12:52:52 MET 2006
Author:		David Champelovier (INRIA/VASY)
Files:		src/com/cadp_which

Nature:		Due to a bug in the "cadp_which" shell-script (the "macOS"
		architecture was incorrectly handled as "sun5" whereas it
		should be handled as "iX86"), the "tst" command would emit
		strange error messages if Ghostview was not installed:
		   $CADP/src/com/cadp_which: line 1: type: gs: not found
-------------------------------------------------------------------------------
BUG FIX
Number:		1164
Date: 		Thu Nov 30 13:08:31 MET 2006
Report:		Christophe Joubert (University of Malaga, Spain)
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_shell, com/tst

Nature:		On Linux systems for which the standard shell "/bin/sh" is a
		link to "dash" instead of "bash" (e.g., Linux Ubuntu Edgy 6.10
		or Linux Kubuntu Edgy 6.10), the Installator assistant would
		freeze on its first screen (the "Next" button not being
		clickable). This problem was solved.

		Additionally, the "tst" shell-script was modified to display
		the system shell (sh, bash, dash, etc.).
-------------------------------------------------------------------------------
BUG FIX
Number:		1165
Date: 		Thu Nov 30 16:20:14 MET 2006
Authors:	Radu Mateescu and Gwen Salaun (INRIA/VASY)
Files:		demos/demo_40/commerce_p2.mcl,
		demos/demo_40/negociation_p2.mcl

Nature:		Two mu-calculus formulas for demo_40 (Web service) have been
		corrected (previously, these formulas always evaluated to
		true).
-------------------------------------------------------------------------------
BUG FIX
Number:		1166
Date: 		Mon Dec 11 17:40:22 MET 2006
Author:		Radu Mateescu (INRIA/VASY)
Files:		demos/demo_24/co4.lotos

Nature:		A minor bug (extra ".lib" suffix in a "library" ... "endlib"
		directive) was fixed in file "co4.lotos".
-------------------------------------------------------------------------------
VERSION 2006    "Edinburgh"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1167
Date:		Wed Dec 20 11:51:13 MET 2006
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_postscript, src/com/cadp_psbox

Nature:		The "cadp_postscript" and "cadp_psbox" shell-scripts have been
		enhanced so as to search, on Mac OS X, the PostScript viewers
		(e.g., Ghostview or Gv) in other places (e.g., /opt/local/bin)
		than only in /usr/local/bin.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1168
Date:		Thu Jan 25 13:27:19 MET 2007
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		cadp_cygwin.com, com/tst

Nature:		For CADP running on Windows, the cadp_cygwin.com shell-script
		was updated to set $SHELLOPTS automatically in the cygwin.bat
		file. This fixes a problem with some CADP tools, such as SVL
		issuing error messages of the form:
		   -- svl 2.1 -- ...
		   : command not found
		   : No such file or directoryvl/standard
		   svl: intermediate files are kept for diagnostics
		   svl: run ``svl -sweep "demo"'' to erase

		This problem was caused by the newer versions of Bash (3.2.9-10
		and later) in Cygwin distributions installed after December 19
		2006, which breaks compatibility with earlier versions.
		
		The tst command has been updated and now detects this problem,
		reporting appropriate error messages.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1169
Date:		Tue Jan 30 17:06:11 MET 2007
Report: 	Marie Vidal (INRIA/VASY)
Author: 	David Champelovier (INRIA/VASY)
File:		com/installator

Nature: 	The size of the password field in the Installator window was
		slightly too small and has been increased.
-------------------------------------------------------------------------------
BUG FIX
Number:		1170
Date:		Tue Jan 30 17:20:11 MET 2007
Report:		Etienne Lantreibecq (STMicroelectronics) and Marie Vidal
		(INRIA/VASY)
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
File:		src/eucalyptus/eucalyptus.tcl

Nature:		EUCALYPTUS can now execute files that are in your current
		directory, even if the value of your $PATH environment variable
		does not contain the current directory or ".". Previously, if
		you clicked on a file in your current directory and selected
		Execute from the contextual menu, EUCALYPTUS 2.6 produced the
		following error message:
		   /bin/sh: cannot execute...
-------------------------------------------------------------------------------
BUG FIX
Number:		1171
Date:		Wed Jan 31 10:19:28 MET 2007
Author:		David Champelovier (INRIA/VASY)
File:		com/rfl

Nature:		Two minor corrections have been made to the RFL tool:

		- When requesting a license for a remote machine, the "scp"
		execution traces are no longer displayed on the local terminal.
		
		- RFL now runs cadp_lib on the first machine in the list of
		machines for which licenses are requested, rather than running
		it locally, because the machine running RFL is not necessarily
		the machine that requires a license.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1172
Date: 		Wed Jan 31 11:53:12 MET 2007
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c, man/*/exp.open.*

Nature:		EXP.OPEN has a new "prio" operator, which is used to define
		priorities between the labels of a network of communicating
		automata. The priority relation can be defined using regular
		expressions, similarly to label hiding, renaming, and cutting.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1173
Date: 		Wed Jan 31 14:28:30 MET 2007
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/evaluator.a, man/*/evaluator.*

Nature:		A new option "-tauconfluence" has been added to EVALUATOR. For
		LTSs containing many interleaving diamonds, and for mu-calculus
		formulas that are adequate with branching bisimulation, this
		option may significantly increase the execution speed (by one
		order of magnitude on some examples). See the corresponding
		manual page for details.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1174
Date:		Thu Feb  8 13:18:44 MET 2007
Report: 	Pedro Monteiro (Lisbon and INRIA HELIX)
Authors: 	David Champelovier and Hubert Garavel (INRIA/VASY)
File:		src/com/cadp_which

Nature:		For Linux distributions whose default shell interpreter /bin/sh
		does not support the "-p" option (e.g., Ubuntu 6.10 which uses
		/bin/dash instead of /bin/bash), the "cadp_which" shell-script
		would emit strange error messages:

		   Variable ``$CADP_CC'' is not set (default value is '-p: not
		   found /usr/bin/gcc is /usr/bin/gcc')
		   *** Can't find command ``-p: not found
		   /usr/bin/gcc is /usr/bin/gcc''
		   ==> Add directory containing ``-p: not found
		   /usr/bin/gcc is /usr/bin/gcc'' to your ``$PATH'' variable

		This problem has been solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1175
Date:		Thu Feb  8 15:08:53 MET 2007
Report:		David Champelovier (INRIA/VASY)
Authors:	David Champelovier, Hubert Garavel, and Frederic Lang
		(INRIA/VASY)
Files:		src/com/cadp_echo, src/svl/standard

Nature:		For Linux distributions (such as Ubunto 6.10) with a default
		shell /bin/sh linking to /bin/dash instead of /bin/bash, the
		renaming of labels in SVL did not work properly, as in:
		   ...
		   total rename "\([A-Z0-9]*\) \(.*\)" -> "\1 !ADDR1 \2" in
		   ...
		because the built-in "echo" commands of /bin/bash and /bin/dash
		interpret escape sequences differently. This problem has been
		solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1176
Date:		Wed Feb 14 11:07:26 MET 2007
Authors:	Hubert Garavel and Marie Vidal (INRIA/VASY)
Files:		src/linux, src/com/cadp_cc

Nature:		The src/linux directory, which contained patches for Linux
		machines with old versions of Glibc (see item #924 above) is
		no longer needed and has been removed. The "cadp_cc" shell-
		script has been simplified accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1177
Date:		Wed Feb 14 11:13:50 MET 2007
Authors:	Hubert Garavel and Marie Vidal (INRIA/VASY)
Files:		bin.win32/indent.exe, bin.win32/COPYRIGHT_INDENT,
		bin.win32/READ_ME, com/tst, src/com/cadp_indent

Nature:		The "indent.exe" command (C pretty-printer) is now provided by
		Cygwin. The "bin.win32/indent.exe" file of CADP is no longer
		needed and has therefore been removed. The "cadp_indent" and
		"tst" shell scripts have been modified accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1178
Date: 		Wed Feb 14 12:43:32 MET 2007
Report:		Gwen Salaun (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c, man/*/exp.open.*

Nature:		Until now, EXP.OPEN synchronization vectors were used to define
		the parallel composition of two graphs or more. They can now
		also be used with a single graph as operand, such as in the
		following expression :

			par
			    "A" -> "X",
			    "A" -> "Y",
			    "B" -> "B"
			in
			    "a.bcg"
			end par

		In this example, if "a.bcg" contains labels A, B, and C, then
		each transition labeled C is cut, each transition labeled B
		is kept unchanged, and each transition labeled A is duplicated
		into two transitions labeled X and Y respectively.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1179
Date: 		Wed Feb 14 12:45:13 MET 2007
Report:		Etienne Lantreibecq (STMicroelectronics) and Wendelin Serwe
		(INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		man/*/bisimulator.*

Nature:		The manual page of BISIMULATOR has been improved in order to
		complete the description of the "-diag" option. The meaning
		of the tau-transitions contained in the counterexamples
		generated by BISIMULATOR for weak equivalences is now explained
		precisely.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1180
Date: 		Wed Feb 14 12:54:30 MET 2007
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel

Nature:		When performing "node reduction", SVL synthesizes sets of
		labels to be hidden in intermediate graphs. In some cases,
		these sets could contain repetitions, such as in the following
		example :

		   "svl009_hidden_VAR.bcg" = hide all but "VAL_1", "EQL",
		   "VAL_17", "VAL_0", "EQL", "EQL" in "svl007_VAR.bcg"

		The duplicates were subsequently ignored so had no impact.
		This has now been fixed and a set no longer contains duplicate
		labels.
-------------------------------------------------------------------------------
BUG FIX
Number:		1181
Date:		Thu Feb 22 10:13:53 MET 2007
Report:		Wendelin Serwe (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/bisimulator.a

Nature:		A bug in BISIMULATOR has been fixed in the comparison modulo
		branching equivalence. In some cases, when the explicit LTS
		encoded as a BCG file was deterministic and tau-free (i.e., it
		did not contain any tau-transition), the comparison using the
		"-equal" or "-greater" options yielded TRUE instead of FALSE.
		This bug fix led to version 1.1 of BISIMULATOR.
-------------------------------------------------------------------------------
BUG FIX
Number:		1182
Date:		Fri Feb 23 15:06:26 MET 2007
Report:		Sylvain Robert (INRIA/VASY)
Author: 	Wendelin Serwe (INRIA/VASY)
File:		demos/demo_40/screenshots.pdf

Nature:		Two typographical errors have been corrected in the PDF file
		containing screen shots for demo 40.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1183
Date:		Fri Feb 23 15:58:44 MET 2007
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
File:		./HISTORY

Nature:		Various corrections and improvements to language in the
		HISTORY file.
-------------------------------------------------------------------------------
BUG FIX
Number:		1184
Date:		Fri Feb 23 16:38:20 MET 2007
Author:		Wendelin Serwe (INRIA/VASY)
Files:		demos/demo_19/gate_functions.c, demos/demo_19/cell
		
Nature:		In the source files of demo 19, various corrections have been
		made. A memory overflow problem in the instruction:
		   strcpy (S15, current_input);
		has been fixed; a new function, PARSE_ERROR_LIST() has been
		added; one unused function has been removed; code indentation
		has been improved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1185
Date:		Mon Feb 26 11:15:17 MET 2007
Authors:	Marie Vidal, Hubert Garavel, Damien Bergamini, Radu Mateescu,
		Frederic Lang (INRIA/VASY)	
Files:		(all)

Nature:		Work started in order to port CADP to new 32-bit platforms
		(including Linux 2.4.1 and Solaris 10) and to 64-bit
		platforms (namely Sparc servers running Solaris 10 in 64-bit
		mode, Intel Itanium processors running 64-bit Linux, and
		Intel EM64T or AMD64 processors running 64-bit Linux). This
		work will last approximately two years and will impact almost
		all files in the CADP distribution.
-------------------------------------------------------------------------------
BUG FIX
Number:		1186
Date: 		Tue Mar 13 12:23:43 MET 2007
Report:		Jerome Fereyre (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a

Nature:		A bug has been fixed in the algorithms A3 and A4 of the
		"caesar_solve" library. In some cases, algorithm A3 (resp. A4)
		did not properly detect that the equation block under
 		resolution was not disjunctive (resp. conjunctive). This
		caused an erroneous result for the resolution and a core dump
		during diagnostics generation.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1187
Date: 		Tue Mar 13 12:35:16 MET 2007
Report:		Jerome Fereyre (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a, man/*/caesar_solve_1.*, doc/*/Garavel-92-a.*

Nature:		The format of ".bes" files used by the "caesar_solve" library
		to represent boolean equation systems was improved in order to
		allow the blocks and the equations of the system to be numbered
		not necessarily in increasing order and not necessarily in a
		contiguous manner. The primitives CAESAR_READ_SOLVE_1() and
		CAESAR_WRITE_SOLVE_1() for reading and writing ".bes" files
		were updated accordingly. The manual page of "caesar_solve" was
		also updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1188
Date: 		Thu Mar 15 11:37:53 MET 2007
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a, man/*/caesar_solve_1.*, doc/*/Garavel-92-a.*

Nature:		The "caesar_solve" library has been improved in two ways:

		- A new procedure CAESAR_PURGE_BLOCK_SOLVE_1() has been added.
		  This procedure reinitializes the information associated with
		  an equation block of a boolean equation system, and in
		  particular empties the internal table associated with the
		  block. Invoked periodically, this procedure reduces memory
		  consumption for certain applications, such as tau-confluence
		  reduction.

		- The function CAESAR_PRINT_SOLVE_1() has been improved in
		  order to display global statistical information about the
		  resolution of a boolean equation system (number of equation
		  blocks, number of equation blocks solved, total number of
		  visited boolean variables and of explored variable
		  dependencies, etc.) in addition to the local information
		  concerning the resolution of individual equation blocks.

		The manual page of "caesar_solve" was updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1189
Date:		Wed Mar 28 12:17:12 MEST 2007	
Authors:	Hubert Garavel and Marie Vidal (INRIA/VASY)
Files:		./INSTALLATION_2, com/arch, com/tst

Nature:		A new environment variable, $CADP_BITS, which can be set to 32
		or 64, has been added. If CADP is running on a machine that
		supports both 32-bit and 64-bit programs and if the CADP
		binaries for both 32-bit and 64-bit processing are present on
		the machine, the value of $CADP_BITS will be used to select
 		which programs are used. If a system supports only 32-bit or
		only 64-bit programs, or if only one set of CADP binaries are
		present, it is not necesssary to set the $CADP_BITS environment
		variable.

		The "arch" shell script was modified to take the value of
		$CADP_BITS into account. The "tst" shell script has been
		modified to support 64-bit architectures, and to display and
		verify the value given to $CADP_BITS.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1190
Date:		Wed Mar 28 12:57:47 MEST 2007	
Authors:	Marie Vidal and Hubert Garavel (INRIA/VASY)	
Files:		./INSTALLATION_4

Nature:		Miscellaneous improvements were made to the documentation file
		INSTALLATION_4, including minor bug fixes, correction to $PATH
		environment variable ("/bin" or "/usr/bin" depending on the
		architecture), update of the screen-copy FTP logs, and support
		for 64-bit architectures.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1191
Date:		Wed Apr 4 15:17:27 CEST 2007
Author:		Marie Vidal and Hubert Garavel (INRIA/VASY)
Files: 		tcl-tk/*, src/monitor/distributor.tcl, src/ocis/ocis.tcl,
		bin.*/distributor.a, bin.*/ocis.a, src/com/install_clone

Nature:		The version of Tcl/Tk included in CADP has been upgraded from
		8.4.6 to 8.4.14. The version of Tix included in CADP has been
		upgraded from 8.2.0 to 8.4.2. The corresponding 64-bit binaries
		have been added.

		Because Tix is now a standard Tcl/Tk package (and no longer a
		separate executable), various simplifications have been made.
		The "tcl-tk/bin.*/tixwish" binaries and the "pkgIndex.tcl"
		files have been removed. The "tcl-tk/com/tixwish" shell script
		has been merged with the existing "tcl-tk/com/wish" shell
		script.

		All applications using Tix (namely the "distributor.a",
		"distributor.tcl", "ocis.a", and "ocis.tcl" files) and the
		"src/com/install_clone" shell script have been updated to
		use the new version of Tix.
-------------------------------------------------------------------------------
BUG FIX
Number:		1192
Date:		Tue Apr 10 09:12:48 CEST 2007
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_web

Nature:		When running the "tst" command on Windows using recent versions
		of Bash (which changed the interpretation of "!" characters in
		shell commands), an error message of the form:

		  $CADP/src/com/cadp_web: line 53: !/Microsoft: event not found

		was displayed. This problem (which was related to the support
		of old versions of Windows, namely Windows 95 and NT4) has
		been corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		1193
Date:		Tue Apr 10 14:47:05 CEST 2007
Author:		Wendelin Serwe (INRIA/VASY)
File:		bin.iX86/caesar

Nature:		With version 7.0 of CAESAR on Linux systems, the ".net" files
		generated using the "-network" option were not always the
		same. This is because random numbers were added incorrectly
		in variable names (for example X1.136083160.1[21] in place of
		X1.0.1[21]). This problem has been fixed, and the ".net" files
		are now identical on all architectures.
-------------------------------------------------------------------------------
BUG FIX
Number:		1194
Date:		Thu Apr 12 18:07:18 CEST 2007
Author:		Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar

Nature:		The "-gradual" option of CAESAR 7.0 was not working correctly.
		It prevented the statistical analysis of resets in certain
		parts of the network, therefore causing a performance
		degradation. This problem has been solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		1195
Date:		Thu Apr 12 18:43:21 CEST 2007
Author:		Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar

Nature:		In extremely rare cases, CAESAR 7.0 did not generate the same
		network on Linux systems as on Solaris systems. This problem
		has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1196
Date:		Thu Apr 12 18:43:21 CEST 2007
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		The algorithms for resetting "dead" variables in CAESAR 6.*
		and CAESAR 7.* have been encapsulated in a new optimization
		named V9, which is applied in the same way as the other
		optimizations. Consequently, optimization V9 can be applied
		several times if needed. Also, when option "-gradual" is
		selected, optimization V9 is applied recursively to each
		subnetwork, rather than to the whole network at the end. This
		may resets more dead variables, leading to smaller graphs.

		Notice that, contrary to other optimizations, V9 may increase
		the number of variables because of variable "duplication".
		This is normal, and does not increase the number of states.
		It is only visible to the user in the ".net" file, where the
		number of variables added is shown in lines of the form:
	          number of variables destroyed by V9 optimisation: -2 (-19 %)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1197
Date:		Mon Apr 16 10:52:23 CEST 2007
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
File:		bin.*/caesar, bin.*/caesar.old

Nature:		The network generation algorithm for the "hide" operator of
		LOTOS has been enhanced to generate simpler networks. This has
		improved the results as follows:
		
		- The networks generated by "caesar.old -gradual" are smaller
		  in some cases. For example, a graph was reduced from 199
		  states and 279 transitions to 29 states and 37 transitions,
		  which is a gain of 85%.
		
		- In some cases, the networks generated by "caesar -gradual"
		  have fewer items in reactions and more in actions. Certain
		  graphs are smaller. In one example the number of states
		  has been reduced from 199 to 29.
-------------------------------------------------------------------------------
BUG FIX
Number:		1198
Date:		Thu Apr 19 10:56:48 CEST 2007
Author:		Marie Vidal (INRIA/VASY)
File:		src/com/xeuca_ps

Nature:		The "xeuca_ps" shell script was modified to handle syntax
		changes in recent versions of Linux, because of which the
		"ps -x" command should now be written "ps x". This change
		avoids warnings of the form
		   Warning: bad syntax, perhaps a bogus '-'
-------------------------------------------------------------------------------
BUG FIX
Number:		1199
Date:		Thu Apr 19 11:11:17 CEST 2007
Author:		Marie Vidal (INRIA/VASY)
File:		src/com/cadp_mail

Nature:		On Linux systems, the "/usr/bin/fastmail" utility no longer
 		exists and has been replaced by "/bin/mail". Consequently,
		"cadp_mail" has been updated so that it calls "/bin/mail".
-------------------------------------------------------------------------------
BUG FIX
Number:		1200
Date:		Wed May  2 14:58:44 CEST 2007
Report:		Nathalie Lepy (INRIA/VASY)
Author:		David Champelovier (INRIA/VASY)
File:		src/com/xeuca_ps

Nature:		On Solaris systems, the output lines from "xeuca_ps" shell
		script were truncated and the filenames were not visible. This
		problem has been corrected by adding the "-ww" option when
		"xeuca_ps" calls the "ps" command on Solaris systems.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1201
Date:		Thu May 24 09:48:48 CEST 2007
Report:  	Sylvain Robert, Marie Vidal, David Champelovier (INRIA/VASY)
Authors:	Hubert Garavel, Frederic Lang, Radu Mateescu, Wendelin Serwe
		(INRIA/VASY)
Files:		bin.*/*, src/com/*.c

Nature:		The C source code of all CADP tools, as well as the C code
		generated dynamically by CADP tools, has been modified in
		order to replace each variable declaration of the form:
			static char xxx = "..."
		with
			char xxx = "..."
		This was done to be compatible with recent versions of Gcc in
		which "gcc -O2" removes such definitions if variable xxx is
		unused.
-------------------------------------------------------------------------------
BUG FIX
Number:		1202
Date: 		Thu May 24 12:13:45 CEST 2007
Report:		Marie Vidal (INRIA/VASY)
Author:		David Champelovier (INRIA/VASY)
Files:		src/com/cadp_mail

Nature:		Various updates have been made to the "cadp_mail" shell script
		for CADP on Linux and Mac OS X systems.
		
		- The script searches the $PATH to find the location of the
		  mail utility. This fixes the problem where "/bin/mail" does
		  not exist (for example on Linux Debian 4.0 systems).
		
		- The "-r" option of the "mail" command does not exist for
		  Linux Debian 4.0 or for Mac OS X versions 10.3 or 10.4. This
		  problem has been solved by setting the $REPLYTO environment
		  variable before calling the "mail" utility.
		
		- The CHECK_SENDMAIL() function was not working correctly on
		  Linux and Mac OS X versions 10.3 and 10.4 because the mail
		  server is not "sendmail". The problem has been solved by
		  detecting the mail server that is running. This also improves
		  the behaviour of the "-server" and "-from" options on Linux
		  systems.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1203
Date: 		Fri May 25 15:10:29 CEST 2007
Authors:	Marie Vidal and Hubert Garavel (INRIA/VASY)
Files:		bin.macOS/*

Nature:		The CADP binaries for PowerPC-based Apple machines have been
		upgraded so as to support Mac OS X version 10.4 and above. As
		a consequence, the stable version CADP 2006 "Edinburgh" will
		be the last release of CADP to support Mac OS X versions 10.2
		(which is no longer supported by Apple) and 10.3.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1204
Date:		Thu May 31 10:04:31 CEST 2007
Authors:	Hubert Garavel, David Champelovier, and Wendelin Serwe
		(INRIA/VASY)
Files:		bin.*/caesar.adt, incl/X_NATURAL.h

Nature:		Various changes have been made to the CAESAR.ADT compiler and
		its predefined library X_NATURAL in order to remove C compiler
		warnings:

		- The ADT_GCD() function in X_NATURAL.h has been updated to
		  remove a warning seen when compiling with "gcc -Wall".
		
		- Several changes have been made to the C code generated by
		  CAESAR.ADT to remove warnings seen compiling with "gcc -Wall"
		  or "gcc -Wextra".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1205
Date: 		Thu May 31 16:48:33 CEST 2007:		
Author:		Marie Vidal and Hubert Garavel (INRIA/VASY)
Files:		gc/bin.*/libgc.a

Nature:		Garbage collection has been improved, by updating the version
		of Boehm-Demers from 6.2 to 6.8 and adding support for the
		64-bit architectures.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1206
Date: 		Fri Jun  1 12:55:03 CEST 2007		
Author:		Radu Mateescu and Hubert Garavel (INRIA/VASY)
Files:		incl/bcg_iterator.h, incl/caesar_edge.h,
		src/open_caesar/executor.c, src/open_caesar/generator.c,
		src/open_caesar/generator2.c, src/open_caesar/reductor2.c,
		src/open_caesar/reductor3.c
		
Nature:		Certain iterators have been redefined so that compilation with
		"gcc -Wall" does not produce warnings of the form:
		   warning: left-hand operand of comma expression has no effect
		In consequence, the /* LINTED */ comments in the ".c" files in
		the "src" directory are no longer useful, so these have been
		suppressed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1207
Date:		Mon Jun  4 10:58:41 CEST 2007
Author:		Marie Vidal (INRIA/VASY)
Files:		bin.*/caesar.bdd

Nature:		The version of Cudd used in the CAESAR.BDD tool was updated
		from 2.4.0 to 2.4.1 and ported to 64-bit architectures.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1208
Date: 		Mon Jun  4 15:22:17 CEST 2007		
Author:		Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt, bin.*/caesar.old, bin.*/caesar

Nature:		A number of changes have been made to the C code produced
		by the CAESAR and CAESAR.ADT tools, to suppress some warning
		messages emitted by the GNU and Solaris C compilers.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1209
Date: 		Wed Jun 13 13:17:41 CEST 2007		
Author:		Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar.old, bin.*/caesar

Nature:		Further changes have been made to the C code generated by the
		CAESAR tool (with options "-aldebaran", "-e7old", and "-graph")
		so that this code does not cause warnings when it is compiled
		with "gcc -Wall" nor "gcc -Wall -O2".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1210
Date: 		Wed Jun 13 16:51:54 CEST 2007		
Authors:	Hubert Garavel, Wendelin Serwe, and Frederic Lang (INRIA/VASY)
Files:		src/open_caesar/executor.c, src/open_caesar/terminator.c,
		incl/caesar_graph.h

Nature:		Various updates have been made to various C files distributed
		within CADP code, to remove warning messages from "gcc -Wall".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1211
Date: 		Wed Jun 20 13:13:40 CEST 2007
Authors:	Pepijn Crouzen (Saarland University, Germany) and
		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_min, man/man/bcg_min.l

Nature:		A suboption, "-self", has been added to the "-rate" option of
		BCG_MIN. This suboption implements weak Markovian equivalence.
		Using "-rate -self" causes more reduction than "-rate" alone,
		for both "-strong" and "-branching". The manual page for
		BCG_MIN has been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1212
Date: 		Wed Jun 20 16:13:17 CEST 2007
Authors:	Pepijn Crouzen (Saarland University, Germany) and Hubert
		Garavel (INRIA/VASY)
Files:		bin.*/bcg_min

Nature:		Under certain rare circumstances, the BCG_MIN tool became
		caught in an infinite loop. This happened if "-rate" or "-prob"
		was selected and there were transitions present with a rate or
		probability of less than value of epsilon. This problem has
		been resolved, and the BCG_MIN tool now ignores such
		transitions and emits warnings of the form:

		  bcg_min: removing rate transition going out of state 477
		    because its rate is smaller than epsilon (i.e., 0.001) and
		    thus negligible (interpreted as zero)
		  bcg_min: in total, 204 negligible rate transitions have been
		    removed

		or:

		  bcg_min: removing prob transition going out of state 477
		    because its probability is smaller than epsilon (i.e.,
		    0.001) and thus negligible (interpreted as zero)
		  bcg_min: in total, 204 negligible prob transitions have been
		    removed
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1213
Date:		Wed Jul 11 13:04:11 CEST 2007
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		com/bcg_open, com/caesar.open, com/exp.open, com/seq.open

Nature:		A global environment variable, $OPEN_CAESAR_GRAPH has been
		added to the "*.open" shell-scripts. It is used by the
		EVALUATOR 4.* model checker.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1214
Date:		Wed Jul 11 19:56:24 CEST 2007
Authors:	Damien Thivolle, Radu Mateescu, and Hubert Garavel (INRIA/VASY)
Files:		incl/X_BOOLEAN.h, incl/X_CHARACTER.h, incl/X_INTEGER.h,
		incl/X_NATURAL.h, incl/X_REAL.h, incl/X_STRING.h

Nature:		The libraries of predefined types for LOTOS have been enriched
		with supplementary functions, which are available when the
		C preprocessor MCL_DATA_EXTENSION symbol is #defined. These
		functions are used by the EVALUATOR 4.* model checker. This
		change should be transparent to existing LOTOS applications.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1215
Date:		Thu Jul 12 09:41:49 CEST 2007
Authors:	Marie Vidal and Hubert Garavel (INRIA/VASY)
Files:		bin.mac86/*, com/*, src/com/*, ./INSTALLATION_MACOS
		./INSTALLATION_1, ./INSTALLATION_2, ./INSTALLATION_4

Nature:		Work was started to port the CADP toolbox to Mac OS X systems
		on Intel processors running in 32-bit mode. Binaries, shell
		scripts, and documentation files have been added or updated
		in consequence.
------------------------------------------------------------------------------
IMPROVEMENT
Number:		1216
Date:		Tue Jul 17 17:20:10 CEST 2007
Author:		Marie Vidal and Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_postscript, src/com/cadp_psbox,
		./INSTALLATION_2, ./INSTALLATION_MACOS

Nature:		The "cadp_postscript" and "cadp_psbox" shell scripts have
		been modified to detect correctly the PostScript interpreters,
		which are installed in "/sw/bin" on Mac OS X. The installation
		instructions have been updated to explain how to use Fink to
		install Ghostscript and Ghostview on Mac OS X.
-------------------------------------------------------------------------------
BUG FIX
Number:		1217
Date:		Thu Jul 19 11:28:28 CEST 2007
Report: 	Radu Mateescu (INRIA/VASY)
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
File:		bin.*/ocis.a

Nature:		In OCIS, when the user selected "Load scenario" and tried to
		replay a scenario stored as a BCG file, a window was sometimes
		displayed with the message
		   Error while loading scenario
		   ``determinator'' exited with status 256
		This problem was related to the improvement #1083 above. It has
		been fixed by replacing, within OCIS, a call to "determinator"
		with a call to "reductor -trace".
-------------------------------------------------------------------------------
BUG FIX
Number:		1218
Date:		Thu Jul 19 14:42:25 CEST 2007
Report:		David Champelovier (INRIA/VASY)	
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c

Nature:		The C code generated by EXP.OPEN had a bug, which produced an
		incorrect state space when the C code was compiled with "gcc"
		and the "-O2" optimisation option. This bug has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1219
Date: 		Tue Aug 28 15:17:59 CEST 2007
Report:		Larry Tan (University of Stirling, Scotland, UK)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel

Nature:		SVL issued a syntax error when the "verify" command was called
		using a particular method ("bfs", "dfs", etc.). For instance,
		this error happened during parsing of the following
		syntactically correct program:
		   verify "p.mcl" using bfs in "f.bcg"
		This bug has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1220
Date:		Mon Sep 10 17:13:25 CEST 2007
Report:		Sylvain Robert and Damien Thivolle (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a

Nature:		A bug has been fixed in the diagnostic generation associated
		with algorithms A3 and A4 of the "caesar_solve" library. For
		some particular cases of mu-calculus formulas (tautologies
		containing unused fixed point variables), the bug caused a
		segmentation fault during the generation of diagnostics by
		the EVALUATOR 3.6 model checker.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1221
Date:		Tue Sep 11 13:24:00 CEST 2007
Report:		Sylvain Robert and Damien Thivolle (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a

Nature:		The algorithms A3 and A4 of the "caesar_solve" library have
		been improved in order to detect cyclic dependencies between
		boolean variables earlier during the resolution. In some cases,
		this speeds up the resolution and also reduces the memory
		consumption and the size of the generated diagnostic.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1222
Date:		Tue Sep 18 12:54:08 CEST 2007
Authors:	Hubert Garavel, Wendelin Serwe, and Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a, src/com/cadp_zip, incl/caesar_standard.h,
		doc/*/Garavel-92-a.*, man/manl/caesar_standard.*

Nature:		Two new primitives named CAESAR_OPEN_COMPRESSED_FILE() and
		CAESAR_CLOSE_COMPRESSED_FILE() have been added to the
		"standard" library of OPEN/CAESAR. The documentation has been
		updated accordingly. A new shell script "cadp_zip", which helps
		to implement these primitives, has been added.
-------------------------------------------------------------------------------
BUG FIX
Number:		1223
Date: 		Thu Sep 20 14:46:45 CEST 2007
Report:		Pepijn Crouzen (Saarland University, Germany)
Author:		Frederic Lang (INRIA/VASY)
Files:		src/svl/standard

Nature:		When reducing a composition expression modulo stochastic
		branching minimization, the generation of the composition
		expression was done by invoking EXP.OPEN without the
		"-ratebranching" reduction option. This problem has been
		solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		1224
Date: 		Fri Sep 21 09:12:39 CEST 2007
Report:		Olivier Ponsini (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		src/svl/standard

Nature:		In the case of on-the-fly reduction of a LOTOS process (e.g.,
		tau-confluence reduction, partial reduction, etc.), SVL stopped
		with an error because quotes were missing around the process
		instantiation that followed the "-root" option of CAESAR.OPEN.
		This problem has been solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		1225
Date:		Thu Sep 27 12:43:05 CEST 2007
Report: 	Etienne Lantreibecq (STMicroelectronics),
		Pepijn Crouzen (Saarland University, Germany)
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG.a, bin.*/bcg_*

Nature:		There was a bug in BCG that resulted in inconsistent and
		non-deterministic results from some tools (including the
		BISIMULATOR and "bcg_info -labels") on fast, recent machines.
		The problem occurred when a BCG file "xxx.bcg" file was
		regenerated in less than one second and, thus, had a timestamp
		identical to the timestamp of an existing dynamic library
		("xxx@1.o" file) that had been generated for a previous
		version of "xxx.bcg". In such case, the dynamic library was
		not regenerated for the new version of "xxx.bcg" although it
		was obsolete. This problem has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1226
Date: 		Thu Sep 27 13:44:53 CEST 2007
Author:		Frederic Lang (INRIA/VASY)
Files:		src/svl/standard

Nature:		A new shell variable $BCG_OPTIONS has been defined in SVL.
		This variable is used to set general BCG options that are
		passed to all BCG tools.
-------------------------------------------------------------------------------
BUG FIX
Number:		1227
Date:		Thu Sep 27 17:05:12 CEST 2007
Report: 	Pepijn Crouzen (Saarland University, Germany)
Author: 	Pepijn Crouzen (Saarland University, Germany)
Files:		bin.*/bcg_min

Nature:		A bug has been fixed in the stochastic version of BCG_MIN. In
		very rare situations, the minimization was wrong, and this has
		now been corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		1228
Date: 		Fri Sep 28 16:45:09 CEST 2007
Report:		Sandro Spina (University of Malta, Malta)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c

Nature:		Composing graphs with EXP.OPEN, using a set of synchronization
		vectors that contain several vectors with same left-hand side
		but different right-hand sides could cause a segmentation
		fault. This problem has been solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1229
Date:		Mon Oct  1 17:15:49 CEST 2007
Report:		Marie Vidal (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_*, incl/bcg_io_types.h, man/*/bcg_read.*

Nature:		Type definitions in the BCG APIs have been simplified:

		- There were two identical types: bcg_type_label_number and
		  BCG_TYPE_LABEL_NUMBER. The former is now deprecated and
		  should no longer be used.
	
		- There were two similar types: bcg_type_state_number (which
		  was an "int" type) and BCG_TYPE_STATE_NUMBER (which was an
		  "unsigned int" type). The former is now deprecated and
		  should no longer be used.

		The BCG APIs and the "bcg_read" manual page have been updated
		accordingly. In particular, the following functions have been
		modified:
		- BCG_IO_WRITE_BCG_BEGIN(): 2nd argument becomes unsigned
		- BCG_IO_WRITE_BCG_EDGE(): 1st and 3rd arguments now unsigned
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1230
Date:		Thu Oct  4 13:09:31 CEST 2007
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old,
		incl/caesar_kernel.h, incl/caesar_standard.h,
		man/*/caesar_standard.*, doc/*/Garavel-92-a.*
		src/open_caesar/declarator.c, src/open_caesar/executor.c,
		src/open_caesar/predictor.c, src/open_caesar/simulator.i,
		src/open_caesar/simulator.c, src/open_caesar/terminator.c

Nature:		Work has been undertaken to port the Open/Caesar APIs to
		64-bit architectures. The CAESAR_TYPE_NATURAL type was
		changed from "unsigned int" to "unsigned long" and the
		CAESAR_TYPE_INTEGER type was changed from "int" to "long".

		The documentation, the Open/Caesar tools provided in source
		code form, as well as the C code generated by Caesar have
		been upgraded accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1231
Date: 		Thu Oct  4 14:38:49 CEST 2007
Report:		Holger Hermanns (Saarland University, Germany)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c, man/*/exp.open.*

Nature:		The "prio" operator of EXP.OPEN has been generalized in two
		ways:

		- While previously restricted to visible transitions, priority
		  rules now also allow priorities on hidden transitions.

		- The syntax of priority rules has been extended: Instead of a
		  single chain L1 > ... > Ln of regular expression sets, a
		  priority rule can now be defined as a set of such chains.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1232
Date: 		Tue Oct 16 14:18:02 CEST 2007
Report:		David Champelovier and Sylvain Robert (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		demos/demo_04/demo.svl, demos/demo_24/demos.svl

Nature:		Demos 04 and 24 have been updated to use Aldebaran 7.0
		instead of Aldebaran 6.6. For this reason, these demos now
		use branching reduction in place of observational reduction,
		which leads to identical results, except on one intermediate
		LTS ("co4-5-1_observational.bcg") whose size increases from
		3316 states and 7871 transitions to 3316 states and 7968
		transitions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1233
Date: 		Thu Oct 18 10:10:25 CEST 2007
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		src/svl/standard, man/*/svl.*

Nature:		As a consequence of item #1232 above, when observational
		reduction is explicitly requested, SVL automatically replaces
		it with branching reduction and issues a warning.
-------------------------------------------------------------------------------
BUG FIX
Number:		1234
Date: 		Wed Oct 24 16:05:23 CEST 2007
Report:		Frederic Lang (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/bisimulator.a

Nature:		The BISIMULATOR rejected comparisons of certain graphs, with
		an error message of the form:
		   bisimulator: boolean equation system not conjunctive

		This issue occurred if strong bisimulation was used and the
		BCG file given to Bisimulator was nondeterministic and its
		initial state had a number different from zero. This problem
		has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1235
Date:		Thu Oct 25 13:13:00 CEST 2007
Report: 	Sylvain Robert (INRIA/VASY)
Author: 	David Champelovier (INRIA/VASY)
Files:		com/tst, ./INSTALLATION_MACOS

Nature:		The "tst" shell script now checks for the presence of Gnuplot,
		which is required to run the full demo examples 30, 31, and
		39. The INSTALLATION_MACOS file has been updated to include
		instructions for installing Gnuplot on a Mac system.
-------------------------------------------------------------------------------
BUG FIX
Number:		1236
Date: 		Thu Oct 25 13:27:06 CEST 2007
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a

Nature:		A bug in the CAESAR_READ_SOLVE_1() primitive of the
		"caesar_solve_1" library caused a segmentation fault on
		Linux machines when the textual BES being read contained
		occurrences of boolean variables for which there was no
		defining equation in the BES. This bug has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1237
Date:		Mon Oct 29 14:53:24 CET 2007
Report: 	Li Su (University of Kent, UK) and Larry Tan (University of
		Stirling, Scotland, UK)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		In some cases, the C code generated by CAESAR would not
		compile properly because of declaration errors:
		    error: 'CAESAR_REGISTER_C4_1_4' undeclared (...)
		    error: 'CAESAR_REGISTER_C3_1_4' undeclared (...)
		This issue was solved by applying optimization V1 iteratively
		after resetting the dead variables (i.e., after applying
		optimization V9). This may remove more register variables
		and, possibly, more places, transitions, and units as well.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1238
Date:		Mon Oct 29 15:34:16 CET 2007
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.old, bin.*/caesar

Nature:		The C code produced by CAESAR with the "-simulator -graph"
		options has been improved to remove warning messages when it
		is compiled with GCC. Warning messages that were previously
		displayed when there were no labels have also been removed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1239
Date: 		Tue Oct 30 12:51:40 CET 2007
Authors:	Hubert Garavel, Frederic Lang, Radu Mateescu, and
		Wendelin Serwe (INRIA/VASY)
Files:		doc/dvi, doc/READ_ME.txt,
		doc/*/Garavel-Lang-Mateescu-Serwe-07.*,
		doc/*/Salaun-Serwe-Thonnart-Vivet-07.*

Nature:		Two new papers have been added to the CADP distribution:

		- Garavel-Lang-Mateescu-Serwe-07 describes the enhancements and
		  new tools brought to CADP 2006 "Edinburgh".
		
		- Salaun-Serwe-Thonnart-Vivet-07 deals with the compositional
		verification using CADP for an asynchronous network-on-chip.

		Also, the "doc/dvi" directory has been removed because the
		DVI format is no longer widely used.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1240
Date: 		Fri Nov  2 15:04:16 CET 2007
Author:		Radu Mateescu and Hubert Garavel (INRIA/VASY)
Files:		bin.*/bisimulator.a, bin.*/evaluator.a,
		man/*/bisimulator.*, man/*/evaluator.*

Nature:		The tools BISIMULATOR and EVALUATOR have been improved such
		that the boolean equation systems produced using the "-bes"
		option can now be compressed according to various formats
		indicated by the appropriate extension (".Z", ".gz", ".bz2",
		etc.). Previously, only the extension ".gz" was accepted. This
		feature was implemented using the CAESAR_OPEN_COMPRESSED_FILE()
		and CAESAR_CLOSE_COMPRESSED_FILE() primitives recently added
		to the "caesar_standard" library of OPEN/CAESAR.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1241
Date: 		Fri Nov  2 13:00:08 CET 2007
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/bes_solve, man/*/bes_solve.*

Nature:		A new tool named BES_SOLVE has been added to the CADP toolbox.
		This tool solves (on the fly) boolean equation systems, which
		are either given in textual format (".bes" file) or randomly
		generated according to parameters given in a configuration
		file (".rbc" file). See the manual page for details.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1242
Date:		Mon Nov  5 10:54:24 CET 2007
Author:		Wendelin Serwe (INRIA/VASY)
File:		lib/Y_LIST.lib

Nature:		An example of the list data type specified in LOTOS has been
		added to this library.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1243
Date:		Mon Nov  5 18:55:43 CET 2007
Authors:	Hubert Garavel and Yves Guerte (INRIA/VASY)
Files:		incl/X_NATURAL.h, incl/X_INTEGER.h

Nature:		The printing functions for natural and integer data types have
		been made portable to 64-bit machines.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1244
Date:		Wed Nov  7 16:25:21 CET 2007
Report:		Solofo Ramangalahy (Bull)
Authors:	David Champelovier and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		Various modifications have been made to the C code generated
		by CAESAR.ADT for singleton types, to prevent warning messages
		of the form:
		   "warning: unused parameter ..."
		   "warning: unused variable ..."
		from being displayed by "gcc -Wall -Wextra" and by "lint".

		From now on, by setting the environment variable $CADP_CC to
		"gcc -Wall -Wextra", users can obtain pertinent warnings
		about their LOTOS code (for instance, LOTOS operations that
		do not use certain of their arguments) or about their own C
		code that is provided in the ".f" and/or ".t" files. This is
		helpful for checking algebraic equations and manually written
		C code. The C code generated by CAESAR.ADT itself should no
		longer raise warnings.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1245
Date:		Sat Nov 24 16:45:33 CET 2007
Authors:	Nicolas Coste (STMicroelectronics), Hubert Garavel
		(INRIA/VASY), Holger Hermanns (Saarland University and INRIA),
		Richard Hersemeule (STMicroelectronics), Radu Mateescu
		(INRIA/VASY), Pascal Poizat (INRIA/ARLES), Gwen Salaun
		(University of Malaga), Yvain Thonnart (CEA/Leti), and
		Meriem Zidouni (Bull)
Files:		doc/READ_ME.txt, doc/*/Coste-Garavel-Hermanns-et-al-08.html,
		doc/*/Garavel-07.*, doc/*/Mateescu-Poizat-Salaun-07.*

Nature:		Three new papers have been added to the CADP distribution:

		- Coste-Garavel-Hermanns-et-al-08.html: Validation of
		  Multiprocessor Multithreaded Architectures

      		- Garavel-07: Reflections on the Future of Concurrency Theory
		  in General and Process Calculi in Particular

		- Mateescu-Poizat-Salaun-07: Behavioral Adaptation of
		  Component Compositions based on Process Algebra Encodings
-------------------------------------------------------------------------------
BUG FIX
Number:		1246
Date:		Tue Jan  8 08:53:18 CET 2008
Report:		Christophe Joubert (University of Valencia, Spain)
Author:		David Champelovier (INRIA/VASY)
Files:		com/bcg_draw, src/com/cadp_postscript

Nature:		If the environment variable $CADP_PS_VIEWER was not correctly
		defined and the $PATH environment variable did not contain the
		location of "ghostview" or "gsview32.exe", BCG_DRAW could not
		start a PostScript viewer, and exited silently with no error or
		warning message. This problem has been fixed: if BCG_DRAW
		cannot find a PostScript viewer, it issues the following error
		message:

		  .../cadp_postscript: ...: not found
		  bcg_draw: unable to display the PostScript drawing of the
		     BCG graph
		  bcg_draw: run the ``tst'' command and check the setting of
		     $CADP_PS_VIEWER
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1247
Date:		Thu Jan 10 18:44:58 CET 2008
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		demos/demo_38/BIT_VECTORS.lib,
		demos/demo_38/S_BOX_FUNCTIONS.lib

Nature:		The LOTOS code for data types of demo_38 has been simplified
		to avoid warnings when compiling with "gcc -Wall -Wextra".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1248
Date:		Thu Jan 17 14:42:13 CET 2008
Authors:	Wendelin Serwe (INRIA/VASY)
Files:		demos/demo_17/demo.svl

Nature:		Demo 17 has been updated to use "exhibitor" in place of
		"terminator" to search for deadlocks in tests 18 and 19.
		This shortens the sequence of diagnostics leading to deadlock
		states.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1249
Date:		Thu Jan 17 16:44:56 CET 2008
Report:		Christophe Joubert (University of Valencia, Spain)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libcaesar_plug.a

Nature:		A "libcaesar_plug.a" library has been added to the CADP
		distribution. This library acts as a complement to the
		OPEN/CAESAR library "libcaesar.a" to solve undefined
		references during link edit.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1250
Date:		Fri Jan 18 09:04:44 CET 2008
Report:		Axel Belinfante (University of Twente, The Netherlands)
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		Deep modifications of CAESAR.ADT have been made to allow
		dynamic data types (such as lists, trees, etc.) to be
		represented "canonically", meaning that each term computed
		is stored in a hash-table and represented by its index in
		this hash table (thus, each term is stored in memory only
		once). In the history of CADP, first experiments with this
		idea have been done in Mihaela Sighireanu's MSc thesis
		(1995) and have been implemented in Traian 2.3 (2003).

		The advantages are two-fold: (1) memory consumption can be
		significantly reduced, especially if many identical terms
		have to be constructed, and (2) the CPU overhead required for
		insertion and lookup in hash tables is usually compensated
		by the gain in comparing terms, because only indexes have
		to be compared (it is no longer necessary to perform "deep"
		structural comparison of terms).

		A key advantage of the CAESAR.ADT implementation is that
		the user can decide whether each type will be implemented
		in a hash table or not (by default, and for backward
		compatibility reasons, no type will be stored in a hash
		table unless specifically requested by the user). Moreover,
		different types have different hash tables, meaning that
		the hash table size and the number of bits for indexes can
		be tuned for each type independently.

		The "caesar_table_1" library of OPEN/CAESAR is used to handle
		these hash tables (rather than implementing a totally new
		data structure). As a consequence, an ".h" file generated
		by CAESAR.ADT must now, if it uses tables, be linked against
		the OPEN/CAESAR library "libcaesar.a", and possibly the
		complement library "libcaesar_plug.a".

		To force a LOTOS sort S, which is implemented by a C type T,
		to be implemented with a hash table, the user must define
		the CAESAR_ADT_HASH_T macro (see item #623 above) in the ".t"
		file. The semantics of CAESAR_ADT_HASH_T has been extended to
		values greater than 1 or less than 0 for storage of data in
		canonical forms. The conventions are the following:

		- If CAESAR_ADT_HASH_T is given an integer value N > 1, then
		  S will be implemented in a hash table of maximal size N.
		  If the limit of N is exceeded, the generated C code will
		  stop with an error message and a raise(15) signal.

		- If CAESAR_ADT_HASH_T is given an integer value N < 0, then
		  S will be implemented in a hash table of maximal size 2^(-N)
		  so that indexes occupy (-N) bits each.

		Besides the maximal number of elements in the table, which is
		specified using the CAESAR_ADT_HASH_T macro, the user can also
		specify the number of hash entries in the hash table (i.e.,
		the CAESAR_HASH_SIZE parameter of CAESAR_CREATE_TABLE_1()).
		By default, the number of hash entries is equal to the number
		of elements. The user can decrease the number of hash entries
		by specifying an average size for collision lists in the ".t"
		file. This can be done either globally (for all types) by
		specifying:
			#define CAESAR_ADT_COLLISIONS n
		or for a particular type T:
			#define CAESAR_ADT_COLLISIONS_T n
		where n is a natural number such that n >= 1. Then, the number
		of hash entries is the number of elements divided by n. When
		specified, the value given to CAESAR_ADT_COLLISIONS_T overrides
		(for the type T) the value given to CAESAR_ADT_COLLISIONS, if
		any, or the default value of 1 given to CAESAR_ADT_COLLISIONS.

		The user can also provide "overflow" functions to be invoked
		when the table is full (i.e., the CAESAR_OVERFLOW parameter of
		CAESAR_CREATE_TABLE_1()). This is done by defining, in the
		".t" file, a macro of the form:
			#define CAESAR_ADT_OVERFLOW_T f
		where f is a void function having one single parameter of type
		CAESAR_TYPE_TABLE_1. This function should not call exit(), but
		it can call raise(15) if needed. If the user does not define
		this macro, CAESAR.ADT generates it automatically.

		By symmetry with the CAESAR_ADT_INIT() function to be invoked
		during the initialization, CAESAR.ADT now generates a new
		function CAESAR_ADT_TERM(), which can be invoked optionally
		by the user. This function takes a single parameter F of
		type (FILE *) and returns void. If F is not NULL, the call to
		CAESAR_ADT_TERM() will print to file F the contents of all
		tables allocated to store data type values (provided that the
		formats for printing these tables are defined - see below).

		Whatever the value of F, CAESAR_ADT_TERM() will then delete
		all the tables by calling CAESAR_DELETE_TABLE_1().

		The format in which the table for a type T will be displayed
		can be specified by defining in the ".t" file a macro of the
		form:
			#define CAESAR_ADT_FORMAT_T m
		where m is a format number that follows the conventions of
		the CAESAR_PRINT_TABLE_1() function. m must be in the range
		0 to CAESAR_MAX_FORMAT_TABLE_1(), otherwise the table is not
		displayed. Note that formats 1 and 2 can be verbose if the
		table is large or contains large terms. If CAESAR_ADT_FORMAT_T
		is not defined, but the macro CAESAR_ADT_FORMAT is defined,
		then for any type T, CAESAR_ADT_FORMAT_T will be defined as
		CAESAR_ADT_FORMAT. If, finally, for some type T, neither
		CAESAR_ADT_FORMAT_T nor CAESAR_ADT_FORMAT is defined, then
		the table storing the values of type T will not be displayed,
		neither in the case of overflow nor when CAESAR_ADT_TERM() is
		executed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1251
Date:		Mon Jan 21 13:10:41 CET 2008
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		Various limitations have been removed from CAESAR.ADT:

		- Enumerations of more than 65536 values are now correctly
		  handled.
		
		- Unions of more than 65536 constructors can now be used.
		
		- By default, natural numbers were previously in the range
		  0..255 (or 0..254 in some cases). The user can now define,
		  for each sort S implemented by a C type T, the maximum value
		  of T by defining, in the ".t" file, the following macro:
		  	#define CAESAR_ADT_HASH_T ...
-------------------------------------------------------------------------------
BUG FIX
Number:		1252
Date:		Wed Jan 23 15:21:02 CET 2008
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		In some cases, CAESAR.ADT did not calculate accurately the
		alignment of certain types (notably, tuples and ordinary
		types). Specifically, it did not distinguish between a pointer
		type and a "struct" type. The computation of alignments has
		been made more precise, possibly leading to more compact data
		structures, especially when there are "struct" types nested
		within "struct" types.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1253
Date:		Wed Jan 26 10:27:34 CET 2008
Authors:	Hubert Garavel and David Champelovier (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		A warning is now displayed by CAESAR_ADT_INIT() if the machine
		that executes the ".h" file has a different (and incompatible)
		architecture than the machine used to generate the ".h" file
		by running CAESAR.ADT.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1254
Date:		Wed Jan 26 16:12:07 CET 2008
Authors:	Gwen Salaun (INRIA/VASY), Jeff Kramer (Imperial College, UK),
		Frederic Lang (INRIA/VASY), Jeff Magee (Imperial College, UK)
Files:		doc/READ_ME.txt, doc/*/Salaun-Kramer-Lang-Magee-07.*

Nature:		A new paper has been added to the CADP distribution:

		- Salaun-Kramer-Lang-Magee-07: Translating FSP into LOTOS and
		  Networks of Automata
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1255
Date:		Thu Jan 27 11:29:38 CET 2008
Authors:	Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		Additional verification has been implemented to check, for
		each LOTOS sort S, the correct usage of the CAESAR_ADT_HASH_S
		macro that can be defined in the ".t" file. The rules are
		the following:

		- If S is an external sort, or a singleton sort, or an
		  enumeration, the CAESAR_ADT_HASH_S macro should be either
		  undefined or defined to be equal to 0. Giving a non-zero
		  value will cause a warning and this value will be ignored.
		  [more recently, this rule has been relaxed, for external
		  sorts only: see item #1498 below].

		- If S is a natural sort, the CAESAR_ADT_HASH_S macro should
		  be either undefined or defined to be different from 0.
		  A negative value N<0 will specify that numbers of sort S
		  are coded on 2^(-N) bits; CAESAR.ADT will check that N is
		  not too small to fit compiler conventions for implementing
		  numbers. A positive value N>0 will specify that numbers of
		  sort S are in the range 0..N-1; CAESAR.ADT will check that
		  N is not too large. Giving a zero value will cause a
		  warning and this value will be ignored.

		- If S is a tuple sort or an ordinary sort, then the macro
		  CAESAR_ADT_HASH_S can be either undefined or given any
		  integer value. A negative value N<0 or a positive value
		  N>1 will force values of sort S to be stored in a hash
		  table (see item #1250 above). A value N=1 will force
		  values of sort S to be represented as pointers (see item
		  #623 above). A value N=0 will prevent values of sort S
		  from being represented as pointer types and being stored
		  in a hash table; however, a fatal error will be reported
		  if a cyclic dependency is found in type definitions.
		  Finally, if the CAESAR_ADT_HASH_S macro is undefined,
		  CAESAR.ADT will automatically choose the most appropriate
		  implementation corresponding to either N=0 or N=1.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1256
Date: 		Mon Feb 18 18:21:25 CET 2008
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a, incl/caesar_solve_1.h,
		man/*/caesar_solve_1.*, doc/*/Garavel-92-a.*

Nature:		Two new on-the-fly resolution algorithms, named A6 and A7,
		have been added to the "caesar_solve" boolean solver library
		of OPEN/CAESAR. Similar to algorithm A1 already present
		in the library, algorithms A6 and A7 are based upon a
		breadth-first search of the dependency graph between boolean
		variables. However, instead of solving general equation blocks
		(containing any combinations of disjunctions and conjunctions
		in the right hand sides of the equations), algorithm A6 is
		specialized for solving disjunctive minimal fixed point
		equation blocks and algorithm A7 is specialized for solving
		conjunctive maximal fixed point equation blocks, in the case
		when a single invocation of the algorithm is requested on the
		block.

		These cases of resolution are frequently encountered when
		encoding verification problems in terms of boolean equation
		systems. Equivalence checking leads to boolean systems
		containing a single conjunctive maximal fixed point equation
		block when one LTS is deterministic (for strong equivalence)
		and tau-free (for weak equivalences), therefore enabling the
		use of algorithm A7. Model checking leads to boolean systems
		containing a single disjunctive minimal fixed point equation
		block (for liveness properties expressing potential
		reachability) and to boolean systems containing a single
		conjunctive maximal fixed point equation block (for safety
		properties), which can be solved using algorithms A6 and A7,
		respectively.

		Algorithms A6 and A7 are optimized to consume less memory than
		algorithm A1, by storing only boolean variables and not the
		dependencies between them. When encoding equivalence checking
		and model checking problems, this amounts to storing only the
		states of the LTSs involved and not their transitions.
		Therefore, whenever they can be applied, algorithms A6 and A7
		combine the advantages of algorithm A1 (small-depth
		diagnostics) and of algorithms A3 and A4 (low memory
		consumption). These algorithms are automatically selected by
		the BISIMULATOR and EVALUATOR tools whenever appropriate, and
		they lead in practice to memory savings of about 30% whilst
		keeping the same execution time.

		To handle the usage of algorithms A6 and A7, the interface of
		"caesar_solve" was enhanced by adding two new error codes to
		the enumerated type CAESAR_TYPE_ERROR_SOLVE_1:

		- CAESAR_MINIMAL_FIXED_POINT_BLOCK_SOLVE_1 indicates that the
		  current block denotes a minimal fixed point, whereas at the
		  creation of the boolean equation system the resolution
		  algorithm A7, dedicated to maximal fixed point blocks, was
		  specified for the block.

		- CAESAR_MAXIMAL_FIXED_POINT_BLOCK_SOLVE_1 indicates that the
		  current block denotes a maximal fixed point, whereas at the
		  creation of the boolean equation system the resolution
		  algorithm A6, dedicated to minimal fixed point blocks, was
		  specified for the block.

		The enhancements of "caesar_solve" with algorithms A6 and
		A7 and the new error codes are backwards-compatible: the
		applications developed using previous versions of the
		"caesar_solve" library will run without any change with the
		new version of the library.

		The manual page of "caesar_solve" has been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1257
Date: 		Mon Feb 18 18:28:01 CET 2008
Report:		Jerome Fereyre (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a

Nature:		The CAESAR_READ_SOLVE_1() function of the "caesar_solve" could
		not read a ".bes" file if the indexes of the equation blocks
		were not increasing or contained gaps in the numbering. This
		problem has been fixed and such ".bes" files are now read and
		resolved correctly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1258
Date:		Fri Feb 22 11:30:17 CET 2008
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)
Files:		bin.*/distributor.a, bin.*/bcg_merge.a

Nature:		The code of the caesar_network_1 communication library used in
		the Distributor and Bcg_Merge tools has been enhanced. It has
		been ported to 64-bit architectures, all the warnings have
		been removed, and several potential bugs that could occur on
		Windows have been identified and repaired.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1259
Date: 		Fri Feb 22 19:58:51 CET 2008
Report:		Nathalie Lepy (INRIA/VASY) and Tian Zhang (INRIA Atlas and
		University of Nantes)
Author:		Hubert Garavel (INRIA/VASY)
Files:		./INSTALLATION_WINDOWS

Nature:		The CADP installer for Windows systems has been updated:

		- It now uses Cygwin 1.5.25-7 (December 2007) and version
		  2.573.2.2 of the Cygwin Net Release Setup Program.

		- The version of GhostScript has been updated from 8.14 to
		  8.61, and the version of Gsview has been updated from 4.6
		  to 4.9.

		- In the documentation, broken URLs have been corrected and
		  information about lowering the firewall has been provided.
		  The information about executing the "cadp_cygwin.com" shell
		  script has been updated, and an instruction to close all
		  Cygwin windows after running "cadp_cygwin.com" has been
		  added.
-------------------------------------------------------------------------------
BUG FIX
Number:		1260
Date: 		Wed Feb 27 20:19:20 CET 2008
Author:		Hubert Garavel (INRIA/VASY)
Files:		./INSTALLATION_2

Nature:		The documentation for installing CADP on Windows was further
		updated. Variable settings should no longer be stored in the
		"~/.profile" file, which has no effect on "bash" as the latest
		versions of Cygwin create a "~/.bash_profile" file, which has
		higher priority than "~/.profile". The CADP documentation now
		states that variable definitions should now be stored in
		"~/.bash_profile" rather than "~/.profile".
-------------------------------------------------------------------------------
BUG FIX
Number:		1261
Date: 		Wed Feb 27 20:50:26 CET 2008
Author:		Hubert Garavel (INRIA/VASY)
Files:		./com/installator, ./src/installator/installator.tcl

Nature:		On a 32-bit Windows machine, CADP was installed by default in
		the folder "C:/cygsetup/cadp". However, "C:/cygsetup" is a
		temporary folder liable to be deleted. The default location
		for installing CADP has therefore been changed to "C:/cadp".
-------------------------------------------------------------------------------
BUG FIX
Number:		1262
Date: 		Fri Feb 29 14:50:13 CET 2008
Author:		Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/libcaesar.a

Nature:		The CAESAR_TABLE_1() function has been updated to improve
		handling of possible overflow situations when creating a new
		page in a table. A segmentation fault that occurred if the
		first page contained only one very large item has been fixed.
		The CAESAR_CREATE_TABLE_1() function now returns NULL if items
		to be stored in the table are too large.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1263
Date:		Fri Feb 29 18:21:36 CET 2008
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/tst

Nature:		The "Tst" shell script was ported to Windows Vista and modified
		to avoid a request for confirmation when deleting its temporary
		files.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1264
Date: 		Mon Mar  3 12:28:51 CET 2008
Author:		Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/libcaesar.a, doc/*/Garavel-92-a.*

Nature:		In the CAESAR_CREATE_TABLE_1() primitive of the caesar_table_1
		libaray, the value of CAESAR_HASH_SIZE is now automatically
		reduced if it exceeds either the value of CAESAR_LIMIT_SIZE
		(i.e., the maximal number of items that can be stored in the
		table) or the maximum number of different hash values that can
		be obtained when the hashable part of the base fields is small
		enough (e.g., less than 4-5 bytes). This can save memory. The
		documentation has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1265
Date: 		Tue Mar  4 13:08:18 CET 2008
Author:		Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/libcaesar.a, doc/*/Garavel-92-a.*

Nature:		In the caesar_table_1 libarary, table lookups have been
		optimized for the case where the item searched for is on the
		first page. This leads to a significant performance increase
		with small tables, especially those used by CAESAR.ADT to
		store data type values canonically (see item #1250 above).
		On the Exp17 benchmark provided by Jan Friso Groote (Eindhoven
		University of Technology), this optimization decreased the
		time from 180 seconds down to 77 seconds.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1266
Date: 		Mon Mar  3 15:42:33 CET 2008
Report:		Julien de Antoni (INSA Lyon)
Author:		Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		man/*/projector.html, man/*/reductor.html

Nature:		The PROJECTOR manual page has been updated to clarify the fact
		that PROJECTOR hides or renames labels after (not before)
		projection, i.e., while writing the result to the output BCG
		file.
		
		The REDUCTOR manual page has been updated to clarify the fact
		that REDUCTOR hides or renames labels after reduction (not
		before), i.e., while writing the result to the output BCG file.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1267
Date: 		Mon Mar  3 16:06:22 CET 2008
Report:		Virang Shah (CEA LETI, France)
Author:		Frederic Lang (INRIA/VASY)
Files:		src/svl/standard, man/*/svl.*

Nature:		SVL has been enhanced by adding several shell variables, which
		are used to pass C compiler options to an OPEN/CAESAR
		front-end:
			- $BCG_OPEN_CC_OPTIONS for Bcg_Open
			- $CAESAR_OPEN_CC_OPTIONS for Caesar.Open
			- $EXP_OPEN_CC_OPTIONS for Exp.Open
			- $SEQ_OPEN_CC_OPTIONS for Seq.Open
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1268
Date: 		Mon Mar  3 16:36:21 CET 2008
Report:		Jaco van de Pol (University of Twente, Netherlands)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl.*

Nature:		The SVL language and compiler have been extended with two new
		operators:
		  - "stop" represents a graph without transitions.
		  - "cut" eliminates from a graph all transitions whose label
		    matches a user-given regular expression.
-------------------------------------------------------------------------------
BUG FIX
Number:		1269
Date: 		Mon Mar  3 17:44:35 CET 2008
Report:		Reza Pulungan (Saarland University, Germany)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel

Nature:		During shell script generation, the shell lines occurring in
		SVL scripts were written to the output shell script using the
		fprintf() C function, which interpreted the character sequences
		'%d', '%f', '%g', '%l', '%u', etc. as formatting information
		and replaced them by arbitrary values. For instance, the
		following shell line:
			% BCG_MIN_OPTIONS="-format %g"
		became in the output shell script:
			BCG_MIN_OPTIONS="-format 5.02518e-270"
		This bug has been solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1270
Date:		Tue Mar 11 15:54:49 CET 2008
Author:		Olivier Ponsini and Wendelin Serwe (INRIA/VASY)
Files:		doc/READ_ME.txt, doc/*/Ponsini-Serwe-08.*.*

Nature:		A new paper has been added to the CADP distribution:
		Ponsini-Serwe-08 describes use of CADP for verifying hardware
		descriptions written in TLM/SystemC.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1271
Date: 		Fri Mar 21 10:19:44 CET 2008
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/evaluator.a

Nature:		The "-bfs" option of the EVALUATOR tool has been enhanced in
		order to invoke the new BES resolution algorithms A6 and A7 of
		the caesar_solve_1 library. These algorithms, based upon a BFS
		traversal of the boolean graphs, exhibit a smaller memory
		consumption than the BFS-based algorithm A1 previously used
		by the "-bfs" option.
-------------------------------------------------------------------------------
BUG FIX
Number:		1272
Date: 		Fri Mar 21 10:24:45 CET 2008
Report:		Sylvain Robert and Hubert Garavel (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a

Nature:		A bug has been fixed in the CAESAR_ITERATE_DIAGNOSTIC_SOLVE_1()
		primitive of the caesar_solve_1 library. This primitive could
		produce erroneous answers when invoked on an equation block B
		that had already been solved using algorithms A3 or A4 and that
		contained free variables (defined in other blocks than B) whose
		truth values were previously computed using other algorithms
		than A3 or A4.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1273
Date: 		Thu Mar 27 17:45:55 CET 2008
Authors:	Radu Mateescu and Damien Thivolle (INRIA/VASY)
Files:		bin.*/mcl_expand

Nature:		The MCL_EXPAND auxiliary tool (version 1.1) invoked by the
		Evaluator 3.* model checker has been entirely rewritten. The
		new version 3.0 of MCL_EXPAND offers the following features:

		- It is supported on 64-bit architectures. This was achieved by
		  replacing the obsolete FNC2 compiler construction technology
		  used for MCL_EXPAND 1.1 with the SYNTAX + TRAIAN technology.

		- The extension of the file accepted as input must now be ".xm".
		  In previous releases, the convention was to use the extension
		  ".mcl" but in fact this was not checked so any file extension
		  could be used.
		
		- The names of ".xm" files are no longer limited to 43
		  characters as was the case for ".mcl" files in previous
		  releases. This limit was inherent to the FNC2 compiler and
		  therefore no longer applies. File names longer than a certain
		  number of characters (60 or 70 depending on architecture)
		  caused segmentation faults in early beta versions of CADP
		  2007-*, but this problem has now been fixed.
		
		- The output of MCL_EXPAND version 3.0 is better optimised than
		  the output from version 1.1.The blocks and equations generated
		  by version 3.0 are not the same as those generated by version
		  1.1: they are evaluated more rapidly and with less memory.
		
		- MCL_EXPAND version 3.0 generates equations that enable the
		  optimized algorithms A6 and A7 to be called.
		
		MCL_EXPAND version 3.0 is compatible with version 1.1 with the
		following exceptions:

		- Files containing formulas from Evaluator 2.0 are no longer
		  accepted.

		- Synonyms for boolean operators that were previously accepted
		  with an "obsolete syntax" warning are no longer accepted.
		  Replace these synonyms as follows:
		  	Replace:		With:
		  	"iff", "EQU", "~" 	"equ"
		  	"implies"		"=>"
		  	"or"			"OR" or "\/"
		  	"and"			"AND" or "/\"
		  	"xor"			"XOR" or "^"
		  	"not"			"NOT" or "~"
		  	"true"			"TRUE" or "T"
		  	"false"			"FALSE" or "F"
		  	"mu"			"lfp" or "LFP"
		  	"nu"			"gfp" or "GFP"
			
		- Synomyms for obsolete operators that were maintained for
		  backward compatibility in Evalutor 2.0 are no longer accepted
		  by Evaluator 3.0. The following synonyms have been removed:
		  	"all", "ALL", "all2", "ALL2", "pot", "POT", "pot2",
			"POT2", "fair", "FAIR", "fair2", "FAIR2", "inev",
			"INEV", "su", "SU", "wu", "WU", "*" (wildcard)
-------------------------------------------------------------------------------
BUG FIX
Number:		1274
Date: 		Mon Mar 31 10:42:49 CEST 2008
Report:		Damien Thivolle (INRIA/VASY)
Author:		Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		incl/caesar_standard.h, bin.*/caesar.old, bin.*/caesar,
		man/*/caesar_standard.*, doc/*/Garavel-92-a.*

Nature:		The CAESAR_TYPE_POINTER type has been changed from "char" to
		"unsigned char". This removes warnings previously issued by
		"lint", the Solaris C code checker.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1275
Date: 		Thu Apr  3 09:27:05 CEST 2008
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c, man/*/exp.open.*

Nature:		The "-inline" option of EXP.OPEN, which was not used in
		practice, has been removed for simplicity.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1276
Date:		Fri Apr  4 18:41:54 CEST 2008	
Author:		Hubert Garavel (INRIA/VASY)
Files:		com/bcg_open, com/caesar.open, com/exp.open, com/seq.open

Nature:		The $CADP_TIME environment variable has been added to the
		OPEN/CAESAR shell-scripts. Setting this variable to "time",
		"memtime", "valgrind", etc. enables debugging and profiling
		of OPEN/CAESAR application programs. This option is not
		officially documented in the INSTALLATION_* files.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1277
Date: 		Tue Apr  8 15:50:53 CEST 2008
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/bisimulator.a

Nature:		The "-bfs" option of the Bisimulator tool has been enhanced to
		invoke the algorithm A7 of the caesar_solve_1 library instead
		of algorithm A1 when the second LTS being compared, represented
		in the BCG format, is deterministic (for strong equivalence)
		and tau-free (for weak equivalences). This lowers the memory
		consumption while keeping the benefits of the small-depth
		diagnostics previously generated by A1.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1278
Date:		Wed Apr  9 09:49:19 CEST 2008
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		Several additional changes have been made to the C code
		generated by the CAESAR.ADT compiler, to remove remaining
		warnings issued by "lint", the Solaris C code checker.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1279
Date:		Fri May  2 18:15:56 CEST 2008
Authors:	Damien Thivolle and Hubert Garavel (INRIA/VASY)
Files:		./INSTALLATION_MACOS

Nature:		The instructions for using the Fink installer and the Macports
		installer on Mac OS X systems have been improved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1280
Date:		Mon May 12 12:47:08 CEST 2008
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		incl/bcg_*.h, bin.*/bcg_*

Nature:		Several changes have been made to the types in the BCG include
		files and to the BCG programs in order to achieve 64-bit
		portability, remove compilation warnings, and improve code
		readability:

		- Three new types have been introduced to better distinguish
		  between occurrences of the BCG_TYPE_NATURAL type, namely
		  BCG_TYPE_STATE_NUMBER (which is defined as unsigned long),
		  BCG_TYPE_EDGE_NUMBER (which is defined as unsigned long),
		  and BCG_TYPE_LABEL_NUMBER (which is defined to be identical
		  to BCG_TYPE_NATURAL). At certain places, occurrences of
		  BCG_TYPE_NATURAL have been replaced by these more specific
		  types,

		- A new type, BCG_TYPE_GENUINE_INT, has been introduced, for
		  use when an int is specifically required (e.g., by the POSIX
		  APIs).

		- The results and the first arguments of BCG_PARSE_OPTION()
		  and CAESAR_PARSE_OPTION_MASK_1(), which were previously of
		  type BCG_TYPE_NATURAL are now of type BCG_TYPE_GENUINE_INT.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1281
Date:		Tue May 13 16:10:51 CEST 2008	
Author:		Hubert Garavel (INRIA/VASY)
Files:		incl/caesar_standard.h, incl/caesar_mask_1.h,
		incl/caesar_kernel.h,
		man/*/caesar_standard.*, doc/*/Garavel-92-a.*

Nature:		A new type CAESAR_TYPE_GENUINE_INT has been added to the
		Open/Caesar and Exec/Caesar include files. It is similar to
		the BCG_TYPE_GENUINE_INT type (see item #1280 above).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1282
Date:		Mon May 19 17:58:18 CEST 2008	
Report:		Radu Mateescu and Emilie Oudot (INRIA/VASY)
Author:		Remi Herilier and Hubert Garavel (INRIA/VASY)
Files:		bin.*/distributor, bin.*/bcg_merge

Nature:		A new variable, "time", has been added to the ".gcf" grid
		configuration file used to distribute processing over several
		remote machines. This variable can be set to timing commands,
		such as "/usr/bin/time", "memtime", or even debugging commands
		such as "valgrind".

		If this variable is set for one or several remote machines,
		the Distributor and Bcg_Merge instances run on these machines
		are launched with the value given to the "time" variable.
		It is therefore possible to monitor the time, memory, etc.
		used by remote instances on these machines.

		Alternatively, one can obtain the same effect by setting the
		(undocumented) environment variable $CADP_TIME (see item $1276
		above); this is equivalent to setting in the ".gcf" file the
		"time" variable for all remote instances.
-------------------------------------------------------------------------------
BUG FIX
Number:		1283
Date:		Tue May 20 11:21:52 CEST 2008
Author:		Wendelin Serwe (INRIA/VASY)
Files:		com/xeuca, src/eucalyptus/eucalyptus.tcl

Nature:		The EUCALYPTUS graphical user interface on Mac systems has
		been improved. It now takes into account both the EUCALYPTUS
		window title bar and the Apple menu bar, which is always
		present.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1284
Date:		Wed May 21 16:36:38 CEST 2008
Author:		Yves Guerte and Hubert Garavel (INRIA/VASY)
Files:		incl/bcg_*

Nature:		Further changes have been made to the BCG include files (see
		items #1229 and #1280 above). The following type definitions
		have been added or modified:

		- bcg_io_type_file is replaced by BCG_TYPE_FILE_NAME. Both old
		  and new types are char *.
		
		- bcg_type_label is replaced by BCG_TYPE_LABEL_STRING. Both old
		  and new types are char *.
		
		The old types are deprecated and may be removed at some future
		release. However, they are maintained in this release for
		backward compatibility.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1285
Date:		Thu May 22 16:30:28 CEST 2008
Author:		Hubert Garavel and Sylvain Robert (INRIA/VASY)
File:		com/tst

Nature:		Two additional checks for Windows systems have been added to
		the "tst" shell script:
		- It checks whether or not the $SHELLOPT environment variable
		  contains "igncr".
		- It checks whether "C:\cygwin.bat" properly assigns "igncr"
		  to $SHELLOPT.
		Also, "tst" now handles correctly the case of remote shell
		created on a Windows machine using SSH.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1286
Date:		Thu May 22 18:29:08 CEST 2008
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		incl/caesar_table_1.h, bin.*/libcaesar.a,
		man/*/caesar_table_1.*,doc/Garavel-92-a.*

Nature:		The maximum number of elements in an Open/Caesar table_1 on a
		64-bit machine has been extended to 2^34. The limit for 32-bit
		machines remains at 2^29 elements.
		
		A new function, CAESAR_MAX_INDEX_TABLE_1(), has been added to
		the CAESAR_TABLE_1 API. See the documentation for details.
		
		The size of table_1 on 32-bit and 64-bit machines was compared.
		For a table with the same base area (the same size and the same
		alignment constraints), varying the size between 1 and 48
		octets, and considering all possible alignment constraints,
		the size of an empty table_1 was found to be larger on a 64-bit
		machine than on a 32-bit machine by the following factors:
			- minimum 1.597
			- maximum 6.095
			- average (over all tests) 5.109
		This is a small initial overhead (only a few megabytes in
		absolute values) to benefit from larger tables on 64-bit
		machines.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1287
Date:		Mon May 26 16:03:11 CEST 2008
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		incl/caesar_mask_1.h, src/open_caesar/generator.c,
		src/open_caesar/reductor3.c, man/*/caesar_mask.*,
		doc/Garavel-92-a.*

Nature:		The types of the CAESAR_ARGC and *CAESAR_NB_TOKENS parameters
		to CAESAR_PARSE_OPTIONS() have changed from CAESAR_TYPE_INTEGER
		to CAESAR_TYPE_GENUINE_INT. This is to comply with the C
		standard that specifies that the type of "argc" is "int".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1288
Date:		Tue May 27 13:27:42 CEST 2008
Report:		Frederic Lang (INRIA/VASY)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		incl/caesar_hash.h, bin.*/libcaesar.a, man/*/caesar_hash.*,
		doc/Garavel-92-a.*

Nature:		The CAESAR_0_HASH() function of the Open/Caesar library has
		been rewritten. The new version makes fewer collisions than
		the old version and is faster (by 15% on 32-bit Solaris and
		4% on 32-bit Linux).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1289
Date:		Tue May 27 14:47:18 CEST 2008
Author:		Wendelin Serwe (INRIA/VASY)
File:		bin.*/libcaesar.a

Nature:		The CAESAR_STRING_0_HASH() function has been modified to give
		a better dispersion. CAESAR_STRING_0_HASH() now uses the same
		modified PJW algorithm as CAESAR_4_HASH().
-------------------------------------------------------------------------------
BUG FIX
Number:		1290
Date:		Tue May 27 14:55:41 CEST 2008
Author:		Wendelin Serwe (INRIA/VASY)
File:		bin.*/libcaesar.a

Nature:		The figure displayed by function CAESAR_PRINT_TABLE_1() for
		the total size in bytes of a table was underestimated. This
		problem has been corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		1291
Date:		Wed May 28 18:48:40 CEST 2008
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
File:		demos/demo_38/ABSTRACT_BIT.lib, demos/demo_38/des.f

Nature:		The source LOTOS and C code of demo_38 (asynchronous circuit
		implementing the DES encryption function) was slightly
		modified to avoid warnings from the C compiler.
-------------------------------------------------------------------------------
BUG FIX
Number:		1292
Date:		Thu Jun  5 11:49:39 CEST 2008
Author:		Frederic Lang (INRIA/VASY)
File:		incl/bcg_transition.h

Nature:		Function BCG_OT_START_I() was declared with an incorrect
		profile: its third argument has type BCG_TYPE_EDGE_NUMBER
		and not BCG_TYPE_LABEL_NUMBER. This error, which only
		occurred on 64-bit machines, was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1293
Date: 		Fri Jun  6 17:44:38 CEST 2008
Report:		Pepijn Crouzen (Saarland University, Germany)
Authors:	Radu Mateescu (INRIA/VASY)
Files:		bin.*/xtl

Nature:		A bug has been fixed in the XTL compiler. This bug sometimes
		caused compilation errors in the C code generated from XTL
		programs containing external types and functions. The C names
		of these types and functions (specified in XTL using pragmas
		such as !implementedby, etc.) were not properly retrieved in
		the C code generated by the XTL compiler.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1294
Date:		Fri Jun  6 20:23:03 CEST 2008
Authors:	Radu Mateescu, Hubert Garavel, and Wendelin Serwe (INRIA/VASY)
Files:		incl/X_ACTION.h, incl/X_BOOLEAN.h, incl/X_NATURAL.h,
		incl/X_STRING.h

Nature:		Various changes have been made to these library files, to
		suppress warnings from "lint", the Solaris C code checker.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1295
Date:		Mon Jun  9 10:47:53 CEST 2008
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_cc

Nature:		The "cadp_cc" shell script has been modified and now calls the
		"gcc" compiler with the options "-Wall -Wextra" by default.

		This is useful for diagnosing errors either in the LOTOS code
		itself (for instance, if some parameter of a LOTOS function
		is never used) or in the C code written manually by the user
		(such as the ".f" and ".t" files, as well as the EXEC/CAESAR
		gate functions). Given that CAESAR and CAESAR.ADT now generate
		warning-free C code, any warning reported by the compiler is
		likely to be related to user error.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1296
Date:		Wed Jun 18 17:05:19 CEST 2008
Author:		Yves Guerte (INRIA/VASY)
File:		demos/demo_12/maa.f

Nature:		A change has been made in demo_12 to suppress warnings from
		"lint", the Solaris C code checker.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1297
Date: 		Thu Jun 19 18:58:45 CEST 2008
Authors:	Remi Herilier, Frederic Lang, and Sylvain Robert (INRIA/VASY)
Files:		bin.*/projector.a, man/*/projector.*

Nature:		A new version 3.0 of Projector has been released. This new
		version has the same functionality as the previous version
		2.1, but better performance:

		- On 91,840 tests generated randomly, Projector 3.0 runs 3.3
		  times faster and uses 1.5 times less memory than Projector
		  2.1.

		- On 28 realistic examples, Projector 3.0 runs 4.3 times
		 faster and uses 3.2 times less memory than Projector 2.1.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1298
Date:		Tue Jul  1 11:51:41 CEST 2008
Report:		Wendelin Serwe (INRIA/VASY)
Authors: 	Frederic Lang and Hubert Garavel (INRIA/VASY)
File:		bin.*/libBCG.a, bin.*/bcg_*, incl/bcg_edge_table_1.h

Nature:		Changes have been made to the BCG iterators, namely the
		BCG_TYPE_ET1_ITERATOR structure and the BCG_ET1_START_1()
		function, resulting in significant performance improvement.

		The BCG iterators are now much faster on particular graphs
		that contain a high percentage of deadlock states (i.e.,
		states without successors). A quadratic time complexity
		was replaced by a linear one. The most striking performance
		improvement was observed on the "vasy_12323_27667.bcg" graph
		taken from the VLTS data base (12,323,703 states, out of
		which 23% are deadlock states, and 27,667,803 transitions).
		The old BCG iterators required more than 15 hours to explore
		this graph, while the new BCG iterators only take 47 seconds.

		This enhancement improves the performance of many BCG tools,
		including BCG_DRAW, BCG_INFO (with options -path and
		-unreachable), BCG_IO (with options -lotos and -sequence),
		BCG_OPEN, BCG_STEADY, and BCG_TRANSIENT. User code making
		use of the BCG iterators should be recompiled so that the
		new include files and libraries are used.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1299
Date:		Tue Jul  1 12:38:17 CEST 2008
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		bin.*/aldebaran.old (removed), com/aldebaran, com/rfl,
		man/*/aldebaran

Nature:		The Aldebaran 6.6 tool, which was no longer maintained by its
		authors and could not be ported to 64-bit architectures, was
		removed from the CADP distribution. Similar functionality
		is provided by Aldebaran 7.0, also known as the "aldebaran"
		shell-script, which emulates Aldebaran 6.6 using recent CADP
		tools such as Bcg_Min, Bisimulator, and Reductor (see item
		#1052 above).

		Consequently, there are no longer "aldebaran.old" binaries.
		The "aldebaran" shell-script no longer accepts the "-old"
		option nor any option that applies only to version 6.6 (for
		example "-bddsize", "-dequ", "-dmin", "-labels" and "-omin").
		The RFL shell script and the manual page for Aldebaran has
		been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1300
Date:		Thu Jul 17 10:24:04 CEST 2008
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		The CAESAR compiler now better preserves the initial place
		of Petri net "units" during the optimisation phase: if the
		initial place of a unit is deleted during some optimization,
		CAESAR now searches for a new place to play the part of the
		deleted initial place.

		This leads to a small change in the ".net" files generated
		with "-network" option, though the network size (in places,
		transitions, units and variables) is unchanged.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1301
Date:		Thu Jul 17 11:16:05 CEST 2008
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)	
File:		incl/bcg_types.h, bin.*/*

Nature:		The type of the variable BCG_TYPE_STATE_NUMBER has been
		changed from unsigned int to unsigned long, so as to allow
		graphs with more than 2^32 states to be handled on 64-bit
		machines. All the CADP programs have been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1302
Date:		Mon Jul 21 11:26:54 CEST 2008
Report:		Larry Tan (University of Stirling, Scotland, UK)
Author:		Hubert Garavel (INRIA/VASY)
File:		bin.*/caesar.a, bin.*/caesar.old

Nature:		CAESAR and CAESAR.OLD accepted an undocumented option "-debug",
		which generated C code that did not compile. To preserve the
		symmetry with the documented option "-debug" of CAESAR.ADT,
		the "-debug" option of CAESAR is now accepted but it has no
		effect.
-------------------------------------------------------------------------------
BUG FIX
Number:		1303
Date:		Mon Jul 28 20:19:42 CEST 2008
Report:		Gwen Salaun (University of Malaga, Spain)
Authors		Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		In rare cases, a semantic bug in the E2 optimisation caused
		CAESAR to generate incorrect graphs. Certain places were
		destroyed in error, which caused a problem with the flow
		analysis and incorrectly reset some variables to zero.
		
		In some cases, notably with small examples, the network was
		larger in terms of number of places after E2 optimisation.
		Sometimes the number of transitions and units was also
		increased, which prevented the E0, E6, and U1 optimisations
		from running. The size of the graph was not greatly affected,
		except in some rare cases where it was incorrect.
		
		These problems have been corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1304
Date:		Fri Aug  1 12:15:08 CEST 2008
Authors:	Hubert Garavel and Xavier Clerc (INRIA/VASY)
Files:		lib/INTEGER.lib, lib/X_INTEGER.lib

Nature:		Two changes have been made to improve symmetry between the
		NATURAL and INTEGER types:
		
		- INTEGER.lib was a symbolic link to INTEGERNUMBER.lib, but is
		  now a plain file.

  		- Both INTEGER.lib and X_INTEGER.lib now define a type named
		  Integer, in addition to the existing type IntegerNumber,
		  which is unchanged. This change is backwards compatible
		  unless users have also defined a type named Integer and
		  include INTEGER.lib or X_INTEGER.lib at the same time as
		  their own definitions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1305
Date: 		Fri Aug  8 14:21:46 CEST 2008
Report:		Hubert Garavel, David Champelovier, and Yves Guerte
		(INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/xtl, man/*/xtl.*, src/xtl/mu_calculus.xtl,
		src/xtl/path.xtl, src/xtl/walk.xtl

Nature:		The XTL language has been enhanced by allowing clauses of the
		form "any T" inside the declarations of anonymous tuples
		occurring in the let expressions. An "any T" declaration
		denotes a placeholder standing for a field of an anonymous
		tuple, whose value is not needed later in the XTL program.
		This feature simplifies the XTL code by avoiding spurious
		variable declarations inside anonymous tuples and replacing
		them with placeholder clauses.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1306
Date:		Tue Aug 26 12:51:14 CEST 2008
Author:		Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		incl/caesar_area_1.h, bin.*/libcaesar.a,
		man/*/caesar_area_1.*, doc/*/Garavel-92-a.*
		
Nature:		To ensure 64-bit portability, various changes have been made
		to the data types and functions defined in OPEN/CAESAR's
		"caesar_area_1" library:

		- Type CAESAR_TYPE_AREA_1 is now defined as CAESAR_TYPE_NATURAL
		  and is now 64 bits in length on 64-bit machines; the length
		  field is therefore 60 bits on these machines.

		- Function CAESAR_ALIGNMENT_AREA_1() can now return a value
		  of 8 in addition to 1, 2, and 4.

		- The CAESAR_NATURAL_AREA_1() and CAESAR_POINTER_AREA_1()
		  functions have been modified to be portable to 64-bit
		  machines.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1307
Date: 		Thu Sep  4 15:49:36 CEST 2008
Report:		Charles Pecheur (Univ. Catholique de Louvain, Belgium)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/xtl, bin.*/libXTL.a, incl/xtl_predefined_declarations.h,
		incl/xtl_action.h, src/xtl/misc.xtl, src/xtl/walk.xtl,
		man/*/xtl.*

Nature:		The XTL language has been enhanced by adding the (overloaded)
		predefined function having the following profile:

		    replace : T, T -> T

		where T can be any of the predefined XTL types: boolean,
		integer, real, character, string, state, label, edge, stateset,
		labelset, or edgeset. This function takes two arguments of
		type T and returns the second one. Since it is implemented
		internally as a macro-definition, it avoids the evaluation of
		its first argument.

		This "replace" function is useful in conjunction with the
		XTL expressions "for ... end_for", allowing the user to
		specify arbitrary assignments of accumulator variables during
		iterations, which was not possible before.

		The XTL libraries "misc.xtl" and "walk.xtl", which previously
		used a user-defined, suboptimal version of this function
		(named "change"), were updated accordingly in order to use the
		newly defined, optimized replace function.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1308
Date: 		Thu Sep  4 16:25:17 CEST 2008
Report:		Hubert Garavel (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/libBCG.a

Nature:		The comparison functions used to sort internal BCG transition
		tables have been refined, so that transitions are sorted in
		exactly the same order on every computer architecture. This
		might affect the order in which all the BCG iterators
		BCG_OT_ITERATE_*() enumerate transitions, which is now the
		same on all computers.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1309
Date: 		Fri Sep  5 15:25:11 CEST 2008
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/xtl, bin.*/libXTL.a, src/xtl/walk.xtl,
		src/xtl/walk_actl.xtl, man/*/xtl.*

Nature:		The XTL language has been enhanced by adding the expression
		  use x1, ..., xn in E end_use
		This uses the variables x1, ..., xn before evaluating the
		expression E. The "use" expression enables the user to write
		XTL programs in which all variables defined are used,
		therefore avoiding the warnings of the form
		  variable set but not used
		issued during the compilation of the C code generated by XTL.

		The XTL library "walk.xtl" was updated with occurrences of the
		"use" expression in order to make sure that all variables
		defined inside the macros are indeed used.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1310
Date:		Thu Sep 11 13:06:25 CEST 2008
Author:		Radu Mateescu (INRIA/VASY)
Files:		demos/demo_25/cfs.xtl, demos/demo_25/data.xtl,
		demos/demo_25/data_12.xtl

Nature:		Several occurrences of variables that were defined but
		never used in the XTL library "walk_actl.xtl" and in the XTL
		files of demo_25, have been removed. This avoids warnings
		when the code is compiled.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1311
Date:		Thu Sep 11 18:57:55 CEST 2008
Author:		Radu Mateescu and Damien Thivolle (INRIA/VASY)
Files:		doc/*/Mateescu-08.*, doc/*/Mateescu-Thivolle-08.*

Nature:		Two papers have been added to the CADP distribution:
		- Mateescu-08 presents a case study on CADP
		- Mateescu-Thivolle-08 describes Evaluator 4.0
-------------------------------------------------------------------------------
BUG FIX
Number:		1312
Date:		Fri Sep 12 17:04:07 CEST 2008
Report:		Damien Thivolle (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		The "-root" option of CAESAR was incorrectly implemented. If
		P [X1, ..., Xn] was a LOTOS process with gates X1, ..., Xn
		then option "-root P [Y1, ..., Yn]" previously renamed not
		only the gate parameters X1, ..., Xn of P but also all sorts,
		operations, and other items named X1, ..., or Xn. This issue
		was causing compilation errors for the C code generated by
		CAESAR during the type survey phase; it has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1313
Date:		Sun Sep 14 18:39:05 CEST 2008
Report:		Richard Carver (George Mason University, USA)
Author:		Hubert Garavel (INRIA/VASY)
Files:		man/*/distributor.*

Nature:		The Distributor manual pages have been updated to clarify the
		descriptions of "rsh=" and "rcp=" entries in ".gcf" format.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1314
Date:		Tue Sep 16 18:33:24 CEST 2008
Report:		Hubert Garavel (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
File:		src/svl/standard

Nature:		On 32-bit Windows systems, SVL now uses "cp -p" instead of
		"cp", which means that less recompilation is necessary.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1315
Date:		Wed Sep 17 10:48:31 CEST 2008
Report:		Pepijn Crouzen (Saarland University, Germany)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
File:		lib/Y_QUEUE.lib

Nature:		A new operation, _IsIn_, has been added to the type Y_QUEUE
		to check if an element is present in a queue.
-------------------------------------------------------------------------------
BUG FIX
Number:		1316
Date:		Thu Sep 18 12:27:51 CEST 2008
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		Several bugs in the Petri net optimization phases of the CAESAR
		and CAESAR.OLD compilers have been fixed:
		- In certain cases, too many units were destroyed.
		- The number of marks displayed in the ".net" was sometimes
		  incorrect.
		- It could happen under certain condition that the Petri net
		  obtained after optimization did not satisfy the invariant
		  that a unit cannot be not active if one of its sub-units is
		  active (intuitively, this invariant means that if a proper
		  place is marked in a sub-unit, no place in the parent unit
		  is marked).
		- Also, some graphs generated with the "-gradual" option were
		  incorrect, because of an error in the optimisation U2.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1317
Date:		Thu Sep 18 17:02:48 CEST 2008
Report:		Hubert Garavel (INRIA/VASY)
Author:		Wendelin Serwe (INRIA/VASY)
Files:		bin.*/libcaesar.a

Nature:		The CAESAR_1_HASH() and CAESAR_2_HASH() functions now give
		the same result with "cc -O" on Solaris systems as with "cc"
		on Solaris and the other supported architectures.
-------------------------------------------------------------------------------
BUG FIX
Number:		1318
Date:		Thu Sep 18 19:36:14 CEST 2008
Author:		Radu Mateescu (INRIA/VASY)
File:		bin.*/bisimulator, bin.*/distributor, bin.*/evaluator,
		bin.*/reductor

Nature:		The BCG files produced by determinisation and tau-closure
		were not consistent on all architectures. The lists of
		determinisation states contained duplicates, and the order in
		which transitions were handled in tau-closure was not always
		the same. These problems have been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1319
Date:		Mon Sep 29 19:55:35 CEST 2008
Authors:	Hubert Garavel, Wendelin Serwe, and Romain Lacroix (INRIA/VASY)
Files:		bin.*/cadp_memory, src/com/predictor.c, INSTALLATION_2

Nature:		The meaning of the $CADP_MEMORY environment variable defined
		in INSTALLATION_2 (see item #789 above) has changed: the value
		of this variable should now be given in bytes instead of
		kilobytes.

		The Cadp_Memory program has been modified accordingly. Also,
		Cadp_Memory now displays three estimates of the available
		amount of memory: free memory, total physical memory, and
		free memory + swap. These estimates are now consistent on
		all architectures.

		The Predictor tool has been modified to use the total physical
		memory indicated by this new version of Cadp_Memory. On Solaris
		systems, Predictor no longer relies on the swap size, thus
		giving more realistic estimates.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1320
Date:		Tue Sep 30 10:21:47 CEST 2008
Report:		Katsumi Wasaki (Shinshu University, Nagano, Japan), Axel
		Belinfante (University of Twente, Netherlands), and Mark Timmer
		(University of Twente, Netherlands)
Authors:	Hubert Garavel, Xavier Clerc, and Romain Lacroix (INRIA/VASY)
Files:		bin.macOS/*, bin.mac86/*

Nature:		CADP was ported to the Mac OS X 10.5 "Leopard" operating
		system. CADP continues to be available on Mac OS X 10.4
		"Tiger".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1321
Date: 		Tue Sep 30 11:17:24 CEST 2008
Report:		Ghassan Chehaibar (Bull)
Author:		Radu Mateescu (INRIA/VASY)
Files:		src/xtl/radius.xtl

Nature:		A new XTL program called "radius.xtl" has been added to CADP.
		This program, when invoked on an LTS encoded as a BCG file,
		displays its radius (i.e., the maximal distance from the
		initial state of the LTS to any other state). This information
		is useful for limiting the depth of LTS explorations performed
		by various CADP tools, such as Exhibitor or Terminator.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1322
Date: 		Wed Oct  1 15:59:59 CEST 2008
Report:		Hubert Garavel and Frederic Lang (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/bisimulator.a, bin.*/distributor.a, bin.*/evaluator.a,
		bin.*/reductor.a

Nature:		The changes described in item #1318 above have been revised.

		These changes guarantee that the sorting of edge lists used
		by the Bisimulator, Distributor, Evaluator, and Reductor tools
		of CADP yields the same results on architectures having
		different endianness or using different C compilers. This
		ensures that the graph outputs (diagnostics and LTSs) produced
		by these tools on various architectures are exactly the same.

		However, this may cause an increase of execution time and of
		the size of the graphs produced. Therefore, the new behaviour
		of the edge list sorting is triggered only when the environment
		variable $CADP_SORTED_EDGE_LISTS is set. If this variable is
		not set, the previous implementation of the sorting is used,
		which exhibits better performance but may yield different
		graph results depending on the architectures and C compilers
		used.
-------------------------------------------------------------------------------
BUG FIX
Number:		1323
Date:		Wed Oct  8 19:46:19 CEST 2008
Report:		Mark Timmer (University of Twente, Netherlands)
Authors:	Hubert Garavel and Xavier Clerc (INRIA/VASY)
Files:		com/tst

Nature:		The "tst" shell script running on a Mac OS X 10.5 (Leopard)
		system falsely reported that X11 was not installed. This
		problem has been fixed. Note that even though the "tst" shell
		script reported an error, the Installator ran successfully.
-------------------------------------------------------------------------------
BUG FIX
Number:		1324
Date:		Fri Oct 10 13:00:11 CEST 2008
Report:		Xavier Clerc (INRIA/VASY)
Authors: 	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
File:		com/caesar.open

Nature:		The "caesar.open" shell-script now correctly propagates the
		"-functionality" option when invoking CAESAR.ADT. Previously,
		propagation only occurred when invoking CAESAR.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1325
Date:		Fri Oct 10 14:01:22 CEST 2008
Report:		Wendelin Serwe (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		man/*/caesar.adt.*

Nature:		The manual pages for CAESAR.ADT have been updated to include
		a description of the "-functionality" option, which was
		implemented but not documented.
-------------------------------------------------------------------------------
BUG FIX
Number:		1326
Date:		Mon Oct 13 15:45:58 CEST 2008
Report:		Mark Timmer (University of Twente, Netherlands)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		com/tst

Nature:		Certain components of CADP were reported to have problems
		on early versions of Mac OS X ranging from 10.5.0 to
		10.5.4 included.

		The following issues were reported: the output from the
		"cadp.hostinfo" shell script contained an error message
		("dyld: lazy symbol binding failed: Symbol not found"),
		RFL did not run correctly, and the Installator sometimes
		blocked.
		
		These issues (caused by incompatibilities between Mac OS X
		10.4 and 10.5) are now fixed with the latest releases
		Mac OS X 10.5.5 and upwards. Thus, the "tst" shell script
		has been modified to detect and report versions 10.5.0 to
		10.5.4 of MacOS X.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1327
Date:		Tue Oct 14 19:23:58 CEST 2008
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old, man/*/caesar.*

Nature:		A new option, "-exit", has been added to CAESAR and
		CAESAR.OLD. With this option, these compilers replace all
		tau-transitions derived from a LOTOS enabling operator ">>"
		by epsilon-transitions.

		Although this transformation deviates from the standard
		semantics of LOTOS (it does not preserve strong, branching,
		or observational equivalence), it preserves safety and trace
		equivalence, and often leads to a smaller graph.
		
		The manual pages of CAESAR have been updated accordingly.
		This option is not set by default. It is only activated
		if "-exit" is given on the command line or if the source
		LOTOS code contains at least one special comment of the
		form "(*! atomic *)" located immediately after a ">>"
		operator.

		In the latter case, the "-exit" option applies to all the
		">>" operators present in the LOTOS specification, not only
		those marked with a special "(*! atomic *)" comment. Notice
		that, in this case, one can still give the standard LOTOS
		semantics to certain ">>" operators by replacing:
			B1 >> [accept X1:S1, ... Xn:Sn in] B2
		with
			B1 >> i ; [accept X1:S1, ... Xn:Sn in] B2
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1328
Date:		Mon Oct 20 16:53:43 CEST 2008
Report:		Damien Thivolle and Wendelin Serwe (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.old,
		man/*/caesar.*

Nature:		The LOTOS identifiers are no longer truncated at 64 characters
		by the CAESAR, CAESAR.ADT, and CAESAR.OLD compilers. No length
		limit is now enforced.

		The C identifiers provided by the user in special comments
		of LOTOS programs are no longer truncated at 48 characters.
		Identifiers are now left exactly as the user specified (but
		they might still be truncated by certain C compilers).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1329
Date: 		Tue Oct 28 14:43:49 CET 2008
Report:		Gwen Salaun (University of Malaga, Spain)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/libBCG_IO.a

Nature:		When a BCG file was generated with label parsing activated
		(using for instance BCG_LABELS, BCG_IO, etc. without the
		"-unparse" option) and had labels ending with the "!" symbol
		or containing successive "!" symbols (possibily separated by
		one space), then the BCG environment issued the error message:
			wrong block length in BCG_WRITE_BLOCK

		The error message has been improved by explaining that label
		parsing should be deactivated using the "-unparse" option.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1330
Date: 		Tue Oct 28 14:53:09 CET 2008
Report:		Ghassan Chahaibar (Bull)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c, bin.*/libexp_open.a, man/*/exp.open.*

Nature:		Two improvements have been made to EXP.OPEN:

		- EXP.OPEN now allows ".exp" file names in expressions for a
		  modular structuration of EXP.OPEN expressions. The text of
		  the corresponding ".exp" file is substituted in place of the
		  ".exp" file name.

		- The "-ratebranching" option, which implements prioritization
		  of hidden actions over stochastic actions, now combines the
		  effect of the "-branching" option, thus potentially yielding
		  better state space reductions.
-------------------------------------------------------------------------------
BUG FIX
Number:		1331
Date:		Thu Oct 30 15:29:42 CET 2008
Report:		Jeanne Merle (INRIA/VASY)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.old

Nature:		An anomaly that caused incorrectly large graphs to be generated
		has been corrected. This problem only occurred on Intel-based
		Macintosh when "$CADP_CC" was set to "gcc -O2".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1332
Date:		Thu Oct 30 18:25:35 CET 2008
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		CAESAR.ADT now checks that the user-defined constants
			CAESAR_ADT_HASH_xxx
		(see items #1250, #1251, and #1255 above) provided in the ".t"
		file are within reasonable bounds. In particular, it checks
		that these constants do not exceed 32 bits on 32-bit machines
		and that they respect the maximal size for "caesar_table_1"
		data structures.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1333
Date:		Tue Nov  4 14:36:53 CET 2008
Report: 	Jeanne Merle (INRIA/VASY)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
File:		src/com/cadp_cc

Nature:		The "cadp_cc" shell-script was modified so as to invoke the
		Gcc 4.* compilers with option "-fno-tree-sra". This option
		deactivates Gcc's SRA optimisation (scalar replacement of
		aggregates), which caused problem with assignments of
		structures in the C code generated by CAESAR.ADT and CAESAR.

		With SRA optimisation, the LTSs generated by CAESAR are still
		strongly equivalent, but can can be larger if some structures
		contain bits of padding
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1334
Date:		Mon Nov 10 15:36:16 CET 2008
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		src/com/cadp_compiler, src/com/cadp_cc, com/tst

Nature:		A new shell script, "cadp_compiler", has been added, which
		identifies the C compiler being used. The "cadp_cc" and "tst"
		shell scripts have been simplified by invoking "cadp_compiler".
-------------------------------------------------------------------------------
BUG FIX
Number:		1335
Date:		Tue Nov 18 11:10:59 CET 2008
Report:		Olivier Ponsini and Romain Lacroix (INRIA/VASY)
Authors:	Pierre Boullier (INRIA/ATOLL)
Files:		bin.*/caesar.adt, bin.*/caesar, bin.*/caesar.old

Nature:		The CAESAR and CAESAR.ADT compilers reported incorrect error
		messages when there was a lexical or syntactic error in a
		".lib" file included in a LOTOS specification: the error
		messages often reported wrong ".lib" file names. This problem
		was fixed by correcting the SYNTAX V6 compiler generator.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1336
Date:		Wed Nov 19 13:05:35 CET 2008
Report:		Remi Herilier (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		man/*/caesar.adt.*

Nature:		The CAESAR.ADT manual pages have been updated to include
		descriptions of the "-infix" et "-prefix" options, which
		were actually implemented but not documented.
-------------------------------------------------------------------------------
BUG FIX
Number:		1337
Date:		Tue Dec  2 15:20:52 CET 2008
Report:		Jeanne Merle (INRIA/VASY)
Authors:	Romain Lacroix and Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_cc, src/com/tst

Nature:		The "cadp_cc" and "tst" shell scripts have been modified to
		support the Sun C compiler running on Linux with an Intel
		processor:

		- In this case, "cadp_cc" now performs link edit with the
		  "libgcc.a" library. Otherwise, the Sun C compiler displays
		  error messages of the form:
		   undefined reference to `__umoddi3'
		   undefined reference to `__udivdi3'

		- In this case, "tst" checks that the "libgcc.a" library is
		  available on the system.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1338
Date:		Wed Dec  3 15:39:04 CET 2008
Report:		Wendelin Serwe (INRIA/VASY)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old, bin.*/caesar.adt

Nature:		CAESAR and CAESAR.ADT limits on the maximum size of LOTOS
		programs have been increased from 2^16 lines to 2^24 lines.
		This means larger LOTOS programs can be compiled without
		triggering the following warning:
		       warning during analysis:
		       line number overflow in ``build_tree.c''
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1339
Date:		Mon Dec  8 15:04:50 CET 2008
Authors:	Hubert Garavel, Roman Lacroix, and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/cadp_memory, src/open_caesar/predictor.c,
		man/*/predictor.*

Nature:		Following the aforementioned modifications of "cadp_memory"
		(see item #1319 above), the Predictor tool has been modified to
		handle the fact that "cadp_memory" can return more than one
		estimate. The Predictor manual pages have been updated
		accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1340
Date:		Fri Dec 12 15:03:16 CET 2008
Report:		Etienne Lantreibecq (STMicroelectronics)
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		bin.*/libbcg_info.a

Nature:		When processing large BCG files with many different labels,
		the "-nondeterministic" option of Bcg_Info could incorrectly
		report existence of nondeterminism for certain labels. The
		problem was related to a 32-bit overflow when allocating a
		large memory table. It has been fixed by allocating and
		reusing a smaller table when there is insufficient memory
		available.
-------------------------------------------------------------------------------
BUG FIX
Number:		1341
Date:		Fri Dec 12 15:19:59 CET 2008
Report:		Pepijn Crouzen (Saarland University, Germany) and
		Etienne Lantreibecq (STMicroelectronics)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_min

Nature:		The default value of epsilon in Bcg_Min was incorrectly set to
		0.001. The default value is now 0.000001, as stated in the
		Bcg_Min manual pages.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1342
Date:		Sun Dec 14 16:45:29 CET 2008
Authors:	Roman Lacroix and Hubert Garavel (INRIA/VASY)
File:		com/tst

Nature:		The "tst" shell script has been generalized to recognize all
		Linux distributions (e.g., Ubuntu) and not only Debian, Red
		Hat, and Fedora Core as was previously the case.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1343
Date:		Sun Dec 14 17:33:09 CET 2008
Author:		Hubert Garavel (INRIA/VASY)
File:		com/tst

Nature:		On Linux systems, the message displayed by the "tst" shell
		script when a command was not available was sometimes
		misleading. The message instructed the user to add the relevant
	 	directory to the $PATH, even though it was already included.
		The cause of the error was not a $PATH problem but a missing
		package. The error message has been changed to:
		   *** Can't find command ``<command>''
		   ==> Install the Linux package containing this command
-------------------------------------------------------------------------------
BUG FIX
Number:		1344
Date:		Sun Dec 14 18:28:55 CET 2008
Report:		Louis Paternault (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/libbcg_info.a

Nature:		The maximal branching factor was not always correctly
		calculated by Bcg_Io (a value of zero could be indicated,
		even if the actual branching factor was larger). This problem
		has been corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1345
Date: 		Tue Dec 16 10:23:13 CET 2008
Authors:	Estelle Dumas, Radu Mateescu, Hidde de Jong, Pedro T. Monteiro,
		Emilie Oudot (INRIA), Pascal Poizat (Universite d'Evry, France),
		Sylvain Rampacek (Universite de Bourgogne, France),
		Gwen Salaun (Universidad de Malaga, Spain)
Files:		doc/*/Mateescu-Monteiro-Dumas-deJong-08.*,
		doc/*/Mateescu-Oudot-08-a.*, doc/*/Mateescu-Poizat-Salaun-08.*,
		doc/*/Mateescu-Rampacek-08-a.*,
		doc/=READ_ME.txt, doc/biblio.bib

Nature:		Four new publications have been added to the CADP release:

		- Mateescu-Monteiro-Dumas-deJong-08 describes the temporal
		  logic CTRL (Computation Tree Regular Logic) used for
		  specifying biologically-relevant properties of genetic
		  regulatory networks within the GNA (Genetic Network Analyzer)
		  tool. The paper also presents a translation from CTRL to HMLR
		  (Hennessy-Milner Logic with Recursion), implemented by the
		  tool Ctrl2Blk, which allows to use the EVALUATOR 3.x model
		  checker of CADP to verify CTRL properties of genetic
		  regulatory networks.

		- Mateescu-Oudot-08-a presents a new encoding of weak
		  equivalence relations in terms of boolean equation systems,
		  its prototype implementation, and some experimental results.

		- Mateescu-Poizat-Salaun-08 describes a methodology for
		  automatically generating adaptors for value-passing protocol
		  specifications by means of LOTOS encodings and on-the-fly
		  deadlock pruning of labelled transition systems performed
		  using the prototype tool SCRUTATOR.

		- Mateescu-Rampacek-08-a proposes a translation from BPEL
		  specifications to (discrete-time) labelled transition systems
		  which can be subsequently verified using CADP. This
		  translation is implemented by the tool WSMod and is
		  illustrated by analyzing a Web service for GPS navigation.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1346
Date:		Wed Dec 17 11:15:49 CET 2008
Authors:	Gwen Salaun, Frederic Lang, Remi Herilier, and Hubert Garavel
		(INRIA/VASY)
Files:		bin.*/fsp2lotos, lib/FSP_V1.lib, incl/FSP_V1.h,
		man/*/fsp2lotos.*,

Nature:		A new tool, FSP2LOTOS, has been added to the CADP toolkit. It
		translates into LOTOS specifications written in the FSP (Finite
		State Processes) language defined by Jeff Krammer and Jeff
		Magee (Imperial College, London). This translator enlarges the
		scope of CADP, enabling it to handle descriptions of concurrent
		systems written in a high-level language other than LOTOS.
		See the manual page for details.
-------------------------------------------------------------------------------
BUG FIX
Number:		1347
Date:		Fri Dec 19 09:20:52 CET 2008
Report:		Damien Bergamini (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/libBCG.a

Nature:		The command "bcg_io file.bcg -vcg -" caused a segmentation
		fault. The problem has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1348
Date:		Fri Dec 19 09:33:27 CET 2008
Report:		Wendelin Serwe (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/bcg_steady

Nature:		If the input graph passed to BCG_STEADY contained a deadlock,
		the system displayed a fatal error message with no further
		information. The error message has been improved to indicate
		the number of the deadlock state (note that, as stated in the
		BCG_STEADY manual page, the input graph is not permitted to
		contain deadlocks).
-------------------------------------------------------------------------------
BUG FIX
Number:		1349	
Date: 		Fri Dec 19 09:58:05 CET 2008
Report:		Nicolas Coste (STMicroelectronics)
Authors:	Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel

Nature:		SVL now checks that a label used in a "cut", "hide", or
		"rename" expression or in a parallel composition is not an
		EXP.OPEN keyword that would make SVL generate an incorrect
		EXP.OPEN file. If a label is also a keyword, an error message
		is issued.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1350
Date:		Mon Jan 14 15:59:02 CET 2009
Authors:	Hubert Garavel and Jeanne Merle (INRIA/VASY)
Files:		com/cadp_cc, com/tst

Nature:		Support has been added for the Solaris C/C++ compiler "cc"
		on Intel 32-bit and 64-bit processors, and for the Intel C/C++
		"icc" compiler on 64-bit Linux systems.

		Notice that, on 64-bit systems, it is recommended to use "icc"
		version 11 or later to avoid error messages of the form:
		     .../mcpcom: error while loading shared libraries:
		     libstdc++.so.5: cannot open shared object file: No such
		     file or directory - compilation aborted for ...
		For more information, see the two following Web pages:
		http://software.intel.com/en-us/forums/intel-c-compiler/ \
		                                                  topic/62127/
		http://www.intel.com/support/performancetools/c/linux/ \
		                                              sb/CS-020185.htm
-------------------------------------------------------------------------------
BUG FIX
Number:		1351
Date: 		Tue Feb 10 09:21:46 CET 2009
Report:		Nicolas Coste (STMicroelectronics)
Authors:	Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel

Nature:		Label lists used in SVL "hide", "cut", or "rename" operations
		were simply dumped in generated EXP.OPEN files. This caused an
		error when a label was an EXP.OPEN keyword without quotes. This
		has been solved by adding, in generated EXP.OPEN files, quotes
		around labels that correspond to EXP.OPEN keywords. This
		prevents error messages of the type described in item #1349
		above.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1352
Date: 		Tue Feb 10 12:15:55 CET 2009
Report:		Ghassan Chehaibar (Bull)
Authors:	Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel, man/*/svl.*

Nature:		The priority operator "prio" of EXP.OPEN was added to SVL. The
		manual pages have been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1353
Date:		Tue Feb 10 12:25:38 CET 2009
Report: 	Dirk Keck (University of Stuttgart, Germany), Nicolas
		Descoubes, Damien Bergamini, and Olivier Ponsini (INRIA/VASY)
Authors:	Frederic Lang (INRIA/VASY)
File:		bin.*/bcg_io

Nature:		If a label was too long, the command exited with status 1 and
		the error message:
		  bcg_write_1: too long natural in BCG_WRITE_FIXED_NATURAL
		Depending on the graph size, this error could be signalled
		after up to an hour of processing.
		
		This problem has been fixed: BCG_IO verifies at the start of
		processing that no label is too long. If a label exceeds the
		maximum length specified by the value of the BCG_MAX_LABEL
		constant defined in "$CADP/incl/bcg_io_types.h" (currently
		5000 characters), a suitable error message is displayed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1354
Date:		Wed Feb 18 15:40:59 CET 2009
Report:		Wendelin Serwe (INRIA/VASY)
Author: 	Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.indent

Nature:		The caesar.indent pretty-printer has been updated to take into
		account the pragma (*! atomic *) that may be present after a
		LOTOS enabling operator ">>" (see item #1327 above).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1355
Date:		Mon Mar  2 11:54:32 CET 2009
Author:		Radu Mateescu (INRIA/VASY)
Files:		man/*/caesar_table_1.*, doc/*/Garavel-92-a.*

Nature:		Minor changes have been made to the caesar_table_1 manual
		pages, to improve the descriptions of the primitives
		CAESAR_RETRIEVE_B_I_TABLE_1(), CAESAR_RETRIEVE_M_I_TABLE_1(),
		CAESAR_RETRIEVE_B_M_TABLE_1(), CAESAR_RETRIEVE_M_B_TABLE_1(),
		and CAESAR_MAX_FORMAT_TABLE_1().
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1356
Date:		Mon Mar  9 12:29:55 CET 2009
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		incl/bcg_*.h, bin.*/libBCG.*, bin.*/libBCG_IO.h

Nature:		Further changes have been made to three BCG APIs in the context
		of the port to 64-bit architectures. The modified APIs are
		"bcg_types.h", "bcg_natural_set.h", and "bcg_binary_table.h".
		The changes are not likely to directly impact CADP end-users.

		A new type BCG_TYPE_LONG_NATURAL was added to "bcg_types.h".

		Three new types have been added to "bcg_natural_set.h", namely
		BCG_TYPE_NATURAL_SET_CARDINAL, BCG_TYPE_NATURAL_SET_ITEM, and
		BCG_TYPE_NATURAL_SET_BIT_VECTOR. Also, the definitions of types
		bcg_body_natural_set and BCG_TYPE_NATURAL_SET were modified to
		use 64-bit integers instead of 32-bit integers. Consequently,
		the profiles of the four functions BCG_CREATE_NATURAL_SET(),
		BCG_IN_NATURAL_SET(), BCG_ADD_NATURAL_SET(), and
		BCG_REMOVE_NATURAL_SET() were updated.

		Two new types have been added to "bcg_binary_table.h", namely
		BCG_TYPE_BINARY_ARRAY_LENGTH and BCG_TYPE_BINARY_TABLE_LENGTH.
		Also, the definitions of types bcg_body_binary_array,
		bcg_type_binary_array, bcg_body_binary_table, and
		bcg_type_binary_table were modified to replace certain 32-bit
		integers by 64-bit integers. The type BCG_TYPE_MEMORY_VALUE
		was enlarged from 32 to 64 bits. Consequently, the profiles of
		functions BCG_BINARY_SIZE_OF(), BCG_CREATE_BINARY_ARRAY(),
		and BCG_CREATE_BINARY_TABLE() were updated.

		Finally, the BCG tools and libraries have been made more
		robust by inserting systematic overflow tests around every
		assignment of a 64-bit value to a 32-bit variable, and around
		every cast of a 64-bit value into a 32-bit one.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1357
Date: 		Wed Mar 11 09:46:42 CET 2009
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel

Nature:		Following the enhancement of EXP.OPEN to allow nested ".exp"
		files (i.e., ".exp" files themselves containing ".exp" files,
		as described in item #1330 above), SVL was modified to generate
		nested ".exp" files when appropriate.
-------------------------------------------------------------------------------
BUG FIX
Number:		1358
Date:		Fri Mar 20 16:47:35 CET 2009
Report:		Etienne Lantreibecq (STMicroelectronics)
Authors:	Pierre Boullier (INRIA/ALPAGE), Benoit Sagot (INRIA/ALPAGE),
		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.indent,
		bin.*/caesar.old, bin.*/svl_kernel

Nature:		In some early beta versions of CADP 2007-*, the CADP compilers
		produced using the SYNTAX compiler generator could crash (with
		segmentation faults) on architecture x64 (Intel EM64T or AMD64
		machines) for certain programs containing syntactic errors.
		The issue was in the error recovery mechanism of SYNTAX. With
		the help of the INRIA/ALPAGE team, the problem was solved in
		SYNTAX and the CADP tools have been updated using a corrected
		version of SYNTAX.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1359
Date:		Fri Mar 20 16:58:13 CET 2009
Report:		Etienne Lantreibecq (STMicroelectronics)
Author:		Radu Mateescu (INRIA/VASY)	
Files:		bin.*/bisimulator.a, bin.*/distributor, bin.*/evaluator.a,
		bin.*/reductor.a

Nature:		Three causes of memory leaks in the on-the-fly reductions by
		tau-compression and tau-confluence have been removed. This
		change reduced memory consumption of several on-the-fly
		verification tools of CADP when reducing graphs with many
		tau-transitions, namely:

		- The Bisimulator and Evaluator tools called with the
		  "-tauconfluence" option

		- The Distributor tool called with the "-taucompression" and
		  "-tauconfluence" options

		- The Reductor tool called with the "-safety", "-taustar",
		 "-taucompression", "-tauconfluence", "-taudivergence", and
		 "-weaktrace" options
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1360
Date:		Mon Mar 30 12:20:07 CEST 2009
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		man/*/caesar_area_1.*, man/*/caesar_mask_1.*,
		doc/*/Garavel-92-a.*

Nature:		The Open/Caesar manual pages have been updated to include more
		details of the behaviour of the CAESAR_NATURAL_AREA_1(),
		CAESAR_POINTER_AREA_1(), CAESAR_CREATE_MASK_1(), and
		CAESAR_APPLY_MASK_1() functions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1361
Date:		Tue Mar 31 12:00:48 CEST 2009
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/libBCG.a

Nature:		Checks have been added to systematically detect	any overflow
		when dealing with large BCG graphs (i.e., approaching 2^31
		states or 2^31 transitions).
-------------------------------------------------------------------------------
BUG FIX
Number:		1362
Date:		Tue Mar 31 12:33:48 CEST 2009
Report: 	Larry Tan (University of Stirling, Scotland, UK)
Author:		Radu Mateescu (INRIA/VASY)
File:		bin.*/evaluator.a, bin.*/mcl_expand

Nature:		A bug has been fixed in the Evaluator mode checker, which did
		not correctly interpret escape sequences (e.g., "\", "\t",
		etc.) contained in the character strings denoting action
		predicates expressed as transition labels. Now, these character
		strings can contain all escape sequences defined in the C
		language, including the octal representation of characters,
		and therefore match any transition label containing these
		escape sequences.
-------------------------------------------------------------------------------
BUG FIX
Number:		1363
Date:		Fri Apr  3 17:14:40 CEST 2009
Author:		Wendelin Serwe (INRIA/VASY)
File:		incl/caesar_kernel.h

Nature:		The CAESAR_TYPE_POINTER has been changed in the include file
 		"caesar_kernel.h" to be a pointer to an "unsigned char" rather
		than a "char". This is a consequence of the change described in
		item #1274 above.
-------------------------------------------------------------------------------
BUG FIX
Number:		1364
Date:		Mon Apr  6 09:23:18 CEST 2009
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt, incl/caesar_hash.h, incl/caesar_kernel.h

Nature:		The "caesar_hash.h" file has been modified to include the
		macro:
		    #ifndef CAESAR_ORDINARY_HASH
		This enables the CAESAR.ADT compiler, which calls this macro,
		to include only definitions of hash functions that do not
		operate on states and labels.
		
		The "caesar_kernel.h" file has been modified to add:
		   #include caesar_system.h
		Other changes have been made for compatibility with previous
		inclusion of "caesar_standard.h".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1365
Date:		Fri Apr 10 09:49:45 CEST 2009
Author:		Hubert Garavel (INRIA/VASY)
File:		bin.*/cadp_memory

Nature:		A new option, -physical, has been added to "cadp_memory", to
		check the amount of physical memory that is available. This
		option can be used by the "caesar_table_1" library to dimension
		tables automatically.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1366
Date:		Tue Apr 14 18:49:10 CEST 2009
Report:		Etienne Lantreibecq (STMicroelectronics)
Author: 	Hubert Garavel (INRIA/VASY)
File:		com/rfl

Nature:		When the "rfl" request for license script on a machine capable
		of executing both 32-bit and 64-bit binaries, it generates a
		license file for CADP according to which CADP binaries are
		installed. For example, if only 32-bit binaries are installed,
		the license file contains a line for 32-bit CADP, but if
		both 32-bit and 64-bit binaries are installed, the license file
		contains lines for both.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1367
Date:		Tue Apr 14 19:24:11 CEST 2009
Report:		Etienne Lantreibecq (STMicroelectronics)
Author: 	Hubert Garavel (INRIA/VASY)
Files:		com/installator, src/installator/installator.tcl

Nature:		When the "installator" tool is run on a machine capable of
		executing both 32-bit and 64-bit binaries, it proposes to
		install both the 32-bit and 64-bit versions of CADP. Previously,
		it proposed on only one version, determined by the value of
		the $CADP_BITS environment variable.
-------------------------------------------------------------------------------
BUG FIX
Number:		1368
Date:		Thu Apr 16 17:11:29 CEST 2009
Report: 	Radu Mateescu and Louis Paternault (INRIA/VASY)
Authors: 	Hubert Garavel, Frederic Lang and Louis Paternault (INRIA/VASY)
Files:		bin.*/libBCG_IO.a, bin.*/bcg_io, incl/bcg_name.h,
		incl/bcg_aldebaran_declarations.h,
		incl/bcg_aldebaran_initialisations.h
		
Nature:		The size of the ".bcg" files produced by the "bcg_write" API
		when label parsing is on (which is the default) has been
		reduced. In particular, the reduction applies to the BCG graphs
		generated by Bcg_Io invoked without the "-unparse" sub-option.

		This reduction was achieved by storing each label string once
		in the BCG file, whereas it was stored three times previously.
		Precisely, the difference (in bytes) between the size of a
		new BCG file and an old BCG file is given by the following
		expression:
 			600 - (2 * total_size_of_all_label_strings)

		Although file size may slightly increase (by no more than 600
		bytes) for BCG files having only a few labels, the reduction
		is especially effective for BCG graphs having many different
		labels. For example, for a graph with 1 million transitions
		and 1 million labels, the size of the BCG file is reduced from
		156,240 to 45,184 kbytes.

		The size of BCG files generated by the "bcg_write" API without
		label parsing (such as those generated by Bcg_Io with the
		"-unparse" option) is unchanged.

		Also, the time needed to compile the BCG dynamic library for
		BCG files with many labels will be less.

		As regards compatibility, the BCG format itself was not
		modified: only the way of producing BCG files changed. Care
		was taken to preserve maximal compatibility: the new, compact
		BCG files can still be handled by CADP version 2006-a and the
		old BCG files can still be handled by the modified BCG tools.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1369
Date:		Thu Apr 16 17:21:57 CEST 2009
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/libcaesar.a, man/*/caesar_table_1.*,
		doc/*/Garavel-92-a.*

Nature:		The "libcaesar.a" library now uses "cadp_memory -physical" (see
		item #1365 above) to check the amount of physical memory that
		is available, and adjusts the size of the Open/Caesar table_1
		automatically, by reducing the maximal number of elements to be
		stored in the table (i.e., the value of CAESAR_LIMIT_SIZE, or
		its default value if CAESAR_LIMIT_SIZE was set to 0). This
		saves memory, based on a realistic estimation of hardware
		resources.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1370
Date:		Mon Apr 20 17:05:31 CEST 2009
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/libcaesar.a, man/*/caesar_table_1.*,
		doc/*/Garavel-92-a.*

Nature:		The Open/Caesar table_1 was further enhanced in two ways:

		- Previously, when the value of CAESAR_HASH_SIZE was 0, the
		  hash table was created with a constant default size (namely,
		  131071 hash entries). From now on, the hash table size is
		  determined according to the maximum number of elements that
		  can be stored in the table.

		- Also, from now on, if the value of CAESAR_HASH_SIZE is 0,
		  the hash table will be resized dynamically, meaning that its
		  default initial value will increase automatically when a
		  sufficiently large number of items have been inserted into
		  the table (dynamic hashing scheme).
-------------------------------------------------------------------------------
BUG FIX
Number:		1371
Date: 		Fri Apr 24 17:23:51 CEST 2009
Report:		Larry Tan (University of Stirling, Scotland, UK)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/mcl_expand, bin.*/evaluator.a

Nature:		A bug has been fixed in the processing of regular expressions
		over character strings occurring in ".mcl" files. The escape
		sequences of the form "\c", where "c" is one of the special
		characters allowed in Unix regular expressions (see "man
		regexp" for details) were not properly expanded by Mcl_Expand
		and Evaluator, causing syntax errors. Note that a similar
		issue concerning character strings was already fixed (see item
		#1362 above).

		Note that this error could be avoided for certain special
		characters "c" by enclosing them between brackets ("[c]")
		instead of preceding them by a backslash ("\c"). Nevertheless,
		this bug has been fixed and now one can freely use either the
		"\c" or the "[c]" syntax for special characters "c" in regular
		expressions.
-------------------------------------------------------------------------------
BUG FIX
Number:		1372
Date:		Tue Apr 28 15:01:59 CEST 2009
Report: 	Wendelin Serwe, Hubert Garavel, and Remi Herilier (INRIA/VASY)
Authors:	Gideon Smeding and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt, bin.win32/libm.a, incl/caesar_standard.h,
		./README
		
Nature:		On Windows XP, there was an error in CAESAR.ADT regarding the
		verification of the size of hash tables used to store dynamic
		data types. The problem was caused by the fact that functions
		scanf(), fscanf(), printf(), and fprintf() of the MSVCRT.DLL
		library do not recognise the "%lld" format and require instead
		the "%I64d" (this problem was solved in Windows Vista). To
		continue to support CADP on Windows XP, we added correct
		versions of scanf(), fscanf(), printf(), and fprintf() to the
		"libm.a" library of CADP (borrowed from the Trio 1.13 library).
-------------------------------------------------------------------------------
BUG FIX
Number:		1373
Date:		Tue May  5 19:10:33 CEST 2009
Report:		Etienne Lantreibecq (STMicroelectronics)
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG.a

Nature:		A bug has been fixed in the BCG_WRITE_FIXED_NATURAL() function.
		Previously, overflows when writing an integer greater than or
		equal to 2^28 were not detected. This led to creation of BCG
		files that were corrupt, and to a segmentation fault when such
		files were read by EXP.OPEN.
-------------------------------------------------------------------------------
BUG FIX
Number:		1374
Date:		Wed May 13 10:34:18 CEST 2009
Report:		Larry Tan (University of Stirling)
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)
Files:		tcl-tk/com, tcl-tk/bin.win32

Nature:		On a Windows 32 machine running Vista, "wish" did not work. The
		problem has been fixed and a new binary is now provided.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1375
Date:		Wed May 13 14:28:39 CEST 2009
Author:		Damien Thivolle (INRIA/VASY)
File:		incl/X_NATURAL.h

Nature:		In the include file "X_NATURAL.h", the function ADT_GCD() is
		no longer declared as "static". This avoids the following
		warning from the "gcc" compiler:
		   X_NATURAL.h:111: warning: 'ADT_GCD' defined but not used
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1376
Date:		Wed May 13 19:32:09 CEST 2009
Authors:	Hubert Garavel and Remi Herilier (INRIA/VASY)
Files: 		./INSTALLATION_1, ./INSTALLATION_2, ./INSTALLATION_4,
		com/installator

Nature:		Further changes have been made to the CADP installation in
		order to support Windows Vista:

		- The installation documentation now explains that if UAC (User
		  Account Control) is activated, CADP must be installed from a
		  Cygwin shell window launched with administrative privileges.
		  To start such a window, right-click on the Cygwin icon and
		  select "Run as Administrator".

		- The Installator now detects whether the Vista UAC will block
		  the installation, in which case it exits gracefully with an
		  explanatory message.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1377
Date:		Fri May 15 11:24:28 CEST 2009
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		./src/open_caesar/predictor.c

Nature:		Predictor has been modified to more correctly take into account
		the increase in size of Open/Caesar's table_1 and of CAESAR's
		state table. This means that the estimate of the maximum number
		of states that can be generated on the current machine is now
		more accurate.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1378
Date:		Fri May 15 11:52:54 CEST 2009
Authors: 	Hubert Garavel, Radu Mateescu, and Wendelin Serwe (INRIA/VASY)
Files:		incl/X_NATURAL.h, incl/X_STRING.h

Nature:		Further changes have been made to the "X_NATURAL.h" include
		file (see item #1376 above). Before including this file, two
		macros can be defined:

		- If the file "X_NATURAL.h" contains only declarations and no
		  function code, define ADT_NAT_INTERFACE_ONLY. This enables
		  the function definitions to be ignored.

		- Otherwise, define ADT_NAT_INTERFACE_EXPORT, to export the
		  functions so they are visible outside "X_NATURAL.h" (and not
		  static).
		
		Two similar macros (namely ADT_STRING_INTERFACE_ONLY and
		ADT_STRING_INTERFACE_EXPORT) can be defined for "X_STRING.h".
-------------------------------------------------------------------------------
BUG FIX
Number:		1379
Date:		Fri May 15 12:40:58 CEST 2009
Author:		Wendelin Serwe (INRIA/VASY)
Files:		com/bcg_draw, src/com/cadp_psbox, man/*/bcg_draw.*

Nature:		Two bugs have been fixed in "bcg_draw":

		- If the "-size" option was used to specify a page size larger
		  than the default (Letter), the value of the bounding box was
		  not automatically adjusted for the new size. This meant that
		  even though a larger graph was created, the PostScript viewer
		  displayed only the part within the bounding box, starting at
		  the botton left corner. This restriction has been removed and
		  the entire graph is now displayed.

		- If the "-size" and "-eps" options were used to specify and
		  non-standard graph size (larger or smaller than Letter) and
		  to store the graph in an EPS file without displaying it, the
		  value of the bounding box was not calculated correctly. The
		  size of the bounding box could not exceed the default size,
		  and the graph was cut at these limits. This problem has been
		  removed and the graph is created at the size requested.
		
		The "cadp_psbox" shell script has a new option, "-size x y"
		that can be used to specify an initial page size from which the
		BoundingBox size is calculated.
		
		The "bcg_draw" manual pages have been corrected and now
		correctly state that the default page size is Letter.
-------------------------------------------------------------------------------
BUG FIX
Number:		1380
Date:		Fri May 15 15:13:27 CEST 2009
Authors:	Etienne Lantreibecq (STMicroelectronics), Hubert Garavel, and
		Wendelin Serwe (INRIA/VASY)
File:		src/monitor/main.tcl

Nature:		Handling of interruptions to BCG file generation has been
		improved. Previously, when the process generating the file was
		terminated, the BCG monitor displayed an error pop-up window
		saying that it was impossible to close the pipe. This error is
		no longer displayed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1381
Date:		Fri May 15 16:30:00 CEST 2009
Authors:	Etienne Lantreibecq (STMicroelectronics), Hubert Garavel, and
		Wendelin Serwe (INRIA/VASY)
Files:		src/monitor/main.tcl

Nature:		In the BCG monitor, it is now possible to sort labels
		alphabetically as well as chonologically. To sort labels
		alphabetically, check the "Sort Labels Alphabetically"
		checkbox.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1382
Date:		Tue May 26 09:15:50 CEST 2009
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.old, bin.*/caesar

Nature:		Similar to the introduction of dynamic hashing in Open/Caesar's
		table_1 (see item #1370 above), the state table used by CAESAR
		during graph generation has also been made extensible. This
		reduces the time cost when the graph becomes large. The user
		can control this by means of two macro definitions:

		- If the CAESAR_STATE_HASH_SIZE macro definition is defined
		  (see item #477 above), it specifies a static size for the
		  hash table and then dynamic hashing will not be used.

		- If not, the macro definition CAESAR_STATE_HASH_COLLISIONS
		  can be set to specify a maximal average length of collision
		  lists in the hash table. As soon as the average value exceeds
		  CAESAR_STATE_HASH_COLLISIONS, the hash table is enlarged
		  using dynamic hashing, provided that there is enough memory
		  available.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1383
Date:		Tue Jun  2 10:32:19 CEST 2009
Authors:	Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_io

Nature:		The error messages from Bcg_Io when reading an incorrect ".aut"
		file have been improved. Previously, the following message was
		returned:
		  "Syntax error at line xxx"
		The error messages now indicate which tokens are expected to
		be read.
-------------------------------------------------------------------------------
BUG FIX
Number:		1384
Date:		Tue Jun  2 10:54:14 CEST 2009
Report:		Damien Thivolle (INRIA/VASY) and Etienne Lantreibecq
		(STMicroelectronics)
Authors:	Hubert Garavel, Remi Herilier, Frederic Lang, Radu Mateescu,
		and Louis Paternault (INRIA/VASY)
Files:		bin.*/libBCG.a, bin.*/libBCG_IO.*,incl/bcg_types.h,
		src/com/cadp_cc

Nature:		All the CADP tools have been modified and now support large
		files. On 32-bit Solaris and Intel x86 systems, the size of
		files was limited to 2 Gbytes (instead of 4 Gbytes), a
		limitation that mostly affected large BCG files. This would
		result in an error message of the form:
			bcg_write1: fwrite error in write function
		when generating a large BCG file. This issue did not occur
		on MacOS X systems.

		This limitation has been removed by making the CADP tools
		compliant with LFS (Large File Support). On 32-bit machines
		(Windows excepted), the CADP tools can now handle files of
		4 Gbytes (or even larger, depending on state size and provided
		that there is enough memory available to store the states of
		such large BCG graphs). On 64-bit architectures, there are
		no limitations but those of the file systems.

		The type of the BCG predefined BCG_TYPE_OFFSET variable has
		been changed from "long" to "off_t". The applications built
		on top of the BCG APIs and libraries simply have to be
		recompiled.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1385
Date:		Mon Jun  8 12:29:24 CEST 2009
Report:		Christoph Brandt (University of Luxembourg)
Authors: 	Remi Herilier and Hubert Garavel (INRIA/VASY)
File:		com/tst

Nature:		The "tst" shell script has been enhanced and now tests, on
		MacOS X systems, whether the name of a machine is stable or
		has been assigned by DHCP. This is necessary because a CADP
		license is assigned to a named system. If DHCP is being used,
		which on MacOS X systems means that the hostname changes, "tst"
		displays information explaining how to modify the file
		"/etc/hostconfig" so that the CADP license system always sees
		the same host name. Note that modification is required only once
		and does not need to be repeated each time the system acquires
		new DHCP credentials.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1386
Date:		Mon Jun  8 13:00:35 CEST 2009
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)
File:		com/tst

Nature:		An additional workaround has been added to the "tst" shell
		script, to prevent an incorrect error message about Cygwin
		bug #1 from being displayed on Vista systems (this spurious
		error arose because the Cygwin implementation of the Unix
		"cp" command did not transfer the "execute" permission when
		copying an executable file).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1387
Date:		Mon Jun  8 16:08:11 CEST 2009
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
File:		incl/bcg_types.h

Nature:		A new data type, BCG_TYPE_LONG_INTEGER has been added to the
		file "bcg_types.h".
-------------------------------------------------------------------------------
BUG FIX
Number:		1388
Date:		Wed Jun 17 17:39:13 CEST 2009
Report:		Frederic Lang, Radu Mateescu, and Wendelin Serwe (INRIA/VASY)
Authors:	Hubert Garavel, Remi Herilier, Romain Lacroix, Wendelin Serwe,
		and Jeanne Merle (INRIA/VASY)
Files:		bin.win32/caesar.exe, bin.win32/caesar.adt.exe,
		bin.win32/caesar.old.exe
		
Nature:		On Windows XP and Vista, certain syntax errors in a LOTOS
		program caused the CAESAR and CAESAR.ADT compilers to become
		stuck in a loop, but only if the lines of the LOTOS program
		were terminated with "\n" only instead of "\r\n". When
		compilation was interrupted by CTRL-C, the ".err" error file
		contained numerous warning messages about looping and recovery
		from lexical and syntactic errors. This bug was caused by the
		interaction of carriage-return and line-feed handling in
		Microsoft's MSVCRT.DLL library and the error recovery
		mechanism. It has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1389
Date:		Thu Jun 18 11:55:06 CEST 2009
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		The CAESAR_TYPE_STATE_NUMBER and CAESAR_TYPE_EDGE_NUMBER data
		types, which are used to store the number of a state and an
		edge respectively, have been enlarged from "unsigned int" to
		"unsigned long" in the C code generated by the CAESAR compiler.
		This allows graphs with more than 2^32 states and transitions
		to be generated.
-------------------------------------------------------------------------------
BUG FIX
Number:		1390
Date:		Fri Jun 19 09:18:56 CEST 2009
Report:		Frederic Lang (INRIA/VASY)
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old, bin.*/caesar.adt,
		src/com/cadp_more, com/tst, cadp_cygwin.com, ./INSTALLATION_2,
		man/*/caesar.*, man/*/caesar.adt.*

Nature:		A bug in in the "more" utility on Windows/Cycgin caused CAESAR
		and CAESAR.ADT to freeze when displaying the ".err" file. To
		avoid this problem, a new utility, "cadp_more", has been added
		to CADP. This utility uses the pager defined by the $PAGER
		environment variable, if it is defined; otherwise, it uses
		"less -X -E" on Windows/Cygwin systems and "more" on all other
		architectures.
		
		The "tst" shell script has been updated to include a test that
		the definition of $PAGER, when defined, is correct. The manual
		pages for CAESAR and CAESAR.ADT have been updated. The file
		INSTALLATION_2 has been updated to include an explanation of
		the $PAGER environment variable.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1391
Date:		Fri Jun 19 11:55:21 CEST 2009
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		demos/demo_05/Makefile, demos/demo_05/list.t,
		demos/demo_05/user.c, demos/demo_25/=READ_ME.txt,
		demos/demo_25/cfs.lotos, demos/demo_25/cfs.t,
		demos/demo_29/=READ_ME.txt, demos/demo_29/DATA.lib,
		demos/demo_29/spec.t, bin.*/caesar.adt

Nature:		Demos 5, 25, and 29 have been updated to take advantage of the
		option to store values of LOTOS sorts in a hash table (see item
		#1250 above). In the course of making these changes, some minor
		fixes and enhancements were made to the CAESAR.ADT compiler
		concerning issues when several LOTOS sorts are stored in
		hash tables.
-------------------------------------------------------------------------------
BUG FIX
Number:		1392
Date:		Wed Jun 24 09:52:49 CEST 2009
Report:		Simon Bouland (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		man/*/svl.*

Nature:		In the SVL manual page, the syntax of the "deadlock" and
		"livelock" statements contained an error, which has been
		fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1393
Date:		Mon Jul  6 09:51:08 CEST 2009
Report:		Sylvain Robert (INRIA/VASY)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.old

Nature:		If compilation stops before completion because of an error,
		the CAESAR and CAESAR.ADT compilers now delete the intermediate
		files (such as ".ov4", etc.) that they create in the $CADP_TMP
		directory.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1394
Date:		Tue Jul  7 14:47:17 CEST 2009
Authors: 	Hubert Garavel, Yves Guerte, and Christine McKinty (INRIA/VASY)
Files:		man/*/bcg_read.*, man/*/bcg_write.*

Nature:		The manual pages for "bcg_read" and "bcg_write" have been
		completely rewritten. In particular, they now contain the full
		specification for the types of function arguments.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1395
Date:		Thu Jul  9 10:16:24 CEST 2009
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old, bin.*/cadp_memory,
		man/*/caesar.*

Nature:		An new phase (called the "information phase") has been added
		to CAESAR to gather information about the current machine
		architecture and the amount of physical memory available.
		With this information, CAESAR now generates simulator programs
		that are optimized to store as many states as possible on the
		machine.

		Before running a simulator program, the physical parameters
		of the current machine are checked to see whether they match
		those of the machine on which the simulator program was
		generated. If they do not match, a warning that the simulator
		program code is not optimal is displayed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1396
Date:		Thu Jul  9 12:02:38 CEST 2009
Authors:	Remi Herilier and Frederic Lang (INRIA/VASY)
Files:		bin.*/fsp2lotos, man/*/fsp2lotos.*

Nature:		The Fsp2Lotos tool has been modified so that it now always
		generates an Exp.Open file corresponding to the root process
		instead of a BCG graph. The BCG graph can still be generated
		by the user with Exp.Open/Generator.
-------------------------------------------------------------------------------
BUG FIX
Number:		1397
Date:		Thu Jul  9 14:32:05 CEST 2009
Authors:	Hubert Garavel and Louis Paternault (INRIA/VASY)
Files:		bin.*/bcg_*, bin.*/libBCG.a

Nature:		Calling the BCG tools with the options "-short S -medium M"
		where S is 32 and M is any value other than 1, or where M is
		32 and S is any value other than 1, previously caused
		inconsistencies in internal calculations and errors in the
		results. This bug has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1398
Date:		Thu Jul  9 18:55:23 CEST 2009
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		bin.*/bcg_*, bin.*/libBCG.a

Nature:		Calling the BCG tools with either the "-short N" option or the
		"-medium N" option where N is 29, 30, or 31, caused the tools
		to crash with the following error message:
		   bcg_*_1: too long natural in BCG_WRITE_UNSIGNED
		This bug has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1399
Date:		Fri Jul 10 09:45:17 CEST 2009
Report:		Damien Thivolle (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c

Nature:		The Exp.Open tool was not able to parse a composition
		expression of the form "hide using ..." that was not ended by
		the keywords "end hide". This bug has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1400
Date:		Fri Jul 10 11:55:09 CEST 2009
Report:		Damien Thivolle (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel

Nature:		When writing to an Exp.Open file a composition expression of
		the form "hide using ...", the SVL tool omitted the quotes that
		are needed around the hide file name. This bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1401
Date:		Fri Jul 10 13:08:34 CEST 2009
Author:		Remi Herilier and Frederic Lang (INRIA/VASY)
Files:		com/fsp.open, man/*/fsp.open.*

Nature:		A new shell script named Fsp.Open has been created. Following
		the same principles as Bcg_Open, Caesar.Open, Exp.Open, and
		Seq.Open, this script provides an interface between the FSP
		language and the OPEN/CAESAR tools Generator, Bisimulator,
		Evaluator, Ocis, etc.

		The Fsp.Open script works in two steps:

		1. Fsp.Open generates an Exp.Open file corresponding to an FSP
		   process using Fsp2Lotos and SVL.

		2. Fsp.Open calls Exp.Open on the generated Exp.Open file,
		   with appropriate command-line arguments.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1402
Date:		Fri Jul 10 14:19:21 CEST 2009
Authors:	Hubert Garavel and Louis Paternault (INRIA/VASY)
Files:		bin.*/bcg_*, bin.*/libBCG.a

Nature:		A new version of the BCG format, 1.1, has been introduced,
		which enables generation and storage of much larger graphs.
		This removes the limitations of BCG format 1.0, which only
		supported a maximum of 2^29 states and 2^29 transitions.

		- Using BCG 1.1 on a 32-bit machine, it is now possible to
		  have up to 2^31-2 states and 2^32 transitions, meaning that
		  a graph four times larger (in terms of states) or eight
		  times larger (in terms of transitions) can be generated.

		- Using BCG 1.1 on a 64-bit machine, it is now possible to
		  have up to 2^44 states and 2^44 transitions, meaning that
		  a graph more than 3000 times larger can be generated.

		The transition from BCG 1.0 to BCG 1.1 will be smooth, so
		that end-users will hardlly see any difference (except the
		removal of the BCG 1.0 limitation described above). More
		precisely:

		- As with BCG 1.0, the BCG 1.1 files generated on 32-bit and
		  64-bit machines are identical. More generally, BCG files
		  are identical across architectures, which ensures binary
		  compatibility between these architectures.
		
		- Because of their enhanced capacity, BCG 1.1 files are
		  slightly larger than their BCG 1.0 counterparts. Tests on
		  230 large files revealed that the increase is 0,33% on
		  average and 4,17% in the worst case.

		- BCG 1.1 is backward-compatible with BCG 1.0, meaning that
		  tools in recent CADP releases (i.e., releases more recent
		  than CADP beta-version 2008-e) can read BCG 1.0 and BCG 1.1
		  files transparently.

		- Tools in CADP releases prior to CADP beta-version 2008-e
		  cannot handle BCG 1.1 files. If such a tool supporting only
		  BCG 1.0 is applied to a BCG 1.1 file, the following message
		  is displayed:
		    "unknown version number 1.1 in BCG_OPEN"
		  It is then advised to upgrade to a recent version of CADP.

		- By default, tools in these recent CADP releases will produce
		  files in BCG 1.1 format.

		- It is also possible to make these tools produce files in
		  the old BCG 1.0 format by setting the environment variable
		  $BCG_VERSION to 1.0. The BCG files produced this way should
		  be usable with the last stable version CADP 2006-a, except
		  BCG_DRAW and BCG_EDIT that will do a segmentation fault on
		  these files (due to a bug that has been corrected since).
		  To avoid the problem, the BCG 1.0 files given to BCG_DRAW
		  and BCG_EDIT of CADP 2006-a should be produced using
		  CADP 2006-a (or any CADP release prior to CADP beta-version
		  2008-e).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1403
Date:		Sat Jul 11 16:08:01 CEST 2009
Author:		Hubert Garavel (INRIA/VASY)
File:		bin.*/libbcg_info.a

Nature:		The speed of "bcg_info -size" has been improved, by not reading
		BCG zones that are not useful.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1404
Date:		Sun Jul 12 10:45:01 CEST 2009
Report:		Damien Thivolle (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
File:		bin.*/libBCG.a

Nature:		The functions of the "bcg_write" API now check strictly that
		state numbers and transition numbers stay within bounds.

		Also, when a limit is exceeded, the error messages displayed
		have been improved. Previously, when a BCG graph being
		generated was too large, an error message of the form "too
		long natural" was displayed. This posed two problems:

		- It did not specify whether it was the number of states or
		  the number of transitions that exceeded the limit, nor
		  the value of the limit itself.

		- In the case where the number of transitions exceeded the
		  limit, processing continued until either the number of
		  states also exceeded the limit or graph generation was
		  complete.

		Now, graph generation stops immediately when a limit is
		exceeded and the error messages are more informative, e.g.,
		  bcg_edge: too many edges (2^44) in BCG_WRITE_EDGE
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1405
Date:		Thu Jul 16 09:33:49 CEST 2009
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		On 64-bit architectures, the maximum number of states that
		CAESAR can generate and store has been increased from 2^32 -1
		to 2^34 -1 (i.e., 17,179,869,183 states). Consequently, if
		one runs on a 32-bit machine a simulator that was created on
		a 64-bit machine, a fatal error is raised.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1406
Date:		Mon Jul 20 15:35:54 CEST 2009
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/libcaesar.a, bin.*/caesar, bin.*/caesar.old

Nature:		The hash function CAESAR_0_HASH() used by Open/Caesar and the
		hash function used by CAESAR have been improved. This leads to
		faster computation and, for CAESAR, better dispersion.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1407
Date:		Mon Jul 20 17:02:15 CEST 2009
Report:		Hubert Garavel (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/xtl, bin.*/libXTL.a, man/*/xtl.*,
		incl/xtl_number.h, incl/xtl_standard.h,
		src/xtl/radius.xtl, src/xtl/info.xtl, src/xtl/path.xtl,
		src/xtl/walk_print_nice.xtl, src/xtl/walk.xtl

Nature:		The XTL language has been significantly modified, to enable
		handling of 64-bit numbers. This was motivated by the fact
		that the BCG files generated by CADP tools on 64-bit
		architectures may contain more than 2^32 states and/or edges,
		so that certain quantities (state numbers, edge numbers,
		cardinality of state and edge sets, number of levels in
		breadth-first or depth-first search explorations, etc.) can
		now exceed the limits of XTL's "integer" type.

		A new predefined data type, named "number", has been added to
		the XTL language. This type allows the manipulation of state,
		label, and edge numbers, which were previously manipulated as
		values of type "integer".
		
		Note that the existing "integer" type remains unchanged,
		continuing to be encoded in 32 bits on both 32-bit and 64-bit
		architectures.

		The "number" type is equipped with the usual arithmetic
		operators (except unary minus) and relational operators already
		available for the "integer" type in XTL. Moreover, values of
		both types can be freely mixed within arithmetic and relational
		expressions. Conversion operators between the "number" type
		and the types "character", "integer", and "real" are also
		provided. Constants of type "number" are written in decimal
		notation preceded by a '#' character (e.g., #429496127295).

		The following functions, which previously returned values of
		type "integer", were modified in order to return values of
		type "number":

		    number_of_states : -> number
		    number_of_labels : -> number
		    number_of_edges  : -> number

		    number : state -> number
		    number : label -> number
		    number : edge  -> number

		    card : stateset -> number
		    card : edgeset  -> number
		    card : labelset -> number

		The predefined functions related to the "number" type are
		declared in the new header file "xtl_number.h". Several library
		".xtl" files containing various XTL operators were modified
		in order to use the "number" type instead of the "integer" type
		at appropriate places.

		The XTL manual page has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1408
Date: 		Thu Jul 23 18:14:07 CEST 2009
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/cunctator.a, man/*/cunctator.*

Nature:		A new tool named CUNCTATOR has been added to the CADP toolbox.
		This tool performs (on the fly) steady-state simulation of
		continuous-time Markov chains and computes the throughputs
		of a given set of transition labels. See the manual page
		for details.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1409
Date:		Fri Jul 24 14:16:29 CEST 2009
Report:		Damien Thivolle (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
File:		incl/X_STRING.h

Nature:		The X_STRING.h header file has been modified, to remove
		warnings displayed by "lint", the Solaris C code checker, on
		64-bit machines.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1410
Date:		Wed Jul 29 09:53:53 CEST 2009
Authors:	Julien Henry and Hubert Garavel (INRIA/VASY)
Files:		com/contributor, com/tst, src/com/contributor/*,
		tcl-tk/bwidget, ./README

Nature:		A new tool, Contributor, has been added to CADP. This tool
		enables users to submit example files to the CADP development
		team, to enhance the test suite. See the manual page for
		details.
		
		The "tst" shell script has been enhanced to include tests for
		the presence of the following:
		- digest on Solaris systems
		- md5sum on Linux and Windows/Cygwin systems
		- md5 on MacOS X systems
-------------------------------------------------------------------------------
BUG FIX
Number:		1411
Date:		Mon Aug 31 12:25:11 CEST 2009
Author:		Wendelin Serwe (INRIA/VASY)
File:		com/bcg_draw

Nature:		When the -size option is not specified, BCG_DRAW now produces
		a graph in A4 format. Previously, it produced Letter format,
		contrary to the manual page, which gave the default as A4.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1412
Date:		Mon Aug 31 12:38:39 CEST 2009
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		com/bcg_draw, man/*/bcg_draw.*

Nature:		A new option, -paper, has been added to BCG_DRAW. This option
		can be used to specify one of the following paper sizes:
		Letter, A0, A1, A2, A3, A4, A5. This enables the user to
		visually inspect larger graphs and to produce large posters.
		Note that the -paper and -size options of BCG_DRAW are
		mutually exclusive. The manual page has been updated
		accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1413
Date:		Tue Sep 15 12:02:02 CEST 2009
Author:		Wendelin Serwe (INRIA/VASY)
File:		src/bcg_edit/bcg_edit.tcl

Nature:		The following changes have been made to BCG_EDIT:

		- The bounding box now corresponds to A4 format. Previously,
		  the bounding box was Letter format.

		- The height of the BCG_EDIT window has been increased.

		- Previously, under certain circumstances, BCG_EDIT wrongly
		  indicated that a file had been modified. This happened with
		  the following sequence of actions:
		  - Start BCG_EDIT with file X.bcg.
		  - Click on "Options" then "Postscript options".
		  - Close the Postscript options window by clicking "Cancel".
		  - Quit BCG_EDIT: a pop-up window indicates incorrectly that
		    the file X.bcg has been modified.
		  This behaviour has been modified, and BCG_EDIT now indicates
		  that the file is modified only when the Postscript options
		  window is closed by clicking "OK".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1414
Date:		Mon Sep  7 10:11:56 CEST 2009
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
File:		com/tst

Nature: 	The "tst" shell script has been enhanced and now displays the
		amount of RAM available on the current machine.
-------------------------------------------------------------------------------
BUG FIX
Number:		1415
Date:		Tue Sep  8 16:34:25 CEST 2009
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/svl_kernel

Nature:		Previously, the "prio" operator was not treated correctly. For
		instance, the expression "prio A > B" was treated like "prio
		all but A > all but B". This problem has been corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1416
Date:		Fri Sep 11 11:49:21 CEST 2009
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		com/bcg_info, man/*/bcg_info.*

Nature:		A new option, -format, has been added to BCG_INFO. This option
		displays the version of the BCG format of a BCG file (1.0 or
		1.1). See item #1402 above for information about BCG 1.1.
-------------------------------------------------------------------------------
BUG FIX
Number:		1417
Date:		Wed Sep 23 12:19:14 CEST 2009
Author:		Wendelin Serwe (INRIA/VASY)
File:		src/bcg_edit/bcg_edit.tcl

Nature:		There was a bug in the handling of bounding box by "bcg_edit",
 		which sometimes led to states being placed outside the viewable
		area of the window, where they could neither be seen nor
		selected. The problem has been corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		1418
Date:		Wed Sep 23 13:27:58 CEST 2009
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
File:		bin.*/libcaesar.a

Nature:		Internal optimizations have been made to OPEN/CAESAR's table_1
		to reduce the amount of memory consumed, notably for small
		tables on 64-bit machines.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1419
Date:		Fri Sep 25 12:00:41 CEST 2009
Authors:	Yann Genevois and Hubert Garavel (INRIA/VASY)
File:		src/com/cadp_compiler

Nature:		The "cadp_compiler" shell script has been updated to take into
		account version 11 of the Intel C compiler, CC.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1420
Date:		Fri Sep 25 15:47:11 CEST 2009
Authors:	Ghassan Chehaibar and Meriem Zidouni (Bull), Radu Mateescu, and
		Anton Wijs (INRIA/VASY)
Files:		doc/*/Chehaibar-Zidouni-Mateescu-09.*,
		doc/*/Mateescu-Wijs-09-a.*, doc/=READ_ME.txt, doc/biblio.bib

Nature:		Two new papers have been added:

		- Chehaibar-Zidouni-Mateescu-09 presents a modeling method
		  particularly suited to analyzing interactions between Message
		  Passing Interface library execution and the distributed cache
		  coherence protocol.

		- Mateescu-Wijs-09-a proposes a general framework of
		  hierarchical caches which can be used by breadth-first
		  searches.
-------------------------------------------------------------------------------
BUG FIX
Number:		1421
Date:		Fri Sep 25 17:17:31 CEST 2009
Report:		Jean-Pierre Elloy (Ecole Centrale/IRCCyN, Nantes, France),
		Henrink Pilegaard (Danmarks Techniske Universitet, Lingby,
		Denmark)
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)
File:		com/arch

Nature:		Changes have been made to the "arch" shell script, to add
 		support for MacOS X 10.6 (Snow Leopard).
-------------------------------------------------------------------------------
BUG FIX
Number:		1422
Date:		Wed Sep 30 13:07:01 CEST 2009
Report:		Romain Chossart (Universite de Sherbrooke, Canada)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.adt, man/*/caesar.*, man/*/caesar.adt.*

Nature:		A bug in the "-warning" option of the CAESAR.ADT compiler has
		been fixed. This option now suppresses 18 warning messages that
		the option did not trap previously. The CAESAR and CAESAR.ADT
		manual pages have been modified to stress that using the
		"-warning" option may hide actual issues in the LOTOS
		specification.
-------------------------------------------------------------------------------
BUG FIX
Number:		1423
Date:		Thu Oct  8 17:07:01 CEST 2009
Report:		Holger Hermanns (Saarland University, Germany)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c, man/*/exp.open.*

Nature:		The "||" parallel composition operator of Exp.Open attempted
		to synchronize stochastic transitions, which is not allowed
		by the semantics of Interactive Markov Chains. This has been
		corrected.

		Consequently, stochastic labels of the form "label; rate %f"
		are not synchronized, even though "label" alone should be
		synchronized. In this case, Exp.Open issues a warning.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1424
Date:		Tue Oct 13 17:31:32 CEST 2009
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)	
Files:		com/xeuca, src/com/xeuca_man, man/*/xeuca.*,
		src/com/xeuca_version,
		src/eucalyptus/eucalyptus.tcl,
		src/eucalyptus/default/@sophia,
		src/eucalyptus/default/@sophia_doc,
		src/eucalyptus/default/atg,
		src/eucalyptus/default/fc2explicit,
		src/eucalyptus/default/fc2implicit,
		src/eucalyptus/default/fc2min

Nature:		Several updates have been made to Eucalyptus, the graphical
		user interface to the CADP tools:
		
		The Aldebaran compiler, which is no longer supported, is no
		longer available from Eucalyptus.

		The Fc2Tools and Autograph tools have been removed too. As
		a consequence:

		- The "FC2TOOLS" item on the "Options" menu is no longer
		  present.

		- The "Help" menu no longer contains an entry for "FC2Tools".
		
		Also, the contextual menus giving operations on LTSs have
		been simplified:

		- The "Draw step by step" option of "Visualize" is no longer
		  available.

		- On-the-fly generation using Fc2 is no longer available
		  (but using Open-Caesar for on-the-fly generation is still
		  possible).

		- For reduction of LTSs, there are now only two possibilities:
		  Bcg_Min or Reductor.

		- For comparison of LTSs, Bisimulator is the only possibility.

		- For detecting deadlocks in explicit LTSs, there are now two
		  possibilities: Exhibitor or Bcg_Info.

		- For detecting livelocks, Evaluator is the only possibility.

		Notice that LTSs files having the ".fc2" extension are still
		supported by Eucalyptus. Such files can no longer be processed
		by the Fc2Tools, but they can still be processed using the
		CADP tools.
-------------------------------------------------------------------------------
BUG FIX
Number:		1425
Date:		Tue Oct 20 09:22:12 CEST 2009
Report:		Julio Peralta (INRIA/ESPRESSO)
Author:		Frederic Lang (INRIA/VASY)
Files:		man/*/exp.open.*, man/*/svl.*

Nature:		The Exp.Open and SVL manual pages claimed that the tau*.a
		equivalence relation is a congruence for parallel composition,
		which is not true. The manual pages have been corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		1426
Date:		Wed Oct 21 12:45:39 CEST 2009
Report: 	Claude Helmstetter (INRIA/VASY)
Authors:	Damien Thivolle, Hubert Garavel, and Wendelin Serwe (INRIA/VASY)
Files:		bin.macOS/cadp_memory, bin.mac86/cadp_memory

Nature:		A bug in the "cadp_memory" program on Mac OS X systems caused
		the amount of physical memory to be incorrectly reported. This
		bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1427
Date:		Thu Oct 22 15:17:10 CEST 2009
Author:		Remi Herilier (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl,
		src/eucalyptus/icons/icon_fsp.xbm

Nature:		Further changes have been made to the Eucalyptus graphical
		user interface in order to support the FSP language (see item
		#1346 above):
		
		- The version number and manual page for Fsp.Open and FSP2LOTOS
		  are displayed.
		
		- A contextual menu for FSP ".lts" files has been added. It
		  makes available the same operations on ".lts" as the
		  contextual menu for ".lotos" files.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1428
Date:		Thu Oct 22 18:07:15 CEST 2009
Report:		Mihaela Sighireanu (LIAFA) and Yann Genevois (INRIA/VASY)
Author:		Hubert Garavel and Claude Helmstetter (INRIA/VASY)
Files:		./INSTALLATION_MACOS, com/tst,
		src/com/cadp_indent, src/com/cadp_cc

Nature:		Further changes have been made to support Mac OS X 10.6 ("Snow
		Leopard"):
		
		- The "cadp_indent" shell script has been updated to avoid
		  invoking the C code indenter "/usr/bin/indent" supplied with
		  Snow Leopard, because this indenter often crashes, leaving
		  the C file corrupted.

		- The "tst" shell script was modified to warn users about the
		  fact that the C code indenter will not be invoked on Snow
		  Leopard systems.
		
		- The "cadp_cc" shell script has been modified to take into
		  account the Gcc 4.2 compiler: the -Wno-long-float option
		  has been removed, and the -Wno-format, which is now required
		  for compiling CADP code without warnings, has been added.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1429
Date:		Wed Oct 28 09:36:48 CET 2009
Author:		Frederic Lang (INRIA/VASY)
File:		bin.*/svl_kernel, src/svl/standard, man/*/svl.l

Nature:		Since Fc2Tools are no longer supported by their authors, the
		SVL tool was simplified to ensure that Fc2Tools are no longer
		called from SVL scripts. Specifically:

		- The parallel Fc2 format is no longer supported.

		- The directive "with fc2tools" is ignored by SVL, which issues
		  a warning.

		- If one of the shell variables $DEFAULT_REDUCTION_TOOL,
		  $DEFAULT_COMPARISON_TOOL, or $DEFAULT_LOCK_TOOL has the
		  value "fc2tools", then SVL issues an error when attempting
		  reduction, comparison, or deadlock/livelock checking using
		  the default tool.

		- The shell variables $FC2_OPTIONS, $EXP2FC2_EXECUTABLE,
		  $FC2EXPLICIT_EXECUTABLE, and $FC2IMPLICIT_EXECUTABLE are no
		  longer defined.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1430
Date:		Fri Oct 30 09:17:11 CET 2009
Author:		Radu Mateescu (INRIA/VASY)
File:		demos/demo_31/demo.svl

Nature:		The demo 31 has been extended in order to compute throughputs
		by means of steady-state simulation of CTMCs, which is carried
		out on the fly using the CUNCTATOR tool (see item #1408 above).
-------------------------------------------------------------------------------
BUG FIX
Number:		1431
Date:		Fri Oct 30 10:36:30 CET 2009
Report: 	Radu Mateescu and Hubert Garavel (INRIA/VASY)
Author: 	Remi Herilier (INRIA/VASY)
File:		src/eucalyptus/eucalyptus.tcl

Nature:		The Eucalyptus graphical user interface to the CADP tools has
		been modified and now accepts file names that contain spaces.
		Note, however, that this does not guarantee that all the CADP
		tools accept such file names.
-------------------------------------------------------------------------------
BUG FIX
Number:		1432
Date:		Fri Oct 30 10:47:43 CET 2009
Report:		Yves Guerte (INRIA/VASY)
Author: 	Remi Herilier (INRIA/VASY)
File:		src/eucalyptus/eucalyptus.tcl

Nature:		Previously, Eucalyptus crashed if a directory being viewed
		contained a file with a name starting with a tilde (~). This
		bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1433
Date:		Mon Nov  2 17:38:34 CET 2009
Report:		Yann Genevois (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		demos/demo_12/maa.t, demos/demo_16/BRT.t

Nature:		Minor modifications have been made to these demos, to avoid
		warnings ("ADT_GCD defined but not used") when they are
		compiled with Gcc 4.3.2.
-------------------------------------------------------------------------------
BUG FIX
Number:		1434
Date:		Wed Nov  4 17:32:49 CET 2009
Report: 	Yann Genevois (INRIA/VASY) and Larry Tan (University of
		Stirling, Scotland, UK)
Authors:	Wendelin Serwe, Hubert Garavel, and Frederic Lang (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.old

Nature:		Previously, certain error messages that were displayed when
		code generated by CAESAR and CAESAR.ADT was executed directly
		were not displayed when the same code was executed through SVL.

		The C code generated by CAESAR and CAESAR.ADT has been modified
		and now always includes a call to "fflush (stdout)" before each
		call to "raise (15)". Thus, useful error messages such as:
		   #264 error in file ``.h'' :
		        unexpected case (not defined by the equations)
		        ...
		are now properly displayed when the generated code is executed
		through SVL.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1435
Date:		Thu Nov  5 12:18:41 CET 2009
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		demos/demo_02/=READ_ME.txt, demos/demo_02/BITALT.t,
		demos/demo_03/=READ_ME.txt, demos/demo_03/DATALINK.t,
		demos/demo_10/=READ_ME.txt, demos/demo_10/BITALT.t,
		demos/demo_10/BITALT.lib,demos/demo_16/=READ_ME.txt,
		demos/demo_16/BRP.lib, demos/demo_16/*.f, demos/demo_16/*.t,
		demos/demo_18/=READ_ME.txt, demos/demo_18/transit_node.t,
		demos/demo_23/=READ_ME.txt, demos/demo_23/scen_incl.t,
		demos/demo_31/=READ_ME.txt, demos/demo_31/SCSI_A.t,
		demos/demo_35/=READ_ME.txt, demos/demo_35/summation.t,
		demos/demo_36/=READ_ME.txt, demos/demo_36/sieve.t

Nature:		The ".t" files of several demos have been simplified:
		instead of redefining the iterator on a natural number type T
		to restrict iterations to a smaller subset of values than
		0..255, they now take advantage of the new semantics of the
		CAESAR_ADT_HASH_T macro for natural number types (see items
		#1251 and #1255 above).

		Additionally, demo 16 has been simplified in several ways:
		It now uses the BOOLEAN.lib and NATURAL.lib libraries instead
		of X_BOOLEAN.lib and X_NATURAL.lib. Consequently, the ".t"
		files have been greatly simplified and all the ".f" files have
		been removed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1436
Date:		Fri Nov  6 09:05:53 CET 2009
Report:		Hatem Hamdi (IRISA, France)
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)
File:		src/eucalyptus/eucalyptus.tcl

Nature:		Previously, if an ".aut" file containing an error was viewed or
		edited using the Eucalyptus graphical interface, the data
		remained in memory. After correction of the ".aut" file, all
		calls to view or edit any file were responded to with the same
		graph. There were also unpredictable consequences following a
		combination of unsuccessful attempts to view or edit a graph,
		sometimes causing multiple windows to be opened. These problems
		have been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1437
Date:		Fri Nov  6 09:22:22 CET 2009
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)
Files:		com/xeuca, src/com/xeuca_man,
		src/com/src/eucalyptus/eucalyptus.tcl,
		src/eucalyptus/xeucarc_standard,
		src/eucalyptus/default/@liege,
		src/eucalyptus/default/@liege_doc,
		src/eucalyptus/default/apero-lib,
		src/eucalyptus/default/apero-syn,
		src/eucalyptus/help/ft.LOTOS_Libraries,
		src/eucalyptus/icons/icon_apero.xbm,
		src/eucalyptus/icons/icon_apero_tool.xbm,
		src/eucalyptus/icons/icon_xlotos.xbm, man/*/xeuca.*

Nature:		The APERO tool has been removed from Eucalyptus, because it is
		no longer maintained and is only available on Sparc/Solaris
		machines.
		
		Files with the extension ".LOTOS" (in uppercase letters) are no
		longer supported by Eucalyptus, and the "Extended LOTOS specs"
		checkbox has been removed from the presentation menu. The
		"Change Directory" menu no longer offers to explore the APERO
		directory.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1438
Date:		Fri Nov  6 10:04:16 CET 2009
Author:		Hubert Garavel (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl,
		src/eucalyptus/icons/icon_lnt.xbm

Nature:		Eucalyptus now recognizes LOTOS NT files with file extension
		".lnt". An icon for such files has been added.
-------------------------------------------------------------------------------
BUG FIX
Number:		1439
Date:		Mon Nov  9 17:38:58 CET 2009
Report: 	Hubert Garavel (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
File:		com/bcg_info

Nature:		Previously on a 32-bit machine, a call to "bcg_info -size" for
		a graph with more than 2^32 transitions resulted in an
		incorrect number of transitions being displayed. This bug has
		been fixed, and in such cases, the following error message is
		displayed:
		   bcg_read_1: too long natural (2^32) for a 32-bit machine
		   in BCG_READ_LONG_NATURAL
-------------------------------------------------------------------------------
BUG FIX
Number:		1440
Date:		Tue Nov 10 18:19:38 CET 2009
Authors:	Hubert Garavel, Frederic Lang, and Wendelin Serwe (INRIA/VASY)
Files:		demo_27/=READ_ME.txt, demo_27/*.lotos, demo_27/*.t,
		demo_27/*.f

Nature:		Previously, the LOTOS file of demo 27 contained two invalid
		guards of the form:
		   [hosts<>emptyh and ((id(headh(hosts))==Id)
		      or(id(headh(hosts))==leader))] ->
		These only worked because the X_BOOLEAN.lib library was used,
		which implements the "and" operator using lazy evaluation.
		The invalid guards have been corrected, and the demo has been
		simplified to use the BOOLEAN library instead of X_BOOLEAN.
		Consequently, the ".t" and ".f" files have been removed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1441
Date:		Wed Nov 18 20:07:13 CET 2009
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)	
File:		src/installator/installator.tcl

Nature:		The Installator now checks the email address supplied, and
		issues a warning if does not appear to be a professional email
		address and will therefore be rejected later in the
		installation and licensing process.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1442
Date:		Tue Nov 24 13:01:56 CET 2009
Report:		Hubert Garavel and Alain Kaufmann (INRIA/VASY)
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG.a, bin.*/libBCG_IO.a, bin.*/bcg_io,
		incl/bcg_edges.h, incl/bcg_options.h
		
Nature:		When BCG_IO converts an input graph, in BCG format, to an
		output graph, also in BCG format but with a different BCG
		version, it now produces the output BCG graph using the same
		compression type and compression parameters as the input BCG
		graph, unless one of the following options "-uncompress",
		"-compress", "-size", "-register", "-short", or "-medium"
		is specified.

		For instance, one can easily upgrade a graph "input.bcg" in
		BCG 1.0 format to the BCG 1.1 format by executing:
			bcg_io input.bcg output.bcg
			mv output.bcg input.bcg
-------------------------------------------------------------------------------
BUG FIX
Number:		1443
Date:		Tue Nov 24 17:21:05 CET 2009
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/libBCG_IO.a, bin.*/bcg_io, bin.*/bcg_graph,
		bin.*/bcg_labels, bin.*/bcg_merge, bin.*/bcg_min

Nature:		Previously, the "-uncompress" option was not always handled
		correctly by the BCG_IO_WRITE_BCG_BEGIN() function. If the
		value of the format parameter was 1, the "-uncompress" option
		caused an unnecessary sort of the transitions, increasing the
		time taken to execute the command. If the value of the format
		parameter was 2, the "-uncompress" option was ignored. These
		errors, which potentially impacted the Bcg_Graph, Bcg_Io,
		Bcg_Labels, Bcg_Merge, and Bcg_Min tools, have been corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		1444
Date:		Tue Nov 24 19:04:30 CET 2009
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/bcg_graph

Nature:		Previously, if both the "-fifo" and "-compress" options
		were specified when calling Bcg_Graph, a correct graph was
		generated but the following warning was displayed in error:
		    -compress option is ignored (option not supported yet
		    for -fifo)
		This bug has been fixed, and the warning message is no longer
		displayed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1445
Date:		Tue Nov 24 19:11:17 CET 2009
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
File:		bin.*/bcg_labels

Nature:		Bcg_Labels now produces the output BCG graph using the same
		compression parameters as its input BCG graph, unless an
		option that changes the parameters ("-compress", "-uncompress",
		"-size", "-register", "-short", or "-medium") is specified.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1446
Date: 		Mon Nov 30 10:57:58 CET 2009
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a,
		man/*/caesar_solve_1.*, doc/*/Garavel-92-a.*

Nature:		A new on-the-fly resolution algorithm, named A8, was added to
		the CAESAR_SOLVE boolean resolution library of OPEN/CAESAR.
		Similarly to algorithms A0 and A5 already present in the
		library, algorithm A8 is based upon a depth-first search (DFS)
		of the dependency graph between boolean variables and is able
		to solve general equation blocks (containing any combinations
		of disjunctions and conjunctions in the right hand sides of the
		equations).

		Algorithm A8 is optimized to perform an optimal detection of
		examples (resp. counterexamples) in maximal (resp. minimal)
		fixed point equation blocks, in the sense that it terminates
		as soon as the portion of the dependency graph explored so far
		contains exactly one example or counterexample. This is
		achieved by means of a suspend-resume DFS, which suspends the
		exploration of a certain successor vertex and resumes it when
		the truth value of this vertex becomes significant for
		determining the truth value of the current source vertex.
		Algorithm A8 explores less boolean variables than any of the
		other algorithms of CAESAR_SOLVE, but may be slightly slower
		in some cases. It is especially useful for solving the boolean
		equation systems encoding the equivalence checking of
		nondeterministic labelled transition systems.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1447
Date:		Tue Dec  1 18:48:52 CET 2009
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
File:		bin.*/bcg_labels, man/*/bcg_labels.*

Nature:		A new option -scramble has been added to BCG_LABELS. This
		option can be used to remove information contained in the
		labels of a BCG graph. It renames all label strings except
		the hidden label "i" (which is kept unchanged) into simpler
		strings defined by a pattern (i.e., a string that contains
		the "%d" substring) instantiated by consecutive numbers. For
		instance using the pattern "A%d", labels are renamed into
		"A1", "A2", "A3", etc.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1448
Date: 		Mon Dec  7 18:00:05 CET 2009
Authors:	Hubert Garavel, Claude Helmstetter, Frederic Lang,
		Radu Mateescu, Olivier Ponsini, Gwen Salaun, Wendelin Serwe,
		Damien Thivolle, Anton Wijs (INRIA), Holger Hermanns
		(Saarland University), Nicolas Coste, Etienne Lantreibecq
		(STMicroelectronics)
Files:		doc/*/Garavel-Helmstetter-Ponsini-Serwe-09.*,
		doc/*/Lang-Mateescu-09.*,
		doc/*/Garavel-Salaun-Serwe-09.*,
		doc/*/Garavel-Thivolle-09.*,
		doc/*/Mateescu-Wijs-09-b.*,
		doc/*/Coste-Hermanns-Lantreibecq-Serwe-09.*,
		doc/*/Helmstetter-09.*,
		doc/=READ_ME.txt, doc/biblio.bib

Nature:		Seven new publications have been added to the CADP release:

		- Garavel-Helmstetter-Ponsini-Serwe-09 presents an approach to
		  the validation of a SystemC/TLM description by translation
		  into LOTOS, reusing as much as possible of the original
		  SystemC/TLM C++ code. This is achieved by exploiting a
		  feature offered by the CADP toolbox, namely the import of
		  external C code in a LOTOS model. Experiments are reported
		  about the application of the approach on the BDisp, a complex
		  graphical processing unit designed by STMicroelectronics.

		- Lang-Mateescu-09 proposes a new technique of partial order
		  reductions based on compositional confluence detection (CCD),
		  which generalizes the notion of confluence defined by Milner
		  and exploits the fact that synchronizing transitions that are
		  confluent in the individual processes yield a confluent
		  transition in the system graph. CCD-based reductions were
		  implemented in the CADP toolbox, and several examples show
		  that adding CCD improves reductions with respect to
		  compositional verification and other partial order
		  reductions.

		- Garavel-Salaun-Serwe-09 defines a structural operational
		  semantics for value-passing CHP, which is general enough to
		  handle value-passing CHP with communication channels open to
		  the environment, and is also independent of any particular
		  (2- or 4-phase) handshake protocol used for circuit
		  implementation. A translation of CHP into LOTOS is also
		  described, in order to allow asynchronous hardware
		  architectures expressed in CHP to be verified using the CADP
		  toolbox. A translator from CHP to LOTOS has been implemented
		  and successfully used for the compositional verification of
		  two industrial case studies, namely an asynchronous
		  implementation of the DES (Data Encryption Standard) and an
		  asynchronous interconnect of a NoC (Network on Chip).

		- Garavel-Thivolle-09 proposes a general approach for modelling
		  and verifying GALS (Globally Asynchronous, Locally
		  Synchronous) systems using a combination of synchronous
		  languages (for the sequential components) and process calculi
		  (for communication channels and asynchronous concurrency).
		  This approach is illustrated with an industrial case-study
		  provided by Airbus: a TFTP/UDP communication protocol between
		  a plane and the ground, which is modelled using the
		  Eclipse/Topcased workbench for model-driven engineering and
		  then analysed formally using the CADP toolbox.

		- Mateescu-Wijs-09-b studies several variants of weak
		  tau-confluence, which yield stronger reductions of labeled
		  transition systems, but are computationally more expensive
		  than strong tau-confluence. New encodings of these
		  tau-confluence variants are proposed in terms of
		  alternation-free boolean equation systems, and implemented
		  using OPEN/CAESAR as an on the fly reduction module. The
		  effectiveness of these new encodings is studied
		  experimentally on benchmark examples.

		- Coste-Hermanns-Lantreibecq-Serwe-09 deals with the
		  performance prediction challenges (such as the need to
		  estimate the latency of memory accesses) for Networks on
		  Chip (NoCs). The setting considered is the design of GALS
		  (Globally Asynchronous, Locally Synchronous) systems.
		  Foundations and applications of a combination of
		  compositional modeling, model checking, and Markov process
		  theory are described, which enable to arrive at a viable
		  approach to compute performance quantities directly on
		  industrial, functionally verified GALS models.

		- Helmstetter-09 proposes an approach for the verification of
		  SystemC/TLM models that suppresses the error-prone
		  translation effort from the SystemC/TLM code to a formal
		  language for which a model checker is available. Given a
		  SystemC/TLM program, the transitions are executed using g++
		  and the OSCI library, the user being in charge of providing
		  additional functions to store the current program state.
		  These additional functions represent generally less than 20%
		  of the size of the original model, and allow to apply all
		  CADP tools to the SystemC/TLM program itself. The approach
		  has been implemented as an OPEN/CAESAR-compliant compiler
		  named TLM.OPEN.
-------------------------------------------------------------------------------
BUG FIX
Number:		1449
Date:		Fri Dec 11 17:17:07 CET 2009
Report: 	Claude Helmstetter and Frederic Lang (INRIA/VASY)
Authors:	Hubert Garavel and Remi Herilier (INRIA/VASY)
Files:		src/eucalyptus/eucalyptus.tcl, src/com/xeuca_kill

Nature:		The Kill button of the EUCALYPTUS graphical interface (as well
		as the Stop button of the BCG Monitor) did not always function
		correctly. Previously, clicking these buttons terminated the
		main program running in the foreground, but did not always
		stop auxiliary programs running in the background (such as the
		"caesar_*.x" programs launched by Caesar), which continued to
		run, blocking EUCALYPTUS, and had to be killed manually. This
		problem has been fixed and the Stop and Kill buttons now
		function correctly, stopping all the relevant programs.
-------------------------------------------------------------------------------
BUG FIX
Number:		1450
Date:		Wed Dec 23 18:17:20 CET 2009
Report:		Claude Helmstetter, Sebastien Meriot, and Damien Thivolle
		(INRIA/VASY)
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		bin.*/bcg_graph, bin.*/bcg_io, bin.*/bcg_labels, bin.*/bcg_lib,
		bin.*/bcg_merge, bin.*/bcg_min, bin.*/bcg_steady,
		bin.*/bcg_transient, bin.*/exp2c, bin.*/libBCG.a, bin.*/xtl,
		incl/bcg_aldebaran_initialisations.h

Nature:		A bug introduced during the change described in item #1368
		above has been fixed. The BCG tools sometimes failed with a
		segmentation fault when invoked successively from different
		directories with the same input file. For example:
			bcg_info dir/file.bcg
			# produces a correct output
			cd dir
			bcg_info file.bcg
			# produces a segmentation fault
		This problem has been fixed: the second invocation is detected
		and ignored, and an error messages is displayed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1451
Date:		Mon Jan  4 19:32:19 CET 2010
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		bin.*/libBCG.a

Nature:		Two further changes have been made to the BCG library, related
		to bug fix #1450 above:

		- The dynamic library now contains the absolute path to the BCG
		  file, so that the contents of the dynamic library are now
		  independent of the directory from which the BCG tool is
		  called.
		- The dynamic library is now automatically regenerated if the
		  absolute path to the BCG file becomes invalid (e.g., because
		  the BCG file is moved).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1452
Date:		Tue Jan 12 12:10:27 CET 2010
Author:		Frederic Lang (INRIA/VASY)
Files:		com/exp.open, bin.*/exp2c, man/*/exp.open.*

Nature:		Two new options, -silent and -verbose, have been added to the
		EXP.OPEN tool:
		- With -silent, only error messages are displayed.
		- With -verbose, which is the default, EXP.OPEN reports
		  activities, progress, and errors to the user's screen.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1453
Date:		Tue Jan 12 12:14:38 CET 2010
Author:		Frederic Lang (INRIA/VASY)
Files:		com/fsp.open, bin.*/fsp2lotos.*, man/*/fsp.open.*

Nature:		Two new options, -silent and -verbose, have been added to the
		FSP.OPEN tool:
		- With -silent, only error messages are displayed.
		- With -verbose, which is the default, FSP.OPEN reports
		  activities, progress, and errors to the user's screen.
-------------------------------------------------------------------------------
BUG FIX
Number:		1454
Date:		Wed Jan 13 15:07:42 CET 2010
Report: 	Frederic Lang and Yann Genevois (INRIA/VASY)
Authors: 	Hubert Garavel and Remi Herilier (INRIA/VASY)
Files:		bin.*/distributor.a, bin.*/bcg_merge, bin.*/bes_solve,
		man/*/distributor.*

Nature:		When running Distributor on a Sparc Solaris 64-bit system,
		if the buffer_size definition in the .gcf file was incorrect,
		the following sequence of error messages could occur and
		terminate with a segmentation fault:

		   setting I/O buffer's size for sockets to 65536 bytes by
		      setsockopt failed [caesar_network_1.c:2714] (Error 22:
		      Invalid argument)
		   Opening connections failed [distributor_coordinator.c:230]
		      (Error 22: Invalid argument)
		   distributor: Opening connections failed [distributor_
		      coordinator.c:230] (Error 22: Invalid argument)
		   fatal error on master node (Opening connections failed
		      [distributor_coordinator.c:230] (Error 22: Invalid
		      argument))
		   distributor: Caught interrupt 11 (Segmentation Fault)
		   fatal error on master node (Caught interrupt 11
		      (Segmentation Fault))
		   Segmentation Fault - core dumped

		This problem has been solved. The Distributor manual page has
		been updated and now states that the maximum value permitted
		for buffer_size is 2,147,483,648.
-------------------------------------------------------------------------------
BUG FIX
Number:		1455
Date:		Wed Jan 13 16:14:10 CET 2010
Authors:	Hubert Garavel and Remi Herilier (INRIA/VASY)
File:		cadp_cygwin.com

Nature:		The cadp_cygwin.com script has been updated to handle changes
		introduced in the new version of Cygwin (version 1.7) running
		on Windows 7. The Cygwin 1.7 changes caused problems when
		replacing /bin/sh.exe with /bin/bash.exe.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1456
Date:		Thu Jan 14 16:00:47 CET 2010
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
File:		com/caesar.open

Nature:		Some changes have been made to the behaviour of options to
		Caesar.Open:

		- The -silent and -verbose options are now applied to
		  Caesar.Open itself, as well as being passed through to
		  Caesar and Caesar.adt.

		- When the -silent option is used, Caesar.Open indicates calls
		  to Caesar and Caesar.adt by adding a blank line.

		- The Caesar options -e7old and -exit are now accepted by
		  Caesar.Open.

		- If a Caesar option that is incompatible with the -open
		  option is specified, Caesar.Open issues a warning.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1457
Date:		Fri Jan 15 15:48:46 CET 2010
Report:		Ghassan Chehaibar (Bull), Etienne Lantreibecq
		(STMicroelectronics), and Damien Thivolle (INRIA/VASY)
Authors:	David Champelovier, Xavier Clerc, Hubert Garavel, Yves Guerte,
		Frederic Lang, Christine McKinty, Louis Paternault, Wendelin
		Serwe, and Gideon Smeding (INRIA/VASY)
Files:		bin.*/lnt2lotos, bin.*/lpp, com/lnt.open,
		src/com/cadp_delete, src/com/cadp_ln, src/com/cadp_replace,
		src/com/lnt_check, src/com/lnt_depend, src/com/lnt_name,
		man/*/lnt.open.*, man/*/lnt2lotos.*, man/*/lpp.*,
		incl/LNT_V1.h, lib/LNT_V1.lib,
		doc/*/Champelovier-Clerc-Garavel-et-al-10.*, doc/=README.txt

Nature:		The present item gives the list of changes regarding the LNT
		language and its associated tools between versions 1A and 4K
		included. Such changes, which were initially described in
		Appendix F of the Champelovier-Clerc-Garavel-et-al-10.*
		report, have been moved here in May 2014. The design of LNT
		and of its support tools started in 2005 as a separate
		project and was only integrated in CADP in 2010. We apply
		here the naming convention adopted in May 2014 and now
		write "LNT" rather than "LOTOS NT" as far as the input
		language of the LNT2LOTOS translator is concerned (both
		names have been used up to version 5.9 included; starting
		with version 6.0, "LNT" has become the unique, official name).

		Version 1A (July 8, 2005)
		=========================

		This version provides user manuals for a first version of
		the LNT2LOTOS and LPP tools, and the description of a general
		framework for using these tools. The language handled is a
		sublanguage of the LOTOS NT language understood by TRAIAN,
		and consists in data type definitions.

		Version 1B (September 16, 2005)
		===============================

   		In the reference manual, a section on ``Rich Term Syntax''
		extensions has been added. The LNT grammar has been
		slightly improved. An appendix has been created to provide
		examples of LNT programs. Several examples have been added.

		Version 1C (September 29, 2005)
		===============================

		The ``Lotos2lotos'' tool has been renamed to LPP (which
		stands for ``LOTOS PreProcessor''). The reference manual
		has been entirely restructured.

		Version 1D (October 20, 2005)
		=============================

		The chapter about Rich Term Syntax has been improved.

		Version 1E (February 24, 2006)
		==============================

   		A new chapter about LNT function definitions has been added.

		Version 1F (March 15, 2006)
		===========================

		The LNT grammar has been slightly improved. Several mistakes
		have been corrected.

		Version 2A (April 21, 2006)
		===========================

		This version coincides with the release of version 2A of
		the LNT2LOTOS translator.

		Version 2D (June 1, 2006)
		=========================

		This version coincides with the release of version 2D of
		the LNT2LOTOS translator. The ``raise'' instruction has been
		added in function definitions.

		Version 2F (February 5, 2007)
		=============================

		The new ``array'' type has been introduced.

		Version 2G (June 5, 2007)
		=========================

		In ``var'' statements, declaring and initializing a variable
		at the same time is now deprecated. Several corrections and
		explanations have been added to the reference manual.

		Version 3A (June 8, 2007)
		=========================

		A new chapter about LNT process definitions has been added.

		Version 3B (April 7, 2008)
		==========================

		The syntax of gate profiles has been modified. Some static
		semantics constraints have been added, especially regarding
		process definitions. Several typos have been corrected.

		Version 3C (May 19, 2008)
		=========================

		At Bull's request, a ``with'' clause attached to module
		definitions has been added, to allow factorization of
		predefined functions for all the types defined within a
		module. Missing information about predefined functions has
		been added in the reference manual.

		The ``stop'' operator, which was missing, has been added to
		the grammar of behaviours in the process part of LNT.

		Explanations have been added to the examples Appendix to
		illustrate how one can embed an LNT module into a LOTOS
 		specification.

		Information has been added regarding the list of reserved
		keywords for LOTOS, LOTOS NT (TRAIAN), and LNT (LNT2LOTOS),
		and regarding the conventions for identifier mappings from
		LNT to LOTOS.

		Various typos reported by Ghassan Chehaibar (Bull) and
		Damien Thivolle (INRIA) have been corrected.

		Version 4A (June 19, 2008)
		==========================

		This is an early version that generates LOTOS code for a
		subset of LNT processes. Currently, all process constructs
		are supported except the ``call'', ``case'', ``par'',
		``raise'', ``var'' operators, and pattern-matching in input
		communications. The handling of LNT types and functions was
		left unchanged.

		Additional enhancements to LNT2LOTOS (not directly visible
		to end users) have been brought to improve the code quality.

		Version 4B (July 18, 2008)
		==========================

		This revision brings support for three more LNT behavioural
		constructs: exceptions (i.e, the ``raise'' operator), local
		variables (i.e., the ``var'' operator), and parallel
		composition (the ``par'' operator). Also, a bug regarding
		the return of results for functions with several ``out'' was
 		fixed.

		Version 4C (August 1st, 2008)
		=============================

		This revision brings support for the ``case'' operator
		(without the ``where'' clause that is not supported yet).
		Also, six issues reported by Damien Thivolle in the
		translation of processes have been solved.

		Version 4D (September 8, 2008)
		==============================

		This revision brings support for the ``where'' clause in the
		patterns of the ``case'' operator. It introduces a new script
		``lnt_check'' that can be used to check the exhaustivity of
		``case'' patterns, both in functions and processes. It also
		introduces an ``!implementedby'' pragma for functions, which
		allows the user to specify the names of generated LOTOS
		functions. A mistake was fixed in the reference manual as
		regards the syntax of nondeterministic assignment. Finally,
		three issues reported by Damien Thivolle in the translation
		of processes have been solved.

		Version 4E (September 11, 2008)
		===============================

		The ``sel'' keyword was changed into ``select''. Three issues
		reported by Damien Thivolle in the translation of processes
		and functions with the ``!implementedby'' pragma have been
		solved.

		Version 4F (October 15, 2008)
		=============================

		Appendix A of the reference manual was updated according to
		remarks from Etienne Lantreibecq. The appendix describing
		the predefined functions was enriched by Yves Guerte. A
		new operator ``disrupt B1 with B2'' was added to LNT; it
		corresponds to the disable operator ``B1 [> B2'' of LOTOS.
		The new version of LNT supports patterns in communications,
		performs type-checking for channels and gates, and implements
		process calls.  Additionally, it fixes two bugs reported by
		Etienne Lantreibecq and Yves Guerte. The demo examples and
		the ``lnt_compile'' script have also been enhanced.

		Version 4G (January 14, 2009)
		=============================
		X. Clerc, H. Garavel, Y. Guerte, and W. Serwe

		Modifications of the libraries:

		- A new library ``LNT_V1'' was added, which supersedes the
		  previous contents of the ``./lib'' folder (X_BOOLEAN.lib,
		  X_CHARACTER.lib, INTEGERNUMBER.lib, and NATURAL.lib), and
		  the ``./incl'' folder (X_BOOLEAN.h and X_CHARACTER.h).
		  This simplification requires the use of CADP version
		  2007-m or higher.

		- In library ``LNT_V1'', a new type LntExtensions that
		  includes all other predefined types was added. Moreover,
		  this type now includes the RealNumber and String types
		  defined in CADP's ``lib'' directory.

		- In library ``LNT_V1'', the comparison operators ``=='',
		  ``<>'', ``<'', ``<='', ``>'', ``>='' over Booleans have
		  been added.

		- In library ``LNT_V1'', the missing operation ``GET__1 :
		  Nat -> Nat'' was added.

		- In library ``LNT_V1'', operations BinNum, OctNum, DecNum,
		  and HexNum have been added in their prefixed form, in
		  addition to their infixed counterparts.

		- In library ``LNT_V1'', support for character constants and
		  character strings was added, namely with the ``Char__xxx''
		  and ``String__xxx'' constants.

		Modifications of the LPP preprocessor:

		- LPP no longer generates at the beginning of its output file
		  a comment line of the form: ``(* generated by lpp 4G *)'',
 		  because it was changing line numbers between the input and
		  output files, making debugging more difficult. The comment
		  line is now written at the end of the output file, so as
		  to preserve line numbers.

		- For readability, LPP now accepts underscores in numbers,
		  as in Ada or VHDL. Thus, it is now possible to write
		  constants such as ``123_345_34'', 0x1A2_3BC, and
		  0b1111_0101_1111_0110.

		- LPP implements hexadecimal constants differently. These
		  constants are no longer translated into LOTOS operations
		  noted ``a'' ... ``f'' but into new LOTOS operations noted
		  ``Hex__a'' ... ``Hex__f'', which avoids potential name
		  clashes.

		- LPP now handles correctly unary and binary ``-'' in
		  arithmetic expressions. This implies some changes in the
		  LOTOS code generated by LPP and in the ``LNT_V1'' library:
		  essentially, the ``NegNum'' operation is deprecated and
		  replaced with a unary ``-''. Besides being correct, this
		  new approach preserves the correspondence between the input
		  LNT code and the output LOTOS code.

		- LPP implements character constants differently. Those
	          constants are no longer translated to a LOTOS operation
	          noted ``char'', but directly into the ``Char_xxx''
		  constants defined in ``LNT_V1''. Precisely, a character
		  with ASCII code ``xyz'' is no longer translated into
		  ``char (x DecNum y DecNum z)'', but into ``Char__xyz''.

		- LPP now supports character strings, noted using the same
		  conventions as the C language. These strings are translated
		  into LOTOS using the new constants ``String__xxx'' defined
		  in ``LNT_V1''.

		- LPP handles correctly the ``with'' clauses in modules. The
		  strings that follow the ``with'' keyword are not processed
		  as ordinary character strings.

		Modifications of the LNT2LOTOS translator:

		- From now on, it is legal to write a behaviour of the form
		  ``loop B end loop''; it is no longer required to write
		  ``while true loop B end loop''.

		- The syntax of patterns has been enriched so as to allow
		  parentheses in patterns. Precisely, if P is a pattern,
		  then (P) is also a pattern.

		- For each function F having at least an ``out'' or ``inout''
		  formal parameter, LNT2LOTOS verifies that the string given
		  for F after ``implementedby'' contains a ``%'' character.
		  This is a necessary, but insufficient condition for a
		  proper behavior of the translation.

		- From now on, when LNT2LOTOS generates a LOTOS ``>>''
		  operator, it adds a special comment ``(*! atomic *)'',
		  which is recognized and understood by CAESAR.

		- A bug was fixed in the LOTOS code generated by LNT2LOTOS:
		  in some cases, there was a type mismatch between a LOTOS
		  ``exit (...)'' operation and the corresponding ``accept
		  ... in'' statement. This was due to a different ordering
		  of the ``exit'' and ``accept'' argument lists.

		- A bug was fixed in the translation of ``if-then-else''
		  instructions in the behaviour part of LNT. A missing
		  ``else'' was translated as ``else stop'', whereas the
		  correct translation is ``else null''.

		- Another bug was fixed: from now on, when a constant is
		  propagated, LNT2LOTOS also propagates the corresponding
		  ``of T'' clause, so as to allow a proper resolution of
		  operation overloading.

		- When translating an ``if E then ...'' statement, LNT2LOTOS
		 now adds a ``of BOOL'' clause so as to ensure that E is a
		 Boolean expression.

		- From now on, all the LOTOS processes generated from LNT
		  code using LNT2LOTOS have an ``exit (...)'' functionality.
		  In no event have they a ``noexit'' functionality.

		- When translating the ``stop'' operator of LNT, LNT2LOTOS
		  now adds extra LOTOS code so that the LOTOS translation of
		  ``stop'' does not have functionality ``noexit'' but
		  functionality ``exit (...)'', where the list of parameters
		  depends on the context. This removes all CAESAR warnings
		  about exit/noexit functionality mismatch.

		- An ``!external'' pragma attached to LNT function definitions
		  was added. This pragma specifies that an LNT function will
		  be implemented directly in C code.

		- From now on, the ``!implementedby'' pragma attached to LNT
		  function definitions specifies the name of a C function
		  (same as the ``!implementedby'' pragma attached to LNT type
		  definitions). It no longer specifies the name of a LOTOS
		  operation.

		- To specify the name of a LOTOS operation, a new pragma
		  ``!representedby'' attached to LNT function definitions
		  was added.

		- LNT2LOTOS now allows, both in the function and process
		  parts of LNT, the presence of patterns containing constants
		  the definition of which contains non-constructor operations.
		  In the generated LOTOS code, these constants are moved to
		  equation premises.

		- Following changes brought in the CAESAR and CAESAR.ADT
		  compilers (see item #1328 above), the long identifiers
		  generated by LNT2LOTOS are now accepted. Precisely, LOTOS
		  identifiers are not longer truncated at 64 characters,
		  and C identifiers are no longer truncated at 48 characters.

		- Two new options ``-silent'' and ``-verbose'' have been
		  added to LNT2LOTOS.

		Documentation changes:

		- Several typos have been fixed in the reference manual.

		- The appendix describing the differences between LOTOS NT
		  (TRAIAN) and LNT (LNT2LOTOS) was made more accurate.

		Potential compatibility issues:

		- From now on, when a polymorphic gate is declared (i.e., a
		  gate with no specified profile), it is mandatory to have it
		  followed by ``: any'' so as to make it explicit (and warn
		  the reader about the existence of such a loose typing).
		  Concretely, the following code fragments:
			process P [A] ...
			hide A in ...
		  are no longer allowed and should be written instead
			process P [A:any] ...
			hide A:any in ...
		  or even better
			process P [A:C] ...
			hide A:C in ...
		  after defining properly a channel C.

		- Due to the creation of the ``LNT_V1.lib'' library, LOTOS
		  programs that include predefined libraries should be
		  modified as follows. For instance, one should replace:
		  	library
			   X_BOOLEAN, X_NATURAL, X_ACTION, INTEGER,
			   DATATYPE, FIFO
			endlib
		  with:
			library
			   LNT_V1, DATATYPE, FIFO
			endlib

		- Similarly, the ``.t'' files should now contain
			#include "LNT_V1.h"

		- As mentioned above, the ``!implementedby'' pragma attached
		  to LNT functions was replaced by a ``!representedby''
		  pragma.

		- As mentioned above, all LOTOS processes generated by
		  LNT2LOTOS now have an ``exit (...)'' functionality. This
		  might require to change accordingly the functionalities of
		  hand-written LOTOS processes invoking LOTOS processes
		  generated automatically by LNT2LOTOS.

		Version 4H (April 10, 2009)
		===========================
		H. Garavel, Y. Guerte, C. McKinty, and W. Serwe
-
		Modifications of the libraries:

		- Predefined operators ``=='', ``<>'', ``<'', ``<='', ``>'',
		  and ``>='' have been added for types Char and String in
		  the ``LNT_V1'' library.

		Modifications of the LPP preprocessor:

		- Hex digits A...F in hexadecimal escape sequences of the
		  form ``xhhh'' are now correctly evaluated as 10...15.

		- LPP now supports inclusion of the null character in
		  constants and strings.

		- Two new options ``-silent'' and ``-verbose'' have been
		  added to LPP.

		Modifications of the LNT2LOTOS translator:

		- The ``!representedby'' pragma can now be attached to
		  predefined comparison functions.

		- The ``!representedby'' pragma is now correctly handled
		  for ``set'' and ``update'' functions declared in ``with''
		  clauses for types. Previously, such pragmas were ignored.

		- Handling of pragmas for type functions containing ``with''
		  clauses has been extended to the ``!representedby'' pragma
		  attached to the predefined ``card'', ``ord'', and ``val''
		  functions.

		- Previously, a ``raise'' was translated by LNT2LOTOS as a
		  LOTOS ``stop''. This caused the following error:
			the body of process P has functionality:
			   noexit
			whereas its declaration requires functionality:
			   exit
		 This problem has been fixed and a ``raise'' is now
		 translated as ``stop [] [false] -> exit''.

		- Previously, if a module having a ``with'' clause with a
		  ``set'' contained a type having a ``with'' clause with an
		  ``update'', two identical sets of equations were generated.
		  Two sets of equations were also generated when a module
		  having a ``with'' clause with an ``update'' contained a
		  type having a ``with'' clause with a ``set''. The duplicate
		  equations triggered a warning message. This problem has
		  been fixed, and stricter rules for using ``set'' and
		  ``update'' in a ``with'' clause have been defined:
		  (1) A ``with'' clause for a module or type must not contain
		      both a ``set'' and an ``update''.
		  (2) The type definition takes precedence over the module
		      definition. If there is a ``set'' in a module and an
		      ``update'' in a type, the ``set'' is ignored and the
		      ``update'' is used. If there is an ``update'' in a
		      module and a ``set'' in a type, the ``update'' is
		      ignored and the ``set'' is used.

		- A predefined function declared in the ``with'' clause of
		  a module can no longer have a list of pragmas attached.
		  Including such a list of pragmas now triggers a syntax
		  error.

		- Previously, for an LNT process declaring multiple ``out''
		  or ``inout'' parameters with a simple syntax such as
		  ``out x, y: Int'', the corresponding LOTOS process did not
		  behave correctly. This bug has been fixed.

		- A bug in how LNT2LOTOS handles overlapping and nested loops
		  has been fixed. Previously, when there were two overlapping
		  ``while'' loops, LNT2LOTOS produced two LOTOS processes
		  with the same name. Also, when a module contained loops in
		  several processes, nested loops were translated to LOTOS
		  with incorrect names. These problems have been fixed.

		- Variables in a ``case'' pattern contained in a function
		  definition are now considered to be initialized. The
		  following example is now accepted:
		       function H (N : Nat, out E : Nat) is
			 case N in
			     0 -> E := 999
			   | Succ (E) -> null
			 end case
		       end function

		- A constructor declaration can now contain a list of
		  parameters in the form ''X, Y, ... : T''. Previously, this
		  compact syntax was accepted almost everywhere but not in
		  constructor declarations.

		- Handling of parallel operators where one operator has a
		  ``noexit'' has been modified: this case is now handled
		  correctly, so the error message ``functionalities do not
		  match'' will no longer be displayed by CAESAR/CAESAR.ADT.

		- The translation of process calls has been modified: when
		  a process in terminal position is called, if the effective
		  parameters of the call are equal to the formal parameters
		  of the caller, the ``>>'' operator is not generated.
		  Previously, translation of meaningful LNT programs produced
		  incorrect LOTOS code (containing invalid functionality) that
		  was rejected by CAESAR/CAESAR.ADT.

		- A bug in the translation of the ``as'' operator has been
		  fixed: for the pattern ``X as P'' in a process, X is now
		  assigned properly.

		Documentation changes:

		- A description of the ``!representedby'' pragma introduced
		  in version 4G has been added.

		- The description of the constraints related to the
		  ``!implementedby'' pragma has been updated:
		  (1) The ``!implementedby'' pragma attached to an LNT
		      function definition now specifies the name of a C
		      function (as does the ``!implementedby'' pragma
		      attached to an LNT type definition). It no longer
		      specifies the name of a LOTOS operation.
		  (2) To specify the name of a LOTOS operation, a new
		      pragma ``!representedby'' attached to an LNT function
		      definition has been added.

		- A description of the ``!external'' pragma attached to an
		  LNT function definition (introduced in version 4G) has been
		  added. This pragma specifies that an LNT function will be
		  implemented directly in C code. Note that the body of the
		  function must be null but not empty.

		- Information about using the ``!implementedby'' and
		  ``!representedby'' pragmas for predefined functions (that
		  is, for functions declared by a ``with'' clause) has been
		  added.

		- The description of the syntax of a pattern has been updated
		  to include the fact that it is now possible to include
		  parentheses.

		- The definitions of ``get'', ``set'', and ``update''
		  operations have been improved.

		- The description of the ``get'' operation has been updated
		  to include the ``!implementedby'' and ``!representedby''
		  pragmas.

		- Information about restrictions on types has been updated
		  to clarify the fact that a type cannot simultaneously have
		  ``with set'' and ``with update''.

		- Information concerning constraints on pragmas (types,
		  modules, etc.) has been improved.

		- Examples have been updated to illustrate the new method
		  for using the libraries, namely replacing imports of the
		  libraries ``X_*'' by an import of ``LNT_V1''.

		- The description of support for numbers (notably negative
		  numbers) in LPP has been updated: ``NegNum'' is no longer
		  supported; parentheses are no longer permitted in constants;
		  the underscore ``_'' character is now permitted in numbers.

		- An explanation of the translation of character and string
		  constants has been added.

		- Information about the differences in how TRAIAN and
		  LNT2LOTOS handle chars, strings, and predefined functions
		  has been improved.

		- An explanation of the functionality of a LOTOS process
		  generated for a LNT process has been added.

		- Explanations of the constraints on recursive processes have
		  been added: A recursive call must be in terminal position.

		Version 4I (June 24 2009)
		=========================
		H. Garavel, C. McKinty, L. Paternault, and G. Smeding

		Modifications of the LPP preprocessor:

		- Previously, if a string contained the sequence ``*)'',
		  LPP incorrectly generated code with nested comments.
		  This bug has been corrected.

		- Previously, if the input and output files had identical
		  timestamps, which occasionally happened on fast machines,
		  LPP and LNT2LOTOS did not regenerate the output. This bug
		  has been corrected.

		- The LPP preprocessor now removes the previous ``.lnt''
		  file automatically. In previous versions, LPP failed to
		  recognize the files it generated and refused to overwrite
		  them. The files had to be removed manually, and if the
		  old file was present the recompilation failed.

		- Earlier versions overwrote files that were not readable but
		  were writable, because they were considered out of date.
		  The LPP preprocessor no longer overwrites such files but
		  instead returns an error message.

		- A new option, ``-force'' has been added to LPP. This option
		  causes LPP to overwrite the existing output files even if
		  they are already up to date or have been edited by the user.

		- The Windows executable of LPP was renamed to ``lpp.exe''.

		Modifications of the LNT2LOTOS translator:

		- The ``!='' operator of LNT is now accepted by LNT2LOTOS.
		  It no longer causes a syntax error, but instead is treated
		  as identical to the ``/='' operator. Note that any error
		  reported concerning code that contains the ``!='' operator
		  will display the operator as ``/=''.

		- Previously, the semantic checks of LNT2LOTOS did not accept
		  the binding of variables by ``case'' statements within a
		  process.  These bugs have been corrected and, for example,
		  the following processes that would have been rejected, are
		  now accepted:

			process P (in x : Int, out y : Int) is
			   case x in
			        1 -> y := 2
			      | y -> null
			   end case
			end process

			process Q (in n : Nat, out p : Nat) is
			   case n in
			        0        -> p := 0
			      | Succ (p) -> null
			   end case
			end process

		- A change has been made to the LOTOS code generated, to
		  simplify the handling of ``exit''. The generated code
		  ``stop [] [false] -> exit'' has been replaced by
		  ``[false] -> exit''. The new code is functionally the
		  same, but simpler.

		- There was an error in the handling of variable binding in
		  parallel compositions of processes. The translation was
		  incorrect for variables that were unbound before the
		  parallel composition, and assigned in one of the branches.
		  This bug has been corrected, by exiting with ``any'' values
		  wherever necessary.

		- Some changes have been made to LNT2LOTOS, to improve the
		  translation of nested compound statements. This has
		  resulted in significant improvements in memory usage and
		  CPU time required for compilation.

		- A new option, ``-force'' has been added to LNT2LOTOS. This
		  option causes LNT2LOTOS to overwrite the existing ``.f''
		  and ``.lotos''  output files even if they are already up
		  to date or have been edited by the user.

		- Previously, the LOTOS code generated for ``if-then-else''
		  statements could be exponential in size in certain cases,
		  which could lead to an internal explosion within LNT2LOTOS,
		  and failure to complete the translation. The generated code
		  is now linear in size with respect to the input program.

		- LNT code containing ``of'' type annotations in patterns
		  is now correctly translated. Previously, the ``of''
		  information was not preserved in the translation. This
		  led, in some cases, to incorrect LOTOS type definitions,
		  resulting in error messages of the form:
		     error during analysis:
		     too many solutions for operation binding
		  or:
		     error during analysis:
		     operations cannot bind correctly
		  This correction also avoids false warnings of the form:
		     function F of file M contains a non-exhaustive case

		- The constants ``0'' of natural number, ``0'' of integer,
		  and ``true'' and ``false'' of boolean are now recognised,
		  to optimise the translation of ``case'' statements (as
		  is already the case for ``0'' and ``1'' of Bit). This
		  makes the generated LOTOS code more compact and the
		  generated C code more efficient. It also reduces the
		  number of warnings of the form:
		     function F of file M contains a non-exhaustive case
		     process P of file M contains a non-exhaustive case

		- A bug has been fixed in the translation of ``exit''
		  instructions in parallel composition of processes.
		  Previously, variables bound before the parallel composition
		  would be treated as if they were bound to that value in
		  each branch. Now, the parallel branches will exit with
		  values only for the variables bound by that process, and
		  ``any'' for the others.

		- The format of ``let'' statements in the generated LOTOS
		  code has been modified. In previous version, multiple
		  ``let'' assignments were on the same line and are now split
		  into several lines, one for each variable assignment. This
		  change improves readability of the generated LOTOS code and
		  thereby facilitates debugging.

		- A bug has been fixed in the handling of ``par'' operators
		  with a branch that contains a ``stop''. The bug was due to
		  a failure to check variable bindings in ``par'', ``select'',
		  and ``disrupt'' behaviours, and a lack of distinction
		  between variables that might be bound and variables that are
		  guaranteed to be bound. The bug fix has two consequences:

		  (1) Correct behaviours in LNT that were previously rejected
		      are now accepted. For example, variable X was
		      incorrectly reported to be unbound in:
			   par X := 1 || null end par ; Y := X
		      or:
			   select X := 1 [] X := 2 end select ; Y := X

		  (2) Spurious messages have been removed, and warnings of
		      the form:
		           ** warning at line ...:
			      behaviour is unreachable
		      now reliably indicate dead code problems.

		- The Windows executable of LNT2LOTOS was renamed to
		  ``lnt2lotos.exe''.

		Documentation changes:

		- In the definition of ``function_pragma'', the superfluous
		  ``string'' token was removed.

		- The reference manual now properly documents the ``disrupt''
		  operator.

		Version 4J (September 28, 2009)
		===============================
		G. Smeding, H. Garavel, and C. McKinty

		Modifications of the libraries:

		- In the ``LNT_V1'' library, the comparison operators ``lt'',
		  ``le'', ``gt'', and ``ge'' on Booleans have been added.

		- In the ``LNT_V1'' library, the inequality operator ``!=''
		  has been added. This is a synonym of the ``ne'' operator.

		Modifications of the LNT2LOTOS translator:

		- Certain erroneous LNT programs that were previously
		  accepted will now be rejected by LNT2LOTOS, with an error
		  message of the form:
		       ** error at line ...:
		          ``out'' variable X is not initialized when
			  function returns or process terminates
		  Previously, such errors were detected only when the LOTOS
		  code generated by LNT2LOTOS was compiled with CAESAR or
		  CAESAR.ADT.

		- A bug has been fixed in the verification of the
		  initialisation of variables used in communications.
		  Previously, LNT2LOTOS did not check whether variables
		  used in a communication offer were initialized. This led
		  to error messages from CAESAR of the form:
		       variable or constant operation LOCAL__X__1 was
		       not declared
		  The variable bindings are now checked correctly. If a
		  variable X is not initialised, LNT2LOTOS displays the
		  following error message:
		      variable X defined at line n is not initialized
		      at this point

		- Generalized support for constructors has been added.
		  Previously, only the constructors TRUE, FALSE, 0, and 1
		  were recognized. LNT2LOTOS will now recognize all
		  constructors declared in the same module. This change has
		  several advantages: the LOTOS code generated by LNT2LOTOS
		  is faster, more readable, and LNT2LOTOS no longer displays
		  spurious warnings of the form:
		     function F of file M contains a non-exhaustive case
		     process P of file M contains a non-exhaustive case

		- The function ``0 : -> INT'' was incorrectly recognized as
		  a constructor, even though it is a constant. This caused
		  LNT2LOTOS to generate incorrect code. This has now been
		  fixed.

		- Previously, the three functions ``SUCC : NAT -> NAT'',
		  ``POS : NAT -> INT'', and ``NEG : NAT -> INT'' were not
		  recognized as constructors. This meant that LNT2LOTOS
		  translated patterns containing these constructors poorly.
		  These constructors are now recognized and translated to
		  LOTOS code that is faster and more elegant.

		- Although LNT2LOTOS generally accepts constant expressions
		  in case patterns, it previously failed in certain cases.
		  For example, the following example of case pattern is now
		  supported, whereas LNT2LOTOS previously generated incorrect
		  LOTOS code that was rejected by CAESAR/CAESAR.ADT:
			function foo( x : Int) : Int is
			      case x in
				1 -> return 0 + x
			      | any -> return 1
			      end case
			end function
		  See the reference manual for more details. This change has
		  two additional benefits:
		  (1) The generated LOTOS code has fewer ``of'' clauses.
		  (2) If there are useless branches in a case pattern,
		      CAESAR.ADT can warn about redundant equations that are
		      ignored.

		- The precedence of type annotations in patterns and
		  expressions has been changed: ``of'' now takes precedence
		  over all operators. For example, ``1 + 1 of Int'' was
		  previously interpreted as ``(1 + 1) of Int'' but is now
		  interpreted as ``1 + (1 of Int)''. This change brings
		  LNT2LOTOS into line with LOTOS, where type annotations
		  have precedence over operators, but is now inconsistent
		  with TRAIAN. This change is not backwards compatible.

		- A modification has been made to LNT2LOTOS to make sure
		  that the LOTOS code generated from the following LNT
		  behaviour expression: ``G (?any T)'', where G is a gate
		  and T a type, now compiles without warnings from CAESAR.

		Documentation changes:

		- The reference manual has been updated to explain that
		  non-constructors are now permitted in case patterns.

		- The reference manual has been updated to reflect the
		  change in precedence rules in explicit type annotations
		  in expressions and functions.

		- The reference manual has been updated to include
		  documentation of constants in patterns.

		- The reference manual has been updated to state that a
		  process can have ``in'', ``out'', and ``inout'' variables.

		- The reference manual has been updated with several minor
		  corrections.

		Potential compatibility issues:

		- The aforementioned change in precedence rules for explicit
		  type annotations in expressions and functions  is not
		  backwards compatible. However, tests have shown that the
		  effects are limited.

		Version 4K (December 4, 2009)
		=============================
		G. Smeding, H. Garavel, C. McKinty, and W. Serwe

		Modifications of the libraries:

		- A new function, ``GET__1'' has been added to the ``LNT_V1''
		  library. This function is required to support use of
		  POS() and NEG() as constructors in processes. Previously,
		  use of POS() or NEG() resulted in generation of LOTOS code
		  that CAESAR.ADT rejected with the following error message:
		     operation GET__1 used in value:
			GET__1 (CASE__VALUE__1)
		     the profile of which might be:
			INT [X_INTEGER:2] -> NAT [X_NATURAL:3]
		     was not declared; some operations exist with the same
		     name but with different profiles:
			GET__1 [LNT_V1:30] : NAT -> NAT [X_NATURAL:3]
			GET__1 [LNT_V1:30] : NAT -> NAT [X_NATURAL:3]

		- The ``LNT_V1'' library has been modified so that all binary
		  operators are now declared in both infix and prefix forms.

		Modifications of the LPP preprocessor:

		- LPP now checks whether the output file is the same as the
		  input file. If so, LPP stops and no preprocessing is
		  carried out, to ensure that the input file is not
		  overwritten.

		- From now on, calls to LPP with option ``-version''
		  terminate with an exit value of 0 and not 1.

		Modifications of the LNT2LOTOS translator:

		- From now on, calls to LNT2LOTOS with option ``-version''
		  terminate with an exit value of 0 and not 1.

		- LNT2LOTOS no longer accepts an output file name as an
		  argument on the command line. From now on, the names of
		  the output files generated by LNT2LOTOS are always
		  constructed from the name of the input file, adding file
		  extensions as appropriate, and changing the name of the
		  file (not including the file extension) to uppercase
		  letters for ``.lib'' files.

		- A new option ``-root P'' or ``-root "P [G1, ..., Gn]"'',
		  where P is a process and G1, ..., Gn are gates, has been
		  added to LNT2LOTOS. This option specifies that P is the
		  main process of the LNT program; otherwise, LNT2LOTOS
		  will search for a process called ``MAIN''. Depending on
		  this option, LNT2LOTOS will generate either a ``.lotos''
		  or a ``.lib'' file. Note that the validity of the process
		  instantiation and its number of gates is not checked by
		  LNT2LOTOS itself, but will be checked later by CAESAR.

		- A new option, ``-pidlist'', has been added to LNT2LOTOS.
		  With this option, LNT2LOTOS displays all processes defined
		  without value parameters, i.e., the processes that can be
		  used with the ``-root'' option. Note that this option does
		  not check the semantic validity of the input LNT file.

		- Error messages from LNT2LOTOS and LPP are now written to a
		  ``.err'' file, which can be read using the ``cadp_more''
		  shell script of CADP. There are no changes to the error
		  messages themselves, except for one message that has been
		  corrected.

		- LNT2LOTOS now adds to the generated ``.f'' file the
		  definition of the macro ``CAESAR_ADT_EXPERT_F'' required
		  by CAESAR.ADT.

		- In patterns, constants and constructors without arguments
		  were sometimes mistaken for variables. This resulted in the
		  following error message:
		       ** error at line ...:
		          internal error: assertion failed
		  This bug has been fixed.

		- Previously, constructors and functions without arguments in
		  LNT specifications were mistaken for variables, resulting
		  in the following error message:
		       ** error at line ...:
		          variable ``X'' is modified in a behaviour, and read
		          in another behaviour of the same 'par' construct
		  This bug has been fixed and such constructors and functions
		  are now correctly translated.

		- A bug has been fixed in the translation of patterns that
		  contain non-constructor constants. The generated LOTOS code
		  now retains the ``of'' type annotations in the original LNT
		  code, e.g.,
		       case X in
			   cons (3 of NAT, nil) -> ...
		  Clauses of this type were previously rejected because the
		  type annotation was removed during translation.
		
		- A bug has been fixed in the translation of ``while'' loops
		  in processes: some variables used in the guard expression
		  were not taken into account. The generated LOTOS code was
		  incorrect and could not be compiled with the CAESAR
		  compiler. The translator now generates correct LOTOS code
		  for ``while'' loops.

		- Handling of large type definitions has been improved.
		  Previously, a large type definition could cause a
		  segmentation fault and crash LNT2LOTOS because of a lack of
		  stack space, particularly when the generated file contains
		  large identifier names. This problem has been fixed and
		  LNT2LOTOS can now handle large type definitions.

		- Previously, LNT2LOTOS did not handle some communications
		  containing  ``as'' patterns if the type of the pattern on
		  the right-hand side of the ``as'' was unknown. For example,
		  the following code was rejected:
			process P [G : any] is
			    var X : Int in
				G (?X as 1)
		 	   end var
			end process
		  with error messages of the form:
			 ** error at line 0:
			       internal error: assertion failed
			 ** error at line ...:
			       the type of the pattern cannot be determined
		  LNT2LOTOS now uses the type of the variable in the left-
		  hand side of the pattern to infer the type of the pattern
		  (so in the example above, 1 is an INT).

		- LNT2LOTOS now allows variable bindings in case patterns to
		  escape the scope of the ``case'' statement. For example,
		  the following program is now permitted:
			function F (X : NAT) : nat is
			   var Y : NAT in
			      case X in
				Succ (Y) -> null
			      | any -> Y := 0
			      end case;
			      return Y
			   end var
			end function

		- Previously, duplicate constructor definitions (i.e., more
		  than one constructor with the same name and profile) were
		  not detected. This led to generation of incorrect LOTOS
		  code, which was rejected by CAESAR.ADT with an error
		  messsage. This bug has been fixed, and LNT2LOTOS now
		  detects duplicate constructor errors and emits an error
		  message of the form:
			** error at line 10:
			   constructor ``C'' is already defined at line 9
			   with the same profile

		- The LOTOS code generated by LNT2LOTOS for a ``raise''
		  statement has been simplified. Previously, the LOTOS code
		  contained expressions of the form:	
		      stop [] [false of Bool] -> exit (...)
		  Now, the expresssion is simply: 	
		      [false of Bool] -> exit (...)

		- The LOTOS code generated by LNT2LOTOS for a ``case''
		  statement has been simplified, by removing the final,
		  default branch:
		      [CASE_BRANCH__1 >= (xxx of NAT)] -> stop
		  that was not useful.

		- A bug in the translation of communications with patterns
		  containing constants has been fixed. Previously, incorrect
		  LOTOS code was generated for communications such as:
		 	G (?1)
			G (?cons (X, cons (1, nil)))
			G (?X as 1)
		  causing the following error messages of CAESAR/CAESAR.ADT:
			theoretical limitation during compilation phase:
			non-constructor on the left of an equation

		- An error in the translation of infix expressions has been
		  fixed. Previously, all operations occurring in a pattern
		  were converted to the prefix notation. Now, constant
		  expressions in the patterns keep their fixity. For example,
		  the constant expression ``(1 + 3) of NAT'' contained in a
		  pattern would be translated to ``+ (1, 3) of NAT'' but will
		  now keep the infix notation ``(1 + 3) of NAT''.

		- Previously, prefix versions of the multiplication operator
		  ``*'' and power operator ``**'' were incorrectly translated
		  by LNT2LOTOS, which added an opening parenthesis, resulting
		  in a LOTOS comment block start indicator: ``(*''. This bug
		  has been fixed.

		- Previously, LNT communications with a guard but no offer
		  associated were not correctly translated, resulting in
		  ambiguous code and error messages from the CAESAR compiler.
		  This bug has been fixed.

		- Previously, for a predefined binary operator specified with
		  a ``with'' clause (``=='', ``eq'', ``<'', etc.), the LOTOS
		  code generated contained the function declaration in infix
		  form only. This has been corrected and both prefix and
		  infix forms are now generated.

		- A simular bug has been corrected for function synonyms
		  specified by a ``!representedby'' pragma, for which both
		  prefix and infix forms are also now generated.

		- Previously, the translation of the ``!implementedby''
		  pragma for the predefined LNT functions ``val'', ``get'',
		  and ``set'' did not work. The LOTOS code generated has
		  been modified and now works correctly.

		- Further checks have been added when translating the
		  ``!implementedby'' and ``!representedby''pragmas. If LNT
		  code containing such a pragma would produce incorrect LOTOS
		  code, LNT2LOTOS now returns an error message such as:
          		string in pragma ``!implementedby'' yields no
			valid C identifier

		Modifications of the shell scripts:

		- Three new options have been added to the ``lnt_compile''
		  shell script: ``-silent'', ``-verbose'', and ``-force''.
		  These options are passed on the subsequent calls to
		  LNT2LOTOS and LPP. See the reference manual for a
		  description of these options on LNT2LOTOS and LPP.

		- Eventually, the ``lnt_compile'' utility in use since 2005
		  has been replaced by LNT.OPEN, a new shell script that
		  provides a connection between LNT2LOTOS and the OPEN/CAESAR
		  environment. This script automates the conversion of LNT
		  programs to LOTOS code, by automatically invoking LPP,
		  LNT2LOTOS, CAESAR.ADT, lnt_check, and finally CAESAR.OPEN.
		  See the LNT.OPEN manual page for details of its features,
		  including, notably, multi-module compilation.

		Documentation changes:

		- A new appendix has been added to the reference manual,
		  and provides a summary of the LNT language supported by
		  LNT2LOTOS.

		- A new appendix has been added to the reference manual,
		  providing a history of the changes to LNT2LOTOS. The
		  History section of the first chapter of the reference
		  manual has been moved to this appendix.

		- Information about new behaviour for ``case'' statements
		  has been added to the reference manual.

		- Information about the different ways in which LNT2LOTOS
		  and TRAIAN handle ``case'' statements that use previously
		  declared variables has been added to the reference manual.

		- Unix manual pages for LPP, LNT2LOTOS, and LNT.OPEN have
		  been written.

		Potential compatibility issues:

		- By default, LNT2LOTOS now generates a ``.lotos'' file if
		  the module contains a process ``MAIN'' without value
		  parameters. The behavior of the previous versions of
		  LNT2LOTOS, i.e., generation of a ``.lib'' file, is still
		  available using the option ``-root -''.

		- The macro ``CAESAR_ADT_EXPERT_F'' is now defined in the
		  automatically generated ``.f'' file. Any manual definition
		  in a different file may lead to a double definition of this
		  macro and should be removed.

		As of January 2010, the LNT language, its supporting tools
		and its documentation have been added to CADP.
-------------------------------------------------------------------------------
BUG FIX
Number:		1458
Date:		Wed Jan 20 12:46:22 CET 2010
Report:		Yann Genevois (INRIA/VASY)
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		bin.*/libBCG.a

Nature:		The name of a BCG file is now permitted to contain special
		characters such as backslashes or double quotes. Previously,
		if such characters were used in a filename, the BCG dynamic
		library was seen as an incorrect C program that would not
		compile.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1459
Date:		Fri Jan 29 10:04:07 CET 2010
Report:		Wendelin Serwe (INRIA/VASY)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
File:		src/com/cadp_cc

Nature:		The cadp_cc script has been modified so that it no longer uses
		the -mno-cygwin option on Windows systems, as this option was
		removed from gcc-4.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1460
Date:		Fri Jan 29 11:33:46 CET 2010
Authors:	Hubert Garavel and Remi Herilier (INRIA/VASY)
Files:		src/eucalyptus/xeucarc_standard, src/eucalyptus/eucalyptus.tcl

Nature:		Support for .lnt files and the lnt.open, lnt2lotos, and lpp
		tools has been added to the EUCALYPTUS user interface.
-------------------------------------------------------------------------------
BUG FIX
Number:		1461
Date:		Tue Feb  2 16:47:40 CET 2010
Author:		Remi Herilier (INRIA/VASY)
Files:		bin.*/bcg_merge, bin.*/distributor.a

Nature:		A bug in Bcg_Merge and Distributor running on Solaris 64-bit
		platforms has been corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		1462		
Date:		Thu Feb  4 09:49:20 CET 2010
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c

Nature:		Simultaneous use of the options -branching (or -weaktrace)
		and -interfaceuser of EXP.OPEN could replace sequences of
		"i" transitions by a single transition labeled ":FAIL:i",
		triggering an SVL warning that the interface was incorrect.
		This has been corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1463
Date:		Thu Feb  4 11:59:51 CET 2010
Authors:	Hubert Garavel and Yann Genevois (INRIA/VASY)
File:		src/com/cadp_cc

Nature:		The cadp_cc script has been modified to invoke Gcc with its
		-fno-tree-sra option (see item #1333 above) also on mac86
		systems for Gcc 4.2.*.
-------------------------------------------------------------------------------
BUG FIX
Number:		1464
Date:		Thu Feb  4 16:56:36 CET 2010
Report: 	Axel Belinfante (University of Twente, The Netherlands),
		Frederic Lang, Damien Thivolle (INRIA/VASY)
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
File:		bin.*/tgv.a

Nature:		On 32-bit systems running Solaris or Linux, an intermittent
		error caused TGV to fail with this following error:

		  *020 protection violation:
     		     falsified program ``tgv 1.5'' on machine ``...''
    		     wrong binary checksum
     		     quit

		This problem has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1465
Date:		Fri Feb  5 17:07:32 CET 2010
Report:		Eric Madelaine (INRIA Sophia Antipolis)
Authors:	Hubert Garavel, Radu Mateescu, and Remi Herilier (INRIA/VASY)
Files:		bin.*/distributor.a, bin.*/bcg_merge

Nature:		Two bugs that prevented Distributor and Bcg_Merge running on
		64-bit systems have been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1466
Date:		Mon Feb 15 09:56:18 CET 2010
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		com/bcg_open, com/caesar.open, com/exp.open, com/fsp.open,
		com/lnt.open, com/seq.open

Nature:		The Open/Caesar shell scripts have been modified so as to
		enhance the error message displayed when the ``user'' file
		is missing. This error message is no longer:
		   "missing C filename argument"
		but
		   "missing user program filename (.a, .c, or .o) argument"
-------------------------------------------------------------------------------
BUG FIX
Number:		1467
Date:		Mon Feb 15 14:44:38 CET 2010
Authors:	Hubert Garavel and Yann Genevois (INRIA/VASY)
Files:		./INSTALLATION_2, com/arch, src/com/cadp_cc, src/com/cadp_cpp,
		src/com/cadp_rm, src/com/cadp_which, src/com/install_df,
		src/com/xeuca_ps, src/com/xeuca_term

Nature:		Several changes were made to enable CADP to run on Mac OS X
		systems with a 64-bit kernel, introduced with the Snow Leopard
		release of Mac OS X (and referred to as "mac86-64" in the CADP
		context). On such systems, the CADP 32-bit "mac86" binaries
		are used.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1468
Date:		Mon Feb 15 15:09:14 CET 2010
Authors:	Hubert Garavel (INRIA/VASY)
Files:		com/arch, com/tst, src/com/cadp_cc, src/com/cadp_cpp,
		src/com/cadp_crlf, src/com/cadp_which, src/com/install_df,
		src/com/xeuca_ps, src/com/cadp_rm, src/com/xeuca_term

Nature:		In all CADP shell scripts, the architecture named "iX86-amd64"
		has been renamed "iX86-64", so as to ensure symmetry with the
		"mac86-64" architecture introduced in change #1467 above.
-------------------------------------------------------------------------------
BUG FIX
Number:		1469
Date:		Thu Feb 18 15:08:33 CET 2010
Report: 	Eric Madelaine (INRIA Sophia Antipolis) and Hubert Garavel
		(INRIA/VASY)
Author:		Remi Herilier (INRIA/VASY)
Files:		bin.*/distributor.a, bin.*/bcg_merge, bin.*/bes_solve

Nature:		A bug affecting the Distributor, Bcg_Merge, and Bes_Solve
		has been fixed. If the ".gcf" file contained a directive
		of the form "rcp = nfs", it was not processed correctly.
		This resulted in "Illegal seek" error messages, such as the
		following when invoking Distributor:

		   caesar.open: running ``distributor nfs.gcf file.pbg'' for
		      ``group_proxy.lotos''
		   distributor: timeout of 20000 ms expired while waiting for
		      incoming connection [caesar_network_1.c:2404]
		   Opening connections failed [distributor_coordinator.c:230]
		      (Error 29: Illegal seek)
		   distributor: Opening connections failed
		      [distributor_coordinator.c:230] (Error 29: Illegal seek)
		   fatal error on master node (Opening connections failed
		      [distributor_coordinator.c:230] (Error 29: Illegal seek)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1470
Date:		Mon Feb 22 17:30:34 CET 2010
Report:		Sylvain Robert, Remi Herilier, and Yann Genevois (INRIA/VASY)
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		bin.*/distributor.a

Nature:		Label parsing has been deactivated in the BCG fragments of
		the PBG files generated by the Distributor tool. This change
		should be invisibile to end users. Label parsing was not
		particularly useful, and removing it improves processing time,
		and avoids potentially blocking errors when parsing labels
		that are mal-formed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1471
Date:		Mon Feb 22 17:42:05 CET 2010
Authors:	Hubert Garavel and Radu Mateescu (INRIA/VASY)
Files:		bin.*/bcg_merge, man/*/bcg_merge.*

Nature:		Following the change #1470 above, two new options, -parse and
		-unparse, have been added to Bcg_Merge. These options enable
		or disable label parsing when merging the BCG fragments of
		PBG files. The Bcg_Merge manual page has been updated
		accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1472
Date:		Fri Feb 26 10:48:56 CET 2010
Authors:	Hubert Garavel and Yann Genevois (INRIA/VASY)
Files:		./INSTALLATION_1, ./INSTALLATION_2

Nature:		The INSTALLATION_1 and INSTALLATION_2 documents have been
		updated, notably to add information about installing CADP on
		Windows 64-bit systems (this is now possible, using the CADP
		"win32" 32-bit binaries).
-------------------------------------------------------------------------------
BUG FIX
Number:		1473
Date:		Fri Feb 26 12:32:56 CET 2010
Report:		Hubert Garavel and Alain Kaufmann (INRIA/VASY)
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		bin.*/libBCG.a, bin.*/bcg_io

Nature:		A bug introduced in July 2009 with the BCG 1.1 format (see
		items #1402 and #1442 above) has been detected and fixed
		in CADP beta-version 2008-i (February 2010).

		This bug, which affected all beta-versions of CADP from
		2008-c to 2008-h (inclusive), could lead to corrupted BCG
		files when using Bcg_Io to convert from BCG version 1.0 to
		version 1.1 (as explained in item #1442 above). BCG graphs
		directly generated in BCG 1.0 or BCG 1.1 format, or converted
		using Bcg_Io keeping the same version of the BCG format were
		not corrupted.

		When calling Bcg_Info on a corrupted BCG file, one could
		observe a segmentation fault or the display of an incorrect
		number of states (often larger than the number of transitions).

		A BCG file can be identified as corrupted if and only if the
		three following conditions are met:
		- the BCG format version reported by bcg_info -format is 1.1
		- the number of states reported by bcg_info -size is at least
		  16384
		- the file contains the string "modified by bcg_io", which
		  can be checked by running
			fgrep -s "modified by bcg_io" xxx.bcg
		  and checking that the status code returned by the fgrep
		  command is 0 (and not 1).

		The following procedure enables a corrupted BCG file (e.g.,
		FILE.bcg) to be recovered. It must be executed in a csh or
		tcsh shell:

	  	   # step 1: convert corrupt 1.1 back to 1.0
		   setenv BCG_VERSION 1.0
		   setenv BCG_RECOVER 1.1
		   bcg_io FILE.bcg FILE_orig.bcg
		   # step 2: convert 1.0 to (correct) 1.1
		   unsetenv BCG_RECOVER
		   unsetenv BCG_VERSION
		   bcg_io FILE_orig.bcg FILE.bcg
		   rm FILE_orig.bcg

		Note that care must be taken when setting BCG_RECOVER since it
		can generate invalid BCG files. It should only be used for
		recovery purposes and might not be provided in future versions
		of CADP.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1474
Date:		Sat Feb 27 13:49:06 CET 2010
Author:		Hubert Garavel (INRIA/VASY)
File:		bin.*/caesar.indent

Nature:		Two changes have been made to the Caesar.indent pretty-printer:

		- Caesar.indent now adds the file extension .lotos, .lot, or
		  .l to the file it has processed, following the same naming
		  conventions as Caesar and Caesar.adt.

		- The display of error messages has been enhanced to improve
		  consistency with Caesar and Caesar.adt.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1475
Date:		Mon Mar  1 10:32:36 CET 2010
Authors:	Hubert Garaval and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar, bin.*.caesar.adt, bin.*/caesar.old

Nature:		A new attribute "list" can now be included in the special
		comments attached to sort declarations, as follows:
		  sorts S (*! [... printeby xxx] list [external] *)
		This attribute should only be attached to "list-like" sorts,
		i.e., sorts S that have two constructors with respective
		signatures : -> S (the "NIL" constructor), and either
		: S', S -> S (the right-recursive "CONS" constructor) or
		: S, S' -> S (the left-recursive "CONS" constructor), where
		S' is some arbitrary sort that does not depend on S. The
		"list" attribute cannot be attached to external sorts: in
		this case, a warning is issued and the attribute is ignored.

		By default, values of list-like sorts are printed with the
		usual algebraic syntax, e.g.,
		   CONS (x1, CONS (x2, CONS (x3, NIL)))
		for a right-recursive list, or
		   CONS (CONS (CONS (NIL, x3), x2, x1))
		for a left-recursive list. When present, the "list" attribute
		specifies that values should be printed using a user-friendly
		syntax, e.g.
		   {x1, x2, x3}
		for the two values above. An empty list is printed as {}.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1476
Date:		Wed Mar  3 10:04:26 CET 2010
Authors:	Hubert Garavel and Yann Genevois (INRIA/VASY)
Files:		./INSTALLATION_WINDOWS, src/com/cadp_postscript

Nature:		Support has been added for the 64-bit versions of Ghostscript
		and Gsview required to run CADP on 64-bit Windows systems.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1477
Date:		Wed Mar  3 15:22:51 CET 2010
Report:		Anita Walkowiak (Wroclaw University of Technology, Poland)
Authors:	Hubert Garavel and Yann Genevois (INRIA/VASY)
Files:		com/tst

Nature:		Various changes have been made to the "tst" script to support
		recent versions 1.7.* of Cygwin, including use of gcc-3 instead
		of gcc-4 (which no longer provides the "-mno-cygwin" option).
-------------------------------------------------------------------------------
BUG FIX
Number:		1478
Date:		Wed Mar  3 17:47:31 CET 2010
Report:		Wendelin Serwe (INRIA/VASY)
Authors:	Hubert Garavel and Remi Herilier (INRIA/VASY)
Files:		src/com/xeuca_info

Nature:		On systems running certain recent Linux versions, xeuca_info
		displayed incorrect information in certain situations (symbolic
		links, directories, file names containing spaces, etc.). These
		problems have been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1479
Date:		Fri Mar  5 12:51:17 CET 2010
Report:		Pascal Poizat (Universite d'Evry, France)
Authors:	Yann Genevois and Hubert Garavel (INRIA/VASY)
Files:		./INSTALLATION_MACOS, ./INSTALLATION_2,
		src/com/cadp_postscript

Nature:		Systems running Mac OS X 10.6 Snow Leopard now use the
		Ghostscript utility provided with the operating system. This
		removes a dependency on installation using Fink, which was
		problematic.
-------------------------------------------------------------------------------
BUG FIX
Number:		1480
Date:		Thu Feb 18 15:53:12 CET 2010
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)
Files:		com/contributor, src/contributor/contributor.tcl,
		src/com/cadp_sum, tcl-tk/lib-bwidget/demo/tree.tcl

Nature:		Several changes have been made to Contributor:
		- Correct handling of symbolic links pointing to files that
		  have extensions different from those of the links
		- Correct handling of a very large number of files, which
		  exceeded the permitted length for a shell command line
		- Modification to the file selection algorithm to ignore
		  directories managed by well-known versioning systems
		  (SCCS, RCS, CVS, BitKeeper, etc.)
		- Removal of duplicates from ~/contributor/forbidden_files
		- Proper calculation of the number of files to be sent, which
		  is now displayed in the message:
		    Preparing the display of the <number> files selected
		- Various performance optimizations
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1481
Date:		Mon Mar  8 09:12:16 CET 2010
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/bcg_min, bin.*/bcg_min.old, man/manl/bcg_min.*

Nature:		Version 1.7 of BCG_MIN has been replaced by a new version 2.0,
		developed from scratch, which has the same options and
		command-line syntax, thus preserving backward compatibility.

		BCG_MIN 2.0 uses variants of the (sequential) signature-based
		minimisation algorithm of Blom & Orzan, which we adapted to
		handle stochastic and probabilistic bisimulations in addition
		to normal bisimulations.

		BCG_MIN 2.0 has been tested on a benchmark consisting of about
		3,700 BCG graphs, including normal, stochastic, and
		probabilistic BCG graphs. A performance comparison between
		BCG_MIN 1.7 and BCG_MIN 2.0 restricted to graphs with fewer
		than 500,000,000 transitions (which is about the maximum that
		can be reduced using BCG_MIN 1.7 in reasonable time) showed
		the following:

		- For normal bisimulations, the minimisation of the whole
		  benchmark using BCG_MIN 2.0 ran 21 times faster and used 1.3
		  times less memory than using BCG_MIN 1.7.

		- For stochastic and probabilistic bisimulations, the
		  minimisation of the whole benchmark using BCG_MIN 2.0 ran
		  544 times faster and used 5.8 times less memory than
		  BCG_MIN 1.7.

		Huge graphs have also been reduced using BCG_MIN 2.0. For
		instance, a graph containing 841,257,869 states and
		3,458,718,283 transitions has been minimized for strong
		bisimulation in less than 8 hours using about 83 GB memory,
		and for branching bisimulation in less than 8 hours using about
		132 GB memory.
-------------------------------------------------------------------------------
BUG FIX
Number:		1482
Date:		Wed Mar 10 13:05:20 CET 2010
Report:		Pascal Poizat (Universite d'Evry, France)
Authors:	Yann Genevois and Hubert Garavel (INRIA/VASY)
Files:		./INSTALLATION_MACOS, ./INSTALLATION_2,
		src/com/cadp_postscript

Nature:		Following on from the changes described in item #1479 above,
		the CADP tools now use "Preview" to display PostScript files
		on Mac OS X Snow Leopard systems instead of "gv". This
		removes a dependency on using Fink to install gv, which was
		problematic.

		The default value for the $CADP_PS_VIEWER environment variable
		(see  the INSTALLATION_2 file for more information about this
		variable) has been changed, and is now:
		- "ghostview" for Unix systems
		- "gsview32.exe" for Windows systems
		- "gv" for Mac OS X systems strictly older than 10.6 Snow
		   Leopard
		- "/usr/bin/open" for Mac OS X 10.6 Snow Leopard systems

		The directives given in the INSTALLATION_2 file have been
		modified for Mac OS X Snow Leopard: from now on, we recommend
		using MacPorts instead of Fink and one no longer needs to
		install Ghostview (only Ghostscript needs to be installed).
-------------------------------------------------------------------------------
BUG FIX
Number:		1483
Date:		Mon Mar 15 16:33:47 CET 2010
Authors:	Yann Genevois and Hubert Garavel (INRIA/VASY)
Files:		demos/demo_19/start, demos/demo_19/graphics/startsimu

Nature:		Demo 19 has been modified to address one of the many causes
		that prevent it from running on Windows systems.
-------------------------------------------------------------------------------
BUG FIX
Number:		1484
Date:		Fri Mar 26 12:43:41 CET 2010
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a

Nature:		A bug was fixed in the CAESAR_PRINT_SOLVE_1() function of
		the CAESAR_SOLVE library, which printed erroneous statistical
		information for the boolean equation systems on which the
		CAESAR_PURGE_BLOCK_SOLVE_1() or CAESAR_PURGE_SOLVE_1()
		functions were previously called.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1485
Date:		Tue Apr  6 18:02:02 CEST 2010
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
File:		bin.*/libcaesar.a

Nature:		Internal optimizations have been made to memory management for
		OPEN/CAESAR's table_1, so as to reduce memory usage. This
		change will be transparent to the end users.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1486
Date:		Fri Apr  9 10:20:05 CEST 2010
Author:		Yann Genevois (INRIA/VASY)
File:		com/tst

Nature:		On Linux systems, the "tst" script now issues a better error
		message if the 32-bit compatibility libraries (e.g., the RPM
		package "glibc-devel-2.*.*-*.i386.rpm", the CentOS package
		"glibc-devel.i386", the Debian package "libc6-dev-i386", etc.)
		are not present.
-------------------------------------------------------------------------------
BUG FIX
Number:		1487
Date:		Tue Apr 13 15:24:52 CEST 2010
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
File:		bin.*/libcaesar.a

Nature:		Two bugs in the CAESAR_PURGE_TABLE_1() function of the
		OPEN/CAESAR table_1 library have been fixed:

		- If insufficient memory was available, CAESAR_PURGE_TABLE_1()
		  would, in certain cases, return silently leaving the table
		  in an inconsistent state, with a high risk of a subsequent
		  segmentation fault. This problem has been corrected. In
		  addition, the purge is now faster, improving the performance
		  of CAESAR_PURGE_TABLE_1().

		- The value of an internal table attribute was not always
		  reinitialised correctly when invoking CAESAR_PURGE_TABLE_1().
		  This led to the size of the hash table being increased sooner
		  than necessary, thereby consuming more memory. This problem
		  has been corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		1488
Date:		Wed Apr 21 10:22:47 CEST 2010
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/libcaesar.a, man/*/caesar_table_1.*,
		doc/*/Garavel-92-a.*

Nature:		Several changes have been made to OPEN/CAESAR table_1 library:
		- Handling of table overflows has been improved.
		- The hash table initialisations have been made faster.
		- When the end of the last page was reached, a new page was
		  allocated. This caused a core dump when the size of the page
		  exactly divided the size limit. This problem has been
		  corrected, and when the end of the last page is reached, no
		  new page is allocated.
		- The "caesar_table_1" manual page has been improved. Notably,
		  the CAESAR_PUT_BASE_TABLE_1() and CAESAR_PUT_MARK_TABLE_1()
		  descriptions have been updated to describe the behaviour of
		  these functions when the table is full.
-------------------------------------------------------------------------------
BUG FIX
Number:		1489
Date:		Tue Apr 27 12:34:16 CEST 2010
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)
File:		src/eucalyptus/eucalyptus.tcl

Nature:		If an FSP ".lts" file or a LOTOS NT ".lnt" file does not
		contain a main process, Eucalyptus now issues a proper error
		message.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1490
Date:		Wed May  5 09:19:41 CEST 2010
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)
Files:		com/contributor

Nature:		Several enhancements have been made to Contributor:

		- Some files that are created and updated by Contributor have
		  been renamed:
		  - file ~/.contributor/authorized_type is now called
		     ~/.contributor/authorized_types
		  - file ~/.contributor/authorized_dir is now called
		     ~/.contributor/authorized_paths
		  - file ~/.contributor/infos is now called
                     ~/.contributor/user

		- The messages "Searching the files in the selected
		  directories..." and "Estimated number of files" have been
		  merged, and the number of files found is displayed in real
		  time, increasing as the search proceeds, as a progress
		  indicator.
-------------------------------------------------------------------------------
BUG FIX
Number:		1491
Date:		Thu May  6 10:33:17 CEST 2010
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)
Files:		bin.*/ocis.a, bin.*/xsimulator.a, com/fsp.open

Nature:		A bug when invoking Ocis or Xsimulator from Fsp.Open caused
		certain .bcg or .ren files to be deleted too soon. With Ocis,
		this caused the following error message:
		 bcg_transition: file ``xxx.bcg'' is unreadable
		 error on communication pipe (simulation kernel not responding)
		This problem has been corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1492
Date:		Thu May  6 11:24:44 CEST 2010
Report:		Wendelin Serwe (INRIA/VASY)
Author:		Remi Herilier (INRIA/VASY)
File:		src/eucalyptus/eucalyptus.tcl

Nature:		Some minor changes have been made to the EUCALYPTUS user
		interface:

		- The menu title has been shortened so that it does not
		  overflow the available space.

		- The term "Eucalyptus Toolset", which was used for historical
		  reasons, is no longer used, to avoid confusion. It has been
		  replaced with "Eucalyptus X.Y", when X.Y indicates the
		  version.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1493
Date:		Thu May  6 17:14:29 CEST 2010
Authors:	Yann Genevois and Hubert Garavel (INRIA/VASY)	
File:		src/com/cadp_cc

Nature:		The "cadp_cc" shell script has been modified to add the
		option "-vec_report", which suppresses unnecessary messages
		from Intel cc version 11. This avoids messages of the form:
			remark: LOOP WAS VECTORIZED.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1494
Date:		Mon May 10 17:35:46 CEST 2010
Author:		Hubert Garavel (INRIA/VASY)
File:		bin.*/caesar.adt

Nature:		Caesar.adt now performs additional checks to detect certain
		LOTOS sorts that should not be stored in hash tables (see
		items #1250 and #1255 above). A LOTOS sort S is rejected by
		these checks if it has two characteristics:

		- it is stored in a table, meaning that CAESAR_ADT_HASH_S < 0
		  or CAESAR_ADT_HASH_S > 1

		- and it is non-canonical, either directly (meaning that
		  CAESAR_ADT_UNCANONICAL_S is defined) or transitively
		  (meaning that S depends on a non-canonical sort).

		An informative error message is provided in such situations,
		which is helpful to modify LOTOS sorts so that they can be
		made canonical and stored in hash tables.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1495
Date:		Tue May 11 19:15:07 CEST 2010
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
File:		incl/X_STRING.h

Nature:		The X_STRING.h library has been updated to enable strings to
		be stored in hash tables. Therefore, it is now possible to
		model check programs that manipulate (variable-length) string
		values. The choice between various string implementations is
		governed by the value of the CAESAR_ADT_HASH_ADT_STRING macro
		definition:

		  - If CAESAR_ADT_HASH_ADT_STRING is undefined or equal to
		    0 or 1: strings are implemented as before; they are
		    allocated dynamically using malloc(), which can lead to
		    inefficient memory use.

		  - If CAESAR_ADT_HASH_ADT_STRING > 1: strings are stored in
		    a hash table with a maximum of CAESAR_ADT_HASH_ADT_STRING
		    entries.

		  - If CAESAR_ADT_HASH_ADT_STRING < 0: strings are stored in a
		    hash table with a maximum of 2^-CAESAR_ADT_HASH_ADT_STRING
		    entries.

		Note that in the two latter cases, CAESAR_ADT_HASH_ADT_STRING
		should be #defined before including "X_STRING.h" and not
		after.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1496
Date:		Wed May 12 08:37:56 CEST 2010
Author:		Remi Herilier and Hubert Garavel (INRIA/VASY)
File:		com/contributor

Nature:		Several improvements have been made to the Contributor tool:

		- Compressed files are now taken into account.

		- The window can now be refreshed while the list of files
		  already sent is being read from and saved to file
		  "~/.contributor/already_sent".

		- The performance was improved. A test with 10,000 ".lotos"
		  files each with an accompanying ".c" file, giving a total of
		  20,000 files of interest to Contributor, reduced the
		  processing time from 4'10'' to 2'20''.
-------------------------------------------------------------------------------
BUG FIX
Number:		1497
Date:		Wed May 12 15:17:52 CEST 2010
Authors:	Alain Kaufmann and Hubert Garavel (INRIA/VASY)
File:		incl/X_STRING.h

Nature:		A bug in the ADT_RINDEX_STRING() function of the X_STRING.h
		library caused ADT_RINDEX_STRING (x, "") to return 1 instead
		of strlen (x). This problem has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1498
Date:		Tue May 18 16:31:40 CEST 2010
Author:		Hubert Garavel (INRIA/VASY)
File:		bin.*/caesar.adt

Nature:		For an external LOTOS sort S, it is now possible to #define
		CAESAR_ADT_HASH_S, so as to indicate that values of sort S
		are canonical and will be stored in a hash table that is
		directly programmed by the user. If CAESAR_ADT_HASH_S is
		#defined, its meaning is the following:

		- CAESAR_ADT_HASH_S = 0 has no effect and is ignored.
		
		- CAESAR_ADT_HASH_S = 1 is not permitted and causes a warning
		  message.

		- CAESAR_ADT_HASH_S > 1 indicates that sort S is stored in
		  a table having at most CAESAR_ADT_HASH_S entries. In
		  such case, Caesar.adt checks that CAESAR_ADT_HASH_S is
		  not excessively large.

		- CAESAR_ADT_HASH_S < 0 indicates that sort S is stored in
		  a table having at most 2^-CAESAR_ADT_HASH_S entries. In
		  such case, Caesar.adt checks that CAESAR_ADT_HASH_S is
		  not excessively small.

		When a hash table is specified, the user must provide three
		macro-definitions to handle this table. They will be called
		in the C code generated by Caesar.adt. These macros are the
		following:
		- CAESAR_ADT_CREATE_S() creates the table
		- CAESAR_ADT_DELETE_S() deletes the table
		- CAESAR_ADT_SHOW_S(F) prints the table contents to file F

		Examples of such macros can be found in the "incl/X_STRING.h"
		file (see the definitions of CAESAR_ADT_CREATE_ADT_STRING(),
		CAESAR_ADT_DELETE_ADT_STRING(), CAESAR_ADT_SHOW_ADT_STRING()).
-------------------------------------------------------------------------------
BUG FIX
Number:		1499
Date:		Tue May 25 19:16:03 CEST 2010
Report:		Simon Bouland and Wendelin Serwe (INRIA/VASY)
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar

Nature:		Previously, if the Caesar compiler was called with the option
		"-root P", and both the specification and a process were named
		P, the following error message was emitted:

		  #098 error :
		       several processes having the expected root name
     		       quit

		This problem has been corrected, and the process P specified
		by "-root" is now selected. This is compatible with the LOTOS
		specification, which states that specification names and
		process names exist in different namespaces.
		
		For backward compatibility, if the Caesar compiler is called
		with the option "-root P" when the specification is called P
		but there is no process called P, the specification is
		selected.
-------------------------------------------------------------------------------
BUG FIX
Number:		1500
Date:		Thu May 27 15:59:15 CEST 2010
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		com/caesar.open, bin.*/caesar, bin.*/caesar.adt,

Nature:		Caesar, Caesar.adt, and Caesar.open now systematically
		perform link edit by adding the "-lm" option. This is
		necessary on Solaris systems in the following cases:
		- if the -lBCG option is specified,
		- if the X_NATURAL.h, X_INTEGER.h or X_REAL.h libraries are
		  included, because they can call the pow() function,
		- if the X_STRING.h library is included, because it can call
		  the log10() and labs() functions.

		Previously, the "-lm" option had to be specified explicitly
		for these cases. It is now done automatically.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1501
Date:		Thu Jun  3 14:52:28 CEST 2010
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
File:		bin.*/libBCG.a

Nature:		Several optimizations for "bcg_info -profiles" have been made
		in the BCG library:
		- The conversion of binary labels into character strings has
		  been optimized.
		- The conversion has been further optimized for labels having
		  one single element (e.g., a gate name without offers).

		These optimizations significantly improve time performance.
		For large graphs that contain many different labels, the time
		can be almost halved.
-------------------------------------------------------------------------------
BUG FIX
Number:		1502
Date:		Fri Jun  4 18:16:31 CEST 2010
Author:		Radu Mateescu (INRIA/VASY)
File:		bin.*/bes_solve

Nature:		A bug was fixed in the handling of ".rbc" files on 64-bit
		architectures. Due to an error at the initialization of the
		random number generator, the boolean equation systems generated
		from ".rbc" files on these architectures were different from
		those generated on 32-bit architectures.
-------------------------------------------------------------------------------
BUG FIX
Number:		1503
Date:		Fri Jun 18 16:10:01 CEST 2010
Report:		Frederic Lang (INRIA/VASY)
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		com/bcg_edit

Nature:		In some cases, Bcg_Edit crashed with a TCL error when opening
		a file if the ".bcg" or ".ps" extension was not specified:
		     Error in startup script: bad option "-": must be -exact,
		     -glob, -regexp, or --
		This bug has been corrected.
------------------------------------------------------------------------------r
IMPROVEMENT
Number:		1504
Date:		Tue Jul  6 16:16:36 CEST 2010
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c, bin.*/svl_kernel, src/svl/standard, man/*/svl.l

Nature:		SVL has a new operator named "smart reduction", which reduces
		a system consisting of individual processes composed in
		parallel, following a compositional strategy for determining
		the order in which the individual processes are composed.

		The aim of the strategy is to avoid generating unnecessarily
		large intermediate graphs. It relies on a heuristic metric
		(computed by EXP2C) that takes into account an estimated rate
		of hidden transitions and an estimated rate of interleaved
		transitions belonging to a composition of processes.

		See the SVL manual page for detailed information.
-------------------------------------------------------------------------------
BUG FIX
Number:		1505
Date:		Thu Jul  8 17:12:26 CEST 2010
Report:		Radu Mateescu (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
File:		bin.*/projector.a

Nature:		PROJECTOR terminated on a table overflow error when the input
		implicit graph had more than 10007 labels. This bug has been
		corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1506
Date:		Thu Jul  8 19:14:27 CEST 2010
Authors:	Frederic Lang (INRIA/VASY)
File:		bin.*/svl_kernel, src/svl/standard, man/*/svl.l

Nature:		In addition to LOTOS files and processes in LOTOS files, SVL
		now accepts LOTOS NT files (extension .lnt), processes in
		LOTOS NT files, FSP files (extension .lts), and processes in
		FSP files.

		The default file in which the process definitions must be
		searched, previously set in variable $DEFAULT_LOTOS_FILE,
		should now be set in variable $DEFAULT_PROCESS_FILE. However,
		to ensure backward compatibility, it can still be set in
		variable $DEFAULT_LOTOS_FILE if it is a LOTOS file and if
		$DEFAULT_PROCESS_FILE is not used. Otherwise, warnings are
		issued. See the SVL manual page for detailed information.
-------------------------------------------------------------------------------
BUG FIX
Number:		1507
Date:		Mon Jul 19 10:49:32 CEST 2010
Report:		Wendelin Serwe (INRIA/VASY)
Authors:	Frederic Lang and Hubert Garavel (INRIA/VASY)
Files:		bin.*/bcg_steady. bin.*/bcg_transient,
		man/*/bcg_steady.*, man/*/bcg_transient.*

Nature:		The order of columns in the throughput file was not respected
		when Bcg_Steady or Bcg_Transient was called more than once
		with the "-append" option for different ".bcg" files. The
		problem has been corrected: when Bcg_Steady and Bcg_Transient
		are called with the "-append" option, they now read the first
		line of the throughput file, if it exists, and use the
		information it contains to preserve the order of columns
		defined in the file. The manual pages for Bcg_Steady and
		Bcg_Transient have been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1508
Date:		Thu Jul 22 11:50:54 CEST 2010
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/bes_solve, man/*/bes_solve.*

Nature:		The behaviour of the option "-variable" was improved in order
		to handle the resolution of several boolean variables of
		interest instead of only one. The options "-bes" and "-diag"
		were improved accordingly, in order to generate for each
		variable of interest the corresponding files containing the
		portion of the boolean equation system explored during the
		resolution of that variable and the diagnostic generated for
		that variable, respectively.

		These new features enable testing of repeated invocations
		of boolean resolution algorithms on several variables of the
		same boolean equation system.
-------------------------------------------------------------------------------
BUG FIX
Number:		1509
Date:		Fri Jul 23 11:14:20 CEST 2010
Authors:	Jerome Fereyre, Hubert Garavel, Remi Herilier, Wendelin Serwe,
		Iker Bellicot, and Radu Mateescu (INRIA/VASY)
Files:		bin.*/bes_solve, man/*/bes_solve.*

Nature:		The behaviour of the -parallel option of BES_SOLVE, which
		invokes the algorithm AP for distributed resolution of boolean
		equation systems, was corrected and enhanced substantially.
		This is the result of a long-term effort carried out by several
		contributors:

		- J. Fereyre cleaned up the code of the AP algorithm,
		  implemented (together with R. Mateescu) the primitive for
		  writing a boolean equation system in a ".bes" file in a
		  distributed manner, and implemented (together with
		  H. Garavel and R. Mateescu) the distributed detection of
		  cyclic dependencies between equation blocks.

		- R. Herilier and W. Serwe further cleaned up the code of the
		  AP algorithm and ported it to 64-bit architectures.

		- I. Bellicot further cleaned up the code of the AP algorithm,
		  corrected (together with R. Mateescu) several errors that
		  caused core dumps and deadlocks on the boolean equation
		  systems containing several equation blocks, and (together
		  with R. Mateescu) enhanced the primitive for reading a
		  boolean equation system from a compressed file ".bes.gz" in
		  a distributed manner.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1510
Date:		Fri Jul 23 09:54:42 CEST 2010
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/cunctator.a, man/*/cunctator.*

Nature:		A new option -rng has been added to CUNCTATOR. This option
		enables the user to specify the random number generator used
		to compute the simulation time and choose the LTS transitions
		explored during simulation. Four different random number
		generators can be currently selected using this option.
		See the updated CUNCTATOR manual page for details.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1511
Date:		Fri Jul 23 18:40:16 CEST 2010
Author:		Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.old,
		bin.*/caesar.indent

Nature:		In the LOTOS standard, "i" (or "I") is a reserved keyword
		indicating the internal gate, and using "i" anywhere other
		than to the left of a ";" causes a syntax error. These error
		messages were previously difficult to understand, so better
		error messages are now displayed for the following situations:

		- when a type, sort, operation, variable, process, or
		  specification named "i" is declared

		- when a gate named "i" is declared (by a "hide" operator, by
		  a "par" operator or as a formal parameter of a process)

		- when a gate named "i" is used on the left-hand side of a
		  prefix operator ";" together with experiment offers ("!" or
		  "?") and/or a boolean guard ("[...]")

		- when a gate named "i" is used in a parallel composition
		  operator "|[...]|"

		- when a gate named "i" is used in a "par" operator

		- when a gate named "i" is used in a "choice" operator

		- when a gate named "i" is passed as an actual parameter of a
		  process
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1512
Date:		Mon Jul 26 10:09:50 CEST 2010
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.old,
		man/*/caesar.*, man/*/caesar.adt.*

Nature:		In the LOTOS standard, "i" (or "I") is a reserved keyword
		indicating the internal gate, and using "i" as an ordinary
		identifier is not permitted.

		To enhance user friendliness, the rules for using "i" (or "I")
		in LOTOS programs compiled with Caesar and Caesar.adt have
		been relaxed. By default:

		- Declaring a type, sort, operation, variable, process, or
		  specification named "i" is now permitted.

		- In the context of gates, "i" is now a predefined identifier
		  (rather than a reserved keyword) denoting the internal gate.
		  Declaring the "i" gate is still forbidden, as is use of "i"
		  other than in an action prefix with no offer and no boolean
		  guard.

		To retain the behaviour defined by the LOTOS standard, one
		should invoke Caesar and Caesar.adt with the "-iso" option,
		which instructs Caesar and Caesar.adt to refuse any identifier
		named "i". In such cases, the error messages described in item
		#1511 above are displayed. The Caesar and Caesar.adt manual
		pages have been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1513
Date:		Tue Jul 27 15:02:53 CEST 2010
Report:		Hubert Garavel (INRIA/VASY)
Authors:	Frederic Lang (INRIA/VASY)
File:		bin.*/svl_kernel, src/svl/standard

Nature:		When performing "hide", "rename", "prio", "cut", or "sync"
		operations on labels using the "gate" matching mode, SVL always
		checks that the labels are mere gates, i.e., that they contain
		neither spaces nor exclamation marks. Otherwise, SVL issues a
		warning.

		This check was already implemented for "sync", as well as for
		the "hide" and "rename" operations performed using the
		BCG_LABELS tool. SVL now performs this check also for the
		"hide" and "rename" operations performed using the EXP.OPEN
		tool, as well as the "cut" and "prio" operations (which are
		always performed using EXP.OPEN).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1514
Date:		Fri Jul 30 11:02:21 CEST 2010
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)
Files:		src/com/cadp_pdf, src/eucalyptus/*

Nature:		Several improvements have been made to EUCALYPTUS:
		- LOTOS NT ".fnt" and ".tnt" files (see the history annex of
		  the LNT2LOTOS reference manual) are now handled.
		- The "-strings" option of LNT.OPEN is now handled.
		- PDF files can now be opened.
		- For files of unknown format, EUCALYPTUS now offers an "Open
		  with..." option, enabling the user to specify a suitable tool
		  for processing the file.
-------------------------------------------------------------------------------
BUG FIX
Number:		1515
Date:		Mon Aug 30 16:42:40 CEST 2010
Author:		Hubert Garavel and Wendelin Serwe (INRIA/VASY)
File:		bin.*/caesar.adt

Nature:		On certain architectures, such as iX86, certain incorrect
		LOTOS programs caused a segmentation fault in Caesar.adt.
		This problem has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1516
Date:		Tue Aug 31 17:02:17 CEST 2010
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
File:		src/com/cadp_indent

Nature:		The cadp_indent utility has been modified to reduce the
		differences in indentation between Solaris and Linux
		platforms, facilitating testing.
-------------------------------------------------------------------------------
BUG FIX
Number:		1517
Date:		Wed Sep  1 11:35:46 CEST 2010
Author:		Remi Herilier (INRIA/VASY)
File:		src/eucalyptus/eucalyptus.tcl

Nature:		When using TGV through EUCALYPTUS to generate a test, the
		following error message was displayed:

		  Unexpected Tcl error message: can't read "Tmp_File": no
		    such variable
		  can't read "Tmp_File": no such variable
		  while executing
		  "string equal "$Tmp_File" $Failed_Conversion"
		  invoked from within
		  "catch $Command Message"

		This bug, which was introduced in release CADP 2008-g issued
		in November 2009, has been corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		1518
Date:		Fri Sep  3 10:40:15 CEST 2010
Report:		Eric Madelaine and Raluca Halalai (INRIA Sophia Antipolis)
Author:		Hubert Garavel (INRIA/VASY)
File:		bin.*/distributor.a

Nature:		The CPU usage shown on the distributed monitor of the
		Distributor tool was incorrect (always either 0% or 100%).
		This has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1519
Date:		Wed Sep  8 16:21:22 CEST 2010
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)
File:		src/com/cadp_zip

Nature:		The behaviour of the "cadp_zip" script on systems where the
		"compress", "uncompress", or "unzip" utilities are not
		installed (which is often the case for Linux systems) has been
		improved. If a required utility is not available, the script
		attempts to find another suitable utility (for example, gzip
		in place of compress). If no suitable alternative utility can
		be found, which is always the case for uncompress, an error
		message is displayed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1520
Date:		Fri Sep 17 09:00:14 CEST 2010
Authors:	Hubert Garavel and Remi Herilier (INRIA/VASY)
Files:		src/com/cadp_pdf, ./INSTALLATION_2

Nature:		A new environment variable $CADP_PDF_VIEWER was introduced to
		to specify which PDF (Portable Document Format) viewer is to
		be used by EUCALYPTUS on the current machine. Its default
		values are "gv" for Unix platforms, Adobe Acrobat Reader for
		Windows platforms, and "open" for Mac OS X platforms.
-------------------------------------------------------------------------------
BUG FIX
Number:		1521
Date:		Mon Sep 27 17:21:21 CEST 2010
Authors:	Hubert Garavel and Remi Herilier (INRIA/VASY)
Files:		com/tst

Nature:		A bug in the "tst" shell script has been fixed. Previously,
		the temporary "test_$$" files were created in the current
		directory, which could fail if the user did not have write
		access to this directory.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1522
Date:		Mon Sep 27 18:49:26 CEST 2010
Report:		Johan Oudinet (LRI, Orsay, France)
Authors:	Hubert Garavel, Frederic Lang, Wendelin Serwe, and Yves Guerte
		(INRIA/VASY)	
Files:		./emacs, ./ext,
		./ext/emacs/READ_ME, ./ext/emacs/lotosnt-mode.el,
		./ext/jedit/READ_ME, ./ext/jedit/lotosnt.xml

Nature:		The support for the Emacs, XEmacs, and jEdit text editors in
		CADP has been enhanced, notably to add support for editing
	 	LOTOS NT files (compatible with either TRAIAN or LNT2LOTOS).
		The following changes were made:
		
		- A new directory, "./ext" was created in the CADP release,
		  with two subdirectories, "emacs" and "jedit". The former
		  "./emacs" directory was moved to "./editors/emacs") and a
		  symbolic link from "./emacs" to "./editors/emacs" was
		  added for backward compatibility.
		
		- A LOTOS NT mode for Emacs and XEmacs was added, in the file
		  "./ext/emacs/lotosnt-mode.el". The "./ext/emacs/READ_ME"
		  file was updated.
		
		- A LOTOS NT mode for jEdit was added, in the file
		  "./ext/jedit/lotosnt.xml". The ".ext/jedit/READ_ME" file was
		  updated.
-------------------------------------------------------------------------------
BUG FIX
Number:		1523
Date:		Wed Oct  6 11:44:28 CEST 2010
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		A bug was identified in the V4 optimization performed by the
		CAESAR compiler: in certain rare cases the value of a guard
		could not be evaluated, causing an exception to be raised and
		emitting error messages of the form:
		
		   #270 error in file ``.h'' :
		        unexpected case (not defined by the equations)	
			in operation F [413]
			implemented by function CAESAR_ADT_FUNC_FOURTH
			[./xxx.h:3010]
		   #172 bug during optimization:
		        optimizer program execution aborted (opt. V4 cancelled)

		This occured when the evaluation of the guard neither yielded
		true nor false, but raised an exception instead. This case is
		now handled correctly by Caesar, which silently catches the
		exception.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1524
Date:		Wed Oct  6 16:23:11 CEST 2010
Authors:	Hubert Garavel, Remi Herilier, and Frederic Lang (INRIA/VASY)
Files:		all

Nature:		CADP has been ported to the Solaris Intel 32- and 64-bit
		platforms. The corresponding architecture names are "sol86"
		(for 32-bit Solaris) and "sol64" (for 64-bit Solaris).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1525
Date:		Mon Oct 11 14:59:00 CEST 2010
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/cunctator.a, man/*/cunctator.*

Nature:		A new option -cache has been added to CUNCTATOR. This option
		enables a given number of states to be stored in a cache,
		which speeds up the simulation by avoiding the recomputation
		of certain sequences of invisible transitions. Five replacement
		strategies are currently provided for choosing the state to be
		deleted when the cache is full and a new state must be
		inserted: LRU/MRU (Least/Most Recently Used), MRU/LFU
		(Least/Most Frequently Used), and RND (Random). The manual
		page has been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1526
Date:		Mon Oct 25 18:13:36 CEST 2010
Report: 	Yves Guerte (INRIA/VASY)
Authors: 	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		Certain obsolete version of Mingwin32 are not able to invoke
		freopen() on /dev/null. The CAESAR compiler, which uses this
		routine, has been modified to take account of this problem.
-------------------------------------------------------------------------------
BUG FIX
Number:		1527
Date:		Tue Oct 26 11:59:52 CEST 2010
Report: 	Etienne Lantreibecq (STMicroelectronics)
Authors: 	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		The V3 optimization performed by the Caesar compiler has been
		improved. It no longer treats as a constant any expression
		the evaluation of which raises an exception. This change
		solves two issues:
		
		- Undesirable error messages related to the exception are
	 	  no longer issued.

		- It corrects a bug that could lead to creation of C code that
		  does not execute correctly.

		In several cases, this change reduces the size of the network
		(e.g., the number of places, transitions, and variables were
		found to decrease by between 12% and 30%). However, in rare
		cases, this change was found to increase the number of
		variables by 4%.
-------------------------------------------------------------------------------
BUG FIX
Number:		1528
Date:		Tue Oct 26 17:31:36 CEST 2010
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/cunctator.a

Nature:		A bug has been fixed in the CUNCTATOR tool, which caused an
		erroneous display of the simulation results on 64-bit machines
		when the "-action" option with a single argument was used in
		conjunction with the "-save" or "-restore" options.
-------------------------------------------------------------------------------
BUG FIX
Number:		1529
Date:		Tue Nov  9 18:11:14 CET 2010
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/fsp2lotos, man/*/fsp2lotos.*

Nature:		When the first character of the input FSP file name was not a
		letter, the tool FSP2LOTOS could generate LOTOS library files
		whose prefix was not a valid LOTOS identifier. Consequently,
		the inclusion of this library file in a LOTOS program issued
		a syntactic error. This bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1530
Date:		Fri Nov 26 11:12:34 CET 2010
Authors:	Hubert Garavel and Remi Herilier (INRIA/VASY)
Files:		com/tst, ./INSTALLATION_2

Nature:		The "tst" shell script has been updated to take account of the
		migration from Sun Studio 11 to Oracle Solaris Studio 12. "tst"
		now detects the presence or absence of /opt/SUNWspro and of the
		new default installation locations of the C compiler, e.g.,
		/opt/sunstudio12.1, /opt/solstudio12.2, etc.
-------------------------------------------------------------------------------
BUG FIX
Number:		1531
Date:		Tue Dec  7 12:43:22 CET 2010
Report: 	Pepijn Crouzen (Saarland University, Germany)
Author:		Frederic Lang (INRIA/VASY)
File:		bin.*/bcg_min

Nature:		Strong self stochastic graph minimization with BCG_MIN (options
		-strong -rate -self) could produce an incorrect output BCG
		graph. Branching self stochastic graph minimization (options
		-branching -rate -self) could also produce an incorrect output
		BCG graph if the input BCG graph contained only visible (i.e.,
		not internal) transitions. This bug has been corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		1532
Date:		Thu Dec  9 18:00:14 CET 2010
Report:		Iker Bellicot (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/libcaesar.a, bin.*/bes_solve

Nature:		A bug has been fixed in the CAESAR_COMPUTE_SOLVE_1() primitive
		of the CAESAR_SOLVE_1 library, which caused a segmentation
		fault to occur when the boolean variable to be solved had an
		index outside the range of the variables defined in the
		corresponding equation block. The error manifested itself when
		invoking the BES_SOLVE tool on a boolean equation system
		represented as a ".bes" file to solve a variable with an index
		out of range.
-------------------------------------------------------------------------------
BUG FIX
Number:		1533
Date:		Fri Jan 21 17:47:46 CET 2011
Report:		Yann Genevois (INRIA/VASY)
Author:		Radu Mateescu (INRIA/VASY)
Files:		bin.*/mcl_expand

Nature:		A bug was fixed in the MCL_EXPAND 3.0 tool, which generated,
		for certain mu-calculus formulas, modal equation systems with
		alternation higher than one. This led to the generation of
		boolean equation systems with the same alternation, which is
		currently forbidden by the CAESAR_SOLVE library.
-------------------------------------------------------------------------------
BUG FIX
Number:		1534
Date:		Tue Jan 11 12:25:40 CET 2011
Report:		Frederic Lang (INRIA/VASY)
Author:		Wendelin Serwe (INRIA/VASY)
File:		bin.*/libcaesar.a

Nature:		A bug in OPEN/CAESAR's "table_1" library has been corrected.
		Previously, if the number of elements in a table was bounded,
		invoking certain CAESAR_PUT_xxx() functions could cause a
		segmentation fault.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1535
Date:		Thu Jan 20 17:59:26 CET 2011
Authors:	Hubert Garavel, Remi Herilier, Frederic Lang, Radu Mateescu,
		Gwen Salaun, Wendelin Serwe (INRIA/VASY), Nicolas Coste
		(STMicroelectronics), Holger Hermanns (Saarland University),
		Jeff Kramer and Jeff Magee (Imperial College, London)
Files:		doc/*/Lang-Salaun-Herilier-et-al-10.*,
		doc/*/Mateescu-Salaun-10.*, doc/*/Mateescu-Serwe-10.*,
		doc/=READ_ME.txt, doc/biblio.bib	

Nature:		Three new publications have been added to the CADP release:

		- "Translating FSP into LOTOS and Networks of Automata"
		  (Lang-Salaun-Herilier-et-al-10) proposes a translation of FSP
		  sequential processes into LOTOS using an automated translator
		  tool, Fsp2Lotos, enabling FSP specifications to be validated
		  jointly by LTSA and CADP (see item #1346 above).
		
		- "Translating Pi-Calculus into LOTOS NT" (Mateescu-Salaun-10)
		  propposes a translation of the finite control fragment of the
		  pi-calculus to LOTOS NT, which is automated using the Pic2Lnt
		  tool, which makes it possible to analyze pi-calculus
		  specifications using CADP.
		
		- "A Study of Shared-Memory Mutual Exclusion Protocols using
		  CADP" (Mateescu-Serwe-10) reports on experiments with
		  evaluating the performance, using Interactive Markov Chains,
		  of many widely-used mutual exclusion protocols using
		  Interactive Markov Chains.
-------------------------------------------------------------------------------
BUG FIX
Number:		1536
Date:		Wed Feb  9 09:18:16 CET 2011
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		A bug in the "-gradual" mode of CAESAR has been fixed.
		Previously, certain fields attached to the variables of the
		Petri net were not correctly initialised, which caused a
		segmentation fault in extremely rare cases (this problem was
		observed in only one LOTOS specification among thousands).
-------------------------------------------------------------------------------
BUG FIX
Number:		1537
Date:		Wed Feb  9 09:19:26 CET 2011
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		Previously, the V9 optimization of CAESAR was incorrect, which,
		in certain rare cases, caused incorrect graphs to be generated.
		This bug has been corrected, and the revised V9 optimization
		now detects all conflicts between variables (on a few examples,
		this correct detection of conflicts now creates approximately
		20% more variables than previously).
-------------------------------------------------------------------------------
BUG FIX
Number:		1538
Date:		Mon Feb 14 10:21:27 CET 2011
Author:		Wendelin Serwe (INRIA/VASY)
Files:		bin.*/distributor.a, bin.*/bcg_merge

Nature:		A bug has been fixed in the "caesar_network_1" communication
		library used by Distributor and Bcg_Merge. Previously, if the
		launch of processes on remote machines failed, it caused a
		segmentation violation in the Distributor or Bcg_Merge tool,
		with the following message:
		 fatal error on master node (Launch of remote instances failed)
   		 segmentation fault (core dumped)
-------------------------------------------------------------------------------
BUG FIX
Number:		1539
Date:		Thu Feb 17 10:36:37 CET 2011
Report: 	Simon Bouland (INRIA/VASY)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
File:		bin.*/caesar

Nature:		For very large LOTOS specifications with many variables, when
		using the V9 optimization, duplication of variables could cause
		tables to overflow, generating the following error message:
		   #7772 internal error
	      	         unknown error code
		This problem has been solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1540
Date:		Sat Mar 12 21:08:01 CET 2011
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)
File:		./INSTALLATION_MACOS

Nature:		The instructions for installing Xcode on Mac OS X systems have
		been improved and updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1541
Date:		Wed Mar 16 15:32:15 CET 2011
Authors:	Hubert Garavel, Frederic Lang, Radu Mateescu, Wendelin Serwe
		(INRIA.VASY), and Pepijn Crouzen (Saarland University)
Files:		doc/*/Crouzen-Lang-11.*,
		doc/*/Garavel-Lang-Mateescu-Serwe-11.*,
		doc/=READ_ME.txt, doc/biblio.bib

Nature:		Two new publications have been added to the CADP release:

		- "Smart Reduction" (Crouzen-Lang-11) proposes a generalization
		  of compositional aggregation techniques that applies to an
		  expressive composition model based on synchronization vectors,
		  subsuming many composition operators enabling any composition
		  order to be used. It presents the implementation of this
		  approach within the CADP verification toolbox, as well as
		  experimental results assessing the efficiency of smart
		  reduction.
		
		- "CADP 2010: A Toolbox for the Construction and Analysis of
		  Distributed Processes" (Garavel-Lang-Mateescu-Serwe-11)
		  presents the latest release CADP 2010. It first describes
		  the theoretical principles and the modular architecture of
		  CADP, which has inspired several other recent model checkers,
		  then reviews the main features of CADP 2010, including
		  compilers for various formal specification languages,
		  equivalence checkers, model checkers, performance evaluation
		  tools, and parallel verification tools running on clusters
		  and grids.
-------------------------------------------------------------------------------
BUG FIX
Number:		1542
Date:		Thu Mar 17 19:17:58 CET 2011
Report: 	Remi Herilier (INRIA/VASY)
Author: 	Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		Previously, when the CAESAR compiler produced a graph larger
		than 500 Mb in Aldebaran (".aut") format, the graph header was
		corrupted. This problem, which did not occur when using the
		BCG format, has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1543
Date:		Tue Mar 22 16:08:00 CET 2011
Report: 	Wendelin Serwe (INRIA/VASY)
Author: 	Hubert Garavel (INRIA/VASY)
Files:		bin.*/libBCG.a, incl/bcg_transition.h, man/*/bcg_read.*

Nature:		Three new functions have been added to the "bcg_read" API:

		- BCG_OT_LABEL_GATE() returns "i" if the specified label is not
		  visible, or the gate (i.e., first element) of the specified
		  label if it is visible.
		
		- BCG_OT_LABEL_HIDDEN_GATE() returns a null character string
		  if the specified label is visible, or the gate (i.e., first
		  element) of this label (if any) before it was hidden.

		- BCG_OT_LABEL_CARDINAL() returns the number of elements in
		  the specified label, or 1 if the label is not visible.
		
		See the bcg_read manual page for details.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1544
Date:		Thu Mar 24 17:02:52 CET 2011
Authors:	Radu Mateescu and Damien Thivolle (INRIA/VASY)
Files:		bin.*/evaluator4.a, bin.*/libevaluator.a, bin.*/mcl_expand4,
		man/*/evaluator4.*

Nature:		A new model checker named EVALUATOR 4.0 has been added to the
		CADP toolbox. This tool performs on-the-fly verification of a
		temporal property on a given LTS.

		To express the temporal property, Evaluator 4.0 uses the MCL
		(Model Checking Language), which is a wider and richer formula
		language than the Regular Alternation-Free Mu-Calculus used
		with Evaluator 3.*. For instance, Evaluator 4.0 can handle
		formulas with data, and has new "loop" and "if-then-else"
		operators. The MCL language is defined in the "evaluator4"
		man page and in the [Mateescu-Thivolle-08] paper (see item
		#1311 above).

		Evaluator 4.0 is backward compatible with Evaluator 3.5, but
		it does not support the operators of Evaluator 2.0 that were
		deprecated (see item #1273 above), nor ".mcl" 2.0 files.
		
		Evaluator has an entirely new preprocessor, Mcl_Expand 4.0.
		This is largely backward compatible with the Mcl_Expand 1.0
		preprocessor used by Evaluator 3.*. Mcl_Expand 4.0 was written
		using the SYNTAX+TRAIAN technology, rather than SYNTAX+FNC-2
		as used for Mcl_Expand 1.0.

		In particular, Mcl_Expand 4.0 can now handle ".mcl" files
		whose name contains more than 38 characters (this was not
		permitted by Mcl_Expand 1.0 due to a limitation in the FNC-2
		compiler generation tool).
-------------------------------------------------------------------------------
BUG FIX
Number:		1545
Date:		Thu Mar 24 17:57:41 CET 2011
Report: 	Frederic Lang (INRIA/VASY)
Authors: 	Frederic Lang and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/libBCG.a, bin.*/libBCG_IO.a, bin.*/distributor.a

Nature:		Previously, Distributor crashed with a segmentation fault
		when generating a graph that contained one label that was
		considerably longer than the other labels. The problem, which
		was caused by the BCG library reading unallocated areas of
		memory and copying the contents to the BCG file, has been
		fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1546
Date:		Fri Apr  8 16:18:06 CEST 2011
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		src/com/cadp_flags, com/bcg_open, com/caesar.open,
		com/exp.open, com/seq.open
		
Nature:		A new shell script, cadp_flags, has been introduced to
		simplify the internal code of the distributed tools Bcg_Open,
		Caesar.Open, Exp.Open, and Seq.Open. The new script and the
		changes to these tools are internal and not visible to CADP
		users.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1547
Date:		Wed Apr 13 09:05:52 CEST 2011
Report:		Hubert Garavel (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
Files:		com/svl, bin.*/svl_kernel, man/*/svl.*

Nature:		A new version 2.3 of SVL has been released, supporting the
		generalized parallel composition operator described in
		[Garavel-Sighireanu-99] (including m among n synchronization).
		This operator, which already existed in Exp.Open (see item
		#933 above), can now be used at the SVL level.
-------------------------------------------------------------------------------
BUG FIX
Number:		1548
Date:		Fri Apr 15 18:32:18 CEST 2011
Report: 	Eric Madelaine (INRIA/OASIS, Sophia-Antipolis)
Authors:	Hubert Garavel and Frederic Lang (INRIA/VASY)
Files:		src/ocis/ocis.tcl, com/bcg_open, com/caesar.open, com/exp.open,
		com/fsp.open, com/lnt.open, com/seq.open

Nature:		Previously, the title of the OCIS windows opened by Bcg_Open,
		Caesar.Open, Exp.Open, Fsp.Open, Lnt.Open, and Seq.Open was
		always "(untitled.bcg)". This has been changed, and the window
		title now displays the name of the input file that is being
		explored.
-------------------------------------------------------------------------------
BUG FIX
Number:		1549
Date:		Tue Apr 19 14:28:44 CEST 2011
Report:		Frederic Lang (INRIA/VASY)
Author:		Wendelin Serwe (INRIA/VASY)
File:		bin.*/distributor.a

Nature:		Two bugs have been fixed in Distributor:
		- It now ensures that no distributed process will attempt to
		  close the same BCG file more than once.
		- It now exits with a suitable error message if a distributed
		  process stops abnormally before the termination of the
		  algorithm. Previously, the Distributor idled indefinitely
		  waiting for a termination message that never arrived.
-------------------------------------------------------------------------------
IMPROVEMENT
Number: 	1550
Date:		Tue Apr 19 16:46:53 CEST 2011
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/pbg_cp, bin.*/pbg_info, bin.*/pbg_mv, bin.*/pbg_rm,
		man/*/pbg_cp.*, man/*/bpbg_info.*, man/*/pbg_mv.*,
		man/*/pbg_rm.*

Nature:		Four new tools have been added to CADP, to copy (Pbg_Cp), move
		(Pbg_Mv), or remove (Pbg_Rm) a partitioned BCG graph or display
		information about it (Pbg_Info). For details, see the manual
		pages.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1551
Date:		Tue Apr 19 17:30:58 CEST 2011
Report: 	Hubert Garavel (INRIA/VASY)
Author: 	Wendelin Serwe (INRIA/VASY)
File:		man/*/tgv.*

Nature:		The TGV manual page has been updated to include information
		about the recent Open/Caesar-compliant compilers Fsp.Open
		and Lnt.Open, which have been added to CADP (see items #1401
		and #1457 above).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1552
Date:		Thu Apr 21 18:09:50 CEST 2011
Report:		Pepijn Crouzen (Saarland University, Germany)
Author:		Frederic Lang (INRIA/VASY)
Files:		src/svl/standard, bin.*/exp2c, bin.*/libexp_open.a

Nature:		The "smart stochastic branching reduction" has been improved,
		so that stochastic transitions cut by maximal progress are
		cut as early as possible in intermediate compositions.

		Technically, the optimization concerns action synchronizations
		that result in an internal action. Currently, when such a
		synchronization can take place, maximal progress cuts all
		stochastic transitions.

		With the new optimization, Exp.Open now detects the case when
		a synchronizing action A offered by a process P synchronizes
		only with actions offered by the other processes in all of
		their local states. In this case, the synchronization is
		possible (and will result in an internal action) in all
		states in which P offers A. Therefore, stochastic transitions
		in choice with A can be safely cut in every intermediate
		composition, thus yielding intermediate state space
		reductions.

		This situation occurs frequently in networks of processes
		that represent Input/Output Interactive Markov Chains: the
		action A is an output and the actions with which it
		synchronizes are inputs.
-------------------------------------------------------------------------------
BUG FIX
Number:		1553
Date:		Mon May  2 12:47:20 CEST 2011
Author: 	Wendelin Serwe (INRIA/VASY)
Files: 		bin.*/bcg_merge

Nature:		A bug in Bcg_Merge caused incorrect graphs to be created: for
		a state having only one outgoing transition, the number of the
		successor state was sometimes incorrect. This bug has been
		fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1554
Date:		Mon May  2 14:59:14 CEST 2011
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files: 		bin.*/bcg_merge

Nature:		Previously, when a state had many successors in the same
		fragment, the states were returned in a large message which
		could overflow. This led to the creation of incorrect graphs
		that were missing some transitions. In such cases, no error
		messages was issued although the log files sometimes contained
		indications of the problem. This bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1555
Date:		Fri May  6 13:54:42 CEST 2011
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
Files:		bin.*/caesar.old, bin.*/caesar

Nature:		The C code generated by the CAESAR compiler has been improved
		to avoid warnings of the form:

		   warning: dereferencing type-punned pointer will break
		   strict-aliasing rules

		and:

		   warning: dereferencing pointer '...' does break strict-
		   aliasing rules

		emitted by recent versions of the Gcc 4.* compiler. The changes
		affect the hash function and the specific case where the size
		of a link is 4 and the size of the states is a multiple of 4
		(in this case, the CAESAR_BODY_LINK type is now defined as an
		integer rather than a structure).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1556
Date:		Mon May  9 18:15:56 CEST 2011
Author:		Radu Mateescu (INRIA/VASY)
File:		bin.*/evaluator4.a, man/*/evaluator4.*

Nature:		The EVALUATOR 4.0 tool has been improved in order to handle
		MCL parameterized fixed point formulas of alternation depth 2
		that can be used to characterize generalized Buchi automata.
		These formulas have the following form:
		   nu Y (x1:T1:=E1, ..., xn:Tn:=En) . < R > Y (E'1, ..., E'n)
		where R is a regular formula that possibly contains iteration
		operators (*, +, "while", "until", etc.).

		Previously, these formulas were rejected by EVALUATOR 4.0 as
		being of alternation depth 2. Now, they are accepted and are
		evaluated using the resolution algorithm A4 (extended with
		management of marked Boolean variables) of the CAESAR_SOLVE
		library.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1557
Date:		Thu May 19 16:25:14 CEST 2011
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
File:		bin.*/libcaesar.a, bin.*/distributor.a

Nature:		The caesar_network_1 communication library used by Distributor
		is now included in the libcaesar.a library. This communication
		library is for internal use only and is not documented, so
		this change has no impact on users.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1558
Date:		Mon May 23 18:35:15 CEST 2011
Report:		Olivier Gruber (INRIA/SARDES)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/caesar.adt

Nature:		The C code for printing enumerated types produced by CAESAR.ADT
		has been modified to avoid Gcc issuing warnings of the form:

		  warning: format not a string literal and no format arguments

		This problem occurred when using Gcc 4.4.3 with option
		"-Wformat-nonliteral" on Ubuntu Server.
-------------------------------------------------------------------------------
BUG FIX
Number:		1559
Date:		Fri May 27 14:30:21 CEST 2011
Author:		Wendelin Serwe (INRIA/VASY)
Files:		bin.*/distributor.a, src/monitor/distributor.tcl

Nature:		A bug in the communication protocol between the Distributor and
		its monitor has been corrected. Previously, an ambiguity caused
		the monitor to display an incorrect size for the state vector.
-------------------------------------------------------------------------------
BUG FIX
Number:		1560
Date:		Wed Jun  1 14:32:13 CEST 2011
Authors:	Remi Herilier and Wendelin Serwe (INRIA/VASY)
File:		bin.*/libcaesar.a

Nature:		Following careful code review, several changes have been made
		to the communication library caesar_network_1:

		   - The verification of parameters passed to functions has
		     been improved.
		   - The behaviour when sending a message that is too large
		     for the buffer has been corrected.
		   - Some details remaining from the port to 64-bit systems
		     have been finalised.

		As this library is internal and none of these changes was
		motivated by problems with the distributed tools that use the
		library, it is unlikely that any of the changes will be
		visible to users.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1561
Date:		Tue Jun 28 15:27:01 CEST 2011
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
File:		bin.*/caesar.adt

Nature:		The C code generated by CAESAR.ADT to print singleton and
		tuple values has been improved, so as to enable a better
		parameterization. For any tuple or singleton type T with a
		unique constructor named C, it is now possible to define two
		macros (CAESAR_ADT_PRINT_OPEN_T and CAESAR_ADT_PRINT_CLOSE_T,
		respectively) so that values of type T are printed as, e.g.,
		   [x1, x2, ..., xn]
		rather than the default format
		   C (x1, x2, ..., xn)
-------------------------------------------------------------------------------
BUG FIX
Number:		1562
Date:		Thu Jul  7 15:21:38 CEST 2011
Report:		Wendelin Serwe (INRIA/VASY)
Author:		Remi Herilier (INRIA/VASY)
File:		src/installator/installator.tcl

Nature:		Previously, the Installator did not correctly display the
		amount of memory required in "/tmp" for temporary storage of
		CADP prior to installation. This was because the list of
		available architectures became too long. This problem has been
		corrected, and the amount of temporary storage required is now
		properly displayed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1563
Date:		Thu Jul  7 16:51:00 CEST 2011
Report:		David Kendall (Northumbria University, UK),
		Cedric Teyton (LABRI, Universite de Bordeaux, France),
		and Franck Pommereau (IBISC, Evry, France)
Authors:	Franck Pommereau (IBISC, Evry, France), Hubert Garavel and
		Remi Herilier (INRIA/VASY)
File:		com/tst

Nature:		Previously, on certain versions of Ubuntu including 10.10 and
		11.04, CADP tools would stop with the following error message:

		   *033 protection violation:
		   fraudulous use of this software

		The problem occured if the Yama Linux Security Module was
		present in the kernel and the kernel.yama.ptrace_scope
		parameter was set to 1, restricting use of the "ptrace" system
		utility to child processes only. The "tst" shell script has
		been updated and now detects the presence of this security
		module and reports the value of the kernel.yama.ptrace_scope
		parameter, indicating whether it should be changed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1564
Date:		Tue Jul 19 13:24:37 CEST 2011
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		incl/X_INTEGER.h, incl/X_NATURAL.h, incl/LNT_V1.h

Nature:		The definitions of the predefined types ADT_NAT (unsigned
		natural), defined in X_NATURAL.h, and ADT_INT (unsigned
		integer), defined in X_INTEGER.h, have been improved:
		
		- It is now possible to specify the number of bits (1 to 64
		inclusive) used to represent an ADT_NAT or ADT_INT value, using,
		respectively, the ADT_BITS_NAT or ADT_BITS_INT macro. The type
		definitions of ADT_NAT and ADT_INT are automatically updated
		accordingly.
		
		- It is now possible to modify the bounds of the range of
		values of ADT_NAT and ADT_INT enumerated during model checking.
		The lower bounds are set using the ADT_INF_NAT and ADT_INF_INT
		macros, and the upper bounds are set using the ADT_SUP_NAT and
		ADT_SUP_INT macros.
		
		These changes are backward compatible, with no change to the
		default values of 8-bit representation for both predefined
		types and enumeration ranges of 0..9 for ADT_NAT and -9..9 for
		ADT_INT. The LNT_V1.h file has been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1565
Date:		Thu Jul 21 17:28:18 CEST 2011
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)
File:		src/com/cadp_cc

Nature:		Options -Lxxx or -lxxx specified by the user in the $CADP_CC
		environment variable are now handled correctly and passed to
		the compiler after the name of the C file to be compiled.
		Previously, they were passed before the C file name.
-------------------------------------------------------------------------------
BUG FIX
Number:		1566
Date:		Tue Jul 26 10:19:54 CEST 2011
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)
File:		bin.*/libcaesar.a

Nature:		Various corrections have been made to the Caesar_Network
		library that is used by all the distributed verification tools
		of CADP:

		- An error prevented the correct display of values greater
		  than 10^9 on 64-bit architectures. This bug has been fixed.

		- An fprintf() string format has been corrected to make it
		  compatible with 64-bit architectures.

		- The trace debugging information has been fixed. Previously,
		  the tracing function was called systematically after every
		  call to recv(), causing spurious trace messages that were not
		  necessarily related to recv().

		- Previously, function CAESAR_INFORM_FATAL_ERROR_NETWORK_1()
		  did not send any error message larger than the buffer size.
		  Such messages are now truncated to fit the buffer and sent.

		- The setsockopt() and getsockopt() functions are now used on
		  all architectures, whereas previously they were used on only
		  32-bit Linux systems.
-------------------------------------------------------------------------------
BUG FIX
Number:		1567
Date:		Wed Jul 27 16:13:46 CEST 2011
Report:		Wendelin Serwe (INRIA/VASY)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		incl/X_NATURAL.h, incl/X_STRING.h

Nature:		Previously, if the $CADP_CC environment variable was set to
		"gcc -Wall -Wextra" (for example if LNT.OPEN was called and
		in turn called CAESAR and CAESAR.ADT), warnings such as the
		following were displayed:

		    warning: 'ADT_CONCAT_STRING' defined but not used
		    warning: 'ADT_ISEMPTY_STRING' defined but not used
		    ...

		The X_NATURAL.h and X_STRING.h libraries have been modified to
		suppress such warnings.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1568
Date:		Thu Jul 28 15:13:00 CEST 2011
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/VASY)
File:		src/com/cadp_cc

Nature:		The cadp_cc shell script has been modified and the options
		-Wall and -Wextra are now always specified when using the Gcc
		compiler.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1569
Date:		Fri Jul 29 10:18:10 CEST 2011
Authors:	Hubert Garavel, Remi Herilier, and Wendelin Serwe (INRIA/VASY)
Files:		bin.*/lnt2lotos, com/lnt.open, src/eucalyptus/eucalyptus.tcl

Nature:		The "-strings" option has been removed from LNT2LOTOS and
		LNT.OPEN. It is replaced by the "!string_card" module pragma.
		The EUCALYPTUS tool has been updated to reflect this change
		(note that this overrides the earlier addition of support for
		the "-strings" option described in item #1514 above).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1570
Date:		Fri Jul 29 10:44:30 CEST 2011
Authors:	Remi Herilier and Hubert Garavel (INRIA/VASY)
File:		src/eucalyptus/eucalyptus.tcl

Nature:		The behaviour of the "Open with..." menu option has been
		modified for the case where a file type has been associated to
		to one tool. Previously, clicking "Open with..." displayed a
		dialog box for selecting the tool to be used. Now, clicking
		"Open with..." results in a submenu from which the user can
		either select the tool already associated or can click
		"Select..." to display the tool selection dialog.
		
		Previously when the pathname of a selected tool contained a
		symbolic link to the parent directory (".."), this caused
		problems. This has also been fixed and pathnames are now
		normalised.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1571
Date:		Mon Sep 12 18:54:45 CEST 2011
Report:		Gwen Salaun (INRIA/VASY)
Authors:	Hubert Garavel, Christine McKinty, Frederic Lang, Vincent
		Powazny, Wendelin Serwe, and Gideon Smeding (INRIA/VASY)
Files:		bin.*/lnt2lotos, bin.*/lpp,
		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The present item gives the list of changes regarding the LNT
		language and associated tools, between versions 5.0 and 5.4
		included. Such changes, which were initially described in
		Appendix F of the Champelovier-Clerc-Garavel-et-al-10.*
		report, have been moved here in May 2014.

		Version 5.0 (September 14, 2010)
		================================
		G. Smeding, H. Garavel, C. McKinty, V. Powazny, and W. Serwe

		Modifications of the libraries:

		- Support for real numbers in floating-point notation has
		  been added to the ``LNT_V1'' library.

		- The ``LNT_V1'' library was enriched with new functions
		  for manipulating strings. The ``+'' operator for string
		  concatenation has been added (note that the internal
		  operator ``~'' should not be used directly). Also, the
		  following new functions have been added: ``length'',
		  ``is_empty'', ``prefix'', ``suffix'', ``substr'', ``nth'',
		  ``index'', and ``rindex''.

		Modifications of the LPP preprocessor:

		- The value of the ``$LNTGEN'' environment variable is now
		  permitted to be an absolute path (starting with a ``/''
		  character).

		Modifications of the LNT2LOTOS translator:

		- The environment variable ``$LNTDIR'' (which was also used
		  by the TRAIAN compiler, hence creating a name conflict) has
		  been replaced by  ``$LNT_LOCATION''.

		- The pathname indicated by the value of the ``$LNT_LOCATION''
		  environment variable is now permitted to contain spaces.

		- The behaviour of the ``-pidlist'' option has been modified,
		  so that it no longer displays syntax warnings on standard
		  output, but only error messages and the list of processes.
		  Using the ``-pidlist'' option now automatically switches off
		  verbose mode.

		- A new option, ``-strings N'' has been added to LNT2LOTOS.
		  When this option is specified, LNT2LOTOS stores all the
		  character strings in a hash table with at most N entries.

		- The treatment of syntax error messages when using the
		  ``-pidlist'' option has been improved. If the error message
		  file, ``.err'' is empty when processing completes, it is
		  deleted.

		- If there is a serious syntax error in the source LNT code,
		  LNT2LOTOS does not proceed to semantic analysis but displays
		  an error message and stops. This saves time and prevents
		  display of spurious and irrelevant semantic error messages
		  and warnings.

		- Previously, when the generated ``.f'' and ``.lib'' files
		  were up to date, LNT2LOTOS did not display information about
		  the syntax errors that had been automatically corrected by
		  the compiler front-end. These errors are now displayed.

		- LNT2LOTOS now only adds the definition of the macro
		  ``CAESAR_ADT_EXPERT_F'' required by CAESAR.ADT to the
		  generated ``.f'' file if the macro is not already defined.

		- Important changes have been made to how LNT2LOTOS handles
		  external C code. From now on, LNT2LOTOS generates both a
		  ``.f'' and a ``.t'' file, and not only a ``.f'' file as
		  before. Therefore, it is no longer possible to provide
		  external C code in the ``.t'' file. Instead, one can now
		  place external C code in a ``.tnt'' file and/or a ``.fnt''
		  file (these files play for LNT2LOTOS the same role as the
		  ``.f'' and ``.t'' files for CAESAR and CAESAR.ADT).

		- LNT2LOTOS now supports signature files (``.sig'') for
		  separate compilation. These files contain signatures for
		  constructors. They are automatically created by LNT2LOTOS
		  and read by it. These files should not be modified by the
		  user.

		- Handling of ``nil'' and ``cons'' constructors in the ``set''
		  types has been improved: LNT2LOTOS now generates better
		  code and fewer warnings are issued for non-exhaustive cases.

		- A constraint on the use of ``break'' statements within
		  ``par'' statements has been added. A parallel composition
		  containing a ``break'' statement will cause the following
		  error message:
		      ** error at line ...:
		         break statement breaking the loop ``L'' at line ...
		         from within a 'par' construct
		      ** warning at line ...:
		         behaviour is unreachable

		- A channel definition is now permitted to contain empty
		  profiles. The reference manual has been updated accordingly.

		- The presence, in LNT programs, of comments starting with
		  ``(*!'' (which are given a special meaning by CAESAR and
		  CAESAR.ADT when they appear in a LOTOS program) caused the
		  following warning during the LNT syntax analysis:
			   Warning : ``!'' is deleted
		  They are now treated properly.

		- In updaters, spaces can now be inserted between the ``.''
		  and ``{'' characters, for better readability. For example,
		  ``X . {X := 1}'' can be used in place of ``X.{X := 1}''.

		- As a consequence of the previous syntax enhancement, special
		  identifiers (for example, functions) are no longer permitted
		  to contain left- or right-brace characters (``{'' or ``}'').

		- It is now forbidden to define a constructor or function
		  named ``.''.

		- An optional ``!list'' pragma has been added for LNT types.
		  See the reference manual for details of when this pragma
		  can be used. This ``!list'' pragma is added automatically
		  (if it is not specified explicitly) for the types defined
		  by ``set of ...'', ``list of ...'', and ``sorted list of
		  ...'' statements. This pragma ensures that the values of
		  these types are printed with a user-friendly syntax.

		- The ``...'' notation is now permitted also for lists.

		- The priority of unary operators has been increased, so they
		  have priority over ``of'' statements which, themselves, have
		  priority over binary operators. Therefore, ``- X of T'' is
		  parsed as ``(-X) of T'' rather than ``- (X of T)''. There
		  are two reasons for this change:
		  (1) To align with LOTOS, where ``not (x) of T'' means
 		      ``(not (x)) of T'' rather than ``not ((x) of T)''.
		  (2) For ease of use: previously, ``-1 of INT'' was parsed
		      as ``-(1 of INT)'' and ``-(1) of INT'' was parsed as
		      ``(-(1)) of INT''. With the change in priority,
		      ``-1 of INT'' is parsed as ``-(1) of INT'' so both
		      expressions give the same result.

		- In expressions and patterns of the source LNT code, calls
		  to a constructor with zero arguments or a function with
		  zero arguments are now permitted to be followed by empty
		  parentheses, so that the constructor or function can be
		  distinguished from a variable.

		- A bug was fixed regarding unary operators used without
		  parentheses. To avoid syntactic ambiguities, changes were
		  made in the syntax of LNT patterns and value expressions.
		  The new rules determine whether a constructor or function
		  can be called in prefix or infix notation, and when in
		  prefix notation, if parentheses can be omitted. These
		  changes impose new restrictions but also allow new
		  possibilities.

		- Several changes have been made to the treatment of infix
		  functions and constructors. A function F (or a constructor
		  C) can now be declared as ``_F_'' (or ``_C_'') to indicate
		  that it is infixed. Infix declaration is only permitted if
		  F has a result and two ``in'' arguments, and if C has
		  exactly two parameters. A number of predefined functions
		  and constructors are declared infix by default, e.g., ``+'',
		  ``eq'', etc. If a binary function (or constructor) in the
		  LNT source code is not declared as infix, no corresponding
		  infix function (or constructor) is generated for it in the
		  LOTOS code.

		- LNT2LOTOS now generates additional ``of T'' statements,
		  which avoids type errors in the generated LOTOS code.

		- The analysis of pattern coverage has been improved to avoid
		  generating LOTOS equations that are not useful. As a result,
		  there are fewer warnings of the form:
		       warning during compilation phase:
		       redundant equation (ignored)

		- the LOTOS code generated for the ``COMMUNICATION_MATCH_xxx''
		  functions (which are used for type checking communication
		  channels) was enhanced to avoid generating an extra, final
		  equation. This removes CAESAR.ADT warnings about redundant
		  equations.

		- For choice constructs (such as ``if'' or ``select''), the
 		  continuation process is now only generated if its behaviour
		  is non-trivial. This optimization also corrects a bug that
		  prevented the generated LOTOS code, leading various error
		  messages such as:

		    - variable or constant operation LOCAL__xxx__1 was not
		      declared

		  or

		    - the body of process COND__1 [...] has functionality:
			 exit
		      whereas its declaration requires functionality:
			 exit (NAT [X_NATURAL:3])

		  or

		    - the behaviour on the left of the ``[>'' operator:
			 [...] -> B; COND__1 [B] [] [...] -> COND__1 [B]
		      has functionality:
			 exit (NAT [X_NATURAL:3])
		      whereas the behaviour on the right:
			 B; exit
		      has functionality:
			 exit

		- The translation of a ``select'' with a single branch was
		  previously incorrect. This problem reported by Gwen Salaun
		  has been fixed.

		- The generated LOTOS code is now optimized to reduce the size
		  of the LOTOS code generated for large LNT arrays (such as
		  ``array [0..4096] of char''). Precisely, a single ``forall''
		  declaration with a single list of variables is now generated
		  for all the equations associated with the ``Get_n()''
		  functions of the array type in LOTOS.

		- Several other bugs have been corrected in LNT2LOTOS. These
		  bugs produced LOTOS code that could not compile.

		Modifications of the LNT.OPEN script:

		- Support for file names containing spaces has been added.

		- LNT.OPEN now invokes CAESAR.ADT with the ``-debug'' option,
		  to facilitate code development.

		- A new option, ``-strings N'' has been added to LNT.OPEN.
		  When this option is specified, LNT.OPEN stores all the
		  character strings in a hash table with at most N entries.

		- A new shell-script, ``lnt_depend'' has been added. This is
		  an internal utility used by LNT.OPEN and not intended to be
		  invoked directly.

		- When invoked on a principal module ``M.lnt'', LNT.OPEN now
		  generates a global error file ``M.err'' that contains the
		  errors for ``M.lnt'' and the modules imported by ``M.lnt''.

		Modifications of the shell scripts:

		- Several bugs have been corrected in ``lnt_check''.

		- Previously, the ``COMPUTE__CASE__BRANCH__xxx'' functions
		  issued error messages that were not helpful. These messages
		  have been suppressed.

		Documentation changes:

		- The reference manual has been improved in many respects.
		  The description of the document structure has been updated,
		  and an abstract has been added.

		- The reference manual has been updated to remove the
		  information that is already contained in the manual pages
		  for LPP, LNT2LOTOS, and LNT.OPEN. The section on the
		  ``lnt_compile'' shell script is now obsolete and has been
		  removed.

		- The section on modules has been updated. The ``library''
		  construct is no longer documented, because it has not been
		  implemented. The text describing multi-module compilation
		  has been improved. The rules for naming files have been
		  clarified (a module ``MyModule'' must be stored in a file
		  called ``MyModule.lnt'' or ``MYMODULE.lnt'', and the
		  generated code is stored in a file called ``MYMODULE.lib'').
		  An example (alternating bit protocol) showing a process has
		  been added.

		- The reference manual has been updated to clarify that lists
		  of lists are not permitted. If the LNT source code contains
		  a list of lists, a warning message is now issued:
		      warning during C translation phase:
		      ``list'' special comment for a non-list sort (ignored)
		    - special comment ``(*! ... list ... *)'' should not be
		      used for the sort S [TEST:5] that is not a list
		      (this special comment will be ignored)

		- The reference manual has been updated to explain that LPP
		  was historically used to pre-process LOTOS code but is now
		  primarily (though not exclusively) aimed at pre-processing
		  LNT code.

		- The reference manual has been updated to clarify that the
		  LOTOS NT ``andthen'' and ``orelse'' statements supported by
		  TRAIAN are not supported by LNT2LOTOS. Instead, use the
		  forms ``AND_THEN''(or ``and_then'') and ``OR_ELSE'' (or
		  ``or_else'').

		Version 5.1 (February 13, 2011)
		===============================
		H. Garavel, C. McKinty, V. Powazny, and W. Serwe

		Modifications of the LNT2LOTOS translator:

		- A bug that caused incorrect LOTOS code to be generated for
		  a ``while'' loop containing a ``return'' instruction has
		  been fixed.

		- The warning messages issued when a variable is declared and
		  initialized at the same time have been simplified.

		- The generated LOTOS code has been optimized to replace the
		  constants ``NOT (TRUE of BOOL)'' and ``NOT (FALSE of BOOL)''
		  with ``FALSE'' and ``TRUE'' respectively.

		- Further optimizations have been made in the LOTOS code,
		  removing any equation for which at least one premise is
		  equal to ``FALSE'', and suppressing all equation premises
		  that are equal to ``TRUE''. This removes certain spurious
		  error messages of the following form:
		     warning: function "FUNC" of file "M" contains a
		     non-exhaustive case

		- A bug has been fixed in the code generated for ``for''
		  loops of processes.

		- The error message issued if a gate or process is not
		  declared has been improved and now provides more diagnostic
		  information. The message is now as follows:
		     identifier G is either an undeclared gate or a process
		     called with wrong ``out'' or ``inout'' parameters

		- The generated LOTOS code has been optimized to simplify
		  ``case'' statements where the instruction that follows is
		  ``null'' or there is no instruction.

		- The generated LOTOS code has been simplified for processes
		  that are effectively constants (that is, the process body
		  contains only an ``exit'' or ``exit (...)'' statement) or
		  where the only action of a process is to call another
		  process. A similar simplification has been introduced for
		  ``while'' loops.

		- A bug in the calculation of variables potentially defined
		  by a ``select'' statement has been fixed. The change is not
		  visible in most cases. The error message displayed has been
		  improved, and is now:
		     variable X defined at line L may be uninitialized at
		     this point

		- In certain circumstances, a correct LNT program could be
		  translated into an incorrect LOTOS program that was rejected
		  by CAESAR and CAESAR.ADT with error messages concerning
		  undeclared variables. This bug has been fixed. Also,
		  process definitions, ``exit'' statements, and ``accept''
		  statements have been optimized to contain fewer unnecessary
		  parameters.

		- A bug in the calculation of variables defined when assigning
		  a single element of an array has been fixed.

		- LNT2LOTOS now better detects incorrect LNT programs where a
		  variable is assigned or modified in concurrent behaviour
		  (e.g., if a variable is assigned in an ``if'' construct that
		  is nested within a ``par'' operator). Such programs were
		  previously accepted, but are now detected and indicated with
		  error messages such as:
		     variable ``X'' is modified in a behaviour, and read in
		     another behaviour of the same 'par' construct
		  or
		     variable ``X'' is modified in two behaviours of the same
		     'par' construct

		- The generated LOTOS code for guards has been simplified:
		  guards of the form ``[TRUE = TRUE of BOOL]'' have been
		  removed, and guards of the form ``[TRUE = FALSE of BOOL]''
		  have been replaced by ``[FALSE OF BOOL]''.

		- Previously, a bug in the handling of loops in processes
		  caused LNT2LOTOS to reject correct LNT code and create
		  incorrect LOTOS code. A variable always assigned within a
		  ``loop ... end loop'' structure without conditions (that
		  is, with no ``for'' or ``while'' clause) could not be used
		  outside the loop. For example, code such as:

			process P [G : any] (out X : int) is
			    loop L in
				X := 1;
				break L
			    end loop
			    G (X)
			end process

		  was rejected by the CAESAR compiler with an error message:
			variable (or constant operation) not declared
		  This bug has been fixed. Note that the bug applied only to
		  processes; loops in functions were handled correctly.

		- A bug in the translation of the ``lt'' (less than) operator
		  for enumerated types has been corrected. Previously,
		  LNT2LOTOS generated only the LOTOS ``lt'' operator but not
		  the ``_<_'' or ``<'' operators, which led to the following
		  error when the LOTOS code was compiled:

		     error during analysis:
		     no solution for operation binding
		   - operation _<_ used in premiss:
			VAR__F2_1 < VAR__F2_2
		     the profile of which might be:
			T [6], T [6] -> ?
		     was not declared; some operations exist with the same
		     name but with different profiles:

		- The translation of functions using algebraic equations has
		  been improved. The generated LOTOS code is more efficient,
		  and no longer causes spurious warning messages such as:
		     function "F" of file "M" contains a non-exhaustive case

		Modifications of the LNT.OPEN script:

		- LNT.OPEN and the related tools have been ported to the
		  Solaris Intel 32-bit (sol86) and 64-bit (sol64) platforms.

		Documentation changes:

		- The reference manual has been comprehensively edited and
		  reorganised. A new appendix listing the predefined LNT
		  functions has been added.

		- Errors in the description of the LNT grammar have been
		  corrected.

		Version 5.2 (May 17, 2011)
		==========================
		H. Garavel, C. McKinty, V. Powazny, and W. Serwe

		Modifications of the LNT2LOTOS translator:

		- A new ``range'' type has been introduced. See the reference
		  manual for details.

		- The speed of processing for LNT specifications containing
		  several modules has been increased. The analysis of the
		  dependencies between modules is now three times faster for
		  LNT2LOTOS and at least twice as fast for LNT.OPEN.

		- Previously, a ``list of'' type definition containing the
		  ``!implementedby'' pragma caused LNT2LOTOS to loop when
		  generating the ``.lotos'' or``.lib'' file. This problem has
		  been fixed.

		- The generated LOTOS code has been improved by the addition
		  of blank lines, making the code more readable.

		- The predefined operations ``first'' and ``last'' have been
		  added for enumerated types. To use these operations, the
		  relevant types must be declared using the clause
		     with "first", "last"

		- For an LNT prefix operator that begins with an asterisk (*),
		  if in the generated LOTOS code the operator is preceded by
		  a ``('' character, LNT2LOTOS inserts a space: ``( *''.
		  Previously, no space character was inserted and the sequence
		  ``(*'' was treated as the start of a comment by the CAESAR
		  compiler.

		- For an LNT type that is declared ``!external'', LNT2LOTOS
		  now automatically associates the ``!external'' pragma with
		  all the type's constructors.

		- If a type has more than one ``!list'' pragma associated to
		  it, this now causes a warning message to be issued.

		- Previously, if an array type was declared with unnecessary
		  ``!list'' or ``!external'' pragmas, LNT2LOTOS created
		  incorrect LOTOS code which caused CAESAR.ADT to fail with
		  the following error message:
		     error during verification phase:
		     external sort with a non-external constructor
		  This problem has been fixed: if these unnecessary pragmas
		  are included, LNT2LOTOS ignores them and issues warnings:
		     ** warning at line ...:
			unexpected pragma !list (ignored)
		     ** warning at line ...:
			unexpected pragma !external (ignored)

		Documentation changes:

		- The reference manual has been updated to include details of
		  the ``range'' type.

		- Minor changes have been made to the information about list
		  and array types.

		Version 5.3 (July 5, 2011)
		==========================
		H. Garavel, F. Lang, C. McKinty, V. Powazny, and W. Serwe

		Modifications of the LNT2LOTOS translator:

		- Various enhancements have been brought for range types.

		- LNT has been extended with the concept of ``predicate
		  types'', i.e., sub-types of existing types; a boolean
		  predicate is used to determine the domain of each sub-type.

		- Checking of ``!external'' and ``!list'' pragmas for
		 non-constructor types has been improved. LNT2LOTOS now
		 checks that:
		 (1) A type does not contain the ``!list'' pragma more than
		     once.
		 (2) Array and range types do not contain the ``!list''
		     pragma.
		 (3) The ``!external'' pragma is not specified for any list,
		     sorted list, set, array, or range type; only those
		     types defined by their constructors may have the
		     ``!external'' pragma; if it is specified for a
		     non-constructor type, it is ignored.
		 If LNT2LOTOS detects a problem with a pragma, a warning is
		 issued.

		Documentation changes:

		- A new Appendix B (20 pages) giving the formal semantics of
		  LNT has been inserted by Frederic Lang.

		Version 5.4 (September 12, 2011)
		================================
		H. Garavel, C. McKinty, and W. Serwe

		Modifications of the LNT2LOTOS translator:

		- LNT2LOTOS now generates C code to check (at compile-time,
		  when the C compiler is invoked) that constants used for
		  numeric range types (i.e., range types whose parent type is
		  NAT or INT) belong to the domain of admissible values for
		  the parent type. This ensures that a range type domain is
		  included in its parent type domain.

		- LNT2LOTOS now generates C code to check (at compile-time,
		  when the C compiler is invoked) that constants used for
		  array bounds belong to the domain of admissible values for
		  the type NAT.

		- A translation error in the process part of LNT was fixed.
		  When a variable was defined before a ``par'' operator and
		  used after this ``par'' operator, but was not modified in
		  any branch of this ``par'' operator, the LOTOS code
		  generated by LNT2LOTOS was incorrect.

		- Module pragmas have been introduced (see chapter 4 of the
		  reference manual for details). This change is not entirely
		  backward compatible. Previously, natural numbers would
		  iterate in the range 0...9 and integer numbers would iterate
		  in the range -9...+9. From now on, natural numbers iterate
		  in the range 0...255 and integer numbers iterate in the
		  range -128...+127. The former behaviour can be obtained by
		  using the following module pragmas in the main module:
		     module ... is ...
		        !nat_sup 9
		        !int_inf -9
		        !int_sup 9
		     ...
		     end module
		   or by invoking the C compiler with the two options
		   ``-DLNT_RESTRICTED_NAT'' and ``-DLNT_RESTRICTED_INT''.
		   The recommended approach is to use module pragmas.

		- The ``-strings N'' option has been removed from LNT2LOTOS.
		  This option is now replaced by a new module pragma noted
		  ``!string_card N''.

		Documentation changes:

		- The module definitions in Chapter 4 have been extended with
		  module pragmas; also, an error in indexes has been fixed.

		- The information in Section 5.3 has been reorganised to be
		  more logical.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1572
Date:		Wed Sep 21 13:54:45 CEST 2011
Authors:	Hubert Garavel, Remi Herilier, Frederic Lang and Radu
		Mateescu (INRIA/VASY)
File:		./ADRESSES, ./INSTALLATION_1, ./INSTALLATION_2,
		./INSTALLATION_3, ./INSTALLATION_4, ./INSTALLATION_WINDOWS,
		./INSTALLATION_MACOS, ./USERS, ./VERSION, man/*,
		src/eucalyptus/eucalyptus.tcl

Nature:		A number of files contained in the CADP distribution have
		been modified to reflect evolutions recently taking place
		at INRIA:

		- The e-mail address of the CADP mailing list changed from
		  cadp@inrialpes.fr to cadp@inria.fr (the former e-mail
		  address will be retained for backward compatibilility).

		- The URL of the CADP web site also changed from
		  http://www.inrialpes.fr/vasy/cadp to http://cadp.inria.fr
		  (the former URL, as well as http://vasy.inria.fr/cadp
		  will be retained for backward compatibility)
-------------------------------------------------------------------------------
BUG FIX
Number:		1573
Date:		Mon Sep 26 10:57:18 CEST 2011
Report:		Iker Bellicot (INRIA/VASY)
Authors:	Radu Mateescu (INRIA/VASY)
File:		bin.*/mcl_expand4

Nature:		Two bugs were fixed in the MCL_EXPAND4 tool:

		- A C compilation error occurred when EVALUATOR4 was invoked
		  on certain kinds of MCL formulas (weak modalities applied
		  to regular formulas of the form "R1 . R2", where either R1,
		  or R2 is a "for" regular formula without a "step" clause).

		- MCL_EXPAND4 issued a spurious warning message for those MCL
		  formulas containing the "export" operator. This warning,
		  although confusing, did not have any effect on the result
		  of evaluating such a formula on an LTS.
-------------------------------------------------------------------------------
BUG FIX
Number:		1574
Date:		Tue Oct  4 12:52:41 CEST 2011
Report:		Ken Turner (University of Stirling, Scotland, UK)
Authors:	Frederic Lang, Hubert Garavel, and Wendelin Serwe (INRIA/VASY)
File:		bin.*/caesar, bin.*/caesar.old, bin.*/caesar.adt

Nature:		The C code generated by CAESAR and CAESAR.ADT when these tools
		are invoked with the ``-warning'' option was modified to
		avoid warnings of the form:
		   warning: empty body in an if-statement
		generated by recent versions of Gcc on Windows/Cygwin.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1575
Date:		Tue Oct 11 17:19:55 CEST 2011
Authors:	Hubert Garavel, Frederic Lang, Christine McKinty (INRIA/VASY),
		and Marie Lorphelin (INRIA/SAF)
File:		./FR_LICENSE.pdf, ./EN_LICENSE.pdf

Nature:		The procedure for distributing CADP to academic users has been
		greatly simplified. From now on, signed paper copies of the
		CADP license agreement are no longer required for academic
		users.
-------------------------------------------------------------------------------
BUG FIX
Number:		1576
Date:		Thu Oct 13 08:57:53 CEST 2011
Report:		Franck Pommereau (IBISC, Evry, France)
Authors:	Hubert Garavel and Remi Herilier (INRIA/VASY)
File:		com/tst

Nature:		Two changes have been brought to the "tst" command, namely:

		- A better analysis of the value of the $PAGER environment
		  variable to handle the cases where this value contains
		  not only a tool name, but also command-line options; this
		  suppresses spurious warning messages of the form:
		     Variable ``$PAGER'' is set to ``/usr/bin/less -rM''
		     *** Can't find command ``/usr/bin/less -rM''
		     ==> Add directory containing ``/usr/bin/less -rM'' to
		         your ``$PATH'' variable

		- A better detection of the version number for GNU/Linux
		  Gentoo distributions; this avoids displaying strange
		  messages such as
		     Current Linux distribution is .\O (\s \m ) \t
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1577
Date:		Mon Oct 17 11:42:23 CEST 2011
Report:		Nicolas Descoubes (INRIA/VASY), Wendelin Serwe (INRIA/VASY),
		and Romain Chossard (University of Sherbrooke, Canada)
Authors:	Hubert Garavel and Remi Herilier (INRIA/VASY)
File:		src/installator/installator.tcl

Nature:		INSTALLATOR was modified to stop displaying confusing
		information about the directory in which CADP must be
		installed on remote machines. Previously, INSTALLATOR was
		displaying the temporary installation directory (e.g.,
		"/opt/cadp/new.2010-a"). Modifying this directory would
		result in installation failures (the files contained in
		the modified directory could be erased upon termination
		of the installation process). From now on, INSTALLATOR no
		longer displays the temporary installation directory but
		the one chosen by the user.
-------------------------------------------------------------------------------
BUG FIX
Number:		1578
Date:		Mon Oct 17 11:52:27 CEST 2011
Report:		Wendelin Serwe (INRIA/VASY)
Author:		Remi Herilier (INRIA/VASY)
File:		src/installator/installator.tcl

Nature:		On certain laptops running Windows 7, the second window
		opened by INSTALLATOR was too small, so that the button
		"Look instead for a beta-version" was not properly displayed.
		This problem was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1579
Date:		Wed Oct 19 09:42:41 CET 2011
Report:		Freark van der Berg (University of Twente, The Netherlands)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c

Nature:		EXP.OPEN no longer emits spurious warnings (visible in the
		".log" file generated by SVL) during smart stochastic
		branching reduction.
-------------------------------------------------------------------------------
BUG FIX
Number:		1580
Date:		Thu Oct 20 11:58:25 CET 2011
Report:		Freark van der Berg (University of Twente, The Netherlands)
Author:		Frederic Lang (INRIA/VASY)
Files:		bin.*/exp2c, src/svl/standard

Nature:		In SVL, when calls to EXP.OPEN issued warning messages, the
		user was not notified of these messages, which were only
		visible in the ".log" file generated by SVL. From now on, the
		warning and/or error messages issued by EXP.OPEN are stored
		in a ".err" file, similarly to CAESAR. If a ".err" file has
		been generated by EXP.OPEN, then SVL now notifies the user of
		the presence of warning and/or error messages.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1581
Date:		Tue Oct 25 14:27:54 CET 2011
Report:		Wendelin Serwe (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
File:		src/svl/standard

Nature:		From now on, it is possible to set the $CADP_TIME environment
		variable directly in an SVL script (previously, $CADP_TIME
		had to be set before executing the SVL script). For instance,
		the following commands at the beginning of the SVL script:
		     % CADP_TIME=memtime
		     % export CADP_TIME
		will display (in the ".log" file) the execution times for
		each CADP tool invoked.
-------------------------------------------------------------------------------
BUG FIX
Number:		1582
Date:		Wed Oct 26 12:15:56 CET 2011
Report:		Wendelin Serwe (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
File:		src/svl/standard

Nature:		In an SVL script, when a shell variable having a name of the
		form $*_EXECUTABLE (i.e., corresponding to an OPEN/CAESAR
		exploration tool) was redefined, e.g.,
		     EVALUATOR_EXECUTABLE=evaluator4
		the generated executable file (here, evaluator4) could remain
		undeleted in the directory where the SVL script was called,
		even after calling the command "svl -clean". This has been
		fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1583
Date:		Thu Oct 27 14:28:15 CET 2011
Report:		Wendelin Serwe (INRIA/VASY)
Author:		Frederic Lang (INRIA/VASY)
File:		bin.*/svl_kernel

Nature:		SVL would not terminate after emitting one particular error
		message. This is now fixed. Additionally, the error messages
		issued by SVL have been slightly improved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1584
Date:		Wed Nov 23 11:35:28 CET 2011
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
File:		incl/X_NATURAL.h, incl/X_INTEGER.h

Nature:		The X_NATURAL.h and X_INTEGER.h files providing an external
		implementation (written in C language) for the natural and
		integer number types of LOTOS and LOTOS NT have been enhanced
		to enable (optional) overflow checking.

		Overflow checking is optional and disabled by default, so as
		to preserve backward compatibility with previous versions of
		CADP. It can be enabled by defining the following macros:
		    #define ADT_CHECK_NAT
		and:
		    #define ADT_CHECK_INT
		before including X_NATURAL.h and X_INTEGER.h.

		It is still possible to redefine the types ADT_NAT or ADT_INT
		before including X_NATURAL.h and X_INTEGER.h, e.g.
		   #define ADT_NAT unsigned short
		   #define ADT_INT signed char
		but this practice is not recommended, as the new versions of
		X_NATURAL.h and X_INTEGER.h now define ADT_NAT and ADT_INT
		in an optimal way.

		It is now possible to specify the number of bits to be used
		for the ADT_NAT and ADT_INT types (e.g., 5 and 12 bytes
		respectively) by defining the following macros:
		   #define ADT_BITS_NAT 5
		   #define ADT_BITS_INT 12
		before including X_NATURAL.h and X_INTEGER.h.

		From now on, it is forbidden to redefine the macros
		CAESAR_ADT_BITS_ADT_NAT and CAESAR_ADT_BITS_ADT_INT.
		The same effect can be obtained by setting the macros
		ADT_BITS_NAT and ADT_BITS_INT. For instance, one should
		now write:
		   #define ADT_BITS_NAT 11
		   #define ADT_BITS_INT 3
		instead of:
		   #undef CAESAR_ADT_BITS_ADT_NAT
		   #define CAESAR_ADT_BITS_ADT_NAT : 11
		   #undef CAESAR_ADT_BITS_ADT_INT
		   #define CAESAR_ADT_BITS_ADT_INT : 3
-------------------------------------------------------------------------------
BUG FIX
Number:		1585
Date:		Wed Nov 23 14:36:08 CET 2011
Authors:	Etienne Lantreibecq (STMicroelectronics) and Remi Herilier
		(INRIA/VASY)
Files:		ext/READ_ME, ext/a2ps/READ_ME, ext/a2ps/lotos.ssh,
		ext/a2ps/lotosnt.ssh

Nature:		LOTOS and LOTOS NT configuration files for the a2ps pretty-
		printing software have been added to the CADP distribution.
-------------------------------------------------------------------------------
BUG FIX
Number:		1586
Date:		Mon Dec  5 08:50:17 CET 2011
Report:		Wendelin Serwe (INRIA/VASY)
Authors:	Frederic Lang (INRIA/VASY)
Files:		bin.*/projector.a

Nature:		PROJECTOR could fail on a segmentation fault if more than
		16384 transitions going out of a single state had to be cut
		by the environment constraints. This bug has been fixed, so
		that an unbounded numbers of transitions can now be cut.
-------------------------------------------------------------------------------
BUG FIX
Number:		1587
Date:		Thu Dec  8 14:33:02 CET 2011
Report:		Matthias Guedemann (INRIA/VASY)
Authors:	Frederic Lang (INRIA/VASY)
Files:		src/svl/standard

Nature:		Applying smart reduction in SVL to a behaviour that was not a
		parallel composition had no effect: the behaviour was kept
		unreduced. This bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1588
Date:		Wed Dec 14 15:37:16 CET 2011
Report:		Ludovic Apvrille (ENST, Sophia-Antipolis, France)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/VASY)
Files:		com/arch

Nature:		The "arch" command was modified so as to enable the CADP tools
		to work properly on MacOS X 10.7 "Lion".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1589
Date:		Wed Dec 14 17:19:21 CET 2011
Authors:	Gwen Salaun and Wendelin Serwe (INRIA/VASY)
Files:		doc/*/Lantreibecq-Serwe-11.*, doc/*/Boyer-Gruber-Salaun.*

Nature:		Two new publications about concrete applications of CADP and
		LOTOS NT to realistic case-studies have been added, one about
		a dynamic task dispatcher circuit and the other about a
		middleware reconfiguration protocol.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1590
Date:		Mon Jan 16 14:33:18 CET 2012
Authors:	Remi Herilier, Hubert Garavel, and Wendelin Serwe (INRIA/
		CONVECS)
Files:		src/com/eucalyptus.tcl, src/com/xeucarc_standard

Nature:		Various enhancements and bug fixes have been brought to the
		EUCALYPTUS graphical user interface:

		1) From now on, when Lnt.Open is invoked within EUCALYPTUS,
		   it passes the "-cc" and "-more" options to Caesar and
		   Caesar.Adt, which suppresses a frozen screen problem.

		2) A bug was fixed in the EUCALYPTUS file selection window.
		   When clicking on the ".." directory, EUCALYPTUS can no
		   longer generate incorrect pathnames. Moreover, clicking
		   on ".." has now the effect of coming back to the last
		   visited directory instead of the parent directory, which
		   is consistent with the usual meaning of "Previous" buttons.

		3) The "File Association" window has been entirely rewritten
		   to be more intuitive.

		4) The settings file ~/.xeuca-files-associations is no
		   longer used; its contents was merged into ~/.xeucarc.

		   Users who have a custom ~/.xeuca-files-associations file
		   in their home directory can migrate it by typing the
		   following shell commands:
		      cat $HOME/.xeuca-files-associations >> $HOME/.xeucarc
		      rm $HOME/.xeuca-files-associations

		5) By default, the EUCALYPTUS interface now properly handles
		   files with the following extensions: .htm, .html, .log,
		   .pdf, .ps, and .txt.
-------------------------------------------------------------------------------
BUG FIX
Number:		1591
Date:		Fri Jan 20 17:53:41 CET 2012
Report:		Frederic Lang (INRIA/CONVECS)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		src/com/lnt.open

Nature:		The Lnt.Open script did not erase the temporary ".lib" files
		that it created in the directory from which it was invoked.
		This problem was solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		1592
Date:		Mon Feb  6 12:05:02 CET 2012
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/projector

Nature:		Some transitions could be missing in BCG graphs generated
		by PROJECTOR. This was due to a table that was not correctly
		initialized. This bug has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1593
Date:		Mon Feb 27 10:17:37 CET 2012
Report:		Nuno Mendes (Instituto Gulbenkian de Ciencia, Portugal)
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c

Nature:		The EXP.OPEN tool could fall into an infinite loop with
		constant reallocation of a buffer, when the source network of
		communicating automata contained a syntax error close to the
		end of the file. This bug happened in particular when the end
		of the file was reached during parsing of a string (i.e., when
		the closing double quote was missing). This was caused by a
		bug in the SYNTAX parser generator, which has been corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1594
Date:		Fri Mar  9 14:57:13 CET 2012
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.indent,
		bin.*/caesar.old, bin.*/exp2c, bin.*/fsp2lotos,
		bin.*/lnt2lotos, bin.*/svl_kernel, bin.*/mcl_expand,
		bin.*/mcl_expand4, bin.*/xtl

Nature:		A subtle bug was fixed in the SYNTAX parser generator. This
		bug would not arise with any of the existing CADP binaries
		released so far, but it would occur when recompiling these
		binaries for the 32-bit Intel/Linux architectures using recent
		versions of Gcc. After correcting SYNTAX, all the SYNTAX-
		dependent CADP binaries have been recompiled.
-------------------------------------------------------------------------------
BUG FIX
Number:		1595
Date:		Mon Mar 12 12:17:53 CET 2012
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.iX86/xsimulator.a, bin.x64/xsimulator.a

Nature:		The Xsimulator binaries for 32-bit and 64-bit Intel/Linx
		architectures have been modified to avoid error messages of
		the form:
		   /usr/bin/ld: skipping incompatible /usr/lib/libX11.so when
		   searching for -lX11
		   /usr/bin/ld: skipping incompatible /usr/lib/libX11.a when
		   searching for -lX11
		   /usr/bin/ld: cannot find -lX11
		   collect2: ld returned 1 exit status
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1596
Date:		Mon Mar 12 18:25:29 CET 2012
Report:		Matthieu Le Corre (LINA, Nantes, France)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.iX86/*, gc/bin.iX86/*

Nature:		All the CADP binaries for 32-bit Intel/Linux architecture
		have been upgraded. They are now produced using a recent
		version of Gcc on a Debian 6.0 system (Glibc 2.11.3) instead
		of a Debian 4.0 system (Glibc 2.3.6) as previously.

		This enables to use CADP on the most recent Ubuntu releases.

		However, the latest beta-versions of CADP will no longer run
		on Debian 4.0 system. This should not be an issue because
		official support for Debian 4.0 ceased on February 15, 2010.
		CADP users should therefore upgrade to Debian 5.0 or 6.0.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1597
Date: 		Web Mar 14 19:50:10 CET 2012
Author:		Gwen Salaun (INRIA/CONVECS) et al.
Files:		doc/*/Etchevers-Coupaye-Boyer-et-al-11.*

Nature:		A new paper about the use of LOTOS NT and CADP for modelling
		and verifying a self-configuration protocol for legacy
		distributed applications in the cloud has been added.
-------------------------------------------------------------------------------
BUG FIX
Number:		1598
Date:		Thu Mar  22 10:17:04 CEST 2012
Authors:	Frederic Lang (INRIA/CONVECS)
Report:		Axel Belinfante (University of Twente, The Netherlands)
Files:		bin.*/bcg_min

Nature:		Reading a BCG graph generated by BCG_MIN using the -unparse
		option issued the following error:
		       bcg_file_area: wrong label area end offset in
		       BCG_CHECK_END_OF_AREA

		The reason was that BCG_MIN had not been recompiled after the
		BCG libraries (on which all BCG tools depend) had been
		modified. The problem has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1599
Date: 		Wed Apr  4 14:53:09 CEST 2012
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		src/monitor/distributor.tcl

Nature:		Two problems have been fixed in the monitor of Distributor:

		- An error in the communication between Distributor and its
		  monitor was corrected.

		- From now on, the monitor lines that display machine names
		  are better aligned.
-------------------------------------------------------------------------------
BUG FIX
Number:		1600
Date: 		Wed Apr  4 16:12:43 CEST 2012
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/cadp_lib

Nature:		A bug was fixed in the Cadp_Lib command that caused minor
		issues if the locale was set to UTF-8.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1601
Date: 		Fri Apr  6 13:51:20 CEST 2012
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.x64/*, gc/bin.x64/*, com/cadp_cc, com/tst,
		src/linux/bin.x64/libcompat-2.7.a

Nature:		After upgrading CADP iX86 binaries (see item #1596 above),
		all the binaries of CADP for 64-bit Intel/Linux architecture
		have been upgraded too. They are now produced using Gcc 4.4.5
                on a Debian 6.0 system (Glibc 2.11.3) instead of Gcc 4.1.1
		and Glibc 2.3.6 as previously.

		From now on, we recommend running CADP x64 binaries on a
		Linux system with at least Glibc 2.7. However, a temporary
		compatibility solution has been implemented to continue
		supporting older versions of Glibc 2.x. The Tst and Cadp_Cc
		commands have been modified accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1602
Date: 		Fri Apr  6 14:09:29 CEST 2012
Author:		Hubert Garavel (INRIA/CONVECS) and Noel de Palma (UJF Grenoble)
Files:		demo_29/*

Nature:		The demo_29 (featuring a dynamic reconfiguration protocol for
		mobile agents) has been enhanced to demonstrate the use of the
		LOTOS NT language.

		The files DATA.lib, spec.lotos, and spec.t have been renamed
		into DATA1.lib, SPEC1.lotos, and SPEC1.t respectively (from
		now on, files numbered '1' correspond to the LOTOS description
		of the protocol).

		Two new LOTOS NT files, DATA2.lnt and SPEC2.lnt, have been
		added. The SVL script was extended to check the equivalence
		between the LOTOS and LOTOS NT descriptions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1603
Date: 		Fri Apr 13 16:08:40 CEST 2012
Author:		Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		src/monitor/distributor.tcl

Nature:		A new button "Sort Labels Alphabetically" has been added to
		the Distributor monitor (a similar button already exists in
		the "sequential" BCG monitor).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1604
Date: 		Thu Apr 19 17:31:01 CEST 2012
Authors:	Remi Herilier, Hubert Garavel, and Wendelin Serwe (INRIA/
		CONVECS)
Files:		bin.*/libcaesar.a

Nature:		A debugging facility has been added to the Caesar_Network
		library used in the CADP tools for distributed verification
		(Distributor, Bcg_Merge, Pbg_Info, etc.). By setting the
		environment variable $CADP_NETWORK_TRACE to a filename
		before launching any of these tools, each instance (either
		the coordinator or a remote instance) will write debug traces
		into a file named $CADP_NETWORK_TRACE located in the working
		directory of the instance.
-------------------------------------------------------------------------------
BUG FIX
Number:		1605
Date: 		Tue Apr 24 13:31:55 CEST 2012
Report:		Remi Herilier (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/libcaesar.a

Nature:		A bug was fixed in the Caesar_Network library: if the "rcp"
		variable specified in a ".gcf" was set to "cp" or "nfs", and
		if the directory associated to one or many instances had
		shell variables (e.g. $HOME) in their pathnames, these shell
		variables would not be expanded (i.e., replaced by their
		actual values); instead, spurious files (named, e.g., "$HOME"
		would be created in the working directory.
-------------------------------------------------------------------------------
BUG FIX
Number:		1606
Date: 		Tue Apr 24 13:48:06 CEST 2012
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libcaesar.a

Nature:		Another bug was fixed in the Caesar_Network library: if the
		".gcf" file would specify that an instance had to be executed
		on the local machine in a directory given by its relative
		pathname, the instance would not execute in this directory
		but in another one (e.g., but not necessarily, the home
		directory of the local machine).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1607
Date: 		Thu Apr 26 11:21:45 CEST 2012
Report:		Wendelin Serwe (INRIA/CONVECS)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libcaesar.a, man/*/distributor.*

Nature:		The behaviour of the Caesar_Network library (consequently, of
		the CADP distributed verification tools) has been enhanced.
		Previously, when a ".gcf" file would contain several identical
		instances (i.e., same machine and same directory), only the
		last one was considered, the previous ones being entirely
		discarded. From now on, this is forbidden and the library
		emits an error message in presence of identical instances.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1608
Date: 		Thu Apr 26 14:44:37 CEST 2012
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/pbg_info, man/*/pbg_info.*

Nature:		A ``-labels'' option (similar to the ``-labels'' option of
		Bcg_Info) has been added to Pbg_Info.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1609
Date: 		Thu May  3 12:53:55 CEST 2012
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		com/caesar.open

Nature:		The Caesar.Open shell-script was optimized to invoke CAESAR
		directly, when this is possible, instead of Generator. In
		particular, this enables the Lnt.Open tool to deliver better
		performance.
-------------------------------------------------------------------------------
BUG FIX
Number:		1610
Date: 		Thu May 10 08:34:44 CEST 2012
Report:		Abderahman Kriouile (STMicroelectronics) and Wendelin Serwe
		(INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		src/svl/standard

Nature:		During a verification (using BISIMULATOR or EVALUATOR 3 or 4),
		if a an error or warning message emitted by caesar.open or
		lnt.open would contain the string "TRUE" or "FALSE" (e.g.,
		a warning about a redundant equation "EMPTY (X) = TRUE"),
		then SVL would display this error or warning message instead
		of the TRUE/FALSE verdict of the verification. This bug has
		been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1611
Date: 		Fri May 11 11:40:42 CEST 2012
Authors:	Hubert Garavel, Frederic Lang, and Wendelin Serwe (INRIA/
		CONVECS)
Files:		com/caesar.open, com/exp.open

Nature:		From now on, Caesar.Open and Exp.Open stop with an error
		message if they are invoked on a LOTOS or ".exp" file that
		is not located in the current directory. Previously, this
		situation was not detected and the file dependencies were
		not handled correctly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1612
Date: 		Mon May 14 12:33:18 CEST 2012
Report:		Begona Martinez-Salvador (Jaume-I University, Spain) and
		Maria Kourkouli (Aristotle University of Thessaloniki, Greece)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		com/tst, src/com/cadp_compiler

Nature:		The Windows version of CADP was modified to take into account
		recent versions of Gcc (e.g., 4.5.3) that are localized and
		can emit messages in other languages than English by default.
		This would cause two classes of problems:

		1) Caesar and other tools would emit the following message:

		   gcc: The -mno-cygwin flag has been removed; use a
		        mingw-targeted cross-compiler.
		   #137 error in file ``.h'' during type survey:
		        survey program is rejected by the C compiler
		        quit

		2) The TST shell-script would emit the following messages:

		   gcc: The -mno-cygwin flag has been removed; use a
		        mingw-targeted cross-compiler.
		   ./tst:...: /tmp/test_...: No such file or directory

		   Your Cygwin shell does not treat carriage-returns like
		   spaces although variable $SHELLOPTS indeed contains
		   ``igncr''. The CADP software will not function properly
		   on this system
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1613
Date: 		Tue Jun 12 16:14:42 CEST 2012
Authors:	Abderahman Kriouile (STMicroelectronics), Wendelin Serwe, and
		Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_28/*

Nature:		The demo_28 of CADP has been extended with a LOTOS NT version
		(in the same way as demo_29 - see item #1602 above):
		- file ``cache.lotos'' was renamed into ``cache1.lotos''
		- file ``cache.svl'' was renamed into ``demo.svl''
		- file ``cache2.lnt'' was added.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1614
Date: 		Tue Jun 12 17:37:45 CEST 2012
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libcaesar.a

Nature:		From now on, the Caesar_Network library emits a warning when
		the ".gcf" files contains too many instances; this warning
		may help to understand the actual reason of subsequent verbose
		error messages. The maximal number of instances depends on
		the machine architecture (e.g., the maximal number of pipes
		and sockets that can be opened simultaneously).
-------------------------------------------------------------------------------
BUG FIX
Number:		1615
Date: 		Tue Jun 12 18:24:17 CEST 2012
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/distributor.a

Nature:		From now on, Distributor handles properly errors that can
		occur during its initialization phase, emits an error message
		and stops. Previously, it would abort with a segmentation
		fault.
-------------------------------------------------------------------------------
BUG FIX
Number:		1616
Date: 		Wed Jun 13 18:04:26 CEST 2012
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old, bin.*/caesar.adt

Nature:		In certain cases, CAESAR and CAESAR.ADT could terminate with
		an exit status different from 0 and 1, which contradicted the
		manual page. This was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1617
Date: 		Wed Jun 13 19:23:09 CEST 2012
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old, bin.*/caesar.adt,
		bin.*/caesar.indent

Nature:		When a LOTOS program was "lightly" syntactically incorrect,
		in the sense that the SYNTAX compiler generator succeeded in
		fixing the mistake (e.g., by inserting or deleting keywords
		or symbols), CAESAR, CAESAR.ADT, and CAESAR.ADT would still
		return an exit code 0, thus preventing calling scripts to
		be informed of the existence of syntax errors.

		From now on, an exit code 0 is only returned for correct
		LOTOS programs. For lightly syntactically incorrect LOTOS
		programs, SYNTAX will repair the error, warnings will be
		emitted, and the execution will continue normally, but
		exit code 1 will be returned upon termination. For severely
		incorrect LOTOS programs, SYNTAX will stop during parsing.
-------------------------------------------------------------------------------
BUG FIX
Number:		1618
Date: 		Wed Jun 13 20:04:49 CEST 2012
Authors:	Frederic Lang, Radu Mateescu, and Wendelin Serwe
		(INRIA/CONVECS)
Files:		bin.*/exp2c, bin.*/fsp2lotos, bin.*/mcl_expand4,
		bin.*/svl_kernel, bin.*/xtl

Nature:		The modification described in item #1617 has been applied
		to the other compilers of CADP developed using the SYNTAX
		compiler generator.
-------------------------------------------------------------------------------
BUG FIX
Number:		1619
Date: 		Wed Jun 13 20:32:45 CEST 2012
Report:		Abderahmane Kriouile (STMicroelectronics)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The modification described in item #1617 have been applied
		to Lnt2Lotos translator.
-------------------------------------------------------------------------------
BUG FIX
Number:		1620
Date: 		Mon Jul  2 10:31:12 CEST 2012
Report:		Frederic Lang (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The Lnt2Lotos tool automatically generates LOTOS operations
		that implement the ``loop'' and ``case'' control structures
		present in the functions of a source LOTOS NT program. In
		the case of LOTOS NT programs containing several modules,
		several LOTOS operations with same names and types could be
		generated for ``loop'' and ``case'' control structures
		present in different LOTOS NT modules. This led to name
		conflict errors when compiling the generated LOTOS code
		using Caesar.adt. This bug was fixed by giving unique names
		to each generated LOTOS operation.
-------------------------------------------------------------------------------
BUG FIX
Number:		1621
Date: 		Wed Jul  4 12:30:39 CEST 2012
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		src/svl/standard

Nature:		To generate a BCG file named file1.bcg from a LOTOS file
		named file2.lotos, SVL created a symbolic link named
		file1.lotos, which pointed to file2.lotos, without
		checking whether a plain file named file1.lotos existed
		already. So doing, SVL could erase (copies of) source
		files needed for its execution. This bug has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1622
Date: 		Thu Jul  5 08:55:23 CEST 2012
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		When translating ``case'' statements, Lnt2Lotos would
		insert in the generated LOTOS code superfluous tests of
		the form (CASE__BRANCH__xxx >= (0 of NAT)), which caused
		Gcc emit spurious warnings of the form

		comparison is always true due to limited range of data type

		This translation issue, which could be seen, e.g., on the
		revised demo_28 example, was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1623
Date: 		Thu Jul  5 09:48:19 CEST 2012
Report:		Hugues Evrard (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		Another bug was fixed in the translation algorithm of
		Lnt2Lotos for LOTOS NT processes. In some cases, Lnt2Lotos
		would generate extra lines of LOTOS code having the form:
			>> (*! atomic *) exit
		which would cause "functionality" errors and prevent the
		generated LOTOS code from compiling properly. From now on,
		the generated code is correct and optimized.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1624
Date: 		Mon Jul  9 17:00:21 CEST 2012
Report:		Frederic Lang and Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/libBCG_IO.a

Nature:		The BCG_WRITE library now checks that calls to the functions
		of its Application Programming Interface are made in a correct
		order. For instance, function BCG_IO_WRITE_BCG_PARSING()
		should be called before function BCG_IO_WRITE_BCG_BEGIN()
		according to the bcg_write manual page.

		From now on, if the order of function calls is wrong, clear
		error messages are issued and the execution stops. Previously,
		calls made in incorrect order led to unspecified effect,
		possibly producing corrupted BCG files, a situation that was
		difficult to debug.
-------------------------------------------------------------------------------
BUG FIX
Number:		1625
Date: 		Mon Jul  9 17:33:23 CEST 2012
Report:		Wendelin Serwe (INRIA/CONVECS)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		Invoking CAESAR with an empty argument for -root option, i.e.,
			caesar -root "" file.lotos
		would cause a segmentation fault. This problem was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1626
Date: 		Mon Jul  9 19:58:03 CEST 2012
Author:		Abderahmane Kriouile (STMicroelectronics),
		Hubert Garavel, and Wendelin Serwe (INRIA/CONVECS)
Files:		demos/demo_32

Nature:		The demo_32 was revisited and greatly enhanced. Each x.lotos
		and y.lib file was cleaned, pretty-printed, and renamed into
		x_1.lotos and y_1.lib, respectively. Then, a complete rewrite
		of demo_32 in LOTOS NT was provided (by adding files named
		x_2.lnt and y_2.lnt, respectively). The SVL file was extended
		to check also the LOTOS NT version.
-------------------------------------------------------------------------------
BUG FIX
Number:		1627
Date: 		Wed Jul 11 09:59:43 CEST 2012
Author:		Frederic Lang (INRIA/CONVECS)
		Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		com/caesar.open, com/exp.open

Nature:		When invoking caesar.open (or exp.open) from a directory
		whose absolute pathname had spaces, one would get error
		messages.

		Under Solaris:
		   caesar.open: test: unknown operator ...

		Under Linux:
		   test: 208: ...: unexpected operator
		   caesar.open: file ``...'' is not in the current directory

		These issues have been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1628
Date: 		Mon Jul 23 11:33:57 CEST 2012
Report:		Xun Wang and Emmanuelle Encrenaz (LIP6, Paris, France)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin/caesar, bin/caesar.old

Nature:		The optimization V3 of CAESAR was revised and made much
		faster. On certain LOTOS programs with many variables
		(e.g., 65,000 variables), 97% of the execution time was
		spent in sorting variable lists. This issue was solved,
		leading to better performance (e.g., reducing execution
		time from 1 hour 51 mn downto 58 seconds). As a consequence,
		the order of constant declarations in the ``.net'' files
		optionally generated by CAESAR may be modified.
-------------------------------------------------------------------------------
BUG FIX
Number:		1629
Date: 		Tue Jul 24 18:45:09 CEST 2012
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		incl/X_STRING.h

Nature:		The macro ADT_CMP_STRING (X1,X2) was incorrectly defined in
		the particular case where (X1 == NULL) xor (X2 == NULL).
		This could cause segmentation faults when generating an
		LTS with prototype versions of CAESAR (not distributed as
		part of CADP). The macro definition was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1630
Date: 		Wed Aug 22 15:26:32 CEST 2012
Report:		Jonathan Michaux (Telecom ParisTech, France)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*

Nature:		From now on, the non-Windows binaries of CADP tools accept
		LICENSE files that follow Windows conventions, i.e., the
		lines of which end with CR-LF rather than LF.
-------------------------------------------------------------------------------
BUG FIX
Number:		1631
Date: 		Thu Aug 30 16:04:29 CEST 2012
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		src/installator/installator.tcl

Nature:		The code of Installator was reviewed and simplified. A
		bug introduced in December 2011 was removed (if one tried
		to use Installator to produce a license prototype for an
		already existing CADP version without reinstalling this
		version, then Installator would stop abruptly).
-------------------------------------------------------------------------------
BUG FIX
Number:		1632
Date: 		Wed Aug 31 20:00:34 CEST 2012
Report:		Jun Pang (Universite du Luxembourg) and Daniela Remenska
		(Vrije Universiteit, Amsterdam, The Netherlands)
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		bin.iX86/*, bin.x64/*

Nature:		The CADP licensing scheme was enhanced to better support
		Linux laptops.	
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1633
Date:		Tue Sep 25 14:04:19 CEST 2012
Report:		Alexander Graf-Brill (Saarland University, Germany) and
		Marius Maria Hollinger (Saarland University, Germany)
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		demos/demo_35, demos/demo_37

Nature:		The two examples demo_35 and demo_37 have been simplified
		using the latest features of SVL, which can now handle the
		``n among m'' parallel composition operator proposed by
		Garavel and Sighireanu in 1999. Consequently, demo_35 and
		demo_37 were enhanced by removing their ``.exp'' files and
		by simplifying their ``.svl'' files.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1634
Date:		Tue Sep 25 14:44:01 CEST 2012
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		demos/demo_02, demos/demo_10

Nature:		The two examples demo_02 and demo_10, which were closely
		related (as demo_10 was a compositional version of demo_02)
		have been merged into demo_02. Example demo_10 is left
		temporarily empty.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1635
Date:		Tue Sep 25 15:59:49 CEST 2012
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files: 		demos/demo_08, demos/demo_11

Nature:		The two examples demo_08 and demo_11, which were closely
		related (as demo_11 was a compositional version of demo_08)
		have been merged into demo_08. Two libraries of common code
		(DATA.lib and PROC.lib) have been created and both versions
		of the REL/rel protocols have been kept (they are now named
		A and B). Example demo_11 is left temporarily empty.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1636
Date:		Tue Sep 25 18:59:46 CEST 2012
Report:		Almer Bolatov (Saarland University, Germany)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.old

Nature:		From now on, when the environment variable $CADP_LANGUAGE is
		not set or set to an incorrect value, the default language
		of CAESAR and CAESAR.ADT will be English.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1637
Date: 		Thu Oct 11 12:38:57 CEST 2012
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_28, demos/demo_29, demos/demo_32

Nature:		The three demos 28, 29, and 32 have been reorganized for a
		better clarity. From now on, all LOTOS-related files (".lib",
		".lotos", ".t", ".f", etc.) are separated from the LOTOS NT-
		related files and placed in sub-directories named "LOTOS".
-------------------------------------------------------------------------------
BUG FIX
Number:		1638
Date: 		Mon Oct 15 14:30:17 CEST 2012
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		src/svl/standard

Nature:		If an error occurred during the execution of an SVL comparison,
		verify, deadlock, or livelock statement (e.g., because an input
		file did not exist), then SVL continued to run silently,
		without	notifying the user. This bug has been solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1639
Date: 		Mon Nov 12 09:15:51 CET 2012
Report:		Alexander Graf-Brill (Saarland University, Germany)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		./INSTALLATION_MACOS, ./src/com/cadp_x11

Nature:		CADP was modified to support Mac OS X 10.8 "Mountain Lion",
		in which X11 is no longer included by default but can be
		installed via the X11.app application of the open source
		XQuartz project (http://xquartz.macosforge.org/landing).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1640
Date: 		Thu Nov 15 11:11:12 CET 2012
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, man/*/lnt2lotos.*

Nature:		The command-line options of the Lnt2Lotos translator have
		alightly changed:

		- The former option "-root -" is now written "-root module".
		  The "-root -" syntax is deprecated, but will continue
		  working for a while.

		- A new option "-root null" was added, which generates a
		  LOTOS specification whose main behaviour is simply "stop".
-------------------------------------------------------------------------------
BUG FIX
Number:		1641
Date: 		Thu Nov 15 14:24:37 CET 2012
Report:		Hugues Evrard (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		A bug was fixed in the Lnt2Lotos translator, which could, in
		certain cases, generate incorrect LOTOS code. More precisely,
		for some exceptions declared in a LOTOS NT process ("raises"
		clause), Lnt2Lotos would generate a LOTOS type with an "eqns"
		clause not followed with any equation. This caused a warning
		to be emitted when this LOTOS code was analyzed:
		   ...
		   lnt.open: calling caesar.open for ``test.lotos'' ...
		   caesar.open: using ``(direct) caesar''
		   caesar.open: calling ``caesar.adt -silent -debug test''
		   endtype
		   ^
		   [23] Warning : ``EQNS'' before ``ENDTYPE'' is deleted
-------------------------------------------------------------------------------
BUG FIX
Number:		1642
Date: 		Thu Nov 15 14:47:23 CET 2012
Report:		Hugues Evrard (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		A bug was fixed in the Lnt2Lotos translator: when using types
		defined in an imported modules, the translator could produce
		spurious warnings of the form: "non exhaustive case".
-------------------------------------------------------------------------------
BUG FIX
Number:		1643
Date: 		Thu Nov 15 15:01:44 CET 2012
Report:		Hugues Evrard (INRIA/CONVECS),
		Alexander Graf-Brill (Saarland University, Germany), and
		Abderahman Kriouile (STMicroelectronics)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		A bug was fixed in the Lnt2Lotos translator: the LOTOS code
		generated when translating LOTOS NT parallel composition is
		now simpler and no longer contains redundant clauses such as:
		   ... >> (*! atomic *) exit
		or
		   ... >> (*! atomic *) accept ... in exit (...)

		From now on, ">>" clauses are only generated when they are
		needed. This suppresses spurious warnings of the form:
		     a deadlock exists for rendez-vous:
		        exit
		     synchronized by parallel operator ``|[exit]|''
		     this gate/offer combination is used in the right operand:
		        exit; exit; stop
		     but not in the left operand:
		        P [exit]
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1644
Date: 		Thu Nov 29 15:18:28 CET 2012
Authors:	Marius Hollinger (Saarland University, Germany),
		Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		demos/demo_35/*

Nature:		The demo_35 was translated into LOTOS NT. A "LOTOS" sub-
		directory was created to preserve the former version. The
		"SUMMATION.lib" file was renamed as "TYPES.lib". Also, the
		Add() operation was renamed as Insert().
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1645
Date: 		Wed Dec  5 11:08:07 CET 2012
Report:		Hubert Garavel (INRIA/CONVECS) and Alexander Graf-Brill
		(Saarland University, Germany)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The Lnt2Lotos translator now delivers better warnings when
		a ".tnt" (respectively, ".fnt") file does not contain the
		macro-definitions LNT2LOTOS_EXPERT_TNT (respectively,
		LNT2LOTOS_EXPERT_FNT). Formerly, the warnings were cryptic:
		    could not determine version for input file ``xxx.tnt''
		whereas the new warnings are more user friendly:
		    macro LNT2LOTOS_EXPERT_TNT not defined in file ``xxx.tnt''
		    (default value: 5.6)
-------------------------------------------------------------------------------
BUG FIX
Number:		1646
Date: 		Wed Dec  5 12:34:06 CET 2012
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		A bug was fixed in the Lnt2Lotos translator: no warning was
		produced when a ".tnt" (respectively, ".fnt") file was empty.
-------------------------------------------------------------------------------
BUG FIX
Number:		1647
Date: 		Wed Dec  5 12:47:14 CET 2012
Report:		Alexander Graf-Brill (Saarland University, Germany)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		A bug was fixed in the Lnt2Lotos translator: the compatibility
		check for ".tnt" and ".fnt" files was incorrect (it required
		these files to have the same version number as the Lnt2Lotos
		translator itself). These checks have been replaced by a more
		relaxed function that will always return ok except in case of
		incompatible changes in the translator conventions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1648
Date: 		Wed Dec  5 12:59:31 CET 2012
Report:		Alexander Graf-Brill (Saarland University, Germany)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The error messages emitted by the Lnt2Lotos translator when
		a ".tnt" (respectively, ".fnt") file has an incompatible
		version number have been enhanced. Formerly, these messages
		were cryptic:
		   incorrect version for input file ``xxx.tnt''
		whereas the new messages are more user friendly:
		   file ``xxx.tnt'' seems obsolete according to the value of
		   LNT2LOTOS_EXPERT_TNT; check and upgrade its contents as
		   explained in the file $CADP/HISTORY.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1649
Date:		Tue Dec 11 15:21:54 CET 2012
Report:		Alexander Graf-Brill (Saarland University, Germany)
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		Various improvements have been made in Section 5.3.5 of the
		LNT2LOTOS reference manual. In particular, care has been taken
		to introduce explanations about the compilation of "set",
		"list", and "sorted list" types in a better order.

		Also, in the formal semantics rule for parallel composition
		(Appendix B.6.14, page 97), a mistake reported by Alexander
		Graf-Brill was corrected: in the definition of sync_sets(a),
		{1..m} was replaced with {{1..m}}.
-------------------------------------------------------------------------------
BUG FIX
Number:		1650
Date: 		Tue Dec 11 17:25:11 CET 2012
Report:		Alexander Graf-Brill (Saarland University, Germany)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		A bug was fixed in the Lnt2Lotos translator: the "disrupt"
		operator of LOTOS NT was incorrectly translated into LOTOS
		by generating superfluous clauses of the form:
		   >> (*! atomic *) ...
		or
		   >> (*! atomic *) accept ... in ...
		that would not compile properly, causing the LOTOS compilers
		to halt with an error message of the form:	
		   theoretical limitation during restriction:
		   process recursion through some forbidden operator
		   quit
-------------------------------------------------------------------------------
BUG FIX
Number:		1651
Date: 		Wed Dec 12 18:32:23 CET 2012
Author:		Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libcaesar.a

Nature:		Many corrections have been brought to the CAESAR_NETWORK_1
		library used by the distributed verification tools of CADP.
-------------------------------------------------------------------------------
BUG FIX
Number:		1652
Date: 		Thu Dec 13 14:58:55 CET 2012
Report:		Eric Leo (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		On Windows, the ".lnt" files were not properly supported by
		the EUCALYPTUS graphical interface. When clicking on such
		files, one would get error messages of the form:
		   Error in "xxx.lnt"
		   couldn't execute "lnt.open": no such file or directory
		This problem is solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		1653
Date: 		Mon Jan  7 15:25:59 CET 2013
Report:		Rim Abid (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		Under Windows, when a LOTOS NT specification has several
		modules, the Lnt2Lotos failed to parse properly non-empty
		".sig" signature files and would emit the following error
		message:
		   incorrect syntax in signature file
		The problem, which was related due to the CR-LF end-of-line
		convention, was solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1654
Date:		Mon Jan 7 17:01:01 CET 2013
Report:		Abderahman Kriouile (STMicroelectronics)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		From now on, the Lnt2Lotos translator properly implements
		the "set" types of LOTOS NT. Previously, these types were
		translated exactly in the same way as "list" types, thus
		allowing sets to contain several identical elements (this
		was documented in the manual, yet not satisfactory). For
		"set" types, Lnt2Lotos now generates automatically an
		"insert" function (similar to the one for "sorted list"
		types) ensuring that a set never contains duplicate elements.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1655
Date:		Fri Jan 11 11:37:42 CET 2013
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al-10.*,
		demos/demo_35

Nature:		For the "list", "sorted list", and "set" types, LNT2LOTOS can
		now generate predefined functions automatically, when required
		by the user in the "with" clause of the type or of its module.
		These predefined functions are the following:

		1) Functions defined on types T of the form "list of T'",
		   "sorted list of T'", and "set of T'":

		- length: T -> NAT
			For each value X of type T, length (X) returns the
			number of elements in X.

		- member: T', T -> BOOL
			For each value X of type T' and Y of type T,
			member (X, Y) returns true if X occurs in Y.

		- access: T, NAT -> T'
			For each value X of type T and N of type NAT,
			access (X, N) returns the N-th element of X. An
			error occurs if N is zero or greater than length (X).

		- delete: T', T -> T
			For each value X of type T' and Y of type T,
			delete (X, Y) returns a copy of Y from which the
			first occurrence of X (if any) has been suppressed.
			If Y does not contain any occurrence of X, then
			delete (X, Y) returns Y unchanged.

		- remove: T', T -> T
			For each value X of type T' and Y of type T,
			remove (X, Y) returns a copy of Y from which all
			occurrences of X (if any) have been suppressed. If Y
			does not contain any occurrence of X, then
			delete (X, Y) returns Y unchanged. Note that if T
			is a set type, the functions delete() and remove()
			coincide.

		- head: T -> T'
			For each value X of type T, head (X) returns the
			first element of X. An error occurs if X = nil.

		- tail: T -> T
			For each value X of type T, tail (X) returns a copy
			of X from which the first element has been removed.
			An error occurs if X = nil.

		- union: T, T -> T
			For each values X and Y of type T, union (X, Y) (or
			"X union Y" in infix notation) returns: if T is a set
			type, the set union of X and Y; if T is an unsorted
			list type, the concatenation of lists X and Y; if T is
			a sorted list type, the sorted merge of X and Y.

		2) Functions defined on types T of the form "sorted list of T'"
		and "set of T'" only:

		- inter: T, T -> T
			For each values X and Y of type T, inter (X, Y) (or
			"X inter Y" in infix notation) returns: if T is a set
			type, the set intersection of X and Y; if T is a sorted
			list type, the multiset-like sorted intersection of X
			and Y (namely, if X and Y contain respectively N and M
			occurrences of some element Z, then inter (X, Y)
			contains exactly min (N, M) occurrences of Z).

		- diff: T, T -> T
			For each values X and Y of type T, diff (X, Y) (or
			"X diff Y" in infix notation) returns: if T is a set
			type, the set difference X - Y; if T is a sorted list
			type, the multiset-like sorted difference between X
			and Y (namely, if X and Y contain respectively N and M
			occurrences of some element Z, then diff (X, Y)
			contains exactly max (0, N - M) occurrences of Z).

		3) Functions defined on types T of the form "list of T'" only:

		- reverse: T -> T
			For each value X of type T, reverse (X) returns a
			copy of X in which the elements occur in reverse order.

		- append: T', T -> T
			For each value X of type T' and Y of type T,
			append (X, Y) returns a copy of Y in which element
			X has been added in the last position.

		When applied to a "set" type, the above functions preserve the
		invariant that the set does not contain duplicate elements.

		When applied to a "sorted list" type, the above functions
		preserve the invariant that all elements in the list remain
		sorted.

		The LNT2LOTOS reference manual has been updated accordingly.

		The LOTOS NT files of demo_35 have been simplified as it is
		no longer required to explicitly define functions length()
		and member (formerly noted "Is_In").
-------------------------------------------------------------------------------
BUG FIX
Number:		1656
Date: 		Fri Jan 11 16:42:45 CET 2013
Report:		Alexander Graf-Brill (Saarland University, Germany)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/libbcg_draw.a

Nature:		A problem that caused BCG_EDIT to stop on Mac OS X 10.8
		("Mountain Lion") with the following error message:
		   dyld: DYLD_ environment variables being ignored because
		   main executable (/bin/ps) is setuid or setgid
		was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1657
Date: 		Mon Jan 21 13:02:23 CET 2013
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		src/installator/installator.tcl

Nature:		From now on, the "Next" button will be deactivated while
		Installator will process the CADP files after they have
		been downloaded. This prevents errors occuring when the
		user clicked inadvertently on this button before the task
		was completed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1658
Date: 		Mon Jan 21 12:47:03 CET 2013
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/libcaesar.a, incl/caesar_cache_1.h,
		man/*/caesar_cache_1.*, doc/*/Garavel-92-a.*

Nature:		The OPEN/CAESAR environment was enhanced with a new generic
		library (named CAESAR_CACHE_1) for manipulating caches.
		The new library makes possible the creation of hierarchical
		caches, equipped with a variety of replacement strategies
		(15 built-in replacement strategies and the possibility to
		define new ones). A manual page for this library (28 pages)
		was written.
-------------------------------------------------------------------------------
BUG FIX
Number:		1659
Date: 		Wed Feb  6 16:21:40 CET 2013
Report:		Radu Mateescu (INRIA/CONVECS)
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		An issue recently introduced in the EUCALYPTUS graphical user
		interface while fixing a bug (see item #1652 above) was fixed:
		clicking on an ".lnt" file to generate the corresponding
		Labelled Transition System no longer worked under Unix, and
		would generate the following error message:
		   Error in "prog.lnt":
		   couldn't execute "lnt.open -pidlist "prog.lnt"":
		   permission denied
		This bug was solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		1660
Date: 		Thu Feb  7 08:51:06 CET 2013
Author:		Frederic Lang (INRIA/CONVECS)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		The EUCALYPTUS graphical interface crashed when launched in a
		directory containing a file, the name of which began by the
		character '-'. It also issued an error message (bad option)
		when changing to such a directory. These issues were solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1661
Date:		Mon Feb 11 13:54:32 CET 2013
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The format of the ".sig" files generated by Lnt2Lotos was
		enriched. This format change is not upward compatible but,
		as Lnt2Lotos regenerates its ".sig" systematically, the
		modification should be transparent to end-users.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1662
Date: 		Tue Feb 26 11:03:12 CET 2013
Authors:	Wendelin Serwe and Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		From now on, the Lnt2Lotos translator generates, for each
		type T' defined as a range type (type T' is range ... of T)
		or as a predicate type (type T' is {X:T where ... }), an
		identity function in LOTOS. This function is named T' and has
		profile T' -> T'. Normally, such identity functions are not
		meant to be directly invoked by end-users, but they will be
		useful for future enhancements of LOTOS NT (see item #1667
		below).

		Beware that this addition may break backward compatibility
		as it introduces an overloading between the new identity
		function T' : T' -> T' and the existing conversion function
		T' : T -> T'. In some rare cases, CAESAR.ADT can no longer
		solve this overloading in the generated LOTOS code. This can
		be addressed by adding, in the source LNT specification,
		explicit "of T" or "of T'" type annotations.
-------------------------------------------------------------------------------
BUG FIX
Number:		1663
Date: 		Mon Mar  4 16:55:06 CET 2013
Authors:	Frederic Lang, Wendelin Serwe, and Hubert Garavel
		(INRIA/CONVECS)
Files:		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		Various mistakes have been found and removed from Section
		5.3.5 ("Predefined function declarations") of the LOTOS NT
		reference manual:

		- There is no possible "down-type conversion" function for
		  enumerated types.
		- A second array constructor with profile T' -> T was used
		  in the examples, but was not documented in the manual.
		  It is now properly defined.
		- Missing explanations have been added for the two array
		  constructors.
		- Ambiguous vocabulary was modified: "down-type conversion"
		  becomes "conversion to subtype" and "up-type conversion"
	          becomes "conversion to parent type".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1664
Date:		Mon Mar  4 16:51:06 CET 2013
Report:		Jerome Hugues (ISAE, Toulouse, France)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_29/DATA.lnt

Nature:		The LOTOS NT source code of demo 29 was simplified: in the
		definition of type AgentId, a useless clause (with "<") was
		detected and removed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1665
Date:		Fri Mar  8 15:49:02 CET 2013
Report:		Alexander Graf-Brill (Saarland University, Germany)
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		man/html/bcg_read.html, man/html/executor.html,
		man/html/exp.open.html

Nature:		The HTML version of three CADP manual pages was incorrect
		compared to the nroff, ps, and pdf versions of the same
		manual pages, which were accurate. The problem was due to
		a bug in a third-party software used to produce the HTML
		pages. This bug was fixed. The sole serious issue was in
		the BCG_READ manual pages, in which the values possibly
		taken by parameter access_mode of BCG_OT_READ_BCG_BEGIN()
		were incorrect (from 1 to 5 in the HTML code, rather than
		from 0 to 4 in the authoritative versions).
-------------------------------------------------------------------------------
BUG FIX
Number:		1666
Date:		Fri Mar  8 16:08:46 CET 2013
Report:		Alexander Graf-Brill (Saarland University, Germany)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		man/*/bcg_read.*

Nature:		The program example listed in the BCG_READ manual page was
		incorrect and was improved in several ways:

		- In function bcg_print_edge(), the line
		     bcg_cardinal = BCG_OT_LABEL_CARDINAL (bcg_graph,
				 bcg_cardinal);
		  was changed into
		     bcg_cardinal = BCG_OT_LABEL_CARDINAL (bcg_graph,
				 bcg_label_number);

		- All occurrences of variable bcg_label_cardinal were renamed
		 into bcg_cardinal.

		- In functions bcg_print_edge() and main(), three format
		  strings of the form "%u" have been changed into "%lu".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1667
Date:		Fri Mar  8 16:57:53 CET 2013
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos,
		demos/demo_25/TYPES.lnt, demos/demo_35/summation.lnt,
		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:         The LOTOS NT language has been enhanced to ease the use of
		range and predicate types. If type T' is defined as a range
		type (type T' is range ... of T) or as a predicate type
		(type T' is {X:T where ... }), and if V is a value of type T,
		it is now permitted to write (V of T') --- in addition to
		writing (V of T), which is already permitted for any type T.
		Previously, one had to write T' (V) instead of (V of T'),
		which somehow violated the principle of uniform reference.

		Lnt2Lotos now translates each expression (V of T') into
		(T' (V) of T'). Depending whether V has type T or T', the
		overloaded function T' will be either a conversion from type
		T to T', or the identity function defined over T'.

		The source code of demo_35 has been simplified accordingly:
		for instance, one can now write 1 of Nat_8 and 0 of Identity
		rather than Nat_8 (1) or Identity (0).

		The LOTOS NT reference manual was updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1668
Date:		Tue Mar 12 12:08:56 CET 2013
Report:		Abderahman Kriouile (STMicroelectronics)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:         The Lnt2Lotos translator has been enhanced to generate more
		compact LOTOS code. It now avoids generating more than one
		clause of the form:
			[FALSE of BOOL] -> exit
		or
			[FALSE of BOOL] -> exit (...)
		in the same process. If such clause already exists, it is
		replaced by "stop". Not only the generated LOTOS code is
		simpler, but one also avoids, in certain cases, an explosion
		in the size of the Petri net generated by Caesar (without
		-gradual option) for this LOTOS code.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1669
Date:		Tue Mar 12 16:33:55 CET 2013
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		When defining a LOTOS NT type T as a list, sorted list, or set,
		one can now specify a ``with "empty"'' clause, which automa-
		tically defines a function empty : T -> BOOL that returns
		true for the empty list or empty set. The LNT2LOTOS reference
		manual has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1670
Date:		Tue Mar 12 17:04:25 CET 2013
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		A new "sorted set" type was added to LOTOS NT. When a type T'
		is defined as "sorted set of T", the Lnt2Lotos translator
		generates a modified function INSERT(), which preserves the
		invariant that all elements in the set are sorted in ascending
		order and have a single occurrence.

		The Lnt2Lotos compiler can also generate predefined functions
		"access", "delete", "diff", "empty", "head", "inter", "length",
		"member", "remove", "tail", and "union" automatically if a
		"with" clause is present in the definition of T'.

		The LNT2LOTOS reference manual has been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1671
Date:		Thu Apr  4 11:12:52 CEST 2013
Report:		Alexander Graf-Brill (Saarland University, Germany),
		Pascal Poizat (LIP6, Paris, France)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/com/cadp_postscript

Nature:		On Mac OS X 10.8 ("Mountain Lion"), invoking BCG_DRAW on a BCG
		file would not display the graph. This was apparently caused by
		a bug in Mac OS PostScript previewing tool, which crashed when
		being invoked directly. The problem has been solved by modifying
		the "cadp_postscript" shell script to invoke the previewing tool
		in a different way.
-------------------------------------------------------------------------------
BUG FIX
Number:		1672
Date:		Thu Apr  4 13:00:28 CEST 2013
Report:		Alexander Graf-Brill (Saarland University, Germany)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/com/cadp_mail

Nature:		On Mac OS X versions greater or equal than 10.5 ("Leopard"),
		the "cadp_mail" shell script now assume that mail sending does
		not work, thus preventing Installator from offering the option
		of sending the prototype license file by e-mail (as the mail
		sending command did not actually send the file, but completed
		with a normal code, simply logging an error message in a
		system log file).
-------------------------------------------------------------------------------
BUG FIX
Number:		1673
Date:		Thu Apr  4 17:53:24 CEST 2013
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		INSTALLATION_MACOS, com/tst

Nature:		The INSTALLATION_MACOS page (and its on-line version available
		from http://cadp.inria.fr/installator/macOS.html) was updated
		at various places.

		In particular, a new Section 6 was added explaining how to
		assign a static hostname to machines running Mac OS X. These
		explanations take into account the fact that /etc/hostconfig
		is deprecated in the recent versions of Mac OS X.

		The "tst" script shell was enhanced accordingly to perform
		a better detection of dynamic hostnames.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1674
Date:		Thu Apr 11 15:52:39 CEST 2013
Authors:	Hubert Garavel (INRIA/CONVECS)
Files:		com/installator, com/tst, src/com/cadp_hostname

Nature:		From now on, Installator will detect MacOS machines that do
		not have a static hostname and report the issue before CADP
		is installed to avoid further complications.
-------------------------------------------------------------------------------
BUG FIX
Number:		1675
Date:		Mon Apr 15 09:13:35 CEST 2013
Report:		Frederic Lang (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/evaluator4.a

Nature:		A bug was corrected in the EVALUATOR4 model checker, which
		returned an exit code different from 0 in two successful
		termination situations (namely, when the input file is a .blk
		specification or when it is a .mcl formula without data
		manipulation). Now the exit code returned is 0, which reflects
		accurately the behaviour of the tool as documented in the
		manual page.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1676
Date:		Mon May 13 11:46:05 CEST 2013
Author:		Frederic Lang (INRIA/CONVECS)
Files:		com/exp.open, bin.*/exp2c, man/*/exp.open.*

Nature:		A new option "-network txt" has been added to EXP.OPEN. This
		generates a text file that contains structural information
		about the input network of automata, including the list of
		files containing the communicating automata, the list of
		labels and, for each label, the list of synchronization
		vectors that may produce that label.
-------------------------------------------------------------------------------
BUG FIX
Number:		1677
Date: 		Mon May 27 11:24:56 CEST 2013
Report:		Hugues Evrard (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		When declaring a LOTOS NT type with a clause "with F", where F
		is a predefined function that is automatically generated (such
		as "insert", "cons", "nil", conversion functions to subtype or
		parent types, array initializers -- see the list in Chapter 5
		of the Lnt2Lotos Reference Manual), then a misleading error
		message was emitted by Lnt2Lotos:
		   ``F'' is not a valid predefined function
		From now on, Lnt2Lotos gives a better error message:
		   ``F'' is automatically defined (``with'' clause ignored)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1678
Date: 		Wed May 29 11:01:22 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old, man/*/caesar.*

Nature:		A new option ``-bpn'' was added to CAESAR in order to export
		the Basic Petri Net generated from a LOTOS specification.
		The manual page was updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1679
Date: 		Mon Jun 10 13:15:03 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The definition of the BPN (Basic Petri Net) format given on
		the Caesar.bdd manual page has been enhanced by specifying
		precisely the constraints that a valid BPN model must satisfy.
		In particular, it is now required that a BPN model has at
		least one place and at least one unit, and the definition is
		now stricter when a BPN model has no transition.

		Also, the Caesar.bdd tool has been enhanced. The ``-dead''
		and ``-unit'' options are now mutually exclusive. Better
		error messages are produced if Caesar.bdd is invoked without
		enough arguments, too many arguments, or unknown options.
-------------------------------------------------------------------------------
BUG FIX
Number:		1680
Date: 		Tue Jun 11 10:03:50 CEST 2013
Report:		Gwen Salaun (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/caesar

Nature:		An error has been fixed in CAESAR's optimization V9, which
		caused a segmentation fault in certain cases (duplication of
		variables did not correctly detect shared actions).
-------------------------------------------------------------------------------
BUG FIX
Number:		1681
Date: 		Wed Jun 12 10:18:19 CEST 2013
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The ``of T'' conversion for range types and predicate types
		described in item #1667 above was not implemented in the
		context of ``case'' instructions. For instance, the following
		fragment of LOTOS NT code:
		   type T is range ...
		   var X:T ...
		   case X in
		      V of T -> ...
		   ...
		was not correctly translated and produced LOTOS code that
		did not type check properly and was thus rejected by CAESAR
		and CAESAR.ADT. This problem was solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1682
Date: 		Wed Jun 12 13:23:43 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		With the advice of Fabrice Kordon and Lom Messan Hillah (LIP6,
		France), a ``-pnml'' option was added to Caesar.bdd. This
		option translates in PNML (Petri Net Markup Language) a net
		given in the BPN format.
-------------------------------------------------------------------------------
BUG FIX
Number:		1683
Date: 		Wed Jun 12 14:11:38 CEST 2013
Report:		Frederic Lang and Wendelin Serwe (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		An error introduced in Lnt2Lotos with the bug fix #1643 above
		(November 2012) has been fixed. When a parallel composition
		operator was inside a LOTOS NT "loop", the continuation after
		the parallel composition was incorrectly translated into a
		"stop" rather than reentering the loop, leading to premature
		termination and deadlocks.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1684
Date:		Fri Jun 14 10:55:18 CEST 2013
Report:		Pascal Poizat (LIP6)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		com/svl

Nature:		SVL required implicitly that the SVL script passed as
		argument was located in the current directory, but this was
		not properly checked. SVL now issues a clear error message
		if this is not the case.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1685
Date: 		Fri Jun 21 11:58:44 CEST 2013
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		From now on, in the process part of LOTOS NT, each assignment
		of the form "X := V", where X is a variable of type T and
		where V is a constant or a function call (but neither a
		variable nor an expression of the form "v of T") will be
		systematically translated into LOTOS as "let X:T := V of T"
		rather than "let X:T := V".

		This has two advantages: it reduces the number of clauses
		"of T" than need to be present in LOTOS NT, and the LOTOS NT
		process code is more robust and can remain unchanged even if
		new overloaded functions are introduced later.

		This change is backward compatible, except if the LOTOS NT
		assignment is badly typed; in such case, the error message
		emitted by CAESAR changes from:
		    no solution for operation binding
		to:
		    wrong sort for an ``of'' coercion
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1686
Date: 		Mon Jun 24 14:38:21 CEST 2013
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		Going further than item #1685, the translation of LOTOS NT
		assignments of the form "X := V", where X is a variable of
		some type T that is either a range type or a predicate type,
		and V is an expression, is now interpreted as "X := V of T",
		meaning that an implicit conversion to type T is introduced
		for V. This is particularly useful when using constants of
		range types or subtypes.
-------------------------------------------------------------------------------
BUG FIX
Number:		1687
Date: 		Tue Jun 25 09:44:50 CEST 2013
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The LOTOS code generated by Lnt2Lotos for the "disrupt"
		operator was not always correct, and could contain a
		functionality error causing CAESAR to emit an error
		message of the form:

		   #085 error during analysis:
		   functionalities do not match
		   quit
		   ...
		   In process P
		   - the body of process P has functionality:
		        noexit
		     whereas its declaration requires functionality:
		        exit

		This issue was fixed and Lnt2Lotos now generates, where
		needed, expressions of the form "[false of Bool] -> exit"
		rather than "stop" (both expressions are behaviourally
		equivalent but have different functionalities).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1688
Date: 		Wed Jul 24 16:51:26 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		From now on, a LOTOS NT specification containing a function
		declaration with only "in" parameters (i.e., with no "out"
                nor "in out" parameters and with no result) triggers a
		fatal error - see static semantics rule (FD11) in Section
		6.4 of the Reference Manual. Previously, such an error
		would only trigger a warning message.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1689
Date: 		Fri Aug 16 16:34:31 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, man/*/lnt2lotos.*

Nature:		The semantics of the ``-root'' option of Lnt2Lotos has been
		slightly revised. From now on, when Lnt2Lotos is invoked with
		option ``-root P'' or ``-root "P [G1, ..., Gn]"'', it will
		emit an error message and stop if process P has value
		parameters; previously, no message was issued and Lnt2Lotos
		would generate a LOTOS library (with ``.lib'' extension)
		rather than a LOTOS specification (with ``.lotos'' extension).
		Thus, Lnt2Lotos will now only generate a ``.lib'' file if
		option ``-root module'' is given. The manual page has been
		updated and simplified accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1690
Date: 		Mon Aug 19 18:00:18 CEST 2013
Report:		Abdelkrim Chebieb (ENSEEIHT, Toulouse, France)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		cadp_cygwin.com

Nature:		The "cadp_cygwin.com" has been updated to reflect the latest
		evolutions of Cygwin:

		- It now checks whether the system is running Windows and
		  Cygwin, and whether Cygwin is duly installed in C:\

		- It now checks whether command /bin/ed.exe is available.

		- It now systematically replaces /bin/sh.exe by /bin/bash.exe
                  (even if both binaries are different but have the same size).

		- It now modifies /etc/profile to insert a "set -o igncr"
		  instruction, so that both the "Cygwin Bash Shell"
		  (launched by /cygwin.bat) and the "Cygwin Terminal" can
		  start with option igncr (in recent versions of Cygwin, the
		  "Cygwin Bash Shell" is bypassed, as most users launch the
		  "Cygwin Terminal" from its desktop icon).

		- It no longer modifies /Cygwin.bat if this file was already
		  modified by a previous execution of "cadp_cygwin.com".

		- It no longer modifies /Cygwin.bat if the "Cygwin Terminal"
		  exists (i.e., if the version of Cygwin is recent).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1691
Date: 		Tue Aug 20 13:55:23 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.win32/compress.exe

Nature:		A "compress.exe" binary, produced using the source code of
		Ncompress 4.2 (see http://ncompress.sourceforge.net) was
		added in directory $CADP/bin.win32, to address the fact that
		the compress.exe command is not distributed as part of the
		Cywgin packages. See the related discussion thread at:
		   http://cygwin.com/ml/cygwin/2013-08/msg00427.html
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1692
Date: 		Fri Aug 23 11:32:35 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
File:		com/tst

Nature:		The "tst" shell-script has been significantly improved to
		support the latest revisions of Cygwin. In addition to
		two bug fixes, the following enhancements have been brought
		for the "win32" architecture:
		- It now checks whether Cygwin is duly installed in C:\
		- It now checks whether the /bin/ed command is available.
		- It now checks whether cadp_cygwin.com has been applied.
		- It now checks whether /etc/profile has been updated.
		- It now checks whether /cygwin.bat has been updated.
		- It now checks whether /bin/sh accepts the "-o igncr" option.
		- It now checks whether /bin/sh and /bin/bash are identical.
		- It now checks whether $SHELLOPTS contains "igncr".
		- It now displays the version number of the bash shell.
		- It no longer emits warnings about the maximal stack size
		  (which cannot be modified using "ulimit -s" under Cygwin).

		When there is a Cygwin installation problem, the new version
		of "tst" emits precise messages that help diagnose and solve
		the issue.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1693
Date: 		Fri Aug 23 16:27:21 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
File:		./INSTALLATION_WINDOWS

Nature:		The documentation for installing CADP on Windows, which had
		been written for Cygwin 1.5.25-7 (December 2007) has been
		entirely rewritten. The main changes are the following:

		- The new document starts by mentioning the possibility to
		  install CADP in a Linux virtual machine running on Windows.

		- The document has been much shortened, part of its material
		  being moved into 4 annexes, whose reading is optional.

		- From now on, the installation relies on the Ghostscript
		  package of Cygwin, and the recommended PostScript viewer
		  is now Evince rather than Ghostsview. The instructions for
		  installing Ghostview have been moved to Annex D.

		- The document takes into account that, in recent versions of
		  Cygwin, the shell window is now the Cygwin Terminal (based
		  on "mintty") rather than the Cygwin Bash Shell.

		- The documents explains how to cope with the removal of
		  GCC 3 from Cygwin packages, which occured in July 2013
		  (http://www.cygwin.com/ml/cygwin/2013-07/msg00016.html).

		- At the end of the installation of Cygwin, it is now stated
		  to run the command "tst win32" in order to check that the
		  installation of Cygwin is correct before going further with
		  the installation of CADP.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1694
Date: 		Mon Aug 26 09:01:08 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/com/cadp_pdf, src/com/cadp_postscript, src/com/cadp_psbox

Nature:		The "cadp_pdf" and "cadp_postscript" files have been updated
		to invoke the Evince viewer if it is installed on Windows.
		The "cadp_psbox" has been updated to invoke /bin/gs.exe if
		it is present on Windows (i.e., if the "ghostview" package
		of Cygwin has been installed).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1695
Date: 		Mon Aug 26 10:14:32 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		INSTALLATION_0, INSTALLATION_2, INSTALLATION_4

Nature:		Various enhancements were brought to the installation files:

		- The INSTALLATION_0 file, which was a symbolic link pointing
		  to INSTALLATION_WINDOWS created in 2004 for backward
		  compatibility was removed.

		- In the INSTALLATION_2 file, the notion of "startup file" is
		  better defined and it is stated that, on Cygwin, this file
		  should be ".bash_profile" and not ".profile'. Also, the
		  Windows-specific way to set up environment variables was
		  shortened.

		- In the INSTALLATION_4 file, the use of "wget" is now
		  documented, together with the replacement of "ftp" with
		  "ncftp" on Windows/Cygwin.
-------------------------------------------------------------------------------
BUG FIX
Number:		1696
Date: 		Mon Aug 26 17:42:24 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		installator.shar packages

Nature:		The "installator.shar" (or "installator.com") had been a bit
		damaged when upgrading from shar 4.2 to shar 4.6. Especially,
		the message "Installator started, please wait a moment..."
		had gone. This is now repaired.
-------------------------------------------------------------------------------
BUG FIX
Number:		1697
Date: 		Thu Aug 29 11:05:09 CEST 2013
Report:		Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		An unfrequent issue was fixed in the LOTOS NT translator:
		for a given function F, Lnt2Lotos could generate unique
		LOTOS identifiers of the form F__1, F__2, F__3, etc., which
		could conflict with the C identifiers F__1, F__2, F__3, etc.
		that CAESAR_ADT produces when translating an overloaded LOTOS
		function F. The conflict would cause messages such as:

		  warning: macro redefined: CAESAR_ADT_FUNC_F__1INT__INT__1

		followed by compile-time errors. To solve the issue,
		Lnt2Lotos now generates unique names of the form F__1ST,
		F__2ND, F__3RD, __4TH, __5TH, etc.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1698
Date: 		Fri Aug 30 10:06:45 CEST 2013
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The LOTOS code generated by Lnt2Lotos for loops was made
		simpler and shorter. In many cases, Lnt2Lotos generates LOTOS
		processes with fewer parameters. Although this change is not
		directly visible to end users, it improves performance.
-------------------------------------------------------------------------------
BUG FIX
Number:		1699
Date: 		Fri Aug 30 11:29:20 CEST 2013
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The translation of LOTOS NT ``if'' and ``select'' statements
		in process definitions has been enhanced. Previously, when
		a branch of an ``if'' or ``select'' did not terminate (e.g.,
		because it ended with a ``stop'', a deadlock, an infinite
		loop, etc.), Lnt2Lotos would generate incorrect LOTOS code
		that would be rejected by Caesar and Caesar.adt with the
		following error messages:

		   error during analysis:
		   variable (or constant operation) not declared
		   error during analysis:
		   operations cannot bind correctly
		   ...
		   In process COND__...
		   variable or constant operation LOCAL... was not declared

		Also, Lnt2Lotos now performs a more accurate analysis of
		variable initializations (especially non-terminating
		behaviours in ``select'' branches), which enables the
		translator to accept correct LOTOS NT programs that were
		formerly rejected with error messages of the form:

		   variable X defined at line 6 may be uninitialized at
		   this point
		   lnt2lotos: LOTOS NT program is semantically incorrect
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1700
Date: 		Fri Aug 30 18:45:39 CEST 2013
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		From now on, the Lnt2Lotos translator generates, for each
		LOTOS NT Boolean guard V, a LOTOS guard of the form
		   [V = true of BOOL]
		rather than simply
		   [V]
		as it would do previously. This helps CAESAR.ADT and CAESAR
		to solve ambiguities in the case the ``true'' function is
		overloaded, thus avoiding fatal error messages of the form:

		   error during analysis:
		   TRUE operation declared several times for a guard or an
		   equation
		   operations cannot bind correctly
		   ...
		   operation TRUE used implicitly in guard:
		     ...
		   returns a result of undefined sort; its profile might be:
                    -> (T [PROGRAM:5] | BOOL [X_BOOLEAN:3])
		   (the TRUE operation should be used explicitly
		   and the sort of the result should be specified by ``of'')
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1701
Date: 		Mon Sep  2 15:54:16 CEST 2013
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/installator/installator.tcl

Nature:		On the last frame of Installator, the "Done" button was
		misleading and was renamed into "Finish".
-------------------------------------------------------------------------------
BUG FIX
Number:		1702
Date: 		Tue Sep  3 13:08:47 CEST 2013
Report:		Eric Leo (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		INSTALLATION_1, INSTALLATION_4, INSTALLATION_WINDOWS,
		http://cadp.inria.fr/win32.html,
		http://cadp.inria.fr/installator/index.html

Nature:		From now on, the documentation states that one must use an
		administrator account to install CADP on Windows. Previously,
		the documentation was too complex and inconsistent at places.
-------------------------------------------------------------------------------
BUG FIX
Number:		1703
Date: 		Tue Sep  3 15:58:39 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		installator.{shar,com}

Nature:		On Windows/Cygwin, the extraction of the installator.shar (or
		installator.com) file is significantly slow, so that the user
		could very well think that Installator is frozen. Moreover,
		the banner "Installator started, wait a moment" has vanished
		after migrating to a newer version of the ``shar'' utility.
		The banner has been restored on all supported architectures
		and, on Windows , Installator now prints dots to animate the
		user's screen during extraction.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1704
Date: 		Wed Sep  4 17:56:46 CEST 2013
Report:		Ken Turner (University of Stirling, Scotland, UK)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		./INSTALLATION_WINDOWS, com/tst,
		http://cadp.inria.fr/win32.html

Nature:		The Windows version of CADP was modified to cope with a
		recent change in Cygwin, namely, the removal of the Gcc 3.*
		compiler (needed by CADP) from Cygwin packages in July 2013 -
		see http://cygwin.com/ml/cygwin/2013-07/msg00016.html for
		details.

		To address the issue, the installation directives for CADP
		on Windows have been updated to explain how to continue
		installing a Gcc 3.* and its -mno-cygwin option needed by
		CADP. This is only a temporary solution, a more perennial
		approach being sought.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1705
Date: 		Mon Sep  9 10:23:19 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		./INSTALLATION, gc/READ_ME, man/*/*, com/rfl, com/tst

Nature:		The symbolic link ./INSTALLATION -> ./INSTALLATION_2 created
		in September 1997 for backward compatibility reasons (see
		item #516 above) was removed. All occurrences of INSTALLATION
		in the manual pages have been replaced with INSTALLATION_2.
		All occurrences of INSTALLATION in the messages emitted by
		the RFL and TST shell scripts have been replaced with either
		INSTALLATION_2 or INSTALLATION_3, depending on the context.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1706
Date: 		Mon Sep  9 14:47:45 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		./emacs

Nature:		The symbolic link ./emacs -> ./ext/emacs created in September
		2010 for backward compatibility reasons (see item #1522 above)
		was removed. If not done already, upgrade your Emacs or Xemacs
		scripts to use $CADP/ext/emacs rather than $CADP/emacs
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1707
Date: 		Wed Sep 11 12:47:45 CEST 2013
Author:		Hubert Garavel, Frederic Lang, and
		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.old,
		bin.*/evaluator.a, bin.*/evaluator4.a, bin.*/lnt2lotos,
		bin.*/svl, bin.*/xtl

Nature:		From now on, the CADP compilers (namely, CAESAR, CAESAR.ADT,
		EVALUATOR, LNT2LOTOS, SVL, and XTL) no longer display a
		banner with names of authors and version number. This follows
		the usual conventions of Unix compilers, which only display
		messages if required to do so or if there is an error. The
		author names can be found in the manual pages and the version
		numbers can be obtained using the ``-version'' option.
-------------------------------------------------------------------------------
BUG FIX
Number:		1708
Date: 		Wed Sep 11 16:33:27 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/com/lnt_depend

Nature:		A bug was fixed in the lnt_depend shell script, which did not
		work if the current directory contained a file with a single-
		letter name.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1709
Date: 		Mon Sep 16 09:58:58 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.win32/*, src/com/cadp_cc, src/com/cadp_cpp, com/tst,
		INSTALLATION_WINDOWS, installator.{shar,com}

Nature:		To properly address the removal of Gcc 3.* from Cygwin (see
		item #1704 above), all CADP binaries for Windows have been
		recompiled with a Gcc 4.* cross compiler.

		The installation directives for CADP on Windows have been
		updated to mention that the ``mingw-gcc-core'' package of
		Cygwin is now needed. It is no longer required to install
		a Gcc 3.* compiler nor to downgrade a few other packages.

		The ``cadp_cc'' shell script was modified to stop using the
		``-mno-cygwin'' option, unless if a Gcc 3.* compiler is
		specified using the $CADP_CC environment variable or if
		there if no Gcc 4.* compiler available on the machine and
		a Gcc 3.* compiler exists.

		The ``cadp_cpp'' shell script was modified to use the command
		/bin/i686-pc-mingw32-cpp if /bin/cpp does not exist.

		The installator.shar (or .com) files have been updated too
		as it is no longer certain that a Gcc compiler is located
		in /usr/bin/gcc.
-------------------------------------------------------------------------------
BUG FIX
Number:		1710
Date: 		Mon Sep 16 18:21:11 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.win32/*

Nature:		On Windows, when invoked from a directory not located on the
		C:\ drive, certain CADP binaries would abort with an error
		message of the form:
		   couldn't execute /bin/sh
		   the Unix shell interpreter /bin/sh does not work correctly
		This problem was solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		1711
Date: 		Tue Sep 17 09:21:16 CEST 2013
Report:		Ahmad Al Khodre and Ahmad Badreddin (Islamic University in
		Madinah, Saudi Arabia)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		tcl-tk/com/wish, com/xeuca

Nature:		On Windows, when the Tcl/Tk ``wish'' interpreter was invoked
		from a directory not located on the C:\ drive, the following
		error message was produced:

		   Can't find a usable init.tcl in the following directories
		   ...
		   This probably means that Tcl wasn't installed properly

- 		A related issue was solved in Eucalyptus. When ``xeuca'' was
		invoked from a directory not located on the C:\ drive, the
		following error message was displayed:

		   couldn't read file "/cadp/eucalyptus/eucalyptus.tcl":
		   no such file or directory

		Both problems have been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1712
Date: 		Tue Sep 17 13:24:35 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/contributor, com/tst, com/xeuca, src/com/cadp_setup,
		src/contributor/contributor.tcl,
		src/eucalyptus/eucalyptus.tcl,
		man/*/contributor.*, man/*/eucalyptus.*, man/*/ocis.*

Nature:		Previously, Contributor, Eucalyptus, and Ocis would create
		configuration files in the user home directory (respectively,
		$HOME/.contributor, $HOME/.xeucarc, $HOME/.ocisrc). To follow
		the Gnome conventions and avoid polluting home directories
		with hidden files, the CADP configuration files are now
		gathered in a new directory named ``$HOME/.config/cadp''.

		A new shell script ``cadp_setup'' was added. When invoked
		with the ``-upgrade'' option, this shell script automatically
		moves existing configuration files to their new locations,
		namely:
		- $HOME/.contributor goes to $HOME/.config/cadp/contributor
		- $HOME/.xeucarc goes to $HOME/.config/cadp/xeucarc
		- $HOME/.ocisrc goes to $HOME/.config/cadp/ocisrc

		The Contributor, Eucalyptus, Ocis, and TST tools now invoke
		``cadp_setup'' to perform the migration transparently. The
		manual pages have been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1713
Date: 		Tue Sep 17 15:40:22 CEST 2013
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_30/*

Nature:		The demo_30 of CADP (Hubble space telescope) was translated
		from LOTOS to LOTOS NT. The former LOTOS version is kept in
		the demo_30/LOTOS directory. Two PDF files have been added,
		which provide detailed explanation about the demo example:
		 - paper.pdf    Holger Hermanns' paper (EATCS 2001)
		 - slides.pdf   Hubert Garavel's slides (CNAM 2011 lecture)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1714
Date: 		Wed Sep 18 16:21:18 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_19/graphics/feedback_pipe,
		demos/demo_19/graphics/startsimu,
		demos/demo_19/graphics/siminit.tcl,
		demos/demo_19/graphics/tksim_9,
		demos/demo_19/graphics/README,
		demos/demo_19/start, demos/demo_19/=READ_ME.txt,
		tcl-tk/lib-tcl/comm, tcl-tk/lib-tcl/snit

Nature:		The graphical simulator of the production cell (which was
		developed at FZI in the 90s) could not work on Windows in
		spite of prior attempts (see item #762 above), because the
		simulator relied on Tk's ``send'' command, which is disabled
		on Windows (see https://www.tcl.tk/man/tcl8.6/TkCmd/send.htm).

		Also, on Unix-like architectures, this simulator would not
		work if a ``xhost +'' or ``xhost +machine'' command had been
		executed before: in such case, Tk's ``send'' command is
		disabled for security reasons, and the graphical simulator
		would remain frozen.

		Both issues have been solved by replacing Tk's ``send''
		command with Tcl ``comm'' library, which uses socket-based
		communication rather than the X11 protocol.

		Additional changes for Windows portability (font names,
		use of ``sh -c'') have been made. Also, a ``-debug'' option
		was added to the ``start'' shell script, which activates
		all debugging facilities available. Finally, the log file
		``debug.log'' was renamed into ``debug.seq'' because this
		file follows the SEQ format of CADP.
-------------------------------------------------------------------------------
BUG FIX
Number:		1715
Date: 		Thu Sep 19 19:01:39 CEST 2013
Report:		Giuliano Francioli (Politecnico di Torino, Italy),
		Thanh Liem Phan (Hanoi University of Science and Technology,
		Vietnam)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		INSTALLATION_2, INSTALLATION_WINDOWS, com/tst,
		src/com/cadp_postscript, http://cadp.inria.fr/win32.html
		http://cadp.inria.fr/installator

Nature:		Multiple changes were brought to ease the installation of
		CADP on recent versions of Windows and Cygwin.

		File INSTALLATION_2 was updated to mention that CADP runs
		on Windows 8 (using the desktop, not the Metro interface).

		File INSTALLATION_WINDOWS was updated to recommend the
		installation of the Cygwin packages ``bc'' and ``make''
		required by certain CADP demos. The ``tst'' shell script
		was modified to check for the presence of these packages.

		File INSTALLATION_WINDOWS was also modified to recommend
		installing the Ghostscript package of Cygwin and the
		Evince viewer for Postcript and PDF files, rather than
		installing the Ghostscript/Gsview Windows binaries. The
		``cadp_postscript'' and ``tst'' shell scripts have been
		modified to support Evince.

		Globally, the installation instructions for Cygwin and
		CADP on Windows have been shortened and made simpler.
		They now use the ``wget'' command as much as possible.
		At the end of Cygwin installation, one now checks that
		the installation is correct by running the ``tst win32''
		command, thus enabling an early detection of possible
		mistakes.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1716
Date: 		Mon Sep 23 11:10:42 CEST 2013
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_19/cell, demos/demo_19/cell.t

Nature:		In the LOTOS code of demo_19, the NO_ERROR() function was
		renamed into EMPTY_ERROR_LIST() to avoid name conflicts with
		Cygwin system includes, which also define a NO_ERROR macro in
		/usr/i686-pc-mingw32/sys-root/mingw/include/winerror.h.
-------------------------------------------------------------------------------
BUG FIX
Number:		1717
Date: 		Wed Sep 25 10:56:00 CEST 2013
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		demos/demo_19/gate_functions.c

Nature:		The Exec/Caesar gate functions of demo_19 have been modified
		to terminate properly when the graphical simulator window is
		closed. Previously, closing the window would cause a few
		extra messages on Unix and a driver program running forever
		on Windows, taking 100% of the CPU. Both problems have been
		fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1718
Date: 		Wed Sep 25 13:21:05 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		lib/LNT_V1.lib, incl/LNT_V1.h,
		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The predefined function "abs : Real -> Real" was added to the
		standard library of LOTOS NT.
-------------------------------------------------------------------------------
BUG FIX
Number:		1719
Date: 		Wed Sep 25 11:10:09 CEST 2013
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		demos/demo_19/*

Nature:		The demo_19 of CADP was translated into LOTOS NT. So doing,
		the LOTOS specification was revised at several places to be
		simpler and more readable. The TWELVE_STATE type is now
		called ELEVEN_STATE and its initialization values 01, 02,
		03, and 04 have been renamed into i1, i2, i3, and i4. The
		TA1 and TMJ gates have been renamed into TA1_READY and TA1,
		respectively. The OUTPUT_SEQUENCER process has been removed,
		and the REACT event is now handled directly in the C code
		(main.c and gate_function.c files), so as to give it a lower
		priority than other events. Comments have been introduced at
		key places in both the LOTOS and LOTOS NT specifications, and
		the LOTOS NT specification is properly organized in modules.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1720
Date:		Fri Sep 27 09:42:32 CEST 2013
Report:		Radu Mateescu (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/bcg_min, man/*/bcg_min.*

Nature:		BCG_MIN now implements divergence-sensitive branching
		bisimulation (together with its stochastic and probabilistic
		variants). Divergence-sensitive branching bisimulation can be
		used by calling BCG_MIN with the "-divbranching" option.

		Divergence-sensitive branching bisimulation differs from
		branching bisimulation only in the way cycles of internal
		transitions (also called divergences) are treated. It is
		known that all states traversed by a cycle of internal
		transitions belong to the same branching equivalence class.
		While divergences are eliminated in the LTS obtained by
		reduction modulo ordinary branching bisimulation, a
		self-looping internal transition is kept in each such
		equivalence class in the LTS obtained by divergence-sensitive
		branching bisimulation.

		Divergence-sensitive bisimulation preserves inevitability
		properties, which are not preserved by branching bisimulation.

		Notice that the -divbranching option is not implemented in
		BCG_MIN 1.0 (available in bin.*/bcg_min.old) and that it is
		not made available in the backward compatibility "aldebaran"
		shell-script.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1721
Date: 		Fri Sep 27 12:52:01 CEST 2013
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl.*

Nature:		SVL now supports divergence-sensitive branching bisimulation.
		Reduction modulo divergence-sensitive branching bisimulation
		can be obtained using "divbranching reduction".

		Note that, as branching bisimulation, divergence-sensitive
		branching bisimulation is a congruence for the parallel
		composition, hiding, cutting, and renaming operators available
		in SVL, as long as the internal label is not renamed into a
		visible label. Therefore, the "smart", "leaf", and "node
		divbranching reduction" operators can be safely used to
		reduce composition expressions modulo divergence-sensitive
		bisimulation. "stochastic divbranching reduction" is also
		available.

		Comparison modulo divergence-sensitive branching bisimulation
		is not available for the time being. If the user asks for
		"divbranching comparison", then SVL issues a warning message
		and compares behaviours modulo branching bisimulation.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1722
Date:		Mon Sep 30 11:22:38 CEST 2013
Authors:	Frederic Lang (INRIA/CONVECS)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		Support for reduction modulo divergence-sensitive branching
		bisimulation using BCG_MIN has been added to the EUCALYPTUS
		user interface.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1723
Date: 		Fri Oct  4 13:18:14 CEST 2013
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		A first change was made in the Lnt2Lotos translator so that
		a process having value parameters can be the root process of
		a LOTOS NT specification. From now on, Lnt2Lotos no longer
		rejects LOTOS NT specifications whose root process has value
		parameters but translates them into LOTOS; yet, so far, the
		generated LOTOS code does not type check and is rejected
		by CAESAR and CAESAR.ADT. This problem will be addressed
		separately.
-------------------------------------------------------------------------------
BETA-VERSION 2013-j "Zurich" (RC50)
-------------------------------------------------------------------------------
BUG FIX
Number:		1724
Date: 		Thu Oct 17 17:46:43 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old, bin.*/caesar.adt,
		man/*/caesar.*, man/*/caesar.adt.*

Nature:		From now on, the ``-iso'' option of CAESAR silently ignores
		all comments of the form "(*! atomic *)" that may be present
		in the LOTOS code and do not give them a special meaning.
		Notice that, even when CAESAR is invoked with option ``-iso'',
		it is still possible to activate "(*! atomic *)" comments
		by adding also option ``-exit'' to the command line. The
		manual pages for CAESAR and CAESAR.ADT have been updated
		to better describe the effect of ``-iso'' option.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1725
Date: 		Fri Oct 18 12:36:01 CEST 2013
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The LOTOS code generated by LNT2LOTOS to check that gates
		are properly typed according to their channels has been
		modified to suppress warnings of the form:
		   warning: variable "CAESAR_REGISTER_????" set but not used
		generated by recent versions of Gcc 4.* on Windows/Cygwin
		and Linux Debian 7.0 "Wheezy".
-------------------------------------------------------------------------------
BUG FIX
Number:		1726
Date: 		Mon Oct 21 18:20:17 CEST 2013
Author:		Frederic Lang (INRIA/CONVECS)
Files:		demos/demo_32/demo.svl

Nature:		A mistake was fixed in the SVL script of demo 32. The
		following tautological comparison:
		   "scenario_S3.bcg" == "scenario_S3.bcg"
		was replaced with:
		   "LOTOS/scenario_S3.bcg" == "scenario_S3.bcg"
-------------------------------------------------------------------------------
BUG FIX
Number:		1727
Date: 		Tue Oct 22 19:00:43 CEST 2013
Report:		Raquel Oliveira (LIG, Grenoble, France)
Authors:	Frederic Lang et Hubert Garavel (INRIA/CONVECS)
Files:		incl/X_REAL.h

Nature:		The ADT_POWER_REAL() macro implementing the exponentiation
		operator ``***'' on real numbers in LOTOS NT was incorrectly
		defined. This error was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1728
Date: 		Wed Oct 23 18:09:56 CEST 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old, bin.*/caesar.adt

Nature:		The compiler front-end common to CAESAR and CAESAR.ADT has
		been enhanced to avoid displaying useless "cascading" error
		messages when a variable or constant operation is undefined.
		Here are two examples:

		1) Given the LOTOS behaviour expression:
		     let X:BOOL = UNDEF of BOOL in ...
		the previous versions of CAESAR / CAESAR.ADT would emit two
		error messages:
		   - variable or constant operation UNDEF was not declared
		   - conversion ``of BOOL [BOOLEAN:3]'' is applied to value:
		        UNDEFINED
		     whereas the sort of this value is:
		        ?
		At present, the latter error message is no longer displayed.

		2) Given the LOTOS behaviour expression:
		     [UNDEF] -> stop
		the previous versions of CAESAR / CAESAR.ADT would emit two
		error messages:
		   - variable or constant operation UNDEF was not declared
		   - operation TRUE implicitly used in guard:
		        UNDEF
		     was not declared
		At present, the latter error message is no longer displayed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1729
Date: 		Thu Oct 24 15:14:55 CET 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old, bin.*/caesar.adt

Nature:		The type checking algorithm of CAESAR and CAESAR.ADT has
		been entirely revisited. The algorithm was correct, but
		needed to be adapted to enable future changes. So doing,
		the messages displayed by CAESAR and CAESAR.ADT for typing
		errors have been enhanced: many of them have been made more
		informative and some meaningless messages have been removed.
		The changes occurred in the following contexts:

		1) "let X:S = V in ...", where value V does not have sort S

		Previously, the messages focused on value V alone, claiming
		that its top-level operation was badly typed, e.g., for a
		mistyped statement "let R:INT := X >= Y in ...":

		   operation _>=_ used in value:
		      X >= Y
		   the profile of which might be
		      INT, INT -> INT
		   was not declared; some operations exist with the same name
		   but with incompatible profiles:
		      _>=_ [NATURAL:22] : NAT, NAT -> BOOL
		      _>=_ [INTEGERNUMBER:49] : INT, INT -> BOOL

		The new error message is more appropriate:

		   value
		      X >= Y
		   the sort of which is BOOL
		   is used in a ``let'' operator that requires sort INT

		Also, if V would have the form "V0 of S0" (with S0 different
		from S), the former error message was hardly understandable:

		   conversion ``of S0'' is applied to value:
		      V0
		   whereas the sort of this value is:
		      S0

		2) "ofsort S V1 = V2", where V1 and/or V2 do not have sort S

		Again, the former messages would report errors "internal" to
		V1 or V2, whereas new error messages better state the issue:

		   value
		      V1
		   the sort of which might be
		      S1
		   is used in equation:
		        V1 = V2
		   the ``ofsort'' clause of which requires sort S

		Finally, another message was enhanced, the one emitted when
		a LOTOS operation has not been declared and when other
		operations exist with the same name, but either have
		incompatible profiles or are masked by operators having the
		same name and defined in a more deeply nested scope.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1730
Date: 		Fri Oct 26 12:35:10 CET 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old, bin.*/caesar.adt

Nature:		In LOTOS, a guard of the form [X] is interpreted as a guard
		of the form [X = TRUE], where operation TRUE is a nullary
		operator that returns the same sort as X (not necessarily,
		the BOOL sort: it can be any other sort).

		The error messages emitted by CAESAR and CAESAR.ADT when
		such a TRUE operation does not exist were short:

		   operation TRUE was not declared

		and not very explanative for novice users. From now on,
		better error messages are produced:

		   operation TRUE implicitly used in guard:
		      X [100]
		   the profile of which is:
		      -> T [8]
		   was not declared: other operations named TRUE exist
		   but with incompatible profiles:
 		      TRUE [9] : -> BOOL [8]
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1731
Date: 		Mon Oct 28 16:07:11 CET 2013
Report:		Zhen Zhang (University of Utah, USA)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/rfl

Nature:		By default, RFL (and, thus, Installator) would try the three
		remote connection protocols rsh/rcp, ssh/scp, krsh/kcp in
		this order. On certain sites, the rsh/rcp protocol (which is
		now obsolete) takes a long time (e.g., 20 seconds) before
		answering that the connection cannot be made, and thus
		freezes RFL and Installator for a while. This issue has been
		addressed by giving ssh/scp priority: by default, protocols
		are now tried in this order: ssh/scp, rsh/rcp, and krsh/kcp.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1732
Date: 		Tue Oct 29 14:55:41 CET 2013
Authors:	Frederic Lang et Hubert Garavel (INRIA/CONVECS)
Files:		src/open_caesar/generator.c
		man/*/generator.*

Nature:		Two new options "-parse" and "-unparse" have been added to
		GENERATOR, so as to generate BCG graphs with or without label
		parsing (see the BCG_WRITE manual page for information on
		abel parsing). The GENERATOR manual page has been updated.
-------------------------------------------------------------------------------
BUG FIX
Number:		1733
Date: 		Wed Oct 30 18:29:30 CET 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old, bin.*/caesar.adt

Nature:		The error messages displayed by CAESAR and CAESAR.ADT when
		performing type checking on lists of LOTOS equations were
		displayed in reverse order. These messages are now displayed
		in the same order as the equations appear in the source LOTOS
		code.
-------------------------------------------------------------------------------
BUG FIX
Number:		1734
Date: 		Thu Oct 31 12:55:11 CET 2013
Report:		Zhen Zhang (University of Utah, USA)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		In the LOTOS code generated by LNT2LOTOS for LOTOS NT
		functions (precisely, for patterns containg a constructor
		returning a result of some range or predicate type T), a
		type coercion "of T" was missing, so that the LOTOS code
		would not compile. For instance, the LOTOS code produced
		for the following LOTOS NT fragment:

		   type T is range 1..10 of NAT end type
		   function F (X:T) : bool is
		      case X in
  		         1 of T -> return false
		       | any -> return true
		      end case
		   end function

		was rejected by CAESAR with the following error message:

		   conversion ``of T'' is applied to value:
		      1
     		   whereas the sort of this value is:
		      INT | NAT

		This problem was solved by generating different LOTOS code.
-------------------------------------------------------------------------------
BUG FIX
Number:		1735
Date: 		Tue Nov  5 13:01:10 CET 2013
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		src/svl/standard

Nature:		When the reduction modulo strong bisimulation of a composition
		expression failed (for instance due to memory exhaustion), SVL
		tried to continue the script with the composition expression
		in the EXP format rather than the intermediate BCG graph
		generated from the composition expression. This bug was
		solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1736
Date: 		Wed Nov  6 10:37:58 CET 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		INSTALLATION_MACOS, com/tst, src/com/cadp_hostname

Nature:		The instructions for installing CADP on Mac OS X have been
		revised and almost entirely rewritten. These instructions
		have been greatly simplified, since all the text related to
		Mac OS X 10.4 "Tiger" and Mac OS X 10.5 "Leopard" has been
		moved to Annexes A to E. They have also been updated to
		take into account XCode 5.0.1 (released on October 22, 2013).

		The "tst" shell script was also modified at many places to
		deliver better explanations.

		The "cadp_hostname" was modified to add "/usr/sbin" in the
		$PATH when looking for the "scutil" command. This removes
		a false positive warning emitted by Installator (complaining
		that the machine does not have a statically allocated host
		name).
-------------------------------------------------------------------------------
BUG FIX
Number:		1737
Date: 		Wed Nov  6 15:49:13 CET 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/tst, com/rfl

Nature:		A portability issue was fixed, which caused TST and RFL to
		emit spurious error messages when running on Mac OS X
		(both macOS and mac86 architectures):
        	   expr : syntax error
		   tst: ligne 143: [: too many arguments
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1738
Date: 		Thu Nov  7 14:37:48 CET 2013
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		The C code generated by CAESAR, although correct, would
		trigger the following warnings:

		   caesar:    - simulator compilation
		   ... warning: equality comparison with extraneous
		       parentheses [-Wparentheses-equality]
		   if ((CAESAR_P1->CAESAR_SUCCESSOR==NULL)) {
		        ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
		   ... note: remove extraneous parentheses around the
		       comparison to silence this warning
		   if ((CAESAR_P1->CAESAR_SUCCESSOR==NULL)) {
		       ~                           ^     ~
		   ... note: use '=' to turn this equality comparison
		       into an assignment
		   if ((CAESAR_P1->CAESAR_SUCCESSOR==NULL)) {
		                                   ^~
		                                   =
		   1 warning generated.

		when compiled by the CLANG compiler running on mac86
		architectures. The generated C code was modified to avoid
		this problem.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1739
Date: 		Thu Nov  7 15:59:01 CET 2013
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The error messages displayed by LNT2LOTOS when a gate is
		mistyped have been made more explanative. Formerly, LNT2LOTOS
		would only display:
		   gate ``G'' has an invalid type
		whereas the new error message is:
		   gate ``G'' has channel ``LATENCY'' where ``MINOR_LATENCY''
		   is expected
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1740
Date: 		Fri Nov  8 10:39:50 CET 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/com/cadp_compiler, src/com/cadp_cc

Nature:		The "cadp_compiler" shell script has been extended to detect
		the CLANG C compiler, which is notably used in Apple's XCode
		development tools.

		The "cadp_cc" shell script has been extended to invoke CLANG,
		on architecture mac86 with different options than GCC. This
		removes two warnings emitted by CLANG 500.* (XCode 5.0.1):
		   - argument unused during compilation: '-fno-tree-sra'
		   - argument unused during compilation: '-multiply_defined'
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1741
Date: 		Fri Nov  8 11:33:02 CET 2013
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, incl/X_NATURAL.h, incl/X_INTEGER.h

Nature:		The C code produced by LNT2LOTOS and the C code of the
		X_NATURAL and X_BOOLEAN libraries has been slightly modified
		to remove the following warning:
		   unknown option after '#pragma GCC diagnostic' kind
		emitted by GCC (version 4.2 exclusively).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1742
Date: 		Fri Nov  8 13:07:37 CET 2013
Report:		Francois Vernadat (LAAS-CNRS, Toulouse, France)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/bcg_min, man/*/bcg_min.*,
		com/aldebaran, man/*/aldebaran.*

Nature:		A new version 2.1 of BCG_MIN was released, which now provides
		a ``-observational'' option to minimize a BCG graph modulo
		observational equivalence (as defined by Robin Milner). The
		BCG_MIN manual page was updated accordingly.

		The (now deprecated) ALDEBARAN shell script was modified to
		restore its ``-omin'' and ``-ocla'' options, which had been
		removed when switching from ALDEBARAN version 6.* to version
		7.0 (see item #1299 above). The latest version of ALDEBARAN
		has been assigned version number 7.5. The ALDEBARAN manual
		page was updated.

		So far, the new ``-observational'' option cannot be used
		together with ``-rate'' or ``-prob'' options. Moreover,
		reduction modulo observational equivalence is computationally
		more expensive than reduction modulo branching equivalence
		(which is slightly stronger). Hence, as much as possible,
		branching reduction should be preferred to observational
		reduction. For these reasons, observational equivalence is
		neither supported in the EUCALYPTUS graphical user interface,
		nor in SVL.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1743
Date: 		Fri Nov  8 14:23:32 CEST 2013
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/bcg_min

Nature:		BCG_MIN 2.1 was made much faster in certain cases. A function
		that partitions the set of transitions going out of a given
		state into sets of visible and invisible transitions had a
		quadratic instead of a linear complexity. This caused
		performance issues in the case of branching reduction applied
		to a graph with a high branching factor and many internal
		transitions. This problem was solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		1744
Date: 		Fri Nov  8 16:28:54 CET 2013
Report:		Wendelin Serwe (INRIA/CONVECS) and Rabea Ameur-Boulifa
		(Telecom ParisTech, Paris, France)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/libcaesar.a

Nature:		A bug was fixed in the resolution algorithm A1 (based on a BFS
		strategy) of the CAESAR_SOLVE_1 library. This bug caused the
		model checkers EVALUATOR 3.x and EVALUATOR 4.0 to yield, in
		some cases, incorrect verdicts when they were invoked using
		the "-bfs" option for certain formulas involving nested
		temporal operators with different fixed point signs.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1745
Date: 		Sat Nov  9 10:01:45 CET 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.mac86/cadp_memory

Nature:		The CADP_MEMORY command for architecture mac86 was modified
		to avoid emitting warnings of the form:
		   dyld: DYLD_ environment variables being ignored because
		   main executable (/usr/bin/top) is setuid or setgid
		on Mac OS X 10.8 "Mountain Lion" exclusively. This problem
		was caused by a known bug of Mac OS X:
		   http://openradar.appspot.com/11894054
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1746
Date: 		Sat Nov  9 17:48:49 CET 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		INSTALLATION_MACOS, com/tst, src/com/install_uncompress
		installator.shar

Nature:		Installator would not work properly on the latest version
		of Mac OS X 10.9 "Mavericks". It would display annoying
		(but in fact, harmless) error messages of the form:

		   *** Unexpected messages displayed by ``tar''
		   x ./FR_LICENSE.pdf
		   x ./etc/jedit
		   ...
		   Error during archive extraction

		There are different versions of the Unix "tar" command,
		especially the BSD tar and the GNU tar, the latter being
		used by Installator. For long, both versions have been
		present in Mac OS X; however, the GNU tar was removed from
		1O.9 "Mavericks", which only provides the BSD tar.

		The installation directives for CADP on Mac OS X have been
		modified to ask the user to install the GNU tar using
		MacPorts (now in /opt/local/bin/gnutar rather than
		/usr/bin/gnutar).

		The "tst" shell script was modified to check whether the
		GNU tar is available on mac86 architectures.

		The "install_uncompress" shell script was adapted to
		possibly fetch the GNU tar in /opt/local/bin/gnutar, and
		to try recovering if only the BSD tar is present.
-------------------------------------------------------------------------------
VERSION 2013-k "Zurich"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1747
Date: 		Fri Nov 15 11:17:54 CET 2013
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*xtl

Nature:		The C code generated by XTL was modified so as to avoid
		warnings emitted by recent versions of the CLANG compiler
		(e.g., when running demo_27 on Mac OS X 10.9 "Mavericks").
		This problem was similar to item #1738 above.
-------------------------------------------------------------------------------
BUG FIX
Number:		1748
Date: 		Fri Nov 22 13:23:39 CET 2013
Report:		Zhen Zhang (University of Utah, USA)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel

Nature:		There was a bug in SVL expansion of meta-operators. Hiding
		was propagated under the LOTOS NT generalized parallel
		composition operator in an incorrect way. This bug was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1749
Date: 		Mon Nov 25 08:17:30 CET 2013
Report:		Alexandre Hamez (ISAE, Toulouse, France)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		The Caesar.bdd tool has been enhanced in various ways,
		leading to a new version 1.5 of the tool. The following
		changes have been made:

		- Caesar.bdd is now slightly faster when invoked with
		  options "-dead" or "-unit".

		- A new option "-check" was added, which performs stricter
		  checks on the input BPN file. In particular, this option
		  detects if a unit has no proper places, if the root unit
		  is contained in another unit, if units are recursively
		  nested, if a sub-unit is directly contained in several
		  units, if a non-root unit is contained in no other unit,
		  and to statically detect certain transitions that violate
		  the invariant that all reachable markings are one-safe.
		  (the latter check arised from discussions with Alexandre
		  Hamez).

		- From now on, the BDD statistics printed with "-dead" or
		  "-unit" options are no longer displayed. These statistics
		  are only printed (in a richer format) when using the new
		  "-check" option.

		- The error messages emitted by Caesar.bdd have been made
		  more informative. In particular, when the BPN file is
		  syntactically or semantically incorrect, line numbers are
		  displayed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1750
Date: 		Mon Nov 25 16:09:27 CET 2013
Report:		Zhen Zhang (University of Utah, USA) and Wendelin Serwe
		(INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		A bug was fixed in the Lnt2Lotos translator, regarding "case"
		instructions in LNT processes. If the number of case patterns
		was greater than the number of values allowed by the user
		for the "Nat" type, the translation was incorrect in a way
		that was difficult to detect. Two changes have been made:

		- From now on, the translation of "case" instructions no
		  longer relies on the predefined Nat type, but uses an
		  enumerated type generated specifically for that purpose.

		- The number of values needed for this enumerated type was
		  reduced (there is now only one value per case branch,
		  rather than one value per case pattern).
-------------------------------------------------------------------------------
BUG FIX
Number:		1751
Date: 		Tue Nov 26 16:25:38 CET 2013
Report:		Raquel Oliveira (LIG, Grenoble, France)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		src/com/lnt_depend

Nature:		When invoking directly Lnt_Depend on Mac OS X 10.6, some
		warnings of the form "unsupported option -n" were emitted.
		Such warnings were not visible in the usual case, where
		Lnt_Depend is invoked indirectly from Lnt.Open. This bug
		was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1752
Date: 		Wed Nov 27 17:17:09 CET 2013	
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		When translating calls to LNT process without gate parameters
		but with value parameters, the Lnt2Lotos could transform
		certain value parameters (especially, those of the form X,
		where X is a variable, or F, where F is a nullary function)
		into gate parameters. The generated LOTOS code was often
		incorrect, leading to error messages of the form:
		   - gate LOCAL__B__xxx was not declared
		This bug was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1753
Date: 		Tue Dec  3 12:28:24 CET 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		lib/NATURALNUMBER.lib, lib/NATURAL.lib, lib/X_NATURAL.lib,
		lib/LNT_V1.lib, incl/X_NATURAL.h, incl/LNT_V1.h

Nature:		The NATURALNUMBER, NATURAL, and X_NATURAL predefined LOTOS
		libraries have been modified in order to prepare future
		changes and to use the same naming conventions for the
		natural types as for the integer types.

		From now on, the C identifiers corresponding to LOTOS
		operations for the NAT sort all have a "_NAT" suffix.
		Concretely, the following renamings have been performed:
		   ADT_DIV -> ADT_DIV_NAT
		   ADT_GCD -> ADT_GCD_NAT
		   ADT_MAX -> ADT_MAX_NAT
		   ADT_MIN -> ADT_MIN_NAT
		   ADT_MINUS -> ADT_MINUS_NAT
		   ADT_MOD -> ADT_MOD_NAT
		   ADT_MULT -> ADT_MULT_NAT
		   ADT_PLUS -> ADT_PLUS_NAT
		   ADT_POWER -> ADT_POWER_NAT
		   ADT_SCM -> ADT_SCM_NAT
		   ADT_SUCC -> ADT_SUCC_NAT
		and, in the C code generated by Caesar.adt
		   CAESAR_ADT_is_ADT_SUCC -> CAESAR_ADT_is_ADT_SUCC_NAT
		   CAESAR_ADT_Get_1_ADT_SUCC -> CAESAR_ADT_Get_1_ADT_SUCC_NAT

		Related changes have been performed in the LNT_V1 library
		used for the LNT language:
		   ADT_DIV_BIS -> ADT_DIV_BIS_NAT
		   ADT_GCD_BIS -> ADT_GCD_BIS_NAT
		   ADT_MAX_BIS -> ADT_MAX_BIS_NAT
		   ADT_MIN_BIS -> ADT_MIN_BIS_NAT
		   ADT_MINUS_BIS -> ADT_MINUS_BIS_NAT
		   ADT_MOD_BIS -> ADT_MOD_BIS_NAT
		   ADT_MULT_BIS -> ADT_MULT_BIS_NAT
		   ADT_PLUS_BIS -> ADT_PLUS_BIS_NAT
		   ADT_POWER_BIS -> ADT_POWER_BIS_NAT
		   ADT_SCM_BIS -> ADT_SCM_BIS_NAT

		As such changes may break compatibility, the following
		provisions should be taken when a specification stops
		compiling with the new version of CADP:
		- Regenerate all .h and .c files generated by Caesar.adt
		  and Caesar.
		- Inspect and update your .t and .f files and, more
		  generally, all your hand-written C code.
		The CADP team can advise for such a migration and will
		provide on request a shell-script detecting obsolete C
		identifiers that need to be renamed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1754
Date: 		Thu Dec  5 16:21:48 CET 2013
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		lib/INTEGER.lib, lib/X_INTEGER.lib, lib/=READ_ME.txt

Nature:		In order to prepare future changes, the definition of the
		predefined Integer type (in libraries INTEGER.lib and
		X_INTEGER.lib) has been modified.

		Previously, both types IntegerNumber and Integer were
		identical. This is no longer the case at present:
		type Integer now has a larger signature than type
		IntegerNumber, because type Integer now imports type
		Natural (previously, it only imported type IntegerNumber,
		which itself depends on type NaturalNumber, not Natural).

		This change is not backward compatible, in the sense that
		certain LOTOS specifications may cease to compile, but
		this has a low probability. In such case, the solution is
		to import type Natural where type NaturalNumber only was
		imported. This usually requires to import the NATURAL.lib
		library where the NATURALNUMBER.lib library was imported.

		In turn, this may change create naming conflicts between
		operations that exist both on naturals and integers (e.g.,
		constant "1", operation "+"). Such conflicts can easily be
		removed by introducing "of" operations to solve overloading.

		Such annoyances are regrettable, but this is the price to
		pay for future enrichments of the integer type libraries.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1755
Date: 		Tue Dec 10 11:42:18 CET 2013
Report:		Raquel Oliveira (LIG, Grenoble, France)
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		lib/INTEGER.lib, lib/LNT_V1.lib, lib/X_INTEGER.lib,
		incl/LNT_V1.h, incl/X_INTEGER.h
		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		Three new predefined operations:
		   _div_, _mod_, _rem_ : Int, Int -> Int
		have been added to the LOTOS predefined libraries INTEGER.lib
		and X_INTEGER.lib (in the Integer type), and to the predefined
		library of LNT. The LNT reference manual has been updated
		accordingly.

		This change is backward compatible, unless for those LOTOS
		or LNT specifications that contain definitions of "div",
		"mod", and/or "rem" on integers. Such specifications may
		cease to compile because of name conflicts arising.

		The standard solution is either to remove the conflicting
		definitions of operators "div", "mod", and/or "rem" contained
		in these specifications, if these operators are semantically
		identical to the new predefined operators, or to give
		different names to these operators if they are semantically
		different from the new predefined ones. When removing
		definitions from LOTOS specifications, one should make sure
		to import INTEGER (and not simply INTEGERNUMBER) from the
		standard library.

		However, there is another approach that may work for certain
		LOTOS specifications. If a LOTOS specification contains the
		following fragment:

			library INTEGER endlib
			...
			type T is INTEGER
			   ...
			   opns _div_ : Int, Int -> Int
			   ...
			endtype

		one can try replacing both occurrences of INTEGER with
		INTEGERNUMBER, rather than removing the definition of
		"div" (same for "mod" and "rem"). This only works if
		the LOTOS specication does not use in fact the definitions
		of type INTEGER that are not in INTEGERNUMBER.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1756
Date: 		Wed Dec 11 13:13:14 CET 2013
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/bcg_cmp, bin.*/READ_ME. man/*/bcg_cmp.*

Nature:		A new tool named BCG_CMP was added. BCG_CMP takes as input
		two BCG graphs and checks whether they are equivalent modulo
		a relation chosen among strong bisimulation, stochastic or
		probabilistic strong bisimulation, branching bisimulation,
		stochastic or probabilistic branching bisimulation,
		divergence-sensitive branching bisimulation, or observational
		equivalence. A "-diag" option allows one to get a diagnostic
		of the comparison when the input graphs are not equivalent.

		The main differences between BCG_CMP and BISIMULATOR are the
		following:

		- BCG_CMP implements equivalences only, whereas BISIMULATOR
		  also implements inclusions (i.e., preorder relations).
		
		- BCG_CMP implements stochastic and probabilistic variants of
		  the strong and branching bisimulations, together with the
		  divergence-sensitive branching bisimulation, which are not
		  available in BISIMULATOR. On the other hand, BISIMULATOR
		  implements several equivalences that are not supported by
		  BCG_CMP, namely tau*.a, safety, trace, and weak trace
		  equivalences.

		- BCG_CMP has a -class option, which allows one to obtain
		  the states equivalence classes.

		- BCG_CMP checks equivalence using a partition-refinement
		  algorithm (shared with BCG_MIN), whereas BISIMULATOR works
		  on-the-fly.

		The performances of BCG_CMP and BISIMULATOR have been
		compared on the VLTS benchmark suite, located at
		   http://cadp.inria.fr/resources/vlts
		VLTS contains 40 graphs ranging from a few hundred states
		and transitions up to 33 million states and 165 million
		transitions. All pairs of these graphs have been compared
		using strong and branching bisimulation, with the following
		findings:

		- BISIMULATOR is generally more efficient than BCG_CMP on
		 comparisons yielding a FALSE result because BISIMULATOR
		 works on the fly; thus, a counter-example can often be
		 found after exploring only a few states. For instance,
		 BISIMULATOR runs 5.9 times faster and uses 4.5 times less
		 memory than BCG_CMP when comparing vasy_65_2621.bcg and
		 vasy_4220_13944.bcg.

		- But BCG_CMP is much more efficient than BISIMULATOR for
 		  comparisons yielding a TRUE result. For instance, to
		  compare vasy_65_2621.bcg against itself, BCG_CMP runs
		  15.7 times faster and uses 5.5 times less memory than
		  BISIMULATOR; when comparing cwi_371_641.bcg against itself,
		  BISIMULATOR had to be stopped manually after 30 hours.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1757
Date:		Wed Dec 11 16:50:17 CET 2013
Author:		Frederic Lang (INRIA/CONVECS)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		The new tool BCG_CMP has been integrated in the EUCALYPTUS
		graphical user interface, leading to version 2.10 of
		EUCALYPTUS. BCG_CMP can be invoked through the contextual
		menu entry "Compare..." associated to BCG graphs.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1758
Date: 		Thu Dec 12 08:56:38 CET 2013
Author:		Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/bcg_min, man/*/bcg_min.*, src/eucalyptus/eucalyptus.tcl

Nature:		The syntax of the "-class" option of BCG_MIN was changed, to
		be aligned on that of BCG_CMP. In former versions of BCG_MIN
		(i.e., up to version 2.1 included), the "-class" option was
		not followed by any argument and equivalence classes were
		always displayed on the standard output. From now on, with
		the new versions of BGC_MIN (i.e., from 2.2 and above),
		the "-class" option must be followed by a file name, which
		can be "-" if the equivalence classes are still to be
		displayed on the standard input.

		Because this change breaks backward compatibility, BCG_MIN
		issues an error message and stops if the argument following
		"-class" is either an option (i.e., starts with a hyphen) or
		a file name with extension ".bcg", so as to avoid overwriting
		an existing BCG file.

		The EUCALYPTUS graphical user-interface has been updated
		accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1759
Date:		Thu Dec 12 15:41:42 CET 2013
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl.*

Nature:		The SVL language and compiler have been extended to integrate
		the new BCG_CMP tool for comparison of LTSs and Markov chains
		(see item #1756 above). This led to a new version 2.4 of SVL.
		The SVL manual page was updated.

		From SVL, BCG_CMP can be invoved explicitly using the new
		clause "comparison with bcg_cmp", which forces the use of
		BCG_CMP, automatically converting implicit graphs into
		explicit ones whenever needed.

		But BCG_CMP is also invoked implicitly by default (instead of
		BISIMULATOR) when the comparison relation is stochastic or
		probabilistic (such relations do not exist in BISIMULATOR).
		It is also called by default when both objects to be compared
		are explicit (i.e., stored in BCG graphs) and the equivalence
		relation is one of those supported by BCG_CMP. One can prevent
		BCG_CMP from being used as default by specifying a different
		tool using the "with" clause or the $DEFAULT_COMPARISON_TOOL
		variable.
-------------------------------------------------------------------------------
BUG FIX
Number:		1760
Date: 		Thu Dec 12 19:52:54 CET 2013
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos
	
Nature:		Better error messages are displayed when an LNT specification
		contains a fragment of the form
			G (...) where E
		and where G is not defined. Previously, a misleading error
		message was displayed by CAESAR.ADT at the LOTOS level:
		   - process G was not declared.
		From now on, a meaningful error message is emitted by
		LNT2LOTOS at the LNT level:
		     undeclared gate G
-------------------------------------------------------------------------------
VERSION 2013-l "Zurich"
-------------------------------------------------------------------------------
BUG FIX
Number:		1761
Date: 		Fri Dec 13 18:37:28 CET 2013
Report:		David M. Williams (Free University Amsterdam, The Netherlands)
		Javier Garcia (Universidad Politechnica de Valencia, Spain)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/tst

Nature:		A message emitted by the ``tst'' shell-script regarding the
		Yama Linux Security Module on Ubuntu was incorrect. The
		message mentioned /bin/sysctl instead of /sbin/sysctl. This
		error has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1762
Date: 		Tue Dec 17 12:47:54 CET 2013
Report:		Wendelin Serwe (INRIA/CONVECS) and Zhen Zhang (University of
		Utah, USA)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel
	
Nature:		When building a graph G that derives from a "user abstraction"
		operator, SVL emits a warning if the user-given interface is
		over-constrained. This was enhanced by emitting this warning
		for all subsequent graph generations deriving from G, and not
		only for G itself. This way, the user can not ignore that an
		improper interface has been used. This is done by checking
		systematically the absence of labels of the form ":FAIL:*"
		in graphs generated after a "user abstraction" has been
		performed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1763
Date: 		Fri Dec 27 14:36:56 CET 2013	
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		A new version 1.6 of CAESAR.BDD was released, which brings
		the following enhancements:

		- The ``-check'' option now detects places that are not
		  contained in any unit.

		- The ``-check'' option detects places that are directly
		  contained in more than one unit.

		- The ``-check'' option detects units declared several
		  times (i.e., when several lines U%d have the same %d).

		- The ``-check'' option detects transitions declared several
		  times (i.e., when several lines T%d have the same %d).

		- The ``-pnml'' option no longer generates PNML files with
		  very long lines that cause problems to certain Unix tools;
		  from now on, carriage returns are inserted every 16 places
		  or every 16 units.

		- A new (undocumented) option ``-vlpn'' was added.

		The CAESAR.BDD manual page was added to describe option
		``-check''. The definition of the BPN format was made more
		precise by correcting constraint #21 (<nb-of-units> was
		replaced with <nb-of-units> - 1) and by inserting a new
		constraint #24 (the root unit is not a subunit of any other
		unit), incrementing the number of all constraints formerly
		starting at #24.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1764
Date: 		Sat Dec 28 15:04:24 CET 2013
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		INSTALLATION_1, INSTALLATION_2, INSTALLATION_4,
		INSTALLATION_MACOS, READ_ME,
		EN_LICENSE.pdf, FR_LICENSE.pdf

Nature:		The CADP distribution was made leaner by removing binaries
		for platforms no longer requested by CADP users. Four
		architectures have been removed ("sun5", "sun64", "ia64",
		and "macOS"), which correspond to Sparc, Itanium, and PowerPC
		processors. The installation files and the CADP web site
		have been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1765
Date: 		Fri Jan  3 16:02:31 CET 2014	
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/com/cadp_indent

Nature:		The ``cadp_indent'' shell-script invoked by CAESAR.ADT has
		been rewritten to be more robust against crashes and failures
		of the C pretty-printer programs ``indent'' distributed as
		part of operating systems or development tools.

		Previously, ``cadp_indent'' would recover if a core file was
		dumped in the current directory. This was insufficient to
		handle the cases where ``indent'' loops forever, creates
		a huge output file, or when core dumps are stored in a secure
		directory /var/core that can only be read by a system
		administrator, not by ordinary users. From now on, the new
		version of ``cadp_indent'' properly recovers from these
		issues and no longer lets ``indent'' run forever nor create
		huge output or core files.

		Also, a portability issue was fixed: on certain platforms
		(e.g., Solaris and MacOS X), the ``.BAK'' backup files are
		created in the current directory, whereas on other platforms
		(e.g., Linux), these backup files are created in the same
		directory as the input source C file.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1766
Date: 		Tue Jan  7 09:50:08 CET 2014
Author:		Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		src/com/cadp_fold, com/tst, bin.*/lnt2lotos

Nature:		The previous version 5.8 of Lnt2Lotos could generate LOTOS
		files with long (potentially unbounded) lines. Such files
		were difficult to handle by certain commands that have a
		fixed size buffer, e.g., ``awk'', ``sed'', and ``vi'', the
		buffer of which is limited on Solaris to 2560, 4000, and 4096
		characters, respectively.

		The new version 5.9 of Lnt2Lotos ensures that each line is
		at most 2500-character long. A new shell script `cadp_fold''
		was added for this purpose. The ``tst'' shell script was
		enhanced to check that the POSIX command ``fold'' is present,
		and to detect cases where only ``/bin/fold'' is present on
		Solaris (for large files, the Solaris implementation of
		``fold'' may improperly cut a line in the middle of a word).
-------------------------------------------------------------------------------
BUG FIX
Number:		1767
Date: 		Wed Jan  8 10:50:39 CET 2014
Report:		Raquel Oliveira (LIG, Grenoble, France)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/com/lnt_depend

Nature:		The ``lnt_depend'' shell script (which is silently invoked
		by ``lnt.open'') was modified to avoid generating spurious
		warnings of the form:
		   tr: Illegal byte sequence
		on Mac OS X "Snow Leopard" when the locale is not set to "C".
-------------------------------------------------------------------------------
BUG FIX
Number:		1768
Date: 		Wed Jan  8 11:19:06 CET 2014
Report:		Francois Vernadat (LAAS-CNRS, Toulouse, France)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/bcg_min
	
Nature:		BCG_MIN terminated on a segmentation fault when it was called
		with both options -observational and -class on a BCG graph
		that did not contain any internal action. This bug was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1769
Date: 		Fri Jan 10 09:36:15 CET 2014
Report:		Francois Vernadat (LAAS-CNRS, Toulouse, France)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/bcg_cmp, bin.*/bcg_min
	
Nature:		Two bugs have been corrected in BCG_CMP and BCG_MIN:

		1) When using the option "-class class_file" with a class_file
		different from standard output, part of the information about
		equivalence classes (namely, the strongly connected components
		of internal transitions) was written to standard output rather
		than being written to class_file.

		2) The equivalence classes displayed for observational
		equivalence were incorrect in the case where all internal
		transitions occurred in cycles of internal transitions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1770
Date: 		Sun Jan 12 09:27:06 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		lib/=READ_ME.txt, lib/Y_*.lib, demos/archive/lib,
		demos/demo_05, demos/archive/demo_05.old,
		demos/demo_06, demos/archive/demo_06.old,
		demos/archive/demo_10.old, demos/archive/demo_11.old

Nature:		To reflect the growing importance of LNT, which has become
		the recommended specification language in recent versions of
		CADP, the sample LOTOS specifications specifically focussed
		on abstract data types have been moved to a new directory
		``$CADP/demos/archive'' that is meant to store oldies, i.e.,
		material that is still correct but has stopped being relevant
		to current users of CADP. Namely:

		- demo_05 was moved to $CADP/demos/archive/demo_05.old

		- demo_06 was moved to $CADP/demos/archive/demo_06.old

		- demo_10, which had been removed in 2012 (see item #1634
		  above) was restored in $CADP/demos/archive/demo_10.old

		- demo_11, which had been removed in 2012 (see item #1635
		  above) was restored in $CADP/demos/archive/demo_11.old

		- the sample LOTOS files contained in $CADP/lib/Y_*.lib have
		  been moved to directory demos/archive/lib

		- the $CADP/lib/=READ_ME.txt file has been significantly
		  enhanced.
-------------------------------------------------------------------------------
BUG FIX
Number:		1771
Date: 		Mon Jan 13 12:37:55 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS),
		Alexander Graf-Brill (Saarland University, Germany),
		Abderahman Kriouile (STMicroelectronics, Grenoble, France),
		and Zhen Zhang (University of Utah, USA)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old, bin.*/lnt2lotos

Nature:		The LOTOS code generated by Lnt2Lotos was simplified by
		removing certain code fragments of the form:
		    [FALSE of BOOL = TRUE of BOOL] -> exit
		or
		    [FALSE of BOOL = TRUE of BOOL] -> exit (...)
		Such code fragments are inserted to ensure that the generated
		LOTOS specifications satisfy the so-called ``functionality''
		constraints stated in the ISO standard defining LOTOS. But
		some of these fragments were not strictly needed. With the
		new version 5.9 of Lnt2Lotos, such useless code fragments are
		no longer generated in two cases:
		- when translating an "else stop" statement;
		- when translating a nested "while" loop that has a non-
		  trivial condition and is followed by statement before
		  the end of the outer loop.

		Because of the presence of such code fragments, irrelevant
		warnings of the form:
		    a deadlock exists for rendez-vous:
		       exit
		    synchronized by parallel operator ``|[exit]|''
		    this gate/offer combination is used in the right operand:
		       ...
		    but not in the left operand:
		       ...
		could be emitted. Conversely, the emission of relevant such
		warnings could be prevented. To address such issues, Caesar
		and Lnt2Lotos have been modified. We now believe that all
		relevant warnings, and only relevant warnings are displayed.
-------------------------------------------------------------------------------
VERSION 2014-a "Amsterdam"
-------------------------------------------------------------------------------
BUG FIX
Number:		1772
Date: 		Tue Jan 14 15:35:07 CET 2014
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		com/tst

Nature:		On Windows, when CADP was not installed on the current machine
		and when environment variable $CADP_CC had a non-empty value,
		the TST shell script did not detect properly the C compiler.
		This issue was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1773
Date: 		Thu Jan 16 14:36:55 CET 2014
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/bcg_cmp

Nature:		On architecture mac86, when called with option -diag and when
		MallocScribble was enabled, BCG_CMP could terminate with an
		message "error in diagnostic generation" without generating
		diagnostics. This issue was solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1774
Date: 		Tue Jan 21 17:34:08 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		The data structures used internally by CAESAR to store Petri
		nets have been compacted. On 32-bit machines, it saves 4 bytes
		per place and 4 bytes per transition. On 64-bit machines, it
		saves 8 bytes per transition.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1775
Date: 		Wed Jan 22 13:27:38 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.adt

Nature:		The CAESAR.ADT compiler has been enhanced to recognize
		tautological premisses of the form "V = V => ..." and to
		implement them by generating a C statement "(void) V" that
		informs the C compiler that the variables occurring in value
		expression V are used.

		This optimization led to a new version 5.4 of CAESAR.ADT,
		which generates shorter and more efficient C code. Also, some
		"dead" C code that was added just to avoid compiler warnings
		has been removed. Moreover, due to these simplifications in
		the generated C code, certain LOTOS operations are now
		automatically implemented as C macros, whereas they were
		implemented as C functions formerly.

		Notice that the new version of CAESAR.ADT may emit warnings
		on certain specifications that were silently accepted by the
		previous version of CAESAR.ADT. For instance, the following
		equations:
		   true => F (x, y) = true;
		   x and not (y) => F (x, y) = false;
		will warn that the second equation is redundant (notice that
		premiss "true => ... " is rephrased as "true = true => ...").
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1776
Date: 		Thu Jan 23 15:45:36 CET 2014
Authors:	Wendelin Serwe and Hubert Garavel(INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		Following change #1775 above, LNT2LOTOS has been modified to
		generate shorter and more elegant LOTOS code for:
		- the predicate types with a "where true" clause,
		- the "card" built-in functions,
		- and the CHECK__CHANNEL_... functions generated for type
		  checking channel usage.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1777
Date: 		Fri Jan 24 18:03:10 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		LNT2LOTOS now emits a warning whenever an LNT function has
		"in" or "inout" parameters that are never used in that
		function, e.g.,
		     ** warning at line 255:
		        in function F, value of parameters I, L is unused
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1778
Date: 		Mon Jan 27 16:24:58 CET 2014
Report:		Raquel Oliveira (LIG, Grenoble, France)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		Following changes #1775 and #1777 above, LNT2LOTOS has been
		modified to generate different LOTOS code for implementing
		functions that do not use all their "in" or "inout"
		parameters. By generating tautologic premisses of the form
		"X = X =>" for such parameters, the modified LOTOS code,
		after being translated into C code using CAESAR.ADT, avoids
		numerous warnings previously emitted by the C compiler, e.g.,
		    warning: unused parameter 'CAESAR_ADT_1'
		    warning: unused parameter 'CAESAR_ADT_1'
		    warning: unused parameter 'CAESAR_ADT_2'
		    warning: unused parameter 'CAESAR_ADT_1'
		    etc.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1779
Date: 		Fri Jan 31 16:03:08 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		The former versions of CAESAR (up to to version 7.2 included)
		and CAESAR.OLD (up to version 6.4 included) could produce
		BPN (Basic Petri Net) files that were not connected (i.e.,
		nets containing "islands" of places and transitions that
		are not connected to the initial place). Statistically, this
		only occurred in 1.5% of test examples.

		To address this problem, optimization E1 of CAESAR was
		strengthened: it now detects and removes all disconnected
		places and transitions, but also, more generally and based
		upon sufficient conditions, certain places that never get a
		token in any reachable marking and certain transitions that
		can never fire from any reachable marking (i.e., that are not
		quasi-live).

		Due to this more involved analysis, the new versions 7.3 of
		CAESAR and 6.5 of CAESAR.OLD are slightly slower than the
		previous versions (statistically, 1,9% slower for CAESAR 7.3
		and 7% slower for CAESAR.OLD 6.4, measured on 33 hours of
		computations on different benchmarks).

		However, significant reductions in the size of generated
		Petri nets have been observed on certain examples, e.g.:

		Example 1
			variables:        49      36    (26%)
			places:          180     179    (0%)
			transitions:     205     136    (33%)

		Example 2
			variables:        72      45    (37%)
			units:            64      46    (28%)
			places:          188     125    (33%)
			transitions:     204     117    (42%)
			max. tokens:      54      39    (27%)

		Example 3
			variables:       153      98    (35%)
			units:            70      62    (11%)
			places:          240     186    (22%)
			transitions:     229     173    (24%)
			max. tokens:      57      53     (7%)	

		Example 4
			variables:       167     112    (32%)
			units:            70      58    (17%)
			places:          288     206    (28%)
			transitions:     309     209    (32%)
			max. tokens:      57      49    (14%)

		Example 5
			variables:       195     145    (25%)
			units:           276     261     (5%)
			places:         1111     756    (31%)
			transitions:    6396    5831     (8%)
			max. tokens:     245     225     (8%)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1780
Date: 		Sun Feb  2 10:13:38 CET 2014
Report:		Lom Messan Hillah (LIP6, Paris, France)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		To enable the development of an automated translator from
		PNML (Petri Net Markup Language) to BPN, the BPN format has
		been extended by relaxing the former constraint:

		 12.  <nb-of-subplaces> > 0
		      -- a unit has at least one local place

		which is now replaced by three constraints:

		 11.  <nb-of-subplaces> >= 0
		 12.  <nb-of-subplaces> = 0 => <min-subplace-nb> = 1
		                               and <max-subplace-nb> = 0
		      -- empty interval of places is canonically noted 1...0
		 13.  <nb-of-subplaces> = 0 => (<unit-nb> = <root-unit-nb>)
		                               and <nb-of-units> > 1
		      -- a unit has at least one local place, except perhaps
		      -- the root unit if it has several subunits

		The CAESAR.BDD tool and its manual page have been updated
		accordingly to implement this new semantics. The ``-check''
		option of CAESAR.BDD now emits fatal errors (rather than
		warnings) when rules 11-13 above are violated. A note was
		added in the CAESAR.BDD manual page to mention that it is
		not required for the initial place to be in the root unit.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1781
Date: 		Mon Feb  3 15:58:57 CET 2014
Report:		Alexandre Hamez (ISAE, Toulouse, France)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The CAESAR.BDD tool has been enhanced in various ways,
		leading to a new version 1.7 of this tool:

		- From now on, the ``-check'' option displays certain
		  places and transitions that are disconnected from the
		  initial place or that can never be accessed in any
		  reachable marking, based on sufficient conditions similar
		  to those implemented in optimization E1 of CAESAR (see
		  item #1779 above).

		- The (undocumented) option ``-vlpn'' has been enhanced
		  and another new (also undocumented) option ``-mcc'' has
		  been added, which serves to prepare benchmarks for the
		  Model Checking Contest.

		- The CAESAR.BDD manual page now states that options
		  ``-dead'' and ``-unit'' perform less verifications than
		  option ``-check''.

		- A note has been added to the CAESAR.BDD manual page,
		  stating that it is neither required that all places can
		  be reachable from the initial marking, nor that all
		  transitions are quasi-live (i.e., can be fired from at
		  least one reachable marking).
-------------------------------------------------------------------------------
BUG FIX
Number:		1782
Date: 		Wed Feb  5 09:56:55 CET 2014
Report:		Hugues Evrard (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/bcg_cmp

Nature:		Two bugs have been fixed in BCG_CMP invoked with the -diag
		option:

		1) BCG_CMP could terminate on a segmentation fault during
		diagnostics generation, after having displayed the result
		FALSE.

		2) Useful transitions could be missing in the generated
		diagnostics when both BCG graphs under comparison still had
		nondeterminism after being minimized.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1783
Date: 		Thu Feb  6 16:57:12 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS), Alexander Graf-Brill (Saarland
		University, Germany)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, com/svl, man/*/svl.*, bin.*/exp2c,
		man/*/exp.open.*

Nature:		The syntax of the "par" operator in SVL and EXP.OPEN was
		slightly different than that in LNT. SVL and EXP.OPEN have
		thus been modified to get aligned on LNT. More precisely,
		when the list of labels to be synchronised was empty, one
		had to write:

		   par in B1 || ... || Bn end par

		in EXP.OPEN and SVL (keyword "in" was mandatory), whereas
		the LNT syntax is simply:

		   par B1 || ... || Bn end par

		(keyword "in" is not used). From now on, EXP.OPEN and SVL
		obey the same syntax as LNT, leading to version 2.3 of
		EXP.OPEN and version 2.5 of SVL.

		As a consequence, EXP.OPEN syntax for parallel composition
		using synchronisation vectors had to be slightly changed to
		avoid conflicts in the parser. The "using" keyword must now
		be used before the list of synchronisation vectors. For
		instance, a composition formerly written as follows:

		    par
			A * A -> i,
			B * _ -> B
		    in
		        "a.bcg" || "b.bcg"
		    end par

		must now be written:

		    par using
		        A * A -> i,
			B * _ -> B
		    in
			"a.bcg" || "b.bcg"
		    end par

		potentially breaking backward compatibility.
-------------------------------------------------------------------------------
BUG FIX
Number:		1784
Date: 		Thu Feb  6 18:21:41 CET 2014
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		A bug was fixed in the Lnt2Lotos compiler, which could
		translate correct LNT specifications into incorrect
		LOTOS ones, which were subsequently rejected by CAESAR.ADT
		and CAESAR with an error message of the form:
		   variable or constant operation LOCAL_... was not declared
		This (unfrequent) problem was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1785
Date: 		Fri Feb  7 11:38:14 CET 2014
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c

Nature:		Under Solaris, the "priority" operator of EXP.OPEN had no
		effect (priorities were not taken into account) due to a bug
		in the TRAIAN compiler used to build EXP.OPEN. This issue
		was solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1786
Date: 		Sat Feb  8 10:05:12 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		LNT2LOTOS now emits a warning whenever a process has "in" or
		"inout" parameters that are never used in that process, e.g.,
		     ** warning at line 31:
		        in process P, value of parameters N, P, X is unused
		(This change is similar to item #1777 above, but applied to
		processes rather than functions).
-------------------------------------------------------------------------------
BUG FIX
Number:		1787
Date: 		Tue Feb 11 13:53:48 CET 2014
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The LNT2LOTOS compiler now emits an error message when the
		same gate is used twice in some synchronization list of a
		``par'' operator, e.g.,
		       par
		          G, G -> B
		          ||
			  ...
		       end par
		This situation is prohibited by the LNT reference manual
		but was not detected so far by the LNT2LOTOS translator.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1788
Date: 		Wed Feb 12 13:43:39 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		From now on, LNT2LOTOS emits a warning when a gate occurs
		in only one synchronization list of a "par" operator:
		   gate ``G'' belongs to only one synchronisation interface
		   and has thus no effect
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1789
Date: 		Wed Feb 12 17:11:27 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		CAESAR was optimized to recognize certain LOTOS behaviour
		expressions, namely
		   [V] -> B   (* guard *)
		and
		   G O1...On [V] ; B   (* action prefix *)
		where V can be statically proven to be false or true. In
		such cases, CAESAR directly generates a minimal Petri net,
		rather than a non-minimal one that is later simplified by
		applying optimizations that remove the "dead" parts of the
		Petri net. Not only is this more efficient algorithmically,
		but this also avoids emitting improper warnings related to
		these "dead" parts (e.g., when processing "[false] -> exit"
		clauses contained in the LOTOS code generated by LNT2LOTOS).
-------------------------------------------------------------------------------
VERSION 2014-b "Amsterdam"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1790
Date:		Fri Feb 14 14:25:16 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		From now on, LNT2LOTOS warns about local variables declared
		in LNT processes and never used. The warnings have the form:
		  ** warning at line 21:
		        variable ``Q'' is declared but not used
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1791
Date: 		Mon Feb 17 10:04:25 CET 2014
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/xtl

Nature:		XTL was enhanced to enable the use of the predefined types
		and functions of XTL (implemented in C) in the definition
		of temporal operators implemented using external C code. The
		C implementations of the predefined XTL types are available
		in the $CADP/incl/xtl*.h files.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1792
Date:		Tue Feb 18 12:45:35 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		LNT2LOTOS was modified in two ways:

		- It no longer emits duplicate warnings of the form:
		    gate ``i'' is forbidden here
		  From now on, only one warning is emitted if gate "i" occurs
		  in a synchronization list of an LNT parallel operator.

		- It no longer emits redundant warnings of the form:
		    gate ``G' belongs to only one synchronisation interface
		    and has thus no effect
		  when gate G is equal to "i".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1793
Date:		Tue Feb 18 18:52:55 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd.*, man/*/caesar.bdd.*

Nature:		The definition of the BPN format given on the CAESAR.BDD
		manual page has been enhanced in several ways. An overview
		section on the principles of BPN was added. The options
		"-mcc" and "-vlpn" are now succintly documented.

		The static semantics rules for BPN have been made stricter
		and more precise. The notations Length(), Sub(), Sub*(),
		and Disjoint() have been introduced. Rules 11 and 17 have
		been strengthened. Three new rules numbered 27, 29, and
		33 have been added, which state constraints on the input
		and output places of each transition; the former rules
		27-30 have been renumbered into rules 28, 30, 31, and 32.
		Various remarks have been added too.

		The CAESAR.BDD tool has been modified to implement these
		new static semantic rules. The output of the "-mcc" option
		was revised following the lessons learnt while preparing
		the 2014 edition of the Model Checking Contest.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1794
Date:		Wed Feb 19 10:57:36 CET 2014
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The C code generated (in the ".t" file) by LNT2LOTOS for LNT
		range types has been modified to avoid C compiler warnings of
		the form:
        	   In function `ADT_RANGE_CAST__T__GENERATED':
		   comparison of unsigned expression >= 0 is always true
		   comparison between signed and unsigned

		A missing cast has been added to perform explicit conversion
		from the range type to its parent type.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1795
Date:		Wed Feb 19 16:37:16 CET 2014
Report:		Lom Messan Hillah (LIP6, Paris, France)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd.*, man/*/caesar.bdd.*

Nature:		The BPN format has been extended to accept initial markings
		containing more than one place, in order to ease automated
		translation from PNML (Petri Net Markup Language) to BPN.

		In the BPN grammar given on the CAESAR.BDD manual page, a
		new non-terminal <initial-marking-description> was added.
		In the static semantics, rule 3 has been renumbered into
		rule 8 while rules 4-9 have been renumbered into rules 3-8.
		Three new rules 10, 11, 12 have been inserted to state
		constraints on initial markings. The former rules 10-33
		have been renumbered into rules 13-36.

		The CAESAR.BDD tool has been modified to support multiple
		initial places.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1796
Date:		Thu Feb 20 10:42:09 CET 2014
Report:		Hugues Evrard (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		When an LNT function has only "in" parameters and does not
		return a result, LNT2LOTOS no longer emits an irrelevant
		extra error message of the form:
		   pragma ``!implementedby'' for function with out or inout
		   parameter without '%'
		Of course, the relevant error message:
		   function F has only ``in'' parameters and no return type
		is still emitted.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1797
Date:		Thu Feb 20 18:38:30 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd.*, man/*/caesar.bdd.*

Nature:		The CAESAR.BDD manual page has been enhanced with a section
		defining the formal semantics of the BPN model. The key
		concept of "unit-safety" is now stated. A static semantics
		rule has been added to forbid certain unsafe BPN models
		reported by Alexandre Hamez (ISAE, Toulouse, France); this
		new rule is numbered 34, while the former rules 34-36 are
		now numbered 35-37.

		The CAESAR.BDD tool has been modified to implement this
		static rule. Moreover, the "-check" option now dynamically
		checks whether markings are unit-safe or not while generating
		the set of all reachable markings. Compared to the former
		version 1.7 of CAESAR.BDD, this verification slows down the
		execution by 6% on average.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1798
Date:		Fri Feb 21 10:50:26 CET 2014
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		Three simplifications have been brought to the LOTOS code
		generated by the LNT2LOTOS translator:

		- In the conversion function for interval types, useless
		  conversions are no longer applied to interval bounds.

		- Boolean guards of the form "TRUE and P" have been replaced
		  by P.

		- Useless value parameters have been removed from the
		  "LOOP__xxx" processes generated for LNT loops.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1799
Date:		Fri Feb 21 11:10:39 CET 2014
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The C code generated (in the ".t" file) by LNT2LOTOS for the
		iterators of LNT range types having only one element has been
		modified to avoid C compiler warnings of the form:
		  comparison is always false due to limited range of data type
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1800
Date:		Thu Feb 27 11:52:41 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		From now on, LNT2LOTOS emits warnings when certain variables
		defined in processes are assigned but not used. Such warnings
		have the form:
		     ** warning at line 97:
		        value stored in variable ``X'' is not used later
-------------------------------------------------------------------------------
BUG FIX
Number:		1801
Date:		Fri Feb 28 15:57:50 CET 2014
Report:		Ludovic Apvrille (Telecom ParisTech, Sophia-Antipolis, France),
		Alexander Graf-Brill (Saarland University, Germany)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*

Nature:		On Mac OS X and Windows, the license protection scheme of
		CADP could emit an irrelevant error message of the form:
		   wrong Internet address (``no_address'' instead of
		   ``no_address'')
		This problem has been solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1802
Date: 		Mon Mar  3 10:24:53 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c, man/*/exp.open.*

Nature:		The syntax of synchronization vectors has been enhanced to
		be more intuitive: from now on, one can use "||" rather than
		"*" to denote products of actions. By example, one may write:

		    par using
		    	"A" || _ || "B" -> "D",
			"C" || "C" || _ -> "E"
		    in
			"p1.bcg" || "p2.bcg" || "p3.bcg"
		    end par

		instead of:

		    par using
		    	"A" * _ * "B" -> "D",
			"C" * "C" * _ -> "E"
		    in
			"p1.bcg" || "p2.bcg" || "p3.bcg"
		    end par

		The "*" syntax is still accepted for backward compatibility.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1803
Date:		Tue Mar  4 16:23:53 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.old,
		man/*/caesar.*, man/*/caesar.adt.*

Nature:		CAESAR and CAESAR.ADT have been modified to perform type
		inference for the value parameters of LOTOS processes. From
		now on, if a value parameter of a LOTOS process is overloaded
		(i.e., may have several sorts), the sort of the corresponding
		formal variable parameter is used to try solving such
		ambiguity, whereas the standard definition of LOTOS requires
		to emit an error message.

		For instance, given a process P [G] (X:INT), the following
		process call P [G] (0) is incorrect according to the standard
		definition of LOTOS. Following this definition, the former
		versions of CAESAR and CAESAR.ADT would reject the LOTOS
		specification with an error message of the form:
		   error during analysis:
		   too many solutions for operation binding
		   - operation 0 used in value:
		        0
		     returns a result of undefined sort; its profile is
		        -> (INT [X_INTEGER:2] | NAT [X_NATURAL:3])
		     (the sort of the result should be specified by ``of'')

		The new versions of CAESAR and CAESAR.ADT use the information
		that X has sort INT to automatically select "0 of INT" rather
		than "0 of NAT". The "-iso" option enables to force the use
		of the standard LOTOS semantics. The manual pages have been
		updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1804
Date: 		Wed Mar  5 13:16:23 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c, src/svl/standard

Nature:		When using smart reduction, EXP2C now produces better messages
		in SVL log files, in order to help the user understand how
		smart reduction proceeds. In particular, EXP2C now explains
		which graphs are composed at each smart reduction step, and
		how the networks generated during this step can be used in
		subsequent steps.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1805
Date:		Thu Mar  6 13:57:02 CET 2014
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The LOTOS code generated by LNT2LOTOS for LNT arrays having
		only one element has been modified to prevent C compiler
		warnings from being emitted.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1806
Date: 		Thu Mar  6 16:12:48 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c

Nature:		EXP2C now provides better warnings when some synchronization
		vectors specify impossible synchronizations. Examples of
		such messages are:

		1) For label par:

		exp2c: WARNING line 1: impossible synchronization
		"a !1" || _ || "a !2" -> "a !1"
			- label "a !1" occurs in 1st parallel process
			- label "a !2" does not occur in 3rd parallel process

		2) For gate par:

		exp2c: WARNING line 1: impossible synchronization
		"a" || _ || "a" -> "a"
			- gate "a" occurs in 1st parallel process
			- gate "a" does not occur in 3rd parallel process

		or

		exp2c: WARNING line 1: impossible synchronization
		"a" || _ || "a" -> "a"
			- gate "a" occurs in 1st parallel process
			- gate "a" occurs in 3rd parallel process
		but offers do not match
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1807
Date:		Mon Mar 10 09:57:28 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, bin.*/caesar, bin.*/caesar.old,
		man/*/caesar.bdd.*

Nature:		The BPN format has been extended with the notion of "pragma".
		Four pragmas have been introduced (!creator, !unit_safe,
		!multiple_initial_tokens, and !multiple_arcs) and documented
		in the CAESAR.BDD manual page.

		The CAESAR.BDD tool has been modified to parse and check the
		pragmas present in BPN files. Its options "-mcc", "-pnml",
		and "-vlpn" have also been enhanced to take advantage of
		pragmas.

		The CAESAR tool has been updated to insert the "!creator",
		and possibly "!unit_safe", pragmas, in the BPN files it
		generates.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1808
Date: 		Tue Mar 11 11:24:27 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c

Nature:		One step of smart reduction is the automated generation by
		EXP2C of intermediate networks from an input network. During
		this operation, auxilliary labels are introduced in the
		intermediate networks. Although sometimes unavoidable, such
		automatically generated labels may confuse users who try
		to follow smart reduction and understand its effects.

		From now on, EXP2C tries to keep original labels as much as
		possible (especially for those networks generated from LOTOS
		or LNT compositions), only introducing auxilliary labels
		when they are mandatory.
-------------------------------------------------------------------------------
BUG FIX
Number:		1809
Date:		Wed Mar 12 14:09:21 CET 2014
Report:		Alexandre Hamez (ISAE, Toulouse, France)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd.*, man/*/caesar.bdd.*

Nature:		The results computed by the ``-unit'' option of CAESAR.BDD
		did not correspond to the definition stated on the manual
		page of the tool. More precisely, two units nested one in
		another could be "concurrent" according to the manual page
		but not according to CAESAR.BDD.

		Following this report, the implementation of CAESAR.BDD
		was revised and strengthened, leading to version 1.8 of
		the tool. The manual page was also revised: at present, to
		be concurrent, two units must not only be "distinct" but
		"disjoint", as defined in the manual.
-------------------------------------------------------------------------------
BUG FIX
Number:		1810
Date:		Wed Mar 12 17:25:42 CET 2014
Report:		Gwen Salaun (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		A bug that appeared in LNT2LOTOS between September 2013 and
		January 2014 has been fixed. LNT2LOTOS could generate invalid
		LOTOS code when a "case" statement in an LNT process would
		declare a local variable having the same name as an other
		variable declared in the outer scope containing the "case"
		statement. Such invalid LOTOS code was rejected by CAESAR
		and CAESAR.ADT with error messages of the form:
		   error during analysis:
		   variable (or constant operation) not declared
		   quit
		followed by:
		   In process LOOP__xxx
		      - variable or constant operation LOCAL__xxx was not
		        declared
-------------------------------------------------------------------------------
BUG FIX
Number:		1811
Date:		Thu Mar 13 11:47:42 CET 2014
Report:		Raquel Oliveira (LIG, Grenoble, France)
Authors:	Wendelin Serwe, Frederic Lang, and Hubert Garavel (INRIA/
		CONVECS)
Files:		bin.*/lnt2lotos, com/lnt.open, man/*/lnt2lotos.*

Nature:		The EUCALYPTUS graphical user-interface could freeze when
		LNT2LOTOS would emit too many warning or error messages.
		A workaround for this problem was to set the environment
		variable $PAGER to "/bin/cat". This problem has been
		definitively solved by adding to LNT2LOTOS a new option
		``-more'' similar to that of CAESAR and CAESAR.ADT. The
		LNT.OPEN shell script and the LNT2LOTOS manual page have
		been updated accordingly.
-------------------------------------------------------------------------------
VERSION 2014-c "Amsterdam"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1812
Date:		Sun Mar 16 21:25:13 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		The ``-mcc'' and ``-vlpn'' options of CAESAR.BDD have been
		significantly enhanced, leading to version 1.9 of the tool:

		- They now take into account the pragmas ``!unit_safe'',
		  ``!multiple_initial_tokens'', and/or ``!multiple_arcs'',
		  if these pragmas are present.

		- They now provide answers (false, true, or unknown) for
		  behavioural properties of one-safe Petri nets (presence
		  of deadlocks, safeness, quasi-liveness, liveness, number
		  of reachable markings, etc.). This is done by trying a
		  BDD-based exploration of the reachable marking graph.
		  When computing the quasi-liveness property, a static
		  detection of locks may also be used if the BDD-based
		  analysis fails.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1813
Date:		Fri Mar 21 15:04:57 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos,
		demos/demo_32/MEMORY_FONC_T.lnt,
		demos/demo_32/PI_FONC_T_NDET.lnt,
		demos/demo_32/PJ_SSVAR_EPS.lnt,
		demos/demo_32/PI_SSOUT_FONC_T_NDET.lnt,
		demos/demo_32/PJ_SSVAR_EPS_OUT.lnt,
		demos/demo_35/summation.lnt

Nature:		From now on, LNT2LOTOS emits warnings when a given assignment
		to some variable is useless, i.e., when the value of this
		variable is never used after this assignment:

		   ** warning at line 154:
		      value stored in variable ``X'' is not used later

		Such check encompasses not only assignements (":="), but also
		nondeterministic assignments (":= any"), patterns, as well as
		("out" and "inout") actual parameters of process and function
		calls.

		Certain LNT files belonging to demos 32 and 35 have been
		revised to avoid such warnings (namely, by replacing ``?X''
		with ``?any T'' whenever variable X of type T was not used).
-------------------------------------------------------------------------------
BUG FIX
Number:		1814
Date:		Wed Mar 26 17:56:55 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		A bug was fixed in the ``-check'', ``-mcc'', and ``-vlpn''
		options of CAESAR.BDD. For those Petri nets having more than
		one initial place, these options could wrongly declare that
		certain places were unreachable and certain transitions dead,
		thus leading to irrelevant warnings with option ``-check'' and
		improper quasi-liveness verdicts for options ``-mcc'' and
		``-vlpn''.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1815
Date:		Sat Mar 29 06:50:43 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		From now on, the ``-check'' option of CAESAR.BDD displays
		the number of markings reached at each iteration (and not
		only the corresponding number of BDD nodes).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1816
Date:		Sun Mar 30 15:21:03 CET 2014
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		incl/caesar_standard.h, incl/caesar_kernel.h,
		man/*/caesar_standard.*, doc/*/Garavel-92-a.*

Nature:		In the OPEN/CAESAR and EXEC/CAESAR standard include files, the
		definition of CAESAR_TYPE_BOOLEAN has been changed from:
		     typedef char CAESAR_TYPE_BOOLEAN;
		to
		     typedef unsigned char CAESAR_TYPE_BOOLEAN;

		The former definition created problem when implementing values
		of type CAESAR_TYPE_BOOLEAN as bit fields of size one: the
		CAESAR_TRUE value was understood as -1 instead of 1, leading
		GCC to emit warnings and generate machine code valid only for
		signed integer values.
-------------------------------------------------------------------------------
BUG FIX
Number:		1817
Date:		Mon Mar 31 11:45:58 CEST 2014
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		src/com/cadp_cc

Nature:		The ``cadp_cc'' shell script was modified to support old
		versions of 64-bit Linux with old versions of the Glibc,
		in particular:
		 - Debian 5.0 (Lenny) with glibc version 2.7
		 - Red Hat EL Server 5.9 (Tikanga) with glibc version 2.5
		On these systems, link edit errors could occur when running
		CADP tools (the strtof() function was not found). This issue
		was solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1818
Date:		Mon Mar 31 12:37:31 CEST 2014
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		src/open_caesar/declarator.c

Nature:		The DECLARATOR tool now properly catches interrupt signals.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1819
Date:		Tue Apr  1 13:14:24 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		From now on, the ``-check'', ``-mcc'', and ``-vlpn'' options
		of CAESAR.BDD catch POSIX interrupt signals (namely, SIGINT,
		SIGQUIT, SIGALRM, and SIGTERM) and adapt their behaviour in
		consequence. Upon reception of such signals, these options
		stop their BDD-based exploration of the reachable marking
		graph, and properly complete their execution using pessimistic
		assumptions (i.e., the fact that the entire marking graph
		could not be explored). This is especially important for the
		behavioural properties computed by options ``-mcc'' and
		``-vlpn''.
-------------------------------------------------------------------------------
BUG FIX
Number:		1820
Date:		Tue Apr  1 15:30:33 CEST 2014
Report:		Javier Garcia (Universidad Politechnica de Valencia, Spain),
		Guido Josquin (University of Twente, The Netherlands),
		Raquel Oliveira (LIG, Grenoble, France),
		Dimitris Vekris (University Paris Est, France),
		David M. Williams (Free University Amsterdam, The Netherlands)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		com/tst

Nature:		A prior bug fix (see item #1761 above) was not complete and
		still did not enable to use CADP on Linux Ubuntu. The TST
		shell script properly identified the PTRACE problem with Yama
		and proposed several steps to resolve it, but the last step
		was incorrect. The final command to execute was not:
		     sudo /sbin/sysctl -p
		but:
		     sudo /sbin/sysctl -p /etc/sysctl.d/10-ptrace.conf
-------------------------------------------------------------------------------
BUG FIX
Number:		1821
Date:		Tue Apr  1 16:39:48 CEST 2014
Report:		Raquel Oliveira (LIG, Grenoble, France)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		com/xeuca

Nature:		On some versions of Linux, such as Ubuntu 12.04 for instance,
		the EUCALYPTUS user-interface displayed the version of CADP
		(e.g., CADP 2014-c "Amsterdam") in the title bar using an
		oversized font. This issue was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1822
Date:		Wed Apr  2 11:41:54 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*, man/*/caesar.*

Nature:		A new feature has been implemented in CAESAR.BDD: from now on,
		CAESAR.BDD reads the environment variable $CAESAR_BDD_TIMEOUT,
		which can be used to specify a maximal duration for marking
		graph exploration. This change affects options ``-check'',
		``-dead'', ``-unit'', ``-mcc', and ``-vlpn'' of CAESAR.BDD.
		See the CAESAR.BDD and CAESAR manual pages for details.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1823
Date:		Thu Apr  3 12:30:34 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		From now on, the filename that follows the ``-mcc'' option of
		CAESAR.BDD is optional, thus making option ``-mcc'' be similar
		to all other options. The manual page was updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1824
Date:		Fri Apr  4 17:36:09 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		From now on, LNT2LOTOS emits a warning when a local variable
		is declared in a function but not used. This change is the
		same as the one of item #1790 above, but for LNT functions
		rather than LNT processes.
-------------------------------------------------------------------------------
BUG FIX
Number:		1825
Date:		Tue Apr  8 10:24:49 CEST 2014
Report:		Raquel Oliveira (LIG, Grenoble, France)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lpp, com/lnt.open, man/*/lpp.*, man/*/lnt2lotos.*

Nature:		A new option ``-more'' was added to the LPP tool and the
		LNT.OPEN tool was modified to invoke LPP with this option.
		This change, which is meant to prevent the EUCALYPTUS graphical
		user-interface from freezing when LPP emits too many error
		messages, completes a previous bug fix (see item #1811 above).
		The manual pages have been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1826
Date:		Wed Apr  9 18:55:40 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS), Raquel Oliveira (LIG,
		Grenoble, France), and Wendelin Serwe (INRIA/CONVECS)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
File:		src/com/lnt_depend

Nature:		Two bugs have been fixed in the LNT_DEPEND shell script:

		- When detecting a circular dependency between LNT modules,
		  LNT_DEPEND would emit an appropriate error message, but
		  would also continue its execution, so that the compilation
		  would stop much later, when compiling the generated LOTOS
		  code, with an esoteric error message:
		        #031 system error during analysis:
		             include file ``.lib'' is unreadable
		             quit
		  At present, the compilation stops immediately, at the LNT
		  level.

		- When detecting the inclusion of a non-existant module M,
		  LNT_DEPEND would emit a series of identical messages:
			lnt_depend: unreadable module "./M.lnt"
			lnt_depend: unreadable module "./M.lnt"
			lnt_depend: unreadable module "./M.lnt"
			etc.
		  At present, LNT_DEPEND emits a unique, more informative
		  message:
			lnt_depend: module "./M0.lnt" includes unreadable
			module "./M.lnt"
-------------------------------------------------------------------------------
VERSION 2014-d "Amsterdam"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1827
Date:		Mon Apr 14 12:36:10 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		com/aldebaran, man/*/aldebaran.*

Nature:		A new version 7.6 of the ALDEBARAN tool was released. To
		perform comparison of LTSs, the former version of ALDEBARAN
		only invoked the BISIMULATOR tool; the new version will now
		invoke BCG_CMP whenever possible, and BISIMULATOR otherwise,
		leading to enhanced performance in most cases. The ALDEBARAN
		manual page was updated accordingly and precisely states
		under which conditions BCG_CMP or BISIMULATOR will be chosen.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1828
Date:		Mon Apr 14 17:04:56 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, bin.*/caesar,
		man/*/caesar.bdd.*, man/*/caesar.*

Nature:		The acronym "BPN" (Basic Petri Nets) used so far to designate
		the input language of CAESAR.BDD was renamed into "NUPN"
		(Nested-Units Petri Nets) because "BPN" was already heavily
		used in the scientific literature (e.g., Backward Petri Net,
		Behavioural Petri Nets, Biochemical Petri Nets, Bounded Petri
		Nets, Business Process Networks, B(PN)2, etc.). The acronym
		BPN was internal to CADP, whereas the new acronym NUPN is
		intended to have a larger audience (it is already used in
		the Model Checking Contest).

		Following this decision, a new version 2.0 of CAESAR.BDD
		was issued, whose input files now have a ".nupn" (rather
		than ".bpn") extension. Similarly, the ``-bpn'' option of
		CAESAR was renamed into ``-nupn'' and now produces files
		with a ".nupn" (rather than ".bpn") extension. The manual
		pages have been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1829
Date:		Tue Apr 15 15:35:46 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		A new option ``-exclusive-places'' has been added to the
		CAESAR.BDD tool. Also, two new synonyms have been added
		for options, namely ``-dead-transitions'' for ``-dead'',
		and ``-concurrent-units'' for ``-unit''. The CAESAR.BDD
		manual page has been updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1830
Date:		Wed Apr 16 18:27:51 CEST 2014
Report:		Frederic Lang (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		LNT2LOTOS now displays warnings when variables declared in
		a ``case'' statement contained in a process definition are
		not used. Such warnings were missing.
-------------------------------------------------------------------------------
BUG FIX
Number:		1831
Date:		Thu Apr 17 12:55:16 CEST 2014
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		For an external infix function, LNT2LOTOS did not generate
		the corresponding infix LOTOS function, thus generating
		incorrect LOTOS code that was rejected by CAESAR/CAESAR.ADT
		with messages of the following form:

		     error during analysis:
		     no solution for operation binding
		     error during analysis:
		     operations cannot bind correctly

		   - operation _==_ used in equation:
		        /= (X, Y) = NOT (X == Y) of BOOL
		     the profile of which is
		        T [13], T [13] -> ?
		     was not declared; some operations exist with the same
		     name but with incompatible profiles:
		     ...
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1832
Date:		Tue Apr 22 17:50:55 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The syntax of the pragma ``!multiple_initial_tokens'' of the
		NUPN format has been modified to introduce a new <nb-tokens>
		attribute. This enables the ``-mcc'' and ``-vlpn'' options of
		CAESAR.BDD to estimate the degree of concurrency in a network
		that is not one-safe.

		Also, various enhancements have been brought to the ``-mcc''
		and ``-vlpn'' options in the framework of the Model Checking
		Contest. For instance, better explanations are produced in
		the particular case of networks having no transition.
-------------------------------------------------------------------------------
BUG FIX
Number:		1833
Date:		Thu Apr 24 16:21:23 CEST 2014
Report:		Monika Heiner (Brandenbourg University of Technology, Cottbus,
		Germany)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		A bug was fixed in the ``-mcc'' and ``-vlpn'' options of
		CAESAR.BDD: the result of the "StronglyConnected" and
		"Connected" properties was incorrect for NUPN networks
		having more than one initial place (which is not the case
		of those generated using CAESAR). This bug has been fixed.
		Also, better diagnostics are now generated for networks that
		are not connected or strongly connected.
-------------------------------------------------------------------------------
BUG FIX
Number:		1834
Date:		Fri Apr 25 17:11:14 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The analysis performed by LNT2LOTOS to detect the "in" or
		"inout" function parameters that are never used (see item
		#1777 above) has been made more precise. Previously, this
		analysis was not done on the original abstract tree, but
		on a derived abstract tree, sometimes leading to false
		positives. The analysis is now done on the original abstract
		tree and gives correct messages.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1835
Date:		Mon Apr 28 13:35:37 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		The results computed by the ``-mcc'' and ``-vlpn'' options of
		CAESAR.BDD have been improved: from now on, the results of
		the "Live" and "Reversible" properties have more often a
		defined value (i.e., False or True) and less often an Unknown
		one. This was done by implementing general theorems about
		structural and behavioural properties of Petri nets.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1836
Date:		Tue Apr 29 14:06:41 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos,
		demos/demo_29/DATA.lnt, demos/demo_32/TYPES_COMMON_GENERIC.lnt

Nature:		From now on, LNT2LOTOS emits warnings when certain variables
		defined in functions are assigned but not used:
		   ** warning at line 43:
		      value stored in variable ``X'' is not used later
		(This change is similar to item #1800 above, but for functions
		instead of processes).

		Some LNT modules on demos 29 and 32 have been modified to
		avoid such new warnings. Basically, the idea is to replace
		free variables in patterns by "any" patterns. For instance,
		if B is of type Buffer and M of type Msg, the following rule:
		   case ...
		      B + M -> return head (B)
		should be replaced with:
		   case ...
		      B + any Msg -> return head (B)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1837
Date:		Wed Apr 30 14:52:47 CEST 2014
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al-10.*,
		demos/*, ext/a2ps/*, ext/emacs/*, ext/jedit/*, man/*,
		src/contributor/rules.tcl, src/eucalyptus/eucalyptus.tcl,
		src/svl/standard

Nature:		With the advent of version 6.0 of the LNT2LOTOS translator,
		it was decided to officially rename "LOTOS NT" into "LNT"
		(as regards the language supported by CADP), while reserving
		the name "LOTOS NT" to the language accepted as input by the
		TRAIAN compiler.

		Many files in the CADP distributions have been updated with
		this renaming. In particular, the title of the reference manual
		(in file doc/*/Champelovier-Clerc-Garavel-et-al-10.*) changed
		into "Reference Manual of the LNT to LOTOS Translator". Also,
		section 1 (Introduction) and Appendix E of this manual have
		been significantly improved.
-------------------------------------------------------------------------------
BUG FIX
Number:		1838
Date:		Wed Apr 30 17:09:25 CEST 2014
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		incl/X_INTEGER.h, incl/X_NATURAL.h

Nature:		The implementation in C of the predefined libraries X_NATURAL
		and X_INTEGER was modified at various places to enable the
		activation of overflow/underflow checks for values of type NAT
		and INT. One can enable such checks by setting the macros
		``ADT_NAT_CHECK'' and ``ADT_INT_CHECK'' (together with other
		macros). Such macros were already present, but various changes
		have been made to make them usable.

		The ``ADT_INVALID_NAT()'' macro has been modified to avoid
		a Gcc warning. Overflow/underflow control have been added
		for the ADT_NA() ... ADT_NF() and ADT_IA() ... ADT_IF()
		constants, and for the ADT_BINNUM_NAT(), ADT_OCTNUM_NAT(),
		ADT_DECNUM_NAT(), ADT_HEXNUM_NAT(), ADT_BINNUM_INT(),
		ADT_OCTNUM_INT(), ADT_DECNUM_INT(), and ADT_HEXNUM_INT()
		functions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1839
Date:		Mon May  5 10:06:59 CEST 2014
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, incl/LNT_V1.h,
		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The LNT pragmas ``!nat_check N'' and ``!int_check N'', which
		trigger overflow/underflow checks for natural and integer
		numbers, have been made operational. Previously, these pragmas
		could be used but had no effect. At present, these pragmas
		are effective, and are active by default, i.e., from now on,
		checks for overflow/underflow are always performed unless they
		are deactivated using ``!nat_check 0'' and ``!int_check  0''.
		It is also required that the value N following the pragma is
		either 0 or 1. Should an overflow/underflow occur, error
		messages of the form
		     natural value 256 out of the range [0 .. 255]
		or
		     integer value -300 out of the range [-128 .. 127]
		are produced. The LNT reference manual has been updated
		accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1840
Date:		Wed May  7 12:36:51 CEST 2014
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_12/maa.t, demos/demo_12/main.c

Nature:		The demo_12 has been enhanced in various ways:
		- Overflow/underflow checks for natural numbers have been
		  activated.
		- An unused constant ``power_0'', which would otherwise have
		  caused an overflow (2^32) has been removed.
		- An incorrect call to strncpy() has been corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1841
Date:		Thu May  8 10:13:44 CEST 2014
Report:		Kevin Corre (INRIA Rennes, France)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		src/open_caesar/executor.c, man/*/executor.*

Nature:		The EXECUTOR tool of OPEN/CAESAR has been enhanced with new
		options ``-hide'' and ``-rename'' (similar to those of the
		GENERATOR tool). The manual page has been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1842
Date:		Fri May  9 12:04:16 CEST 2014
Report:		Ludovic Apvrille (Telecom ParisTech, Sophia-Antipolis, France),
		Marie-Dominique Cabanne (LAAS-CNRS, Toulouse, France),
		Nuno Oliveira (Universidade do Minho, Braga, Portugal), and
		Antonella Santone (Universita del Sannio, Benevento, Italy)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		INSTALLATION_MACOS

Nature:		The installation directives for CADP on Mac OS X 10.6 ("Snow
		Leopard") and 10.7 ("Lion") were incorrect. For these versions
		of Mac OS X, the "scutil" command has no effect when assigning
		a static hostname to the machine, thus causing the following
		error message when Installator was launched:

		   *** the hostname of this machine is defined dynamically
		       and might vary in function of the current IP address
		   ==> please assign a static hostname to this machine
		       according to the explanations given at
		       http://cadp.inria.fr/macOS.html

		or causing the following issue when CADP tools were invoked:
		
		   *007 protection violation:
		        illicit attempt at using ``caesar 7.2'' on machine ...
		        no appropriate license

		The installation directives have been corrected, and now
		mention that Annex E (rather than "scutil") must be applied
		when installing CADP on Mac OS X 10.6 or 10.7.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1843
Date:		Mon May 12 18:38:35 CEST 2014
Author:		Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		HISTORY, doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The LNT reference manual has shortened (from 157 down to 125
		pages) by moving most of its Appendix F (list of changes from
		2O05) to the present HISTORY file. Precisely, item #1457 has
		been developed to describe all the changes in the LNT tools
		between version 14 and version 4K; the former items #1572 and
		#1573 have been merged into one single item #1573; item #1571
		has been renamed into #1572; a new item #1571 has been added,
		which describes all the changes in the LNT tools between
		version 5.0 and version 5.4 included; finally, item #1649
		has been extended. These changes have been proofread by
		Frederic Lang. Appendix F of the reference manual is now
		reduced to a two-page table.
-------------------------------------------------------------------------------
VERSION 2014-e "Amsterdam"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1844
Date:		Wed May 14 11:51:57 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/exp2fc2, src/com/xeuca_fc2info, man/*/exp2fc2.*

Nature:		The Exp2Fc2 shell script, its manual page, and the auxiliary
		``xeuca_fc2info'' were no longer useful (see item #1424 above)
		and have been removed from the CADP release.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1845
Date:		Wed May 14 14:08:38 CEST 2014
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The LNT2LOTOS reference manual has been updated at many places
		to reflect the evolution of the LNT2LOTOS compiler. Among all
		the changes, one can mention:
		- In Section 3.1.1, updated information about the Nat range.
		- In Section 3.1.2, updated information about the Int range.
		- Better explanations for !nat_check and !int_check.
		- New rules about suitable def and use of variables, "in"
		  parameters, "out" parameters, and "inout" parameters.
		- In Annex E, better explanations about real numbers, "with"
		  clauses, predefined functions, and non-exhaustive "case"
		- In E.5, better information about the possibility to redefine
		  LNT base types.
-------------------------------------------------------------------------------
BUG FIX
Number:		1846
Date:		Thu May 15 17:46:50 CEST 2014
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
File:		incl/LNT_V1.h

Nature:		A bug has been fixed in LNT: using the hexadecimal constants
		0xA ... 0xF of type NAT or INT caused a segmentation error
		if the size of natural or integer types was larger than
		16 bits. This bug, which had been introduced in CADP 2014-e,
		has been hotfixed, so that most users will never face it; a
		few other users have been individually notified with a
		proposed patch.
-------------------------------------------------------------------------------
BUG FIX
Number:		1847
Date:		Fri May 16 16:36:04 CEST 2014
Authors:	Hubert Garavel, Frederic Lang, and Wendelin Serwe (INRIA/
		CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The systematic activation of overflow/underflow checking for
		natural and integer types (see item #1839 above) introduced
		the following problem: when the INT type was coded on N bits
		(e.g., using the ``!int_bits N'' pragma), it was impossible
		to write the integer constant -(2^(N-1)) directly in LNT,
		as the compiler first evaluated constant 2^(N-1), which
		caused an overflow, the legal integer values being in the
		range -2^(N-1)...2^(N-1)-1. For instance, with integers
		coded on 8 bits, it was impossible to write -128 in LNT
		as the following error message
		   #402 error in file ``TEST.h'' at line 1007:
		        integer value 128 out of the range [-128 .. 127]
		would occur at run-time.

		This problem has been solved: LNT2LOTOS now accepts integer
		constants of the form -2^(N-1) and generates LOTOS code
		that does not cause a run-time overflow error. A note has
		been added in Section 3.1.2 of the reference manual.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1848
Date:		Mon May 19 10:17:13 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		In the PNML files generated using the ``-pnml'' option of
		CAESAR.BDD, the "toolspecific" line:
		      <toolspecific tool="CADP/caesar.bdd" version="2.0">
		has been replaced by:
		      <toolspecific tool="nupn" version="1.0">

		Also, the CAESAR.BDD manual page has been completed to give
		better explanations regarding option ``-exclusive-places''
		and regarding the role of POSIX signals.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1849
Date:		Mon May 19 17:02:22 CEST 2014
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
File:		incl/X_CHARACTER.h,
		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		From now on, ADT_CHAR is implemented as ``unsigned char''
		rather than simply ``char'', so as to avoid conversion issues.

		Also, the ADT_PRINT_CHAR() printing function for the ADT_CHAR
		type has been modified to better handle unprintable characters
		(e.g., control characters). From now on, such characters are
		displayed in octal (e.g., '\000', '\001', '\002', etc.). The
		single quote and backlash characters are now quoted, i.e.,
		'\'' and '\\', respectively. A note has been added in Section
		3.1.4 of the reference manual.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1850
Date: 		Tue May 20 10:27:14 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		In presence of LNT functions containing several "return"
		statements, the LNT_CHECK script sometimes issued useless
		warnings of the form:

		warning: function "CASE__..." contains a non-exhaustive case
		or
		warning: function "WHILE__..." contains a non-exhaustive case

		The LOTOS code generated by LNT2LOTOS (namely, algebraic
		equations) has been modified to avoid such warnings.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1851
Date:		Tue May 20 13:42:41 CEST 2014
Author:		Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		doc/*/Champelovier-Clerc-Garavel-et-al-10.*,
		doc/*/Garavel-92-a.*

Nature:		The OPEN/CAESAR Reference Manual and the Reference Manual of
		the LNT2LOTOS translator have been enriched with active links
		that enable one to quickly navigate through the PDF document.
		These links are written in grey, whereas the normal text is
		written in black.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1852
Date:		Thu May 22 16:00:17 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		LNT2LOTOS now checks that functions do not contain any
		infinite "loop" statement, i.e., a "loop" statement that
		does neither contain a "return" statement, nor a "break"
		statement for this loop or an enclosing loop. Such infinite
		"loop" statements are allowed in processes but forbidden in
		functions, as functions should always return. In such case,
		LNT2LOTOS now stops with an error message of the form:
			loop L is infinite
		where L is the label of the loop. Section 6.4.8 and Annex B
		of the reference manual have been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1853
Date:		Fri May 23 14:19:13 CEST 2014
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, bin.*/lpp,
		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The constraint that a module named M must be contained in a
		file named "M.lnt" has been slightly relaxed to ease rapid
		prototyping and debugging. From now on, a module named "TEST"
		can be stored in any file "M.lnt" extension. If M is not
		equal to "TEST.lnt", a warning (rather than a fatal error)
		is emitted:
			the module defined in this file is named ``TEST'',
			whereas it should be named ``M''
		Also, LPP and LNT2LOTOS now check that a module name only
		contains letters, digits, and underscore characters. The
		reference manual has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1854
Date:		Mon May 26 16:36:01 CEST 2014
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
File:		com/lnt.open

Nature:		By default, the LNT.OPEN shell script has been made less
		verbose. For each module M.lnt processed, LNT.OPEN now
		displays one single line:
		   lnt.open: translating ``M.lnt'' to ``/tmp.../M.lotos'' ...
		rather than:
		   lnt.open: preprocessing ``./M.lnt'' to ``/tmp.../M.lnt''
		   lpp: translating ``./M.lnt'' to ``/tmp.../M.lnt''
		   lnt.open: translating ``/tmp.../M.lnt'' to LOTOS ...
		   lnt2lotos: syntax analysis of ``/tmp.../M.lnt''
		   lnt2lotos: semantic analysis of ``/tmp.../M.lnt''
		   lnt2lotos: translation of ``/tmp.../M.lnt''
		   lnt2lotos: generation of ``/tmp.../M.lotos''
		   lnt2lotos: generation of ``/tmp.../M.f''
		   lnt2lotos: generation of ``/tmp.../M.t''
		   lnt2lotos: generation of ``/tmp.../M.sig''

		Concretely, LNT.OPEN no longer invokes LNT and LNT2LOTOS in
		verbose mode, unless it is called with its ``-debug'' option
		(which is reserved to CADP developers). Similarly, CAESAR
		and CAESAR.ADT are now invoked with their ``-silent'' option
		unless LNT.OPEN itself is called with its ``-debug'' option.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1855
Date:		Tue May 27 22:30:19 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		demo_01/demo.svl, demo_17/demos.svl, demo_18/LOTOS/demo.svl,
		demo_20/demo.svl, demo_25/demo.svl, demo_27/HAVi_asyn.svl,
		demo_27/HAVi_sync.svl, demo_33/demo.svl, demo_36/demo.svl,
		demo_37/demo.svl, demo_38/demo.svl

Nature:		In all SVL files of demo examples involving compositional
		verification, occurrences of the $DEFAULT_LOTOS_FILE variable
		(which is now deprecated) have been replaced with occurrences
		of the $DEFAULT_PROCESS_FILE variable.
-------------------------------------------------------------------------------
BUG FIX
Number:		1856
Date:		Wed May 28 11:24:12 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		LNT2LOTOS had two bugs that occurred when a local variable
		X declared in a ``case E in ...'' statement shadowed an outer
		variable or (``in'' or ``inout'') parameter also named X.

		- In functions only, the generated LOTOS code was sometimes
		  lacking equations, or even entire operations, leading
		  CAESAR.ADT and CAESAR to report errors such as: operation
		  not declared, functions or processes containing a non-
		  exhaustive case, etc. In certain cases, the generated code
		  could fall into infinite recursive calls.

		- In both functions and processes, if the outermost variable
		  X was used in expression E for the first time, LNT2LOTOS
		  issued incorrect warnings of the form:
		     value stored in variable ``X'' is not used later
		  or
		     value of parameter X is unused
		These bugs were fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1857
Date:		Thu May 29 11:03:56 CEST 2014
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
File:		com/lnt.open

Nature:		The implementation of the ``-root'' option of LNT.OPEN has
		been enhanced. The changes done are upward compatible and
		bring two main advantages:

		- It is now possible to invoke LNT.OPEN with ``-root P''
		  on a principal module M.lnt even if processus P is not
		  defined in M.lnt but in another module transitively used
		  by M.lnt. Previously, LNT2LOTOS would stop with an error
		  message in such a case.

		- This avoids the emission of warnings, which were previously
		  emitted for all processes Pi unreachable from P:
			caesar.open: calling ``caesar -silent -open M''
			#104 warning during restriction:
			     detection of unreachable processes
			In specification S [3]
			    - process MAIN [197] is never reached
			    - process P1 [286] is never reached
			    - process P2 [723] is never reached
			    ...
-------------------------------------------------------------------------------
BUG FIX
Number:		1858
Date:		Thu May 29 13:53:52 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		LNT2LOTOS sometimes issued incorrect warnings such as:
		   value stored in variable ``X'' is not used later
		when handling a ``case'' branch of the form
		   P (X) where C (X)
		with P a pattern and C a Boolean guard. Such warnings were
		incorrect, as the value assigned to X in P (X) is immediately
		used in C (X). This bug was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1859
Date:		Fri May 30 11:48:43 CEST 2014
Report:		Frederic Lang (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		LNT2LOTOS could generate incorrect LOTOS code for expressions
		of the form "V of T", where T is a range or predicate type.
		For instance, the following LNT code
			type R is
			   range 0..1 of Nat
			   with "==", "!="
			end type
			...
			case ... in
			   var no:R in
			      ... where no == 1 of R -> ...
			end case
		generated LOTOS code that was rejected by CAESAR.ADT:
			#079 error during analysis:
			     wrong sort for an ``of'' coercion
			#085 error during analysis:
			     operations cannot bind correctly
			     quit
			In type COMPUTE__CASE__BRANCH__1__P__46 [339]
			   - conversion ``of R [14]'' is applied to value:
			        1
			     whereas the sort of this value is:
		        INT [X_INTEGER:2] | NAT [X_NATURAL:3]
		This bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1860
Date:		Fri May 30 16:30:27 CEST 2014
Report:		Alexander Graf-Brill and Julian Maurer (Saarland University,
		Germany)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_18/*, demos/demo_18/LOTOS/*

Nature:		The demo_18 example (Transit Node message router) has been
		enhanced: file TRANSIT_NODE.lib was renamed into TYPES.lib;
		in this file, a ``(* !list *)'' pragma was added for sorts
		PortSet and EnvList; the unused value Wrong_Msg has been
		commented out in type ERROR_CODE; in file transit_node.lotos,
		the unused gates adroute and adport have been removed; the
		two processes Data_Generator and Port_Generator have been
		renamed into DataGenerator and PortGenerator, respectively;
		the function _includes_ has been renamed into _contains_,
		which is less ambiguous.

		Then, all LOTOS files have been translated into equivalent
		LNT ones and a new SVL file was produced. All LOTOS files
		have been preserved in a newly-created LOTOS directory.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1861
Date:		Thu Jun  5 15:53:33 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		From now on, LNT2LOTOS emits a warning if a process has an
		"inout" parameter that is never assigned in the process. The
		reference manual has been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1862
Date:		Fri Jun  6 15:09:27 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		In the LOTOS code generated by LNT2LOTOS for communications
		having a Boolean guard, this guard was evaluated after the
		predicate added by LNT2LOTOS to check that the data values
		exchanged on a gate obey the typing constraints stated by
		the gate's channel. Because the guard was evaluated after
		(rather than before) the predicate, certain values could be
		evaluated although they should not have been, causing an
		exception, e.g., as in:
			var X:NAT in
			   X := any NAT;
			   G (1/X) where X != 0;
			   ...
		The predicate would be called with parameter 1/X before
		checking that X was non null, thus causing a division by
		zero error. This bug has been fixed by evaluating the guard
		before the predicate.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1863
Date:		Sat Jun  7 19:21:47 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/X_CHARACTER.h, incl/X_STRING.h

Nature:		Following the recent changes regarding ADT_PRINT_NAT() (see
		item #1849 above), the ADT_PRINT_STRING() function for LNT
		strings has been modified to handle unprintable characters
		as well. From now on, such characters are displayed in octal
		(e.g., '\000', '\001', '\002', etc.). The double quotes and
		backlash characters are now quoted, i.e., '\"' and '\\',
 		respectively. A note has been added in Section 3.1.5 of the
		reference manual.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1864
Date:		Wed Jun 11 10:45:00 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, man/*/svl.*

Nature:		In SVL scripts, the file names (enclosed between double
		quotes) had to be located in the current directory; they
		could not contain any '/' character, otherwise the SVL
		compiler generated incorrect shell scripts, the execution
		of which failed. From now on, this restriction has been
		relaxed and SVL can handle files contained in multiple
		directories.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1865
Date:		Wed Jun 11 13:09:33 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.*/lnt2lotos,  doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		From now on, LNT2LOTOS emits a warning if a function has a
		"inout" parameter that is never assigned in the function.
		This change is similar to the one done for LNT processes
		(see item #1861 above). The reference manual has been
		updated accordingly.
-------------------------------------------------------------------------------
VERSION 2014-f "Amsterdam"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1866
Date:		Fri Jun 13 10:22:25 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, man/*/svl.*

Nature:		SVL now accepts single-line comments in the LNT style, i.e.,
		comments starting with the characters "--" and ending at the
		end of the line.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1867
Date:		Fri Jun 13 11:35:01 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, man/*/svl.*

Nature:		In SVL, the operators "hide", "rename", "cut", and "prio" can
		now be (optionally) closed using the "end hide", "end rename",
		"end cut", and "end prio" keywords, respectively, in the same
		way as in LNT.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1868
Date:		Mon Jun 16 14:28:49 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.*/bcg_cmp

Nature:		An empty line has been deleted before the verdict (TRUE or
		FALSE) of the comparison of two BCG graphs produced by
		BCG_CMP. From now on, the output of BCG_CMP will display as:
			$ bcg_cmp "1.bcg" "2.bcg"
			TRUE
		instead of:
			$ bcg_cmp "1.bcg" "2.bcg

			TRUE
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1869
Date:		Mon Jun 16 14:43:14 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, src/svl/standard

Nature:		Two warning messages produced by SVL:
		     generation of "<file>" is necessary
		     generation of process <process> of <file> is necessary
		were obscure and have been replaced by clearer messages:
		     inserting "generation of" before "<file>"
		     inserting "generation of" before "<file>":"<process>"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1870
Date:		Mon Jun 16 16:30:29 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, man/*/svl.*

Nature:		SVL now accepts "hide" and "cut" behaviours in which gates are
		typed with channel identifiers, following the LNT conventions.
		For instance, the following behaviour:
   		     hide ra:RaChannel, rq:RqChannel in ... end hide
		is now legal in SVL and equivalent to:
		     hide ra, rq in ... end hide
		(meaning that the channel information is ignored by SVL).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1871
Date:		Thu Jun 26 12:39:50 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		In the output produced by the ``-mcc'' and ``-vlpn'' options
		of Caesar.bdd, the macro \IsModelEventGraph has been renamed
		into \IsModelMarkedGraph, according to the new conventions of
		the Model Checking Contest.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1872
Date:		Thu Jun 26 14:46:53 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		lib/LNT_V1.lib, incl/LNT_V1.h, incl/X_CHARACTER.h,
		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The LNT library of predefined functions has been extended with
		eight new operations for the character type (IsLower, IsUpper,
		IsAlpha, IsAlnum, IsDigit, IsXDigit, ToLower, and ToUpper).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1873
Date:		Fri Jun 27 12:32:32 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		demos/demo_18/demo.svl, demos/demo_28/demo.svl,
		demos/demo_29/demo.svl, demos/demo_30/demo.svl,
		demos/demo_32/demo.svl, demos/demo_35/demo.svl

Nature:		The SVL scripts of all the CADP demos based on LNT have been
		ugraded to be in the LNT style (rather than the LOTOS style):
		- LOTOS parallel composition operators have been replaced with
		  LNT "par" operators.
		- Keywords "end hide" and "end rename" have been added.
		- Channel names have been added to the "hide" operators.
		- LNT comments (starting with "--") are used instead of LOTOS
		  comments (enclosed between "(*" and "*)").
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1874
Date:		Sat Jun 28 14:27:19 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_14/pots.lotos, demos/demo_14/=READ_ME.txt,
		demos/demo_15/pots.lotos, demos/demo_15/=READ_ME.txt

Nature:		The LOTOS specification of the "Plain Old Telephony System"
		used in the CADP demos 14 and 15 has been checked, simplified,
		and corrected:
		- All useless operations "pred", "succ", "first", and "last"
		  have been removed.
		- Eight useless operations "Subsc", "BSubsc", "Act", "Tone",
                  "set_Subsc", "set_BSubsc", "set_Act", and "set_Tone" have
		  been removed.
		- An incorrect equation in the definition of "SetBSubsc" has
		  been fixed (this problem was double checked and confirmed by
		  Frederic Lang). This change slightly increases the size of
		  the corresponding LTS.
		- Some algebraic simplifications have been applied, e.g.,
		  replacing ``not (x eq y)'' with ``x ne y''.
		- Some declarations of operations and algebraic equations have
		  been permuted to follow a more logical ordering.
		- Finally, code indentation and comments have been revised.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1875
Date:		Mon Jun 30 09:16:48 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.adt, bin.*/caesar, bin.*/caesar.old,
		man/*/caesar.adt.*, man/*/caesar.*

Nature:		The static semantics of LOTOS, as implemented in the CAESAR
		and CAESAR.ADT compilers, has been slightly modified to accept
		certain LOTOS programs generated from LNT specifications by the
		LNT2LOTOS translator. Precisely, the following LOTOS program:

		   specification S (X:S1) : exit (S2)
		      (* global definitions: empty *)
		   behaviour
		      (* main behaviour *)
		      ...
		   where
		      (* local definitions *)
		   type T is
		      sorts S1, S2
		         ...
		      endtype
		   endspec

		is illegal according to the official LOTOS semantics defined
		in ISO standard 8807, because sorts S1 and S2 used on the
		first line are not visible in this scope: these sorts should
		have been declared in the "global definitions" section rather
		than the "local definitions" section.

		CAESAR and CAESAR.ADT now implement a relaxed semantics, defined
		as follows: if the "global definitions" section is empty, then
		all sorts defined in the "local definitions" are visible at the
		top-level specification block; if the "global definitions" is
		not empty, then the official semantics applies in order to
		preserve the user's intentions. Therefore, both semantics only
		only differ when the "global definitions" section is empty and
		when the specification has value parameters and/or exit results,
		in which case the modified semantics accepts LOTOS programs that
		are rejected by the official one. Notice that LNT2LOTOS always
		generates an empty "global definitions" section.

		The ``-iso'' option of CAESAR and CAESAR.ADT implements the
		standard semantics. The manual pages of CAESAR and CAESAR.ADT
		have been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1876
Date:		Tue Jul  1 14:24:33 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/X_CHARACTER, incl/bcg_types.h

Nature:		The first part of the changes described in item #1849 above
		has been undone: type ADT_CHAR is again  implemented as
		``char'' rather than ``unsigned char''.

		From now on, type BCG_TYPE_BOOLEAN will be implemented as
		``unsigned char'' rather than ``char'', so that its definition
		becomes the same as the definitions of the related types
		ADT_BOOL, bcg_type_boolean, and CAESAR_TYPE_BOOLEAN.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1877
Date:		Tue Jul  1 18:51:56 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libBCG_IO.a, bin.*/bcg_io, man/*/bcg_write.*

Nature:		The so-called "label parsing" algorithm implemented in the
		BCG_WRITE programming interface has been extended to recognize
		character notations (e.g., 'a', '\012', '\x0A', '\n', etc.)
		and store in the BCG file the corresponding values as values
		of the character type (previously, these values were stored as
		generic strings). The BCG_WRITE manual page has been updated to
		describe the conventions for parsing character values.
-------------------------------------------------------------------------------
BUG FIX
Number:		1878
Date:		Wed Jul  2 15:50:15 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		A bug was fixed in LNT2LOTOS, which would emit incorrect
		warnings of the following form:
		   value stored in variable ``X'' is not used later
		each time a variable X was assigned immediately before an
		"end hide" keyword, and even if X was used after this point,
		e.g.:
		   hide G:C in
		      ...
		      X := 0
		   end hide ;
		   ...
		   Y := X + 1
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1879
Date:		Thu Jul  3 17:03:12 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_14/pots.lnt, demos/demo_14/demo.svl,
		demos/demo_14/LOTOS, demos/demo_14/=READ_ME.txt,
		demos/demo_15/*, demos/archive/demo_15.old,
		demos/=READ_ME.txt

Nature:		The LOTOS specification of the Plain Old Telephony System
		(POTS) has been rewritten into LNT, leading to a more concise
		and more elegant specification.

		Also, demo_14 (verification of the POTS using equivalence
		checking) and demo_15 (verification of the POTS using model
		checking) have been merged into demo_14. The former demo_15
		has been archived in demos/archive/demo_15.old and the new
		directory of demo_15 is left temporarily empty.
-------------------------------------------------------------------------------
BUG FIX
Number:		1880
Date:		Fri Jul  4 12:38:35 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/bcg_expand

Nature:		A bug was fixed in the BCG_EXPAND tool, which did not properly
		detect the escape sequences \" and \\. This bug, which had so
		far been invisible, became apparent after introducing values
		of the character type in BCG files (see item #1877 above).
-------------------------------------------------------------------------------
BUG FIX
Number:		1881
Date:		Mon Jul  7 09:42:13 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		In the LOTOS code generated by LNT2LOTOS when translating an
		LNT rendezvous, the predicate related to pattern matching is
		now checked before the predicate following the "where" keyword
		in the LNT source code. Previously, these two predicates were
		evaluated in the opposite order, which could sometimes raise
		run-time exceptions of the form:
		   error in file ``.h'':
		   unexpected case (not defined by the equations)
		   in operation GET__1 ...
		   implemented by function CAESAR_ADT_FUNC_GET__1__2 ...
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1882
Date:		Tue Jul  8 18:25:47 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/adt_boolean.h, incl/adt_natural.h, incl/adt_integer.h,
		incl/adt_real.h, incl/adt_character.h, incl/adt_string.h,
		incl/X_BOOLEAN.h, incl/X_NATURAL.h, incl/X_INTEGER.h,
		incl/X_REAL.h, incl/X_CHARACTER.h, incl/X_STRING.h,
		incl/bcg_predefined_declarations.h, incl/bcg_write_1.h,
		incl/bcg_read_1.h, incl/xtl_standard.h,
		bin.*/libBCG.a, bin.*/libBCG_IO.a

Nature:		Six include files ("adt_boolean.h", "adt_natural.h",
		"adt_integer.h", "adt_character.h", and "adt_real.h") have
		been introduced in CADP. These files gather in the same place
		predefined type definitions that were previously disseminated
		across the LOTOS/LNT, BCG, and XTL libraries. This change will
		enable to set a uniform treatment of predefined types across
		the various CADP tools.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1883
Date:		Wed Jul  9 14:57:39 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/adt_character.h, bin.*/libBCG_IO.a, bin.*/bcg_io

Nature:		The definition of the bcg_character_print() macro has been
		modified to become identical to the ADT_PRINT_CHAR() macro
		of the LOTOS/LNT standard library. This way, non-printable
		character values contained in a BCG file will now be printed
		using the same conventions as for the character values of
		LNT specifications (see second part of item #1849 above).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1884
Date:		Thu Jul 10 18:32:57 CEST 2014
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		incl/adt_string.h

Nature:		The ADT_PRINT_STRING() macro has been enhanced in two ways:

		- The strings stored in an OPEN/CAESAR table_1 are now
		  printed in the same way as ``ordinary'' strings, meaning
		  that the double quote and backslash characters are preceded
		  by a backslash, and that non printable characters are
		  printed using three-digit octal notation (see item #1863
		  above for details).

		- The NULL string pointer is now printed as ``NULL'' rather
		  than ``"null"'', which suppresses the ambiguity formerly
		  existing between the NULL pointer and the string "null".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1885
Date:		Fri Jul 11 18:00:20 CEST 2014
Report:		Hugues Evrard (INRIA/CONVECS)
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/bcg_graph, man/*/bcg_graph.l

Nature:		BCG_GRAPH was extended to handle the degenerate cases where:
		- the label file contains no label
		- the label number specified after the -labels option is zero
		- the bag size specified after the -bag option is zero
		- the fifo size specified after the -fifo option is zero.

		messages. They are now accepted and generate a BCG graph
		with a single state and no transitions.

		The CAESAR_GRAPH manual page has been updated accordingly.
		Also, the structure of this manual page was clarified by
		adding three new sections devoted to chaos automata, bag
		buffers, and fifo buffers.
-------------------------------------------------------------------------------
VERSION 2014-g "Amsterdam"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1886
Date:		Tue Jul 15 17:09:46 CEST 2014
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		doc/=READ_ME

Nature:		The list of CADP-related papers, which is given in file
		doc/=READ_ME and displayed on the web page:
		   http://cadp.inria.fr/vasy/publications/cadp.html
		has been reorganized and made more concise. Indeed, this
		list had been growing and its length could be confusing for
		new users:
		- Both sections about CAESAR.ADT and CAESAR have been merged
		  into a single section devoted to LOTOS compilers.
		- The section about LOTOS NT has been renamed into LNT and
		  moved to the 2nd position in the list.
		- Papers about case-studies and applications have been replaced
		  by hyperlinks to the database of CADP case studies.
		- The section containing papers about LOTOS has been marked as
		  outdated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1887
Date:		Tue Jul 15 17:10:02 CEST 2014
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The LNT language has been enhanced with a ``!representedby''
		pragma for processes, leading to version 6.1 of the LNT2LOTOS
		translator. A new section 7.3.2 describing this pragma was
		added to the LNT reference manual, together with another
		section 7.3.4.

		Also, section 6.4 about the ``!representedby'' pragma for
		function has been improved. The constraints for this pragma
		have been moved from section 6.4.3 to section 6.4.4, and they
		have been renumbered:
		- Constraints (FD5)-(FD10) are now named (FPG1)-(FPG6).
		- A new constraint (FPG7) has been added.
		- Constraints (FD11)-(FD13) are now named (FD5)-(FD7).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1888
Date:		Thu Jul 17 14:57:24 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		doc/=READ_ME.txt, doc/biblio.bib, doc/*/Evrard-Lang-13.*,
		doc/*/Lang-Mateescu-12.*, doc/*/Lang-Mateescu-13.*

Nature:		Three new papers have been added to the CADP toolbox.
-------------------------------------------------------------------------------
BUG FIX
Number:		1889
Date:		Wed Jul 23 16:15:39 CEST 2014
Report:		Pedro d'Argenio (University of Cordoba, Argentina)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		INSTALLATION_2, man/*/caesar.l, man/*/caesar.adt.l

Nature:		The CAESAR.ADT and CAESAR manual pages, and the INSTALLATION_2
		file have been corrected to state that, when the environment
		variable $CADP_LANGUAGE is not set, its default value is
		"english" (and not "french").
-------------------------------------------------------------------------------
BUG FIX
Number:		1890
Date:		Sun Jul 27 20:16:14 CEST 2014
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.adt, bin.*/caesar, bin.*/caesar.old

Nature:		A minor bug was fixed in CAESAR and CAESAR.ADT: in the C code
		produced by these compilers, the comments of the form:
		   /*** generated by ... with options ... ***/
		did not properly display the selected options -silent/-verbose
		and -french/-english (together with the environment variable
		$CADP_LANGUAGE).
-------------------------------------------------------------------------------
BUG FIX
Number:		1891
Date:		Mon Jul 28 06:22:02 CEST 2014
Report:		Pedro d'Argenio (University of Cordoba, Argentina)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		incl/adt_string.h

Nature:		Function bcg_read_string() defined in file ``adt_string.h''
		has been modified to avoid warnings of the following form:

		     warning: incompatible pointer types passing
		     'bcg1_type_string *' (aka 'char (*)[...]') to parameter
		     of type 'char *' [-Wincompatible-pointer-types]
		     bcg1_string_read ((BCG_READ_FILE_STACK[BCG_READ_TOP]),
		     &(bcg1_return.bcg1_field_1));
		     ^~~~~~~~~~~~~~~~~~~~~~~~~~~

		emitted by the CLANG compiler on Mac OS X. This bug, which had
		been introduced in CADP 2014-g, was hotfixed on August 7, 2014
		in CADP 2014-g.
-------------------------------------------------------------------------------
BUG FIX
Number:		1892
Date:		Tue Jul 29 13:45:10 CEST 2014
Report:		Pedro d'Argenio (University of Cordoba, Argentina),
		Pascal Poizat (LIP6, Paris, France)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		src/com/cadp_postscript

Nature:		The cadp_postscript shell script has been modified to avoid
		an issue occuring on Mac OS X 10.8 "Mountain Lion" and higher.
		Due to this bug, displaying a PostScript file produced by
		BCG_DRAW or BCG_EDIT would fail: the display window would not
		open, and an error window ("Preview: converting PS failed")
		would sometimes appear. This problem has been hotfixed on
		August 7, 2014 in CADP 2014-g.
-------------------------------------------------------------------------------
VERSION 2014-h "Amsterdam"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1893
Date: 		Thu Aug 28 16:40:22 CEST 2014	
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		man/*/aldebaran.*	

Nature:		The manual page for ALDEBARAN has been updated and shortened
		by removing all information specific to ALDEBARAN version 6.6
		that is no longer relevant to ALDEBARAN version 7. Namely,
		the following information has been removed:
		- description of the obsolete options ``-bddsize'', ``-old'',
		  and ``-labels''
		- description of the obsolete options ``-bdd'', ``-fly'',
		  and ``-std''
		- description of the obsolete options ``-dcla'', ``-dequ'',
		  and ``-dord'' related to the delay equivalence
		- all restrictions specific to version 6.6
		- the table that listed the available combinations of options
		  in version 6.6
		- the former section entitled "FORMAT FOR NETWORKS OF
		  COMMUNICATING LTS" describing the restricted EXP format
		  used by ALDEBARAN 6.6, because ALDEBARAN 7 now supports the
		  full EXP format
		- the former section entitled "BCG FORMAT FOR LTS", which
		  duplicated the BCG manual page
		- the former section entitled "SEQUENCE FORMAT FOR DIAGNOSTIC
		  SEQUENCES".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1894
Date:		Tue Sep  2 10:00:43 CEST 2014		
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/tgv.a, man/*/tgv.*

Nature:		The TGV tool has been simplified in several respects:

		- The ``-verif'' option no longer generates two different
		  graphs (namely, the test case and another file having the
		  fixed name ``tgv_verif.aut''), but generates now a single
		  file containing a modified test case. The main effect of
		  this option is to change the way TGV encodes acceptance
		  states.

		- The ``-h'' and ``-help'' options, and the display of
		  available options in case of command-line errors have been
		  removed, as they duplicated the TGV manual page, and required
		  extra effort to be maintained.

		- TGV now writes its messages on standard output rather than
		  standard error, in the same way as other CADP tools do.

		The TGV manual page has been updated accordingly and enhanced
		in several respects: it now describes options ``-parse'',
		``-unparse'', ``-random'', and ``-randomseed'' and better
		documents option ``-label''.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1895
Date: 		Wed Sep  3 10:06:07 CEST 2014
Report:		Felix Freiberger (Saarland University, Germany) and
		Holger Hermanns (Saarland University, Germany)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		man/*/aldebaran.*, man/*/aut.*

Nature:		The ALDEBARAN manual page was shortened by removing its former
		section entitled "ALDEBARAN FORMAT FOR LTS". A new manual page
		entirely devoted to the AUT format has been written.

		Since the late 80s, the AUT format has been loosely defined
		for nearly 25 years, using a very short description. The new
		manual page addresses this issue by giving a detailed, precise
		specification of the AUT format.

		Also, so far, transition labels in the AUT format (which are
		enclosed between double quotes) could not themselves contain
		double quotes. Version 2014 of the AUT format removes this
		restriction and generalizes the previous AUT format by enabling
		double quotes to be present in labels, e.g.,
		   (0, "PRINT !"Hello, world!"", 1)

		Such a generalization is useful for languages, such as LNT and
		PseuCo (defined at Saarland University), that can manipulate
		character-string values. The change is upward compatible, in
		the sense that formerly valid AUT files are still valid
		according to version 2014 of the AUT format.

		Notice that double quotes can be escaped (i.e., \") but only
		if they occur within string values contained in the label.
		Said differently, the new AUT format enables one to use only
		one level of escape, rather than two. For instance, labels
		should have the form:
		   (0, "PRINT !"Look at \"this\""", 1)
		rather than
		   (0, "PRINT !\"Look at \\\"this\\\"\"", 1)
		The price to pay for such simplicity and convenience is the
		introduction of shift-reduce conflicts in the AUT grammar,
		but the manual page indicates how such issue can be solved
		easily.

		The AUT manual page has been proof-checked by Felix Freiberger
		and Holger Hermanns (Saarland University, Germany), and by
		Frederic Lang and Wendelin Serwe (INRIA/CONVECS). It was used
		to introduce an import/export functionality for the AUT format
		in the PseuCo web site. It was also used to enhance BCG_IO so
		as to implement version 2014 of the AUT format (the enhanced
		version of BCG_IO is not shipped with CADP 2014-i but will be
		available in a next release).
-------------------------------------------------------------------------------
BUG FIX
Number:		1896
Date:		Mon Sep 15 09:03:59 CEST 2014
Report:		Xiaoxiao Yang (RWTH Aachen, Germany)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/bcg_cmp

Nature:		In some cases, BCG_CMP tried to convert the diagnostic of a
		comparison into the SEQUENCE format, even though the diagnostic
		was neither a sequence nor a set of sequences. The following
		error message was issued:
		     bcg_io: cannot translate to SEQUENCE format
		     (state ... has several successors)
		     bcg_dynamic: dynamic program error
		This bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1897
Date: 		Mon Sep 15 17:12:32 CEST 2014	
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/tgv.a

Nature:		The TGV tool has been made faster by exploiting the fact that
		the test purpose is deterministic and complete, which enables
		one to stop exploring the transitions of the test purpose as
		soon as a matching one is found. Due to this algorithmic
		short circuit, TGV was found to be 5% faster on the EnergyBus
		example (Saarland University) using a large test purpose.
-------------------------------------------------------------------------------
BUG FIX
Number:		1898
Date:		Tue Sep 16 15:08:19 CEST 2014
Report:		Raquel Oliveira (LIG, Grenoble, France) and Xiaoxiao Yang
		(RWTH Aachen, Germany)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/bcg_cmp

Nature:		The diagnostics generated by BCG_CMP were sometimes irrelevant:
		they contained correct information, but they failed to explain
		why the two graphs being compared are not equivalent.

		Therefore, the diagnostics generation algorithm of BCG_CMP has
		been corrected to produce relevant diagnostics. This change
		has led to a new version 1.1 of BCG_CMP.

		Notice that the diagnostics generated by BCG_CMP version 1.1
	 	may be different from the diagnostics generated by the earlier
		version 1.0 even if they were relevant.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1899	
Date: 		Wed Sep 17 11:51:08 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c, bin.*/projector.a, src/svl/standard,
		man/*/projector.*

Nature:		To prepare further changes in the rules for label parsing,
		the special prefix that PROJECTOR uses for marking the labels
		of transitions that cannot fire because they are blocked by
		interface constraints, has been changed from ":FAIL:" to
		"fail:". This led to version 3.1 of the PROJECTOR tool. The
		EXP2C and SVL tools have been modified accordingly. Such
		changes should be transparent to most users of CADP.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1900
Date: 		Thu Sep 18 16:46:25 CEST 2014
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/tgv.a

Nature:		All former versions of TGV had their own parser for reading
		AUT files and their own routines for writing AUT files. Such
		parser and routines had various limitations (for instance,
		labels with more than 1024 characters were not handled), and
		they did not implement the new version 2014 of the AUT format
		(see item #1895 above).

		Such legacy parser and routines have been removed from TGV,
		leading to version 1.6 of TGV. From now on, TGV natively reads
		and writes only BCG files. To read or write AUT files, TGV 1.6
		invokes BCG_IO, which will automatically convert AUT files
		to BCG, and vice versa.

		Such implicit conversions using BCG_IO are fully transparent
		to TGV users, but enable labels larger than 1024 characters
		to be handled. Moreover, they will bring support for version
		2014 of the AUT format in TGV as soon as BCG_IO will provide
		such support.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1901
Date: 		Tue Sep 23 19:07:14 CEST 2014	
Authors:	Hubert Garavel, Frederic Lang, Wendelin Serwe (INRIA/CONVECS)
Files:		doc/*/Garavel-Mateescu-Serwe-12.*,
		doc/*/Garavel-Lang-Mateescu-Serwe-13.*,
		doc/*/Kriouile-Serwe-13.*, doc/*/Mateescu-Serwe-13.*,
		doc/*/Lantreibecq-Serwe-14.*, doc/*/Lantreibecq-Serwe-14.*,
		doc/*/=READ_ME

Nature:		Six scientific papers about CADP have been added to the CADP
		distribution and the CADP web site.
-------------------------------------------------------------------------------
BUG FIX
Number:		1902
Date: 		Wed Sep 24 14:43:58 CEST 2014
Report:		Wendelin Serwe (INRIA/CONVECS)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/tgv.a, bin.*/libbcg_info.a

Nature:		The TGV tool accepts test purposes written either in the AUT
		format or in the BCG format. In the case of the AUT format,
		TGV would check whether the test purpose was deterministic;
		in the case of the BCG format, no check was done.

		With the advent of TGV 1.6, the legacy code for checking if
		AUT files are deterministic has been removed from TGV and
		replaced by a call to the routine of BCG_INFO that performs
		the same check. From now on, TGV checks determinism for both
		AUT and BCG files, and also produces an explanation if the
		test purpose is not deterministic.
-------------------------------------------------------------------------------
VERSION 2014-i "Amsterdam"
-------------------------------------------------------------------------------
BUG FIX
Number:		1903
Date: 		Mon Oct  6 10:46:26 CEST 2014
Report:		Radu Mateescu (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/bcg_aldebaran_declarations.h

Nature:		The definition of the bcg_aldebaran_gate_print() macro
		contained an extra final ";" that would make prevent certain
		XTL programs from compiling properly. This has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1904
Date:		Tue Oct  7 16:29:16 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		src/svl/standard

Nature:		SVL error messages of the following form:
		     strong reduction using method std with bcg_min failed
		have been simplified into:
		     strong reduction with bcg_min failed
		bcause reduction methods (such as "std") were specific to
		ALDEBARAN 6.6, which is no longer part of CADP.
-------------------------------------------------------------------------------
BUG FIX
Number:		1905
Date: 		Thu Oct  9 11:42:04 CEST 2014
Author:		Hugues Evrard (INRIA/CONVECS)
Files:		ext/emacs/READ_ME, ext/emacs/lnt.el, ext/emacs/lnt-mode.el,
		ext/emacs/lotosnt-mode.el

Nature:		Two issues have been fixed in the Emacs configuration file
		for the LNT language:

		- The configuration file "lnt.el" was not correctly named and
		  has been renamed into "lnt-mode.el". The symbolic link
		  "lotosnt-mode.el" was updated accordingly.

		- The syntax highlighting for LNT assignments "A := B" was
		  incorrect, because the right-hand side B was colored as a
		  type (or channel) identifier. This issue has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1906
Date:		Fri Oct 10 11:06:50 CEST 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl.*

Nature:		The "verify" statement of SVL now enables an optional "with"
		clause to specify which CADP model checker tool should be
		used. For instance, one can now write:
		     verify "prop.mcl" with evaluator in "model.lnt"

		The possible values after the "with" keyword are "evaluator",
		"evaluator3" (both denoting version 3 of the EVALUATOR tool),
		and "evaluator4" (denoting version 4 of EVALUATOR).

		If the "with" clause is absent, then the tool is determined
		by the new shell variable "$DEFAULT_VERIFY_TOOL", which is
		set to "evaluator" by default.

		Consequently, the following two shell variables have been
		added to SVL:

		- "$EVALUATOR4_OPTIONS" allows the user to specify options
		  for version 4 of EVALUATOR.

		- "$EVALUATOR4_EXECUTABLE" allows the user to specify the
		  paths to the binary program corresponding to version 4 of
		  EVALUATOR.

		The variables "$EVALUATOR_EXECUTABLE" and "$EVALUATOR_OPTIONS"
		remain available and refer to version 3 of EVALUATOR.
-------------------------------------------------------------------------------
BUG FIX
Number:		1907
Date: 		Wed Oct 15 18:40:57 CEST 2014
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		Two bugs have been fixed in optimizations E3 and V9 of CAESAR.
		Although these bugs were real and unquestionable, they had
		only a limited impact in practice. Considering thousands of
		LOTOS test programs, fixing these two bugs led to changes in
		a few networks (i.e., interpreted Petri nets), and no change
		in the labelled transition systems generated by CAESAR.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1908
Date:		Fri Oct 17 13:58:45 CEST 2014
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*.svl_kernel, src/svl/standard, man/*/svl.*

Nature:		The "verify" statement of SVL has been extended to support
		XTL programs. It is now possible to specify a property file
		having extension ".xtl", for instance:
			verify "prop.xtl" in "model.bcg"

		In addition, the optional "with" keyword (see item #1906
		above) may be followed by the "xtl" keyword, for instance:
			verify "prop.xtl" with xtl in "model.bcg"

		Inconsistent combinations of "with" keyword and property file
		extension, such as:
			verify "prop.xtl" with evaluator ...
		or:
			verify "prop.mcl" with xtl ...
		are detected and will issue error messages.

		The value of the shell variable "$DEFAULT_VERIFY_TOOL" is
		irrelevant for the verification of an XTL program, since
		the XTL tool is the only tool of CADP that can execute XTL
		programs. The usage of this variable is thus restricted to
		the verification of MCL properties.

		The following two shell variables have been added to SVL:
		- "$XTL_EXECUTABLE" allows the user to specify a path to the
		  binary program XTL, and
		- "$XTL_OPTIONS" allows the user to specify options for XTL.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1909
Date: 		Mon Oct 20 16:55:54 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		Optimization V4 of CAESAR has been strengthened to detect
		conditions of the form "when V1 = V2" such that the sort of
		V1 and V2 has only one element (such singleton sorts often
		appear when data abstraction is used to avoid state-space
		explosion).

		Optimization V4 of CAESAR will now remove such conditions
		"when V1 = V2". This may in turn enable other optimizations
		to remove certain variables occuring in V1 and V2, or to
		delete some assignments to these variables.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1910
Date: 		Tue Oct 21 18:15:59 CEST 2014
Author:		Hugues Evrard (INRIA/CONVECS)
Files:		ext/READ_ME, ext/vim, ext/vim/READ_ME, ext/vim/lnt.vim

Nature:		Configuration files for the Vim text editor have been added
		to support syntax highlighting and coloring for the LNT
		language in Vim. Further explanations are given in the
		"ext/vim/READ_ME" file.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1911
Date: 		Thu Oct 23 11:51:59 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		A new optimization V7 has been added to CAESAR (in fact, this
		optimization was already present in CAESAR but not active).
		Optimization V7 simplifies both the network and the C code
		generated during the simulation phase by detecting guards of
		the form "V = TRUE" or "TRUE = V", where operation TRUE
		belongs to a scalar sort with two elements, and replacing
		these guards by "when V" only.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1912
Date: 		Fri Oct 24 10:29:29 CEST 2014
Author:		Hugues Evrard (INRIA/CONVECS)
Files:		ext/emacs/READ_ME, ext/emacs/snippets/lnt-mode/*

Nature:		A collection of snippet templates has been added to CADP, so
		as to enable autocompletion for LNT in EMACS using YASnippet.
		Further explanations are given in the "ext/emacs/READ_ME"
		file.
-------------------------------------------------------------------------------
VERSION 2014-j "Amsterdam"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1913
Date:		Thu Oct 27 10:04:07 CEST 2014
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, man/*/svl.*

Nature:		A new statement "|=" was added to SVL, which enables MCL
		formulas or XTL programs to be inlined inside the SVL script.
		The meaning of this statement is similar to "verify", except
		that the formula does not have to be in an auxiliary file.
		Precisely:
			verify "F" in B;
		is equivalent to
			B |= (contents of file "F" expanded inline);

		For instance, one can now write statements of the form:
		    "diag.bcg" = "model.lnt" |= using dfs
			< 'A' > true;
		or:
		    "model.bcg" |= with xtl
			library actl.xtl end_library
			let PUT : labelset = EVAL_A (PUT) in
			   PRINT_FORM (AG_A (not (PUT), EF (Dia (PUT, true))))
			   nop
			end_let;

		Each script fragment enclosed between the symbol "|="
		(possibly followed by optional clauses of the form "with
		<tool>" and "using <method>", which may occur just after
		"|=") and the next ";" constitutes an XTL program or an
		MCL formula to be verified.

		By default, the script fragment is expected to be an MCL
		formula, unless a "with xtl" clause is present or the
		"$DEFAULT_VERIFY_TOOL" is set to "xtl". After this change,
		SVL version number was set to 2.6.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1914
Date:		Thu Oct 27 19:15:26 CEST 2014
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		The C code generated during the "type survey" phase of CAESAR
		now invokes the CAESAR_ADT_INIT() to evaluate the constants
		produced by CAESAR.ADT. The compilation and/or the execution
		of this C code may fail if the evaluation of certain constants
		triggers errors at compile-time or run-time.

		This is in particular the case for LNT programs containing
		constants whose value is out of the bounds specified by the
		pragmas (i.e., !nat_bits, !int_bits, etc.). Previously, such
		constants would trigger an exception at run-time. At present,
		CAESAR will reject the LOTOS code (generated from LNT) during
		its type survey phase, because evaluating the constants raises
		an exception in CAESAR_ADT_INIT(). Therefore, checks are now
		done earlier and also stricter, as LNT programs containing
		out-of-bound but never used constants were previously
		accepted and executed normally, whereas they are now rejected.
-------------------------------------------------------------------------------
BUG FIX
Number:		1915
Date:		Tue Oct 28 10:51:15 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/fsp2lotos

Nature:		Following a prior change in CAESAR (see item #1909 above), the
		FSP2LOTOS translator has been modified. Previously, when an
		FSP program did not need to enumerate over integer values,
		FSP2LOTOS generated a (supposedly unused) C iterator of the
		following form:

			#define ADT_ENUM_FIRST_INT() (0)
			#define ADT_ENUM_NEXT_INT(X) (0)

		This iterator, which enumerated a single value 0, is now used
		by CAESAR and leads to the conclusion that the integer type has
		a single value, and is therefore a singleton type, which is
		not correct. To avoid this issue, FSP2LOTOS no longer generates
		any iteration macro in this particular case.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1916
Date:		Mon Nov  3 08:38:33 CEST 2014
Author:		Frederic Lang (INRIA/CONVECS)
Files:		src/svl/standard, man/*/svl.*

Nature:		The result returned by the SVL "deadlock" and "livelock"
		statements has been standardized. Those statements now always
		output either TRUE (if there are deadlocks and livelocks,
		respectively) or FALSE (otherwise). Previously, the output was
		a sequence of lines that depended on the tool used to check
		for deadlocks or livelocks, e.g.,
			no deadlock state
			There are livelocks
			No livelock
		etc.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1917
Date:		Mon Nov  3 16:35:42 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		Application of optimization E3 of CAESAR has been enhanced by
		better detecting the cases where this optimization has been
		effective. This enables to apply E3 repeatedly, enabling
		other optimizations (especially V5) to further reduce the
		networks generated by CAESAR. This brought significant
		complexity reductions:

		- The size of certain labelled transition systems generated
		  using CAESAR 6.5 has been reduced, still preserving strong
		  bisimulation. Such reductions have been observed on 21
		  LOTOS programs generated from LNT and CHP. On the average,
		  the number of states was reduced by 43% (and even divided
		  by 138 on the largest example; the number of transitions
		  was reduced by 46% (and even divided by 137 on the largest
		  example). No similar reduction was observed with CAESAR 7.3,
		  which already reduces more than CAESAR 6.5.

		- The number of variables of certain networks generated by
		  CAESAR has also been reduced. For CAESAR 6.5, 24 networks
		  generated from CHP and LNT had reductions between 1% and
		  60%. For CAESAR 7.3, five networks generated from CHP had
		  reductions between 3% and 33%.
-------------------------------------------------------------------------------
BUG FIX
Number:		1918
Date:		Tue Nov  4 09:10:13 CET 2014
Author:		Frederic Lang (INRIA/CONVECS)
Files:		src/svl/standard, com/aldebaran

Nature:		Two bugs have been fixed:

		- In SVL, the .seq diagnostics generated when checking for
		  deadlocks using EXHIBITOR were stored in the log file, but
		  not in the diagnostic file requested by the user.

		- In ALDEBARAN (which also uses EXHIBITOR internally), those
		  diagnostics were only displayed to the standard output, but
		  not stored in file "aldebaran.bcg" as they should have been.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1919
Date:		Thu Nov  6 10:20:13 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		com/svl

Nature:		SVL now issues a warning message if it is called with option
		-clean or -sweep but cannot find an SVL log file (the list
		of files to remove is given by this log file).
-------------------------------------------------------------------------------
BUG FIX
Number:		1920
Date:		Fri Nov  7 14:30:25 CET 2014
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar

Nature:		Optimization V9 of CAESAR (version 7) has been modified to
		insert assignments to duplicated variables after the "reset"
		statements rather than before. On most examples, this change
		has no visible effect. However, when CAESAR is invoked with
		its ``-gradual'' option on a few LOTOS programs generated by
		the CHP2LOTOS translator, this change avoids error messages
		of the form:
		   #150 bug during optimization:
		        unexpected multiple definition in a transition action
		        quit
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1921
Date:		Thu Nov 13 15:14:24 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl.*

Nature:         SVL no longer uses ALDEBARAN as the default tool for deadlock
		and livelock checking.

                Concretely, the shell variable $DEFAULT_LOCK_TOOL has been
		replaced by two variables $DEFAULT_LIVELOCK_TOOL (set to
		"evaluator" by default) and $DEFAULT_DEADLOCK_TOOL (set to
		"exhibitor" by default). The shell variable $DEFAULT_LOCK_TOOL
		is now obsolete. If it is set, then a warning message is issued.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1922
Date:		Fri Nov 14 12:48:10 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
File:		src/xtl/standard.mcl

Nature:		A new file has been added, which contains standard MCL macros
		of general use. Such macros are used, for instance, in some
		CADP demos. This file is expected to grow as time passes.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1923
Date:		Mon Nov 17 10:46:07 CEST 2014
Authors:        Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:          bin.*/svl_kernel, src/svl/standard, man/*/svl.*

Nature:		Two new statements, "property" and "check", have been added
		to SVL.

		The "property" statement allows a list of verification tasks
		(namely, verification of temporal logic formulas, graph
		comparisons, deadlock or livelock checking) to be given the
		following attributes:
		- A unique name, which identifies the property
		- Formal parameters, which may be instantiated in different
		  invocations of the property,
		- Comments, which are to be displayed by SVL at execution
		  time, and
		- Expected results of each verification task (in general
		  TRUE or FALSE, except for XTL programs, which may display
		  their results in some user-defined format).

		The new "check" statement allows a property to be instantiated
		by actual parameters and then executed. If expected results
		were defined, the execution of the property ends with a
		verdict, which may be either PASS (all task returned the
		expected result) or FAIL.

		A new shell variable $PROPERTY_DISPLAY_MODE has been defined
		and set to 0 by default. If this variable has value 0, then
		the execution of a property displays the property name and
		actual parameters, the comments, and the verdict (if any) or
		verification results (otherwise). If this variable has a
		value different from 0, then details about the execution of
		the verification tasks are also displayed.

		Three new SVL shell variables named $PROPERTY_COMMENT_OPEN,
		$PROPERTY_COMMENT_MIDDLE, and $PROPERTY_COMMENT_CLOSE have
		been defined. They allow the user to customize the display
		of property comments at execution time. The shell function
		SVL_SET_PROPERTY_COMMENT_STYLE also allows the user to choose
		among a set of predefined styles for displaying the property
		comments.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1924
Date:		Tue Nov 18 16:50:37 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		Many changes have been brought to CAESAR in order to prepare
		future modifications:

		- In the ``.net'' files generated by the ``-network'' option,
		  assignments for which the FROM_SYNC boolean is true are now
		  noted "|:=" rather than ":=", which now corresponds only to
		  the cases where the FROM_SYNC boolean is false.

		- A new optimization V8 was added that, under well-defined
		  conditions, changes the FROM_SYNC boolean from true to
		  false.

		- Optimization V2 has been modified, which makes it more
		  efficient, but to the detriment of other optimizations such
		  as V1, V3, V4, and V5. Consequently, optimization V2 is now
		  performed last. This causes minor changes in the size of the
		  networks generated by CAESAR.
-------------------------------------------------------------------------------
BUG FIX
Number:		1925
Date:		Wed Nov 19 10:23:51 CET 2014
Author:		Frederic Lang (INRIA/CONVECS)
Files:		src/svl/standard

Nature:		SVL now systematically sets the environment variable $PAGER
		to "/bin/cat" before calling CAESAR.OPEN and LNT.OPEN to
		circumvent a bug that could happen when an OPEN/CAESAR
		exploration module would read its input from the standard
		input. For instance, the following call:
			caesar.open file.lotos exhibitor < f.seq
		could fail if "caesar.open" would emit warnings or error
		messages, with the consequence that the contents of "f.seq"
		would be printed to the standard output rather than being
		read from exhibitor. Setting $PAGER solves the problem.
-------------------------------------------------------------------------------
BUG FIX
Number:		1926
Date:		Thu Nov 20 17:16:28 CET 2014
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/tgv.a

Nature:		In CADP 2014-i and 2014-j, TGV could not be invoked due to
		a version number mismatch that caused an error of the form:
		   *007 protection violation
		   illicit attempt at using ``tgv 1.5'' on machine ``...''
		   no appropriate license
		   quit
		This issue is now solved in CADP 2014-k.
-------------------------------------------------------------------------------
BUG FIX
Number:		1927
Date:		Fri Nov 21 17:30:02 CET 2014
Author:		Frederic Lang (INRIA/CONVECS)
Files:		src/svl/standard

Nature:		There was a bug in SVL on Linux (architectures iX86 and x64).
		The following code did not work:

		% RENAME="\"G \\(.*\\)\" -> \"\\1\""
		"output.bcg" = total rename {$RENAME} in "input.bcg"

		The reason was that SVL used the built-ine command "echo" to
		write the rename rule $RENAME in an intermediate rename file.
		However, on Linux, the command "echo" does not print "\1"
		as expected. From now on, SVL always uses the portable command
		"$CADP"/src/com/cadp_echo, which solves the bug.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1928
Date:		Mon Nov 24 17:08:12 CET 2014
Author:		Hubert Garavel, Frederic Lang, and Radu
		Mateescu (INRIA/CONVECS)
Files:		demos/demo_20, demos/demo_33, demos/demo_40

Nature:		Demos 20, 33, and 40 have been enhanced to:
		- use the new "|=" and "property" statements of SVL
		- add examples of MCL formulas checked by EVALUATOR 4

		The three demos have been simplified by removing all ``.mcl''
		files; the formulas are now directly written in the
		``demo.svl'' files. In demo 33, the "renamer.ren" file has
		also been inlined in the SVL file. In demo 40, a directory
		BPEL-WSDL has been created to gather WSDL and BPEL files.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1929
Date:		Tue Nov 25 17:51:07 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		src/svl/standard

Nature:		From now on, when a statement "verify" or "|=" fails become
		the MCL formula or XTL program is incorrect, SVL no longer
		stops: it displays a non-fatal error message and continues.
		This new behaviour avoids to stop the evaluation of a list
		of properties because one property contains an error.
-------------------------------------------------------------------------------
VERSION 2014-k "Amsterdam"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1930
Date:		Fri Nov 28 09:09:31 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		src/svl/standard, man/*/svl.*

Nature:		Four new shell variables named $DEFAULT_MCL_LIBRARIES,
		$DEFAULT_EVALUATOR3_LIBRARIES, $DEFAULT_EVALUATOR4_LIBRARIES,
		and $DEFAULT_XTL_LIBRARIES have been defined in SVL, so that
		libraries can be included automatically in those MCL or XTL
		formulas inlined in SVL files. These variables may contain a
		comma-separated list of library names (with an ``.xtl'' or
		``.mcl'' extension). By default, these variables have an
		empty value, meaning that no library is included.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1931
Date:		Mon Dec  1 16:03:24 CET 2014
Authors:	Radu Mateescu, Hubert Garavel, and Frederic Lang (INRIA/
		CONVECS)
File:		src/xtl/standard.mcl

Nature:		The recently-added ``standard.mcl'' file was enriched with
		the following new MCL macros:
		   AFTER_1_FAIRLY_2 (A, B)
		   AFTER_1_INEVITABLE_2 (A, B)
		   ALTERNATE_1_THEN_2 (A, B)
		   ALWAYS_1_UNTIL_2 (A, B)
		   FAIRLY (A)
		   INEVITABLE_1_WHERE_2 (A, B)
		   INEVITABLE_1_THEN_2 (A, B)
		   INEVITABLE_1_TIMES_2 (A, B)
		   NEVER (A)
		   NOT_1_BEFORE_2 (A, B)
		   NOT_1_TO_2_UNLESS_3 (A, B, C)
		   SOME (A)
		The former macro OCCURS_AND_FOLLOWED_BY (A, B) has been
		removed; its occurrences should be replaced with:
		   SOME (true* . (A)) and AFTER_1_INEVITABLE_2 (A, B)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1932
Date:		Tue Dec  2 11:59:40 CET 2014
Authors:	Frederic Lang, Hubert Garavel, and Radu Mateescu (INRIA/
		CONVECS)
Files:		demos/demo_20/demo.svl, demos/demo_40/demo.svl

Nature:		Demos 20 and 40 have been simplified by taking advantage of
		the enhancements described in items #1930 and #1931 above.
		In particular, the new variable $DEFAULT_MCL_LIBRARIES now
		avoids the need to include ``standard.mcl'' in every formula.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1933
Date:		Tue Dec  2 15:49:11 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old, bin.*/caesar.adt

Nature:		Some internal data structures used by CAESAR and CAESAR.ADT
		have been optimized, reducing by 14% the memory size needed
		to represent a LOTOS value expression.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1934
Date:		Wed Dec  3 10:31:59 CET 2014
Authors:	Frederic Lang, Radu Mateescu, and Hubert Garavel (INRIA/
		CONVECS)
Files:		demos/demo_01, demos/demo_02, demos/demo_29, demos/demo_31,
		demos/demo_34, demos/demo_39

Nature:		Demos 01, 02, 29, 31, 34, and 39 have been simplified by
		taking advantage of the new SVL operator "|=".

		In all these demos, the ``.mcl'' files containing temporal
		logic formulas for EVALUATOR 3 have been removed, and these
		formulas have been inlined directly in the SVL file.

		In demos 01 and 02, the ``.xtl'' files containing temporal
		logic formulas for XTL have been removed and these formulas
		have been split and inlined directly in the SVL file.

		In all these demos, temporal logic formulas written in the
		MCL language for EVALUATOR 4 have been added, illustrating
		that in many cases, value-passing formulas are more concise
		than dataless ones.

		Also, the SVL files for all these demos have been made more
		readable by using the new "property" statement of SVL.
------------------------------------------------------------------------------
BUG FIX
Number:		1935
Date:		Wed Dec  3 16:49:07 CET 2014
Report:		Hugues Evrard (INRIA/CONVECS)
Authors:	Hubert Garavel and Hugues Evrard (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		The C code generated by CAESAR with `-external'' option to
		produce sample ``.c.proto'' files could contain incorrect
		calls to va_arg(), namely calls with parameters having a
		size smaller than the size of the ``int'' type. This would
		cause GCC warnings of the form:
		   `xxx' is promoted to `int' when passed through `...'
		   (so you should pass `int' not `xxx' to `va_arg')
		   note: if this code is reached, the program will abort
		This bug has been fixed.
------------------------------------------------------------------------------
BUG FIX
Number:		1936
Date:		Thu Dec  4 10:50:43 CET 2014
Author:		Frederic Lang (INRIA/CONVECS)
File:		src/svl/standard

Nature:	 	A portability issued occurred on Solaris during the execution
		of SVL scripts. Depending on the $PATH environment variable,
		and due to a difference in the behaviour of commands /bin/tr
		and /usr/ucb/tr, the arguments of parameterized SVL properties
		could be displayed between double quotes, even when this was
		not necessary. For instance:
			property PROP_04 (turntable_seq)
		was sometimes displayed as:
			property PROP_04 ("turntable_seq")
		This problem has been solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1937
Date:		Thu Dec  4 14:39:31 CET 2014
Report:		Hugues Evrard (INRIA/CONVECS)
Authors:	Hugues Evrard and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		The C code generated by CAESAR with ``-exec'' option did not
		release all the allocated memory before terminating, thus
		causing Valgrind to report about the existence of memory
		leaks. This issue has been addressed by inserting two free()
		statements in the C code generated by CAESAR for function
		CAESAR_KERNEL_TERM().
-------------------------------------------------------------------------------
BUG FIX
Number:		1938
Date:		Tue Dec  9 09:36:34 CET 2014
Author:		Frederic Lang (INRIA/CONVECS)
File:		src/svl/standard

Nature:         When an SVL script contained an inline formula that was
		evaluated several times (for instance, in a parameterized
		property that was called several times), SVL generated an
		incorrect ``.mcl'' file; in fact, this file was not deleted
		between the subsequent calls to the property and, thus,
		contained concatenated occurrences of the same formula. This
		bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1939
Date:		Wed Dec 10 13:10:15 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al.*,
		demos/demo_18/DATAOUTPORTS.lnt, demos/demo_25/summation.lnt,
		demos/demo_29/SPEC.lnt, demos/demo_32/PI_FONC_T_NDET.lnt,
		demos/demo_32/PI_SSOUT_FONC_T_NDET.lnt

Nature:		The LNT language has been enriched with a new "only if"
		statement that allows to concisely express guarded commands.
		The LNT2LOTOS translator has been extended to support this
		new statement and demos 18, 25, 29, and 32 have been modified
		to take advantage of it.

		A minor drawback of this enhancement is that "only" is now a
		reserved keyword, thus breaking compatibility for existing
		LNT specifications containing identifiers named "only".
-------------------------------------------------------------------------------
BUG FIX
Number:		1940
Date:		Wed Dec 10 17:52:13 CET 2014
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c

Nature:		At the end of smart reduction, EXP2C printed an inconsistent
		message claiming that the ``.exp'' file contained only one
		BCG graph, whereas it actually contained two BCG graphs. This
		message has been corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1941
Date:		Thu Dec 11 11:59:40 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		A new version 2.2 of CAESAR.BDD has been released. Its options
		``-mcc'' and ``-vlpn'' have been modified to produce the two
		new macros \IsModelOrdinary and \HasModelNestedUnits needed
		for MCC (Model Checking Contest) 2015. Macro \IsModelOrdinary
		is true iff the Petri net has no multiple arcs, and macro
		\HasModelNestedUnits is true iff the net is a NUPN (Nested-
		Unit Petri net) and at least one of its units contains more
		than one proper place.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1942
Date:		Fri Dec 12 17:01:28 CET 2014
Authors:	Hubert Garavel, Hugues Evrard, and Frederic Lang (INRIA/
		CONVECS)
Files:		ext/a2ps/lnt.ssh, ext/emacs/READ_ME, ext/emacs/lnt-mode.el
		ext/emacs/snippets/if, ext/emacs/snippets/only,
		ext/jedit/lnt.xml, ext/vim/lnt.vim

Nature:		Following the introduction of the "only if" statement in LNT
		(see item #1939 above), the configuration files for a2ps,
		Emacs, jEdit and Vim have been updated to support this new
		statement.

		Additionally, the Emacs configuration file and snippets
		have been extended to better handle "elsif" clauses. Notice
		that the Lisp code fragment needed to launch the snippets has
		been modified (see file ext/emacs/READ_ME) because the former
		variable yas/buffer-local-condition has been renamed in
		yas-buffer-local-condition.
------------------------------------------------------------------------------
VERSION 2014-l "Amsterdam"
------------------------------------------------------------------------------
BUG FIX
Number:		1943
Date: 		deferred since Mon Jul 28 10:12:45 CEST 2014	
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libBCG.a, bin.*/libBCG_IO.a, bin.*/bcg_io
		incl/bcg_aldebaran_initialisations.h,
		incl/bcg_aldebaran_declarations.h

Nature:		Two hidden problems have been fixed in the BCG libraries and
		include files:

		- Two incorrect calls to BCG_F_CODE() have been replaced with
		  calls to BCG_U_CODE().

		- The iterator macro bcg_aldebaran_gate_enum() used a variable
		  bcg_nb_gates that was not defined. This problem was not
		  visible to users, unless by writing a dedicated XTL program
		  to enumerate all values of type gate. The bug has been fixed
		  by defining a macro bcg_nb_gates in the include area of
		  new BCG files. For already-existing BCG files, a backward
		  compatibility solution has been set.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1944
Date: 		deferred since Wed Jul 30 06:23:14 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libBCG_IO.a, bin.*/bcg_*

Nature:		The include area of BCG files produced by CADP contained
		backward compatibility code added in 2009 during the upgrade
		from version 1.0 to 1.1 of the BCG format, so as to enable
		newly-generated BCG files to be readable by CADP versions
		older than CADP 2008-b. This code, which concerned the macro
		bcg_aldebaran_gate_print() and the array bcg_gate_string[],
		was no longer useful and, from now on, will no longer be
		included in generated BCG files. This saves approximately
		950 bytes per BCG file.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1945
Date: 		deferred since Thu Jul 31 07:18:48 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/adt_gate.h,
		incl/bcg_aldebaran_declarations.h,
		incl/bcg_aldebaran_initialisations.h,
		incl/bcg_predefined_declarations.h,
		incl/bcg_predefined_initialisations.h,
		bin.*/libBCG.a, bin.*/libBCG_IO.a, bin.*/xtl

Nature:		Pursuing the reorganization already undertaken (see items
		#1882, #1883, and #1884), a new include file "adt_gate.h" has
		been added, which gathers all definitions related to gates in
		BCG.  This triggered a number of changes in BCG include files
		and libraries (all these changes are transparent to end-users):

		- Most of the contents of files "bcg_aldebaran_declarations.h"
		  and "bcg_aldebaran_initialisations.h" has been moved to the
		  files "adt_gate.h" and "bcg_predefined_initialisations.h".

		- From now on, the include area of the new BCG files created
		  will no longer #include "bcg_aldebaran_declarations.h" and
		  "bcg_aldebaran_initialisations.h". These two files are now
		  almost empty and kept for backward compatibility, as they
		  are included by BCG files that have already been generated.

		- A number of types, functions, and macro-definitions have
		  been renamed in order to be aligned with the contents of
		  other files "adt_*.h" contained in $CADP/incl. The changes
		  are the following:
		     bcg_type_aldebaran_gate   -> bcg_type_gate
		     bcg_aldebaran_gate_assign -> bcg_gate_assign
		     bcg_aldebaran_gate_cmp    -> bcg_gate_cmp
		     bcg_aldebaran_gate_enum   -> bcg_gate_enum
		     bcg_aldebaran_gate_write  -> bcg_gate_write
		     bcg_aldebaran_gate_read   -> bcg_gate_read

		- Several of these definitions have been simplified. Also,
		  the macro bcg_aldebaran_gate_compressed_size has been
		  replaced with a new macro bcg_gate_size.

		- The two include files "bcg_predefined_declarations.h" and
		  "bcg_predefined_initialisations.h" have been modified
		  accordingly.

		- The XTL tool has been updated to be functional after these
		  changes.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1946
Date: 		deferred since Fri Aug  1 14:34:40 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/adt_integer.h, bin.*/libBCG_IO.a, bin.*/bcg_*

Nature:		From now on, the integer values (belonging to the predefined
		INT type of LOTOS and LNT) are always printed with a sign, so
		that they can be distinguished from natural values (belonging
		to the predefined NAT type of LOTOS and LNT). Concretely,
		values "1 of Nat" and "1 of Int" will now be printed as "1"
		and "+1", respectively. The sign now appears for all integer
		values, including zero.

		This change also affects all the BCG tools, and XTL as well,
		when integer values have to be printed. For instance, a label
		such as "G !10" may now be printed as "G !+10". This change
		is not backward compatible as certain graphs will no longer
		be considered as equivalent if they have different labels.
		In practice, this change was found to be harmless.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1947
Date: 		deferred since Sat Aug  2 10:26:22 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/adt_natural.h, incl/adt_integer.h
		incl/bcg_predefined_declarations.h,
		bin.*/libBCG.a, bin.*/libBCG_IO.a, bin.*/bcg_*, bin.*/xtl
		man/*/bcg_write.*

Nature:		So far, the BCG format only supported signed integers, but
		not unsigned integers. This was hardly compatible with source
		languages such as LOTOS and LNT, which have both Int and Nat
		types, and caused issues with numbers larger than 2^31.

		Therefore, the BCG format has been extended with a new
		predefined type Natural, which represents unsigned integers,
		and with a set of predefined functions for this type
		(arithmetic and relational operators). This change has led
		to a new version 1.2 of the BCG format.

		The include file ``adt_natural.h'' has been enriched with
		definitions for this new predefined BCG type.

		The "label parsing" conventions described in the BCG_WRITE
		manual page have been modified. From now on, an number
		notation in a label string will be recognized as an integer
		(and encoded using the BCG predefined type Integer) iff it
		is preceded by a sign (``+'' or ``-''), or as a natural
		(and encoded using the BCG predefined type Natural) otherwise.
		The bcg_integer_scan() was modified in such a way, and a new
		function bcg_natural_scan() was added.

		The BCG libraries and tools have been updated accordingly,
		leading to a new version 1.7 of the BCG tools, which can
		read and write BCG files in format 1.2. The XTL tool has
		been updated accordingly.

		Also, from now on, it is no longer possible to instruct the
		BCG tools to generate BCG files in the obsolete BCG format
		versions 1.0 and 1.1. To this aim, it is no longer permitted
		to give the environment variable $BCG_VERSION (see item #1402
		above) a value different from 1.2, and the environment
		variable $BCG_RECOVER (see item #1473 above) introduced in
		2008 has been disabled.
-------------------------------------------------------------------------------
BUG FIX
Number:		1948
Date: 		deferred since Mon Aug  4 16:19:24 CEST 2014
Report:		Eric Leo (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/adt_natural.h, incl/X_NATURAL.h,
		incl/adt_integer.h, incl/X_INTEGER.h,
		bin.*/bcg_io

Nature:		The bounds of integer numbers were not checked during label
		parsing, thus leading to silent improper conversions in case
		of numeric overflows (for instance, the value 2^31 present
		in a label string was converted to -2^31 when stored in a BCG
		file). The bcg_integer_scan() and bcg_natural_scan() functions
		have been modified to check for overflow and underflow. From
		now on, warning messages are displayed for out-of-bound
		integer or natural values, e.g.:
		 ``4294967296'' is too large to be parsed as a natural value
		 ``-2147483649'' is too small to be parsed as an integer value
		 ``+2147483648'' is too large to be parsed as an integer value
		Such values too large or too small will be considered as
		floating-point real numbers during label parsing.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1949
Date: 		deferred since Tue Aug  5 19:12:34 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/xtl

Nature:		From now on, XTL will write its warning and error messages
		to the standard output, rather than standard error. This
		change makes XTL compatible with other CADP tools, which do
		not write to the standard error.
-------------------------------------------------------------------------------
BUG FIX
Number:		1950
Date: 		deferred since Wed Aug  6 18:45:54 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/adt_character.h, bin.*/libBCG_IO.a, bin.*/bcg_*

Nature:		Various fixes and enhancements have been brought to the
		bcg_character_scan() function used for parsing character
		values contained in labels (see item #1877 above):
		- Due to a bug, character values were not recognized.
		- Octal notations were not properly controlled, so that
		  illegal values such as '\128', '\12x', '\4oo', '\5oo',
		  '\6oo', or '\7oo' (where oo denotes two octal digits) were
		  accepted. From now on, error messages are emitted, such as:
		     '\01' is not a valid character notation
		     '\1234' is not a valid character notation
-------------------------------------------------------------------------------
BUG FIX
Number:		1951
Date: 		deferred since Thu Aug  7 18:19:27 CEST 2014
Report:		Holger Hermanns (Saarland University, Germany)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libBCG.a, bin.*/bcg_*, man/*/bcg_write.*

Nature:		The conventions for parsing labels in the BCG_IO tool and the
		BCG_WRITE programming interface have been fixed:

		- Previously, labels were cut into fields separated by the
		  exclamation marks, but the exclamation marks present in
		  character values were not properly handled. For instance,
		  the following label "G !'\!" caused an error message:
		     bcg_io: field 3 of label ``G !'\!'' cannot be parsed
		     (use option ``-unparse'')

		- Extra spaces before or after label fields are now removed,
		  rather than being included in the fields themselves. For
		  instance, the two label strings "G!2.3" and "  G ! 2.3  "
		  are now considered to be identical and denoting the pair
		  (G, 2.3). Previously, the spaces before each field were
		  kept in the field, and only the first space after a field
		  was removed. In particular, several extra spaces after a
		  gate not followed by any offer are no longer part of the
		  gate name.

		The BCG_WRITE manual page has been deeply rewritten, and
		its former section on label parsing has been much expanded
		and split in two sections (LABEL PARSING and FIELD PARSING).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1952
Date: 		deferred since Fri Aug  8 14:42:33 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/adt_string.h, incl/bcg_aldebaran_declarations.h,
		bin.*/bcg_*

Nature:		Preliminary changes have been made to adapt the BCG format to
		the needs of the LNT language, which has a dedicated String
		type that does not exist in LOTOS, whereas the predefined
		String type of the BCG format is used to encode any kind of
		value that is neither a Boolean, a number, nor a (single)
		character:

		- In the generated BCG files and their associated include
		  files, the macro-definition bcg_max_string_size has been
		  renamed into bcg_string_length: this change is backward
		  compatible and transparent to users.

		- The bcg_string_print() function was changed to print double
		  quotes around string values, e.g., to print "ABC" rather
		  than ABC. Backward-compatibility provisions have been made
		  to ensure that this change will not affect already existing
		  BCG files.

		- Also, if the argument given to bcg_string_print() contains
		  non-printable characters, they are now printed as 3-digit
		  octal values. For instance, invoking bcg_string_print()
		  with argument "Hello\n" will print "Hello\012". The reason
		  for this change is to avoid occurrence of non-printable
		  characters in label strings. This change is backward
		  compatible for all BCG graphs whose labels do not contain
		  non-printable characters.

		- A new bcg_string_scan() function was added, which parses
		  string values enclosed between double quotes.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1953
Date: 		deferred since Sat Aug  9 20:32:04 CEST 2014
Report:		Holger Hermanns (Saarland University, Germany)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/bcg_io, bin.*/libBCG.a

Nature:		Previously, when BCG_IO generated an ``.aut'' or ``.seq''
		file, it substituted double quotes by simple quotes in
		labels, and emitted the following message:
		   warning: replacing illegal double quotes in labels
		   with simple quotes
		This was done to avoid inserting forbidden double quotes
		inside labels, but had the undesirable effect of altering
		the type of labels offers. For instance, the label:
		   G !"a" !"bc"
		was changed to:
		   G !'a' !'bc'
		meaning, with the recent field parsing conventions, that
		the offer changed from String to Character type, possibly
		creating invalid character notations.

		From now on, this is no longer the case, and double quotes
		are left unchanged, especially because they may now denote
		string values (see item #1952 above). This change is also
		compatible with the new definition of the AUT format version
		2014 (see #item 1895 above).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1954
Date: 		deferred since Sun Aug 10 17:51:51 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/adt_raw.h, bin.*/bcg_*, bin.*/xtl, man/*/bcg_write.*

Nature:		In the former versions 1.0 and 1.1 of the BCG format, the
		String type was used to represent any kind of value that
		is neither a Boolean, a number, nor a single character.
		With recent changes (see item #1952 above), the String type
		is now exclusively used to represent character strings in
		version 1.2 of the BCG format. A new type is thus needed
		to represent all non-string values so far represented using
		the String type.

		Therefore, a new predefined type named Raw (for raw data)
		has been added to the BCG format. The new include file
		``adt_raw.h'' contains the definitions related to this type.

		The field parsing rules in the ``bcg_write'' manual page
		have been updated to introduce a difference between String
		and Raw: if a label has the form ``G !"Hello"'', its offer
		"Hello" will be given the String type; if the label has the
		form ``G !Hello'', its offer Hello will be given the Raw type.
		The Raw type is especially useful to represent values of
		enumerated types and values of types defined using free
		constructors, for instance ``CONS (A, CONS (B, NIL))''.

		The BCG tools (particularly, BCG_IO) and the XTL tool have
		been updated so as to generate and read BCG files that now
		contain values of the Raw type.
-------------------------------------------------------------------------------
BUG FIX
Number:		1955
Date: 		deferred since Mon Aug 11 23:08:57 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/adt_gate.h, bin.*/libBCG_IO.a, bin.*/bcg_*,
		man/*/bcg_write.*

Nature:		The field parsing rules described in the ``bcg_write'' manual
		page have been modified. So far, the first field of a label
		was always considered to be a gate. From now on, the first
		field will be a considered as a gate only if it matches the
		syntax of an identifier (i.e., an alphabetic character,
		followed by any number of alphanumeric or underscore
		characters); to ensure compatibility with TGV, the label
		equal to a star character is considered to be a gate.

		A function adt_gate_scan() has been added to ``adt_gate.h''
		to implement the syntactic constraints listed in the above
		paragraph.

		The new restriction on gate identifiers avoids a problem in
		XTL, which generated invalid C identifiers for BCG gates
		that did not have the syntax of identifiers.

		This change is not backward compatible. For instance, in
		labels ``123 !true'' and ``c/ !0'', the first fields ``123''
		and ``c/'' are no longer given the Gate type; they are given
		the Natural and Raw types, respectively.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1956
Date: 		deferred since Sun Aug 17 15:58:06 CEST 2014	
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libBCG.a, bin.*/bcg_io, incl/adt_raw.h

Nature:		The part of the BCG_IO tool dedicated to ``.aut'' files has
		entirely rewritten to produce and parse version 2014 of the
		AUT format (see item #1895 above). The changes and benefits
		are the following ones:

		1) BCG_IO no longer requires that labels have at most 5000
		   characters. The new parser accepts labels of any size.

		2) BCG_IO now properly parses label fields that have the
		   Character type. Previously, fields such as 'x' or 'xyz'
		   were recognized as values of the String type, and these
		   values were implemented using 3 and 5 bytes, respectively.
		   Also, equivalent notations for the same character, e.g.,
		   '\0' and '\000' were implemented as two different strings.

		3) BCG_IO now properly parses label fields that have the
		   String type. Consequently, BCG_IO now accepts AUT labels
		   that contain double quotes inside. Previously, occurrences
		   of double quotes were forbidden, causing syntax errors.

		4) BCG_IO now properly handles escape sequences such as \",
		   \\, and \' in AUT labels. Previously, a label such as
		   "G !'\"'" was rejected with a message of the form:
		      bcg_io: syntax error at line ... (label, comma, and
		      target state number expected)

		5) Additionally, the new parser correctly recognizes values
		   belonging to the new BCG types Natural and Raw, and
		   properly distinguishes these values from those of types
		   Integer and String, respectively.

		6) BCG_IO now accepts empty fields (such as "G ! !true") and
		   parses them as the empty value of the Raw type. Previously,
		   such fields were rejected with an error message:
		      bcg_io: label ``...'' cannot be parsed (use option
		      ``-unparse'')

		7) BCG_IO is now stricter regarding the first fields of labels
		   and only gives them the gate type if they have the proper
		   syntax (see item #1955 above).

		8) BCG_IO is now stricter regarding AUT labels not enclosed
		   between double quotes, e.g., in transition (12, G0, 34).
		   Double quotes can only be ommitted only if the label is
		   a gate according to the definition of bcg_gate_scan() in
		   ``adt_gate.h'' or if it is equal to ``*'' (this latter
		   case is for compatibility with the TGV tool). This change
		   applies to ``.aut'' files read and written by BCG_IO.

		9) From now on, when BCG_IO is called on an ``.aut'' file
		   with option ``-unparse'', the labels of the generated BCG
		   file have the Raw type. Previously, they had the String
		   type.

		10) The new parser gives better error messages. Previously,
		   there was only one error message:
		     bcg_io: syntax error at line ... (label, comma, and
		     target state number expected)
		   There are now many different, more informative messages:
		    * comma expected after source state number and before
		      label
		    * comma expected after label and before target state
		      number
		    * closing double quote expected
		    * target state number expected
		    * closing parenthesis expected
		    * end-of-line after closing parenthesis expected
		    * field ... is too large to be parsed as a natural value
		    * field ... is not a valid character notation
		    * field ... contains an invalid character escape sequence
		    * field ... contains an invalid octal escape sequence
		    * field ... contains an invalid hexadecimal escape sequence

		Clearly, some of these changes are not backward compatible,
		and some ``.aut'' files generated by the previous versions
		of BCG_IO may not be accepted by the new BCG_IO. However,
		these problematic cases should be rare, and the benefits
		clearly exceed the troubles.

		Notice that, following changes described in items #1900 and
		#1902 above, CAESAR and BCG_IO are now the only two tools of
		CADP to write ``.aut'' files, and BCG_IO is the only tool to
		read ``.aut'' files.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1957
Date: 		deferred since Wed Aug 27 11:28:40 CEST 2014	
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libBCG_IO.a, man/*/bcg_write.*, incl/bcg_types.h,
		incl/bcg_io_read_bcg.h, incl/bcg_io_write_bcg.h

Nature:		The BCG_WRITE application programming interface has been
		slightly extended:
		- A new type BCG_TYPE_DATA_FORMAT with two constant values
		  (BCG_UNPARSED_DATA_FORMAT and BCG_STANDARD_DATA_FORMAT)
		  has been added.
		- The type of the parameter of BCG_IO_WRITE_BCG_PARSING()
		  changed from BCG_TYPE_NATURAL to BCG_TYPE_DATA_FORMAT.
		- The type of the parameter of BCG_IO_READ_BCG_PARSING()
		  changed from BCG_TYPE_NATURAL to BCG_TYPE_DATA_FORMAT.
		The BCG_WRITE manual page has been updated, and all the CADP
		tools that produce BCG files have been modified accordingly.

		This change is totally compatible at the binary level, as
		the values of the two new constants BCG_UNPARSED_DATA_FORMAT
		and BCG_STANDARD_DATA_FORMAT are exactly the same as the
		natural values used before. Yet, for readability purpose,
		it is advisable to update applications making use of the
		BCG_WRITE application programming interface.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1958
Date: 		deferred since Tue Sep 16 17:12:32 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/bcg_edge_table_2.h, incl/bcg_io_types.h,
		incl/bcg_io_write_bcg.h, incl/bcg_structure_2.h,
		bin.*/libBCG.a, bin.*/libBCG_IO.*, bin.*/bcg_*

Nature:		Many simplifications in the internal data structures of the
		BCG libraries and in their undocumented APIs have been made:

		- The include file ``bcg_io_types.h'' has been removed; its
		  deprecated type definitions (see #1229 and #1284 above)
		  were no longer useful and the remaining definitions have
		  been dispatched to other files.

		- The following fields have been removed from the "BCG object"
		  structure defined in ``bcg_structure_2.h'': bcg_nb_types,
		  bcg_nb_functions, bcg_nb_elements, bcg_nb_profiles,
		  bcg_nb_files, bcg_nb_indexes, bcg_nb_labels. These fields
		  were defined but not used actually.

		- A number of types named ``bcg_body_...'' have been renamed
		  to ``BCG_BODY_...'' (i.e., translated to upper-case letters)
		  when the associated type ``BCG_TYPE_...'' already existed.
		  These types are: bcg_body_edge_table_2, bcg_body_type_1,
		  bcg_body_include_area_1, bcg_body_type_area_1,
		  bcg_body_function_argument_1, bcg_body_function_1,
		  bcg_body_function_area_1, bcg_body_profile_element_1,
		  bcg_body_profile_1, bcg_body_profile_area_1,
		  bcg_body_file_1, bcg_body_file_area_1, bcg_body_name_1,
		  bcg_body_name_index_1, bcg_body_name_area_1,
		  bcg_body_edge_area_1, bcg_body_edge_area_2,
		  bcg_body_label_1, bcg_body_label_area_1,
		  bcg_body_state_area_1, bcg_body_class_area_1, and
		  bcg_body_bcg_object.

		- The following renamings of types have been performed:
		  bcg_type_table -> bcg_kind_table,
		  bcg_type_index -> bcg_kind_index
		  bcg_enum_type_table -> bcg_enum_kind_table
		  bcg_type_type_table -> bcg_type_kind_table

		These changes should be transparent to the end users of CADP.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1959
Date: 		deferred since Thu Sep 18 12:50:40 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/xtl, incl/xtl_predefined_declarations.h,
		src/xtl/basic.xtl, src/xtl/info.xtl,
		src/xtl/path.xtl, src/xtl/radius.xtl,
		src/xtl/walk_actl.xtl, src/xtl/walk_print_nice.xtl,
		demos/demo_01/bitalt.xtl, demos/demo_02/bitalt.xtl,
		demos/demo_16/prop.xtl, demos/demo_21/spec.xtl,
		demos/demo_22/spec.xtl, demos/demo_25/cfs.xtl,
		demos/demo_25/data.xtl, demos/demo_25/data_12.xtl,
		demos/demo_26/spec.xtl, demos/demo_26/spec_new.xtl,
		demos/demo_27/prop_asyn.xtl, demos/demo_27/prop_diag_asyn.xtl,
		demos/demo_27/prop_diag_sync.xtl, demos/demo_27/prop_sync.xtl

Nature:		The recent changes in the printing function for the String
		type of the BCG form (see item #1952 above) have modified
		the behaviour of the predefined XTL function:
		   print : String -> Action
		Previously, a call to ``print ("Hello\n")'' displayed:
		   Hello       (followed by a newline)
		whereas it now invokes bcg_string_print(), which displays:
		   "Hello\012"   (not followed by a newline)

		It was then necessary to introduce a new prededined function,
		noted:
		   printf : String -> Action
		that has the same behaviour as the former ``print'' function,
		namely, that does not add double quotes and interprets escape
		characters such as \n, \t, etc., as well as octal and
		hexadecimal notations.

		All the XTL standard libraries and the CADP demos that use
		XTL have been modified to replace ``print'' by ``printf''
		wherever needed.

		This led to a new version 1.5 of the XTL language and of its
		compiler. These changes are not backward compatible. Existing
		XTL programs should be updated by replacing ``print'' by
		``printf'' whenever:
		  - the argument of ``print'' is a character string
		  - no double quotes are expected around this string
		  - this string contains escape sequences (\n, \r, \001, etc.)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1960
Date: 		deferred since Mon Sep 22 13:16:00 CEST 2014
Report:		Radu Mateescu (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libBCG.a, bin.*/bcg_lib

Nature:		The interface and implementation of the BCG dynamic library
		(i.e., the files ``...@1.o'' generated by BCG_LIB) have been
		made more efficient. All functions that previously took
		structure types as parameters and/or returned structure types
		as results have been modified to take and return pointer-to-
		structure types instead. This change is not binary compatible
		in itself but should be transparent to end users, as BCG_LIB
		will automatically regenerate dynamic libraries produced by
		former versions of CADP.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1961
Date: 		deferred since Fri Sep 26 19:25:41 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/adt_string.h, incl/adt_raw.h, bin.*/libBCG.*, bin.*/bcg_*

Nature:		The new version 1.2 of the BCG format has been made more
		compact by removing from the BCG files the final character
		'\0' that terminates each value of type String or Raw. Care
		has been taken to ensure backward compatibility, so that
		existing BCG files generated in versions 1.0 and 1.1 of the
		BCG format can still be read by BCG tools.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1962
Date: 		deferred since Fri Oct  3 14:43:59 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libBCG.a, bin.*/libBCG_IO.a, bin.*/bcg_io
		man/*/bcg_write.*

Nature:		Previously, when a tool producing a BCG file had to stop,
		it could leave a corrupted BCG file in the current directory.
		This was, for instance, the case with BCG_IO when translating
		to BCG an incorrect AUT or SEQ file: BCG_IO would stop upon
		encountering the error, leaving an unfinished BCG file. If
		a BCG tool (e.g., BCG_INFO) was called later on this file,
		this would emit a confusing error message such as:
		   bcg_file_area: include area does not exist in the file
		   in BCG_BEGIN_READ_AREA

		To address this issue, a new function BCG_IO_WRITE_BCG_ABORT()
		has been added to the ``bcg_write'' Application Programming
		Interface. This function can be invoked to halt the generation
		of a BCG file and remove this file. The ``bcg_write'' manual
		page has been updated accordingly.

		The BCG_IO tool now invokes this primitive if it finds a fatal
		error when translating an AUT, FC2, or SEQ file to BCG.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1963
Date: 		deferred since Sat Oct 11 21:04:38 CEST 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/adt_string.h, incl/adt_raw.h, incl/adt_*.h,
		incl/bcg_access_2.h, incl/bcg_structure_2.h, incl/bcg_types.h,
		bin.*/bcg_*, bin.*/libBCG.*, bin.*/libBCG_IO.a,
		bin.*/libbcg_draw.a, bin.*/libbcg_info.a, bin.*/libbcg_open.a

Nature:		Another major change has been made in the definition of
		version 1.2 of the BCG format and in its implementation in
		the BCG tools.

		In versions 1.0 and 1.1 of the BCG format, all values of
		type String were represented using a fixed-size scheme, i.e.,
		all strings stored in a BCG file having the length of the
		longest string. With version 1.2, all values of the types
		String and Raw are stored using a variable-size scheme, each
		value taking no more bytes than actually needed.

		Version 1.2 of the BCG format is therefore more compact.
		The reduction depends on several factors: the size of the
		longest string, the number of strings in the file, etc.
		We observed a reduction of 38% on certain small graphs
		(less than 5 Kbytes) and of 1% on larger graphs.
		
		Backward compatibility was preserved, in the sense that all
		existing BCG files in version 1.0 and 1.1 can still be read
		and processed by the BCG tools. But internally, deep changes
		have been performed on undocumented data structures, as
		values having the same type (and tuples of value having the
		same profile) are no longer represented using the same number
		of bits:

		- All the functions bcg_*_read() and bcg_*_write() defined in
		  files ``incl/adt_*.h'' now have an additional parameter
		  bcg_size.

		- A new field bcg_signal_size was added to BCG_BODY_LABEL_1
		  and BCG_TYPE_LABEL_1, together with three new macros
		  BCG_LL1_SIGNAL_SIZE(), BCG_AL1_SIGNAL_SIZE(), and
		  BCG_L1_SIGNAL_SIZE() to access this field.

		- Type BCG_TYPE_READ_PROFILE_FUNCTION now denotes a function
		  taking two more arguments and returning a void result
		  (rather than a result of type BCG_TYPE_ADDRESS).

		- Type BCG_TYPE_WRITE_PROFILE_FUNCTION now denotes a function
		  taking one more argument and returning a void result
		  (rather than a result of type BCG_TYPE_ADDRESS).
		
		- The code contained in the BCG dynamic libraries was also
		  deeply modified. An extra parameter was added to functions
		  bcg_read_profile_*(), Bcg_READ_PROFILE(),
		  Bcg_READ_PRINT_PROFILE(), bcg_write_profile_*(), and
		  Bcg_WRITE_PROFILE(). The two former functions now return
		  a void result. The new dynamic libraries are incompatible
		  with the previous ones, but BCG_LIB will automatically
		  regenerate obsolete libraries.

		- The (undocumented) output of ``bcg_info -profiles'' has
		  changed.
-------------------------------------------------------------------------------
BUG FIX
Number:		1964
Date: 		deferred since Fri Nov  7 17:12:29 CET 2014
Authors:	Hubert Garavel and Radu Mateescu (INRIA/CONVECS)
Files:		src/xtl/walk_print_nice.xtl

Nature:		The XTL library ``walk_print_nice.xtl'' had been modified to
		avoid the following Gcc message:
		   warning: zero-length gnu_printf format string
		while compiling the C code generated by the XTL compiler.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1965
Date: 		deferred since Wed Nov 12 12:26:48 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/bcg_io, bin.*/libBCG_IO.a, man/*/bcg_io.*

Nature:		The sub-option ``-parse'' that could occur between the option
		``-aldebaran'' and the input AUT files given to BCG_IO was
		removed. This sub-option was no longer useful and had been
		marked as deprecated since year 2000 (see item #709 above).
		The ``-parse'' and ``-unparse'' sub-options of the ``-bcg''
		option should be used instead. The BCG_IO manual page has
		been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1966
Date: 		deferred since Sat Nov 29 10:51:50 CET 2014	
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libBCG.a, bin.*/bcg_io, man/*/bcg_io

Nature:		When BCG_IO is invoked as follows:
		   bcg_io old.bcg new.bcg
		it now systematically converts file ``old.bcg'' (which can be
		in version 1.0 or 1.1 of the BCG format) into file ``new.bcg''
		(created in the latest version 1.2 of the BCG format). The
		BCG_IO manual page has been extended to document this.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1967
Date: 		deferred since Thu Dec  4 17:13:42 CET 2014	
Authors:	Hubert Garavel and Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/xtl

Nature:		The XTL syntax for quoting internal names of the BCG file
		has changed. Previously, the syntax was `xxx`. The new syntax
		is $xxx. This change will allow to reuse backquotes for
		another purpose.
-------------------------------------------------------------------------------
BUG FIX
Number:		1968
Date:		deferred since Fri Dec  5 17:10:42 CET 2014
Report:		Frederic Lang (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/xtl_expand

Nature:		A bug was fixed in the XTL_EXPAND tool, which prevented the
		expansion of MCL macro invocations whose arguments contained
		formulas "let", "if", "case", "exists", and "forall". For
		example, the following invocation of the SOME() macro was not
		expanded:

		   macro SOME (R) = < (R) > true end_macro
		   SOME (true* . if put_or_get then PUT else GET end if)

		This macro invocation is now expanded correctly by XTL_EXPAND,
		producing as output:

		   < (true* . if put_or_get then PUT else GET end if) > true

		The bug affected the "-expand" option of EVALUATOR 4.0, which
		now behaves correctly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1969
Date:		deferred since Mon Dec  8 12:04:01 CET 2014
Report:		Frederic Lang (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/xtl

Nature:		A bug was corrected in the XTL tool, which caused C compiler
		warnings on iX86 architectures when executing an XTL program
		on a BCG file containing zero transitions:

		In function 'XTL_EDGESET_CARDINAL':
		warning: comparison of unsigned expression < 0 is always false
		In function 'XTL_EDGESET_PRINT':
		warning: comparison of unsigned expression < 0 is always false
-------------------------------------------------------------------------------
BUG FIX
Number:		1970
Date: 		deferred since Tue Dec  9 15:50:35 CET 2014
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/libBCG.a, bin.*/xtl

Nature:		There was a bug in the ``bcg_read'' primitives to enumerate
		the predecessors of a given state when the BCG graph was
		opened using BCG_OT_READ_BCG_BEGIN() with access mode 4.
		The enumeration of predecessors could enter in a loop and
		finally exit on a segmentation fault due to an internal
		overflow on array bounds. This bug, which showed up in some
		XTL programs, because XTL uses access mode 4, has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1971
Date: 		deferred since Wed Dec 10 08:06:47 CET 2014
Report:		Sylvain Rampacek (Univ. de Bourgogne, France)
Authors:	Hubert Garavel, Frederic Lang, and Radu Mateescu (INRIA/
		CONVECS)	
Files:		bin.*/xtl, src/xtl/mu_calculus.xtl

Nature:		From now on, the characters '[', ']', and '|' are no longer
		permitted in XTL identifiers. There are two reasons for this
		incompatible change:

		- These characters are not allowed either in LOTOS and LNT
		  identifiers. The change aligns XTL on the other languages
		  of CADP.

		- These characters caused the XTL compiler to require the
		  insertion of extra spaces between valid sequences of
		  tokens. For instance, the following XTL fragment:
		     exists T2:edge among out (S) in label(T1) ->
                     [G ?... where label(T2) ->[...]] end_exists
		  triggered one syntax error (as "->[" was parsed as a
		  special identifier because a space was missing before
		  ']') and one warning:
		     "]]" before "end_exists" is replaced by "] ]".

		Consequently, the predefined ``mu_calculus.xtl'' library
		has been updated to rename four macros as follows:
		     [] (A, F)   ->   Box_fwd (A, F)
		     [] (F)      ->   Box_fwd (F)
		     <> (A, F)   ->   Dia_fwd (A, F)
		     <> (F)      ->   Dia_fwd (F)
-------------------------------------------------------------------------------
BUG FIX
Number:		1972
Date:		deferred since Thu Dec 11 11:44:24 CET 2014
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/xtl, man/*/xtl.*

Nature:		A bug was corrected in the XTL compiler, which caused typing
		ambiguities in expressions containing iterators over the
		Integer type. For example, the following expression:

		<| + on M:integer among { 1 ... 2 } |> M

		was considered as having an ambiguous type (namely, having
		Integer and Number as possible types), and required to
		add explicitly an "of" clause to precise the type, e.g:

		(<| + on M:integer among { 1 ... 2 } |> M) of integer

		Such iterator expressions now type correctly without the
		need of an explicit "of" clause.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1973
Date: 		Tue Dec 16 17:23:16 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/xtl, src/xtl/walk.xtl, man/*/xtl.*,
		demos/demo_02/*.xtl, demos/demo_23/*.xtl, demos/demo_26/*.xtl

Nature:		Changes have been made in the syntax and type system of XTL
		in order to fully support the difference between unsigned
		and signed integers (i.e., Natural vs Integer).

		Previously, integer constants were written 123 and always
		had the Integer type. Negative constants had to be written
		-(123).

		From now on, the rules are the following:
		- it is permitted to have a '+' or '-' sign before a constant.
		- +123 denotes a constant of type Integer.
		- -123 denotes a constant of type Integer.
		- 123 of integer denotes a constant of type Integer.
		- 123 of natural denotes a constant of type Natural.
		- 123 denotes a constant whose type is either Natural or
		  Integer. This ambiguity may be resolved by the context
		  (for instance, in expression ``N + 123'', 123 will be
		  given the same type as N). If the context does not permit
		  to resolve the ambiguity, then the constant will ultimately
		  be given the type Natural by default.

		The motivation behind these typing rules is to preserve, as
		much as possible, backward compatibility with already existing
		XTL programs. Backward compatibility is also preserved for
		BCG files, as the new version of XTL is still capable of
		handling the former versions 1.0 and 1.1 of the BCG format.

		There is however, an incompatible change: it is no longer
		allowed to write expressions such as ``X+1'' or ``X-1'',
		where X is an identifier. Such expressions are now rejected
		by the XTL compiler and should be written ``X + 1'' and
		``X - 1'' instead. The library file ``walk.xtl'' has been
		updated accordingly.

		The XTL files of demos 02, 23, and 26 have been updated to
		replace type Integer by type Natural wherever needed.

		Notice also that XTL will now print Integer values with a '+'
		or '-' sign, as XTL invokes the BCG function for printing
		integers (see item #1947 above).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1974
Date: 		Thu Dec 18 17:01:44 CET 2014	
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/xtl

Nature:		XTL now emits a warning when an XTL specification contains a
		match predicate over labels and no label in the BCG graph
		has the right number of offers to satisfy this predicate. For
		instance, if the XTL specifications contains the predicate
			label -> [G ?x:integer !false _]
		and that no BCG label has four fields (a gate followed by
		three offers), the following warning will be emitted:
		   #058 warning during second expression typing phase:
		        no label in the BCG file has exactly 4 fields to
		        satisfy the requested pattern [file.xtl: 58]
		The execution will continue and the predicate will evaluate
		to false as with the previous versions of XTL. Such warnings
		(``vacuity checking'') are extremely useful to detect common
		mistakes in temporal formulas.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1975
Date: 		Fri Dec 19 17:10:58 CET 2014
Authors:	Hubert Garavel and Radu Mateescu (INRIA/CONVECS)	
Files:		bin.*/xtl_expand, bin.*/xtl

Nature:		The XTL_EXPAND preprocessor now displays more warnings about
		potential mistakes it finds in source XTL or MCL files.
		Precisely, a number of useful warnings have been turned into
		non-fatal errors and are now always displayed by default.
		The remaining warnings can be seen by invoking XTL_EXPAND
		with option -warning.

		Additionally, XTL displays more warnings about potential
		mistakes contained in the XTL file (e.g., dubious octal
		constants, etc.). It is no longer needed to give option
		``-warning'' to XTL to have such useful messages displayed.
		(from now on, the main utility of this XTL option is to be
		passed to XTL_EXPAND).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1976
Date: 		Sun Dec 21 10:28:05 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_02/*.xtl, demos/demo_23/*.xtl,
		demos/demo_26/*.xtl, demos/demo_31/*.mcl

Nature:		Due to a recent change (see item #1975 above), the XTL_EXPAND
		preprocessor now emits warnings when a macro is invoked with
		an incorrect number of parameters. In particular, it warns
		every time a macro has the same name as an XTL or MCL
		identifier (e.g., a variable, a gate, a parameter of an MCL
		fixpoint, etc.). This can be helpful to catch mistakes and
		increases the readability of the formulas. To avoid such
		warnings, four demos have been modified to rename certain
		macros and give them unique names:
		 - demo 02: PUT() -> isPUT(), GET() -> isGET()
		 - demo_23: LDreq() -> LDreq_all(), LDcon() -> LDcon_all()
		            and the unused PAreq() macro was removed
		 - demo_26: Request() -> isRequest(), Cancel() -> isCancel(),
		            Invoice() -> isInvoice()
		 - demo_31: CMD() -> CMD_num(), REC() -> REQ_num()
-------------------------------------------------------------------------------
BUG FIX
Number:		1977
Date: 		Mon Dec 22 11:14:29 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/xtl

Nature:		The C code generated by the XTL compiler was modified to
		avoid warnings "statement not reached" produced by the
		Sun C compiler on Solaris when processing certain BCG graphs
		having no transition.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1978
Date: 		Mon Dec 22 18:41:27 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/xtl, man/*/xtl.*

Nature:		In XTL, it is now possible to use backquotes to denote values
		belonging to the Raw type, e.g., `foo`, `CONS (0, NIL)`. The
		XTL manual page has been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		1979
Date: 		Tue Dec 23 16:11:09 CET 2014		
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/xtl

Nature:		When run on certain incorrect XTL specifications, the XTL
		compiler could exhaust the memory and stop with the following
		error message:
		     #007 system error:
		          memory shortage
		          quit
		This problem was solved, and a more appropriate error message
		is now displayed, e.g.
		     #041 error during first expression typing phase:
		          the arguments (or index) possible types are not
		          compatible with the possible profiles of function
		          ``='' [file.xtl: 5]
		          quit

		Some other error messages of XTL have been modified to be more
		informative. For instance, the following message:
		   ambiguous type for the offer's expression [file.xtl: 4]
		has been changed to:
		   ambiguous type for field 2 of the offer list [file.xtl: 4]

		Also, the following message
		   the type of the iteration variable ``...'' [file.xtl: 10]
		   is not authorized in a sub-domain iterator
		has been enhanced by now displaying the name of that type.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1980
Date: 		Tue Dec 30 16:29:55 CET 2014
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The format of the PNML descriptions generated by option
		``-pnml'' of CAESAR.BDD has changed. Specifically, the
		``root'' attribute is now an unit identifier attached to
		the ``structure'' entity, rather than an optional Boolean
		attribute attached to the ``unit'' entities. For instance:
		     <structure units="10" safe="true">
		     <unit id="u0" root="true"> ...
		     <unit id="u1" root="false"> ...
		     <unit id="u2" root="false"> ...
		becomes:
		     <structure units="10" root="u0" safe="true">
		     <unit id="u0"> ...
		     <unit id="u1"> ...
		     <unit id="u2"> ...
		Following this modification, the NUPN version number of the
		``toolspecific'' section was changed from 1.0 to 1.1, and
		the version number of CAESAR.BDD was set to 2.3.

		Additionally, the ``-check'' option of CAESAR.BDD now checks
		on the reachable marking graph whether the unit-safeness
		property is satisfied or not.

		Also, with options ``-mcc'' and ``-vlpn'', the macro
		\IsModelFreeChoice was renamed to \IsModelSimpleFreeChoice.

		The CAESAR.BDD manual page was updated to describe the
		effect of the ``-pnml'' option and give a reference to the
		Web page describing the NUPN ``toolspecific'' section. Also,
		minor fixes were brought the definitions of the predicate
		Sub* (u1, u2) and of the unit-safeness property.
-------------------------------------------------------------------------------
BUG FIX
Number:		1981
Date: 		Sat Jan  3 16:44:15 CET 2015
Report:		Stephan Merz (INRIA Nancy, France) and Soraya Arias (INRIA
		Grenoble, France)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/installator/installator.tcl, installator.shar,
		src/com/cadp_ln

Nature:		A bug recently introduced since CADP 2014-l due to a change in
		the ``cadp_ln'' script has been fixed. This bug has been
		hotfixed in CADP 2014-l and Installator as it would prevent
		Installator from working properly on machines where CADP had
		never been installed previously. Another issue reported by
		Soraya Arias, but not visible to end users, has been fixed
		in the same script ``cadp_ln''.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1982
Date: 		Fri Jan  9 11:09:04 CET 2015	
Authors:	Hubert Garavel, Frederic Lang, and Radu Mateescu (INRIA/
		CONVECS)
Files:		bin.*/xtl

Nature:		The vacuity checks recently introduced (see item #1974 above)
		have been extended. From now on, XTL will also warn if no
		label in the BCG graph has the appropriate type for a match
		expression contained in an XTL specification, e.g.:
		     #060 warning during second expression typing phase:
		          no label in the BCG file has the type required
		          for field 2 of the offer list [file.xtl: 4]
		In such case, the predicate will still evaluate to false
		with the new XTL compiler, but the user will be warned about
		a potential problem.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1983
Date: 		Mon Jan 12 18:07:05 CET 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/xtl, man/*/xtl.*

Nature:		The type checking rules of XTL for string notations "..."
		have been modified. Previously, strings notations were always
		of the String type. From now on, the rules are slightly more
		complex, and similar to those for naturals/integers (see
		item #1973 above):
		- "..." of string denotes a constant value of type String.
		- "..." of raw denotes a constant value of type Raw.
		- "..." denotes a constant whose type is either String or
		  Raw. This ambiguity may be resolved by the context
		  (for instance, in ``(X = "abc")'', "abc" will be
		  given the same type as X). If the context does not permit
		  to resolve the ambiguity, then the constant will ultimately
		  be given the type String by default.
		- Finally, `...` denotes a constant of type Raw, which is
		  identical to "..." of raw (see item #1967 above).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1984
Date: 		Tue Jan 13 16:55:46 CET 2015
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		bin.*/xtl

Nature:		Previously, XTL typing rules for offers were quite rigid.
		For instance, a match expression of the following form:
		   [ G !true ]
		was always rejected because the constant ``true'' may have
		different types (Boolean, Stateset, Edgeset, etc.). For such
		an expression, XTL always stopped with an error message about
		ambiguous types. To get the XTL specification accepted, it
		was necessary to explicit the type of the offer, e.g.:
		   [ G !true of boolean ]

		The new version 1.5 of XTL takes into account the labels of
		the BCG graph to solve such overloading ambiguities. For
		instance, if there are only Boolean offers for gate G in the
		BCG graph, then [ G !true ] is now valid, and ``true'' is
		automatically given the Boolean type. The algorithm considers
		all label profiles and all offers to resolve type ambiguities
		as much as possible.

		This change is backward compatible, in the sense that all
		XTL specifications accepted by XTL 1.4 are also valid with
		XTL 1.5. But XTL 1.5 is also more permissive and accepts
		specifications that were previously rejected.

		This new typing flexibility is particularly useful for
		match expressions such as [ G !1 ] or [ G !"Hello" ]
		because ``1'' now has two possible types: Natural and Integer
		(see item #1947  above), and ``"Hello"'' also has two possible
		types: String and Raw (see item #1983 above). In most cases,
		such ambiguities are automatically resolved by considering
		the labels of the BCG graph.
-------------------------------------------------------------------------------
BUG FIX
Number:		1985
Date:		Wed Jan 14 12:35:33 CET 2015
Report:		Xiaoxiao Yang (RWTH Aachen, Germany) and Wendelin Serwe
	 	(INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel

Nature:		In the previous version of SVL, nested-hiding expressions of
		the following forms:
			M hide all but L1 in M hide L2 in B
			M hide L1 in M hide all but L2 in B
			M hide all but L1 in M hide all but L2 in B
		(where M is a matching mode among "gate", "total", "partial",
		L1 and L2 are sets of regular expressions denoting labels,
		and B is a behaviour) were systematically simplified into,
		respectively:
			M hide all but (L1 \ L2) in B
			M hide all but (L2 \ L1) in B
			M hide all but (L1 ^ L2) in B
		(where \ and ^ denote respectively set difference and set
		intersection.) Similar simplifications were applied to
		nested-cut expressions.

		These simplifications were incorrect if B contained at least
		one label that is matched by (at least) two distinct regular
		expressions contained respectively in L1 and L2. For instance,
		label "G !X !Y" would be hidden in the original expression:
			partial hide all but "X" in partial hide "Y" in B
		but not in the simplified expression:
			partial hide all but "X" in B.

		Notice, however, that these simplifications are correct if,
		for all regular expressions R1 in L1 and R2 in L2 such that
		R1 and R2 are distinct, the sets of labels matched by R1 and
		R2 are disjoint. A particular case is when L1 and L2 contain
		only ``plain'' gates (in "gate"-matching mode) or ``plain''
		labels (in "total"-matching mode), where ``plain'' means:
		without regular expression operator. Indeed, the plain
		representation of a gate or label is unique.

		This bug has been fixed by disabling these simplifications,
		except in the particular case described in the paragraph
		above.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1986
Date: 		Fri Jan 16 16:34:59 CET 2015
Report:		Hana Mkaouar (ENIS, Tunisia)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		com/caesar.open

Nature:		The ``caesar.open'' script has been modified to invoke
		``caesar'' rather than ``caesar -open/generator'', as the
		former invocation is more efficient in speed and memory, and
		thus can handle larger LOTOS specifications. The previous
		version of ``caesar.open'' also did this optimization, but
		only in a few cases, whereas the new version will optimize
		in all cases, unless a BCG file to be preserved exists in
		the current directory. In particular, this optimization will
		be effective every time ``caesar.open'' is invoked by SVL.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1987
Date: 		Tue Jan 20 14:30:13 CET 2015
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)	
Files:		src/xtl/basic.xtl, src/xtl/walk_print_nice.xtl,
		demos/demo_{01,02,21,22,23,25,26,27}

Nature:		Some predefined XTL libraries have been enhanced:

		- In ``basic.xtl'', new macros PRINT_BOOL(), PRINT_BOOLEAN(),
		  and PRINT_FORMULA() have been added.

		- ``walk_actl.xtl'' no longer includes ``basic.xtl'', which
		  is already transitively included via ``walk.xtl''.

		- In ``walk_print_nice.xtl'', the strings "*Success.*" and
		  "*Failure.*" have been replace with "SUCCESS" and "FAILURE".

		All the demo examples relying on XTL have been simplified by
		taking advantage of the new macros of ``basic.xtl''. In
		particular, almost all ``nop'' operations that were required
		by the use PRINT_FORM() have been removed, as the use of
		PRINT_FORMULA() rather than PRINT_FORM() makes them useless.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1988
Date: 		Thu Jan 22 17:25:17 CET 2015
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)	
Files:		demos/demo_{16,17,21,22,23,24,25,26,27,30,40}/*

Nature:		Changes have been brought to make demos more uniform:

		- In demos 17, 23, 24, and 26, file ``demos.svl'' has been
		  renamed into ``demo.svl''.
		- In demo 27, files ``HAVi_asyn.svl'' and ``HAVi_sync.svl''
		  have been merged into one single file ``demo.svl''.
		- In demos 26 and 30, PostScript and PDF file have been
		  placed in a ``doc'' directory. In demo 40, the ``BPEL-WSDL''
		  directory has been renamed to ``doc''.
		- Many =READ_ME.txt have been updated.

		Many demos have been updated to take advantage of the latest
		features of SVL and/or to follow the recent changes in XTL:

		- In demos 21 and 22, offers ``false of boolean'' and ``true
		  of boolean'' have been shortened to ``false'' and ``true''.
		- Certain occurrences of the String type in XTL properties
		  have been replaced by the Raw type.
		- In demos 16 and 27, certain string notations "..." have been
		  replaced with `...`.
		- In demos 21, 22, 23, 25, 26, and 27, the XTL and MCL files
		  have been removed and their formulas are now included in
		  file ``demo.svl''. Small ``macros.xtl'' files have been
		  added to provide macros common to all formulas.
-------------------------------------------------------------------------------
VERSION 2015-a "Stony Brook"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1989
Date: 		Mon Jan 26 18:25:55 CET 2015	
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)	
Files:		demos/demo_16

Nature:		The file ``prop.xtl'' containing all XTL formulas has been
		removed and these XTL formulas have been inlined in the SVL
		script to be more readable. The =READ_ME.txt file has been
		updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1990
Date: 		Tue Jan 27 15:41:49 CET 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_03, demos/archive/demo_03.old

Nature:		The demo_03 (featuring a half-duplex protocol modelled using
		LOTOS) was archived because it was old and too simple to
		to illustrate the capabilities of CADP nowadays. The
		corresponding directory is left temporarily empty.
-------------------------------------------------------------------------------
BUG FIX
Number:		1991
Date: 		Wed Jan 28 18:02:24 CET 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		On some large NUPN files (e.g., a NUPN file of 28 Mbytes with
		13,686 places and 550,641 transitions), Caesar.bdd could
		perform a segmentation fault because of an integer overflow.
		This issue has been solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1992
Date:		Thu Jan 29 11:27:33 CET 2015
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.*/svl_kernel, src/svl/standard, man/*/svl.l

Nature:		The "property" statement of SVL has been generalized, so that
		it can now contain any statement, and not only verifications
		of temporal logic formulas, graph comparisons, deadlock
		checking, or livelock checking. In particular, a property can
		now contain shell lines and assignment statements, but also
		nested properties and "check" statements.

		For consistency, the following restrictions have been set:

		- Among all statements comprised in a given property and in
		  other properties checked inside this property, there must
		  be at least one verification statement, namely: verification
		  of temporal logic formula, graph comparison, deadlock
		  checking, or livelock checking.

		- All such verification statements must have an expected value
		  if and only if one of them has an expected value.

		If a property does not fulfill these restrictions, then SVL
		will issue an error message.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1993
Date: 		Thu Jan 29 17:13:25 CET 2015
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/bcg_cmp, bin.*/bcg_min, bin.*/projector.a,
		src/open/generator.c, src/open/generator2.c,
		src/open/reductor2.c, src/open/reductor3.c

Nature:		Various tools of CADP (namely, BCG_CMP, BCG_MIN, PROJECTOR,
		GENERATOR, and the old versions of REDUCTOR) have been updated
		to take advantage of the BCG_IO_WRITE_BCG_ABORT() primitive
		of the ``bcg_write'' API (see item #1962 above) or to invoke
		BCG_IO_WRITE_BCG_END() if needed. This avoids leaving in the
		current directory corrupted BCG files when some error occurs.
-------------------------------------------------------------------------------
BUG FIX
Number:		1994
Date: 		Fri Jan 30 12:05:04 CET 2015
Report:		Eric Leo (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libBCG_IO.a, bin.*/bcg_*, bin.*/distributor.a

Nature:		The many changes brought to the BCG format in version 2015-a
		of CADP had introduced a bug that appeared when creating BCG
		files with unparsed labels (e.g., when invoking Distributor
		or when using the ``-unparse'' option of BCG_IO). Due to a
		bug in the computation of the length of RAW-type values,
		incorrect BCG files could be generated, leading to error
		messages of the form:

		   In function 'bcg1_read_profile_1':
		   warning: unused parameter 'bcg1_profile' [...]
		   In function 'bcg1_write_profile_1':
		   warning: unused parameter 'bcg1_profile' [...]
		   bcg_dynamic: dynamic program error

		or

		   In function 'bcg1_read_profile_1':
		   warning: unused parameter 'bcg1_profile' [...]
		   In function 'bcg1_write_profile_1':
		   warning: unused parameter 'bcg1_profile' [...]
		   bcg_area: wrong label area end offset in
		      BCG_CHECK_END_OF_AREA (expected 1084, found 217)

		when opening these files using the BCG tools. This bug has
		been fixed and hotfixed (retroactively fixed in CADP 2015-a).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1995
Date: 		Mon Feb  9 18:23:32 CET 2015
Report:		Guillaume Maudoux (Universite Catholique de Louvain, Belgium)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)	
Files:		com/tst

Nature:		The TST shell script has been enhanced to better detect
		potential installation problems:
		- It writes an informative message when the LICENSE file is
		  not readable.
		- It checks that the version of CADP installed corresponds
		  to the version indicated in the LICENSE file.
		- It better checks whether the current machine is properly
		  listed in the LICENSE file.
		- It properly displays the version number of the Glibc on
		  recent, 64-bit versions of Linux (e.g., Glibc 2.20).
-------------------------------------------------------------------------------
BUG FIX
Number:		1996
Date:		Thu Feb 12 15:38:54 CET 2015
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:          bin.*/bcg_cmp

Nature:		BCG_CMP could exit on a segmentation fault during diagnostic
		generation when the BCG graph passed as second argument on
		the command line had no transition (i.e., the initial state
		was a deadlock). This bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1997
Date:		Mon Feb 16 10:24:42 CET 2015
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl.*

Nature:		The SVL language has been extended with a new "result"
		statement that can be put after a verification statement and
		before the (optional) "expected" statement. A statement
		"result EXPR" stores the result of the verification statement
		into the shell variable denoted by the evaluation of the shell
		expression EXPR. These are two examples:

		   "a.bcg" |= < true > true;
		      result X expected TRUE;
		   % if [ "$X" = FALSE ]
		   % then
		      "b.bcg" = reduction of "a.bcg";
		   % fi

		   property P (A, Result)
		      "..."
		   is
		      "a.bcg" |= < '$A' > true;
		         result "$Result";
		   end property
		   check P ("GET", RESGET); # stores the result in $RESGET
		   check P ("PUT", RESPUT); # stores the result in $RESPUT
		   % if [ "$RESGET" != "$RESPUT" ]
		   % then
		      ...
		   % fi
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1998
Date:           Mon Feb 16 11:01:33 CET 2015
Authors:        Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:          bin.*/svl_kernel, src/svl/standard, man/*/svl.*

Nature:		The SVL language now allows to attach an "expected" statement
		to a shell command, so as to control the result of this
		command, e.g.:
		   % ./external-verification-tool -check ...
		      expected TRUE
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		1999
Date: 		Tue Feb 17 11:22:20 CET 2015
Authors:	Frederic Lang, Hubert Garavel, and Radu Mateescu (INRIA/
		CONVECS)
Files:		demos/demo_14

Nature:		The contents of the demo 14 of CADP have been revisited and
		updated:
		- File ``r5_1.aut'' was useless and has been removed.
		- The following file renamings have been performed:
		    r5_1_1.aut -> r5_1_KO.aut
		    diag_5_1_1.seq -> diag_5_1_KO.seq
		    r5_1_2.aut -> r5_1_OK.aut
		    diag_5_1_2.seq -> diag_5_1_OK.seq
		    r5_2.aut -> r5_2_OK.aut
		    diag_5_2.seq -> diag_5_2_OK.seq
		    diag_2_1_2.bcg -> diag_2_11.bcg
		    diag_2_x_1.seq -> diag_2_X.seq, for X in {1, ..., 10}
		- All files ``requirementXX.mcl'', for XX in {01, ..., 17}
		  have been removed and their formulas have been inserted
		  inline in ``demo.svl'', taking advantage of the "property"
		  and "check" statements recently added to SVL.
		- File ``macros.mcl'' was renamed into ``macros_v3.mcl'' and
		  a file ``macros_v4.mcl'' was added.
		- Value-passing formulas written in the MCL language and
		  verified using the EVALUATOR 4 model checker have been
		  added to ``demo.svl''.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2000
Date:		Tue Feb 17 17:11:23 CET 2015
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c, com/exp.open, man/*/exp.open.*

Nature:		A new option "-network nupn" was added to EXP.OPEN. This
		option translates EXP.OPEN composition expressions into the
		NUPN (Nested Unit Petri Net) format supported by CAESAR.BDD.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2001
Date: 		Wed Feb 18 17:00:43 CET 2015
Report:		Jens Meyer (Saarland University, Germany)
Authors:	Hubert Garavel (INRIA/CONVECS) and Soraya Arias (INRIA
		Grenoble, France)
Files:		INSTALLATION_WINDOWS, com/tst

Nature:		The installation instructions for CADP on Windows have been
		updated to reflect recent changes in Cygwin packages:
		- The ``util-linux'' package must now be searched in ``Base''
		  rather than ``Utils''.
		- It is now mandatory to install the``diffutils'' packages
		  pour avoir the POSIX ``cmp'' command.
		The TST shell script has been extended to check for the
		existence of the ``cmp'' command.
-------------------------------------------------------------------------------
BUG FIX
Number:		2002
Date: 		Thu Feb 19 18:37:07 CET 2015
Report:		Jens Meyer (Saarland University, Germany)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/tst

Nature:		Running TST on the recent versions of Cygwin would display
		the following (spurious) warning:
		   *** Command ls -l displays results on 11 columns
		   ==> This situation should not occur (please notify
		   cadp@inria.fr)
		This problem, most likely due to recent changes in Cygwin,
		has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2003
Date: 		Fri Feb 20 18:59:51 CET 2015
Report:		Jens Meyer (Saarland University, Germany) and Soraya Arias
		(INRIA Grenoble, France)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/installator

Nature:		Due to a bug recently introduced in CADP 2015-a, Installator
		no longer worked on Windows/Cygwin and would stop with the
		following error message:
		   *** Installator was blocked by Windows UAC (User Account
		   Control)
		   ==> You must launch Installator from a Cygwin shell window
		   running with administrative privileges...
		This issue (related to the renaming of ``install_lock.exe''
		into ``check_lock.exe'' done on January 22, 2015) has been
		fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2004
Date:		Mon Feb 23 12:34:28 CET 2015
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/bcg_cmp

Nature:		BCG_CMP could generate different diagnostics for the same
		comparison executed on different computer architectures (e.g.,
		iX86 and x64). This problem has been solved and now the
		diagnostics are the same on all computer architectures.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2005
Date: 		Mon Feb 23 17:15:14 CET 2015
Author:		Radu Mateescu (INRIA/VASY)
Files:		src/xtl/READ_ME, src/xtl/actl.mcl, src/xtl/actl_x.mcl
		
Nature:		The ``actl.mcl'' library (Action-based Computation Tree Logic)
		has been split into two parts:

		- A new ``actl_x.mcl'' library, which defines the temporal
		  operators of ACTL\X (i.e., ACTL without the next-time
		  operators), namely EU_A(), AU_A(), EU_A_A(), and AU_A_A().

		  This new library also includes the derived ACTL temporal
		  operators EF_A(), EF(), AF_A(), AF(), EG_A(), EG(), AG_A(),
		  and AG(), which were previously defined in ``actl.mcl'',
		  and which have been rewritten in a more efficient way.

		- The remaining ``actl.mcl'' library now includes the new
		  ``actl_x.mcl'' library. It was also extended with the
		  silent next-time operators EX_TAU() and AX_TAU(), which
		  complete the visible next-time operators EX_A() and AX_A()
		  already present in this library.

		Both libraries ``actl.mcl'' and ``actl_x.mcl'' can be used to
		build MCL formulas accepted by EVALUATOR 4.0. Both libraries
		can also be used to build mu-calculus formulas accepted by
		EVALUATOR 3.x, except for the two new operators EX_TAU() and
		AX_TAU() of ``actl.mcl'', which are accepted by EVALUATOR 4.0
		only. Backward compatibility is preserved as all existing
		valid mu-calculus formulas using ``actl.mcl'' can be left
		unchanged and are accepted by both EVALUATOR 3.x and 4.0.

		All macro-definitions given in these two libraries are now
		documented by comments that precisely define the semantics of
		temporal and next-time operators.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2006
Date: 		Tue Feb 24 11:33:21 CET 2015
Author:		Radu Mateescu (INRIA/VASY)
Files:		src/xtl/READ_ME, src/xtl/divbranching.mcl
		
Nature:		A new library named ``divbranching.mcl'' has been added. It
		contains temporal logic operators adequate with respect to
		divergence-sensitive branching bisimulation. Precisely,
		``divbranching.mcl'' includes ``actl_x.mcl'' and also defines
		the temporal operators of the Lmu-dsbr fragment of model
		mu-calculus [Mateescu-Wijs-14], namely UW_DIA(), UW_BOX(),
		W_DIA(), W_BOX(), W_LOOPING(), and W_SATURATION(), together
		with the absence-of-deadlock property DEADLOCK_FREEDOM().

		The library ``divbranching.mcl'' can be used to build MCL
		formulas accepted by EVALUATOR 4.0. Every formula built using
		the operators provided by this library, the Boolean operators,
		and the fixed-point operators is adequate w.r.t. divbranching.
		This allows one to minimize the LTS modulo divbranching (e.g.,
		using BCG_MIN) before carrying out the verification, without
		altering the truth value of the formula. This may improve
		significantly the performance of verification.
-------------------------------------------------------------------------------
BUG FIX
Number:		2007
Date: 		Thu Feb 24 16:51:36 CET 2015
Report:		Xiaoxiao Yang (RWTH Aachen, Germany)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature: 	A bug has been fixed in the LNT2LOTOS translator, which could
		generate illegal LOTOS code for some LNT programs, causing
		CAESAR.ADT and CAESAR to emit error messages such as:

		 In process WHILE_CONT__2 [37]
		 - variable or constant operation LOCAL__X__1 was not declared
		
		This problem was due to an incorrect dataflow analysis of
		used variables. It could occur for LNT programs in which some
		variable X is assigned in a loop L1 after a ``break''
		statement and read after loop L1. For the problem to show up,
		the ``break'' statement should occur after another loop L2
		nested in loop L1, and should not always be executed (e.g.,
		the ``break'' occurs within an ``if-then-else'' statement).
		This issue has been solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		2008
Date: 		Wed Feb 25 12:52:23 CET 2015
Report:		Frederic Lang (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		adt_string.h, bin.*/libBCG.a, bin.*/libBCG_IO.a, bin.*/bcg_*

Nature:		Following the deep changes brought to the BCG format and
		tools with the advent of CADP 2015-a, a few legacy BCG graphs
		that had been created in 2004 (version 1.0 of the BCG format)
		could no longer be read by the most recent BCG tools, which
		would stop after emitting error messages of the form:
		   adt_string.h: null byte expected
		   bcg_read_2: read failed in bcg_get_number
		This problem has been solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2009
Date: 		Wed Feb 25 15:04:06 CET 2015
Report:		Wendelin Serwe (INRIA/CONVECS)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		com/caesar.open

Nature:		The recent optimization of the ``caesar.open'' shell script
		(see item #1986 above) introduced a bug occurring when the
		GENERATOR tool is invoked with its ``-monitor'' option, e.g.:
		   caesar.open INPUT.lotos generator -monitor OUTPUT.bcg
		and only when a file ``INPUT.bcg'' already exists in the
		current directory. In such case, the ``-monitor'' option was
		ignored and the following message was emitted by CAESAR:
		   #022 warning :
		        option ``-monitor'' is only available for BCG graph
		        generation (ignored)
		This issue has been solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		2010
Date: 		Wed Feb 25 17:33:33 CET 2015
Authors:	Hubert Garavel and Jose-Ignacio Requeno (INRIA/CONVECS)	
Files:		src/xtl/ltac.xtl, src/xtl/walk.xtl, src/xtl/walk_actl.xtl

Nature:		Missing closing parentheses have been added in three XTL
		library files.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2011
Date: 		Thu Feb 26 11:02:12 CET 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/installator/installator.tcl, src/installator/convecs.gif

Nature:		INSTALLATOR now tolerates the presence of white spaces around
		the CADP download password (such spaces are usually introduced
		by cut-and-paste operations). Also, INSTALLATOR now displays
		the logo of the CONVECS team.
-------------------------------------------------------------------------------
VERSION 2015-b "Stony Brook"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2012
Date: 		Fri Feb 27 13:18:42 CET 2015
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lpp, man/*/lpp.*

Nature:		Fron now on, the LPP preprocessor can work like a Unix pipe
		when it is invoked without option or with the ``-'' option
		only. The manual page has been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2013
Date:		Mon Mar  2 17:40:30 CET 2015
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		src/svl/standard

Nature:		SVL had a bug when executing statements of either form:
			D = B |= F;
		or:
			D = verify "file.mcl" in B
		where D was a diagnostic file in a format different from BCG
		(e.g., AUT or SEQ), B an arbitrary behaviour, and F an MCL
		formula. If the verification failed (e.g., if the formula F
		or the formula contained in file "file.mcl" was syntactically
		incorrect), SVL was trying to convert a not-to-be-generated
		diagnostic file from BCG to the format of F, thus causing an
		error. This bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2014
Date: 		Wed Mar  4 13:39:58 CET 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old, man/*/caesar.*,
		demos/demo_27/HAVi_asyn.lotos, demos/demo_27/HAVi_sync.lotos

Nature:		The ``-root'' option of CAESAR has been generalized, as it
		now allows value parameters to be passed to LOTOS processes.
		For instance, it is now permitted to invoke
		   caesar -root "P [G1, ..., Gm] (V1, ..., Vn)"
		or
		   caesar -root "P (V1, ..., Vn)"
		where V1, ..., Vn are LOTOS value expressions, which must
		be compatible, in number and type, with the formal variable
		parameters of process P.

		Previously, only those processes P not having variable
		parameters could be given to the ``-root'' option; otherwise,
		an error message ``root process having value parameters'' was
		emitted.

		For technical reasons, this enhancement of CAESAR comes with
		two minor incompatible changes:

		- Previously, any process P (not having value parameters)
		  could be used with the ``-root'' option, provided that
		  the LOTOS specification contained only one process named P.
		  From now on, P may only be the identifier of the LOTOS
		  specification identifier, or the identifier of a process
		  declared at the top level. The case where P is a sub-process
		  declared within another process is now forbidden. The LOTOS
		  specifications of demo_27 have been slightly modified to
		  follow this new rule, by moving at the top level a few
		  nested sub-processes.

		- Previously, when CAESAR was invoked on a LOTOS specification
		  having variable parameters, e.g.,
		     specification S [G1, ..., Gm] (X1:S1, ... Xn:Sn) :
		     ...
		     behaviour B
		     ...
		     endspec
		  behaviour B was implicitly replaced with
		     choice X1:S1, ... Xn:Sn [] B
		  so as to enumerate all possible values of X1, ..., Xn.
		  This possibility was seldom used in practice, and proved
		  to be confusing, leading to unexpected state explosions.
		  From now on, CAESAR will stop in such case, with an error
		  message stating that the ``-root'' option should be used
		  to give actual values to X1, ..., Xn.

		Additionally, some error messages have changed. The version
		numbers of CAESAR.OLD and CAESAR have been increased to 6.6
		and 7.4, respectively. The CAESAR manual page has been
		updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2015
Date: 		Thu Mar 12 11:49:51 CET 2015
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/libcaesar.a, bin.*/bes_solve,
		man/*/caesar_solve_1.*, doc/*/Garavel-92-a.*,

Nature:		A new on-the-fly resolution algorithm, named A9, was added to
		the CAESAR_SOLVE_1 boolean resolution library of OPEN/CAESAR.
		Following this change, the version number of this library
		becomes 2.6.

		Similar to algorithm A1 already present in this library,
		algorithm A9 is based on a breadth-first search (BFS) of the
		dependency graph between boolean variables. However, rather
		than solving general equation blocks, algorithm A9 is
		specialized for solving acyclic equation blocks (i.e., without
		cyclic dependencies between variables), in the case where a
		single invocation of the algorithm is requested on the block.

		Algorithm A9 is optimized to use less memory than algorithms
		A1 and A2 (the latter is also specialized for solving acyclic
		equation blocks) by storing the minimal amount of information
		necessary for solving the boolean variable of interest.
		Algorithm A9 is especially useful for solving the boolean
		equation systems underlying the model checking of guarded
		mu-calculus formulas on acyclic LTSs. In this context, the
		best performance of algorithm A9 is obtained for trace-based
		verification (i.e., LTSs consisting of a single sequence of
		transitions).

		Given that algorithm A9 does not keep in memory the entire
		portion of the dependency graph explored, it does not produce
		any diagnostic information.

		The BES_SOLVE tool was updated to give access to algorithm A9.
		The manual page of CAESAR_SOLVE_1 has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2016
Date: 		Fri Mar 13 13:43:58 CET 2015
Authors:	Hubert Garavel, Eric Leo, and Hugues Evrard (INRIA/CONVECS)
Files:		ext/vim/READ_ME, ext/vim/lotos.vim, ext/vim/lnt.vim,
		ext/vim/mcl.vim, ext/vim/svl.vim, ext/vim/cadp.vimrc

Nature:		The Vim support for CADP has been improved as follows:

		- The LOTOS mode (predefined in Vim distribution) has been
		  replaced with an enhanced mode in file ``lotos.vim''.

		- The LNT mode distributed with former versions of CADP has
		  been enhanced. In particular, the new LNT keyword "only" is
		  now supported.

		- Modes for MCL and SVL have been added.

		- The installation of these modes has been simplified with
		  the introduction of a file ``cadp.vimrc'' that loads the
		  modes for all CADP languages for which Vim support exists.
		  The READ_ME file has been updated accordingly.

		To benefit from these new features, users should update their
		.vimrc and .vim/syntax/* files as explained in the READ_ME
		file. The modification of the .vimrc file has been made
		simpler, as a single command line is now sufficient.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2017
Date:		Mon Mar 16 09:33:24 CET 2015
Report:		Hugues Evrard (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl.*

Nature:		The SVL syntax was made more regular. Formerly, comparison,
		deadlock, and livelock statements required a mandatory
		diagnostic file, whereas the diagnostic file was optional in
		temporal logic verification statements. The diagnostic file
		is now optional also for comparison, deadlock, and livelock
		statements.
-------------------------------------------------------------------------------
BUG FIX
Number:		2018
Date: 		Mon Mar 16 14:36:26 CET 2015
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		When an LNT process was invoked with an actual gate parameter
		that had not been declared, LNT2LOTOS would emit two error
		messages in sequence:
		   ** error at line ...:
		      gate ``G'' was not declared
		   ** error at line ...:
		      gate ``G'' has channel ``'' where ``GLOBAL'' is expected
		The second error message was spurious and has been suppressed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2019
Date: 		Tue Mar 17 11:09:20 CET 2015
Report:		Hubert Garavel (INRIA/CONVECS) and Zhen Zhang (University of
		Utah, USA)
Authors:	Radu Mateescu and Wendelin Serwe (INRIA/CONVECS)
Files:		man/*/bisimulator.* doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The CADP documentation has been enhanced in two places:
		- The BISIMULATOR manual page now cites the relevant paper
		  [Bergamini-Descoubes-Joubert-Mateescu-05]
		- Section 6.4.9 ("Patterns") of the LNT2LOTOS Reference Manual
		  contained a wrong statement that has been corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2020
Date: 		Tue Mar 17 14:13:13 CET 2015
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/evaluator.a, bin.*/evaluator4.a, bin.*/libevaluator.a,
		bin.*/mcl_expand4, man/*/evaluator.*,  man/*/evaluator4.*

Nature:		The model checkers EVALUATOR 3.x and EVALUATOR 4.0 have been
		enhanced to reduce memory consumption when checking temporal
		logic formulas on acyclic LTSs. Precisely:

		- Option ``-acyclic'' was enhanced with an automatic detection
		  of unguarded fixed point subformulas in the input formula.
		  A fixed-point subformula "mu X . F" ou "nu X . F" is
		  unguarded if the state formula F contains at least one
		  free occurrence of the propositional variable X that is not
		  preceded (immediately or not) by a modality.

		  If the input formula is guarded (i.e., it does not contain
		  any unguarded subformulas), the translation of the
		  verification problem into a boolean equation system was
		  optimized by merging all equations in a single block. This
		  may reduce the memory consumption when checking formulas
		  containing several fixed-point operators with different
		  polarities (which previously led to boolean equation systems
		  with several equation blocks).

		  If the input formula is unguarded (which may yield a boolean
		  equation system with cyclic dependencies between variables
		  even if the LTS is acyclic), an error message is displayed
		  and the execution is aborted.

		- Options ``-acyclic'' and ``-bfs'', which were previously
		  exclusive, can now be used simultaneously. This combination
		  of options invokes the resolution algorithm A9 newly added
		  to the CAESAR_SOLVE_1 library (see item #2015 above), which
		  reduces memory consumption w.r.t. algorithm A1 invoked when
		  option ``-bfs'' is present on the command line but option
		  ``-acyclic'' is not. In particular, if the LTS is a sequence
		  and the input formula is dataless, the memory used for
		  verification is bounded by the size of the formula (number
		  of operators) and independent of the length of the sequence
		  (number of transitions).

		  When both options ``-acyclic'' and ``-bfs'' are present,
		  it is the user's responsibility to ensure that the LTS is
		  indeed acyclic, as the absence of cycles in the LTS will
		  not be checked; in such case the model-checker may enter
		  an infinite loop (the situation is different when both
		  options ``-acyclic'' and ``-dfs'' are given, as the presence
		  of cycles in the LTS stops the execution with an error
		  message).

		The version numbers have been raised to EVALUATOR 3.7 and
		EVALUATOR 4.1, respectively. The manual pages have been
		updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2021
Date:		Wed Mar 18 15:55:51 CET 2015
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl.*

Nature:		SVL has been modified to take advantage of the increased
		flexibility of CAESAR's ``-root'' option (see item #2014
		above). Therefore, one can now pass value parameters to LOTOS
		processes directly in the SVL script, e.g.:
		   "prog.lnt" : PROCESS [A, B] (-1 of Int, 'X', Cons (1))
		This simplifies compositional verification scripts, as it is
		no longer required to define auxiliary, non-parameterized
		processes in the source LOTOS files: one can now directly
		invoke the original LOTOS processes by passing them value
		parameters. This led to a new version 2.7 of SVL. The SVL
		manual page has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2022
Date: 		Thu Mar 19 10:16:37 CET 2015
Authors:	Eric Leo, Hugues Evrard, and Hubert Garavel (INRIA/CONVECS)
Files:		ext/emacs/lotos-mode.el, ext/emacs/lotos-aux.el,
		ext/emacs/lnt-mode.el, ext/emacs/lnt-aux.el,
		ext/emacs/mcl-mode.el, ext/emacs/svl-mode.el,
		ext/emacs/cadp.el, ext/emacs/READ_ME

Nature:		The Emacs/Xemacs support for CADP has expanded as follows:

		- The LOTOS mode has been slightly modified and split into
		  two distinct files (``lotos-mode.el'' and ``lotos-aux.el'').
		  These changes should be invisible to most users.

		- The LNT mode has been also split into two files named
		  ``lnt-mode.el'' and ``lnt-aux.el''. The new LNT keyword
		  "only" is now supported. The rules for coloring LNT types
		  and channel identifiers have been modified (and perhaps,
		  degraded).

		- Syntax-based coloring has been added for the MCL and SVL
		  languages of CADP.

		- The installation has been simplified with the introduction
		  of an entry-point file ``cadp.el''. Users should update
		  their .emacs file as explained in the READ_ME file.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2023
Date: 		Fri Mar 20 11:42:35 CET 2015
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		demos/demo_02, demos/demo_08, demos/demo_20, demos/demo_31

Nature:		Four demos of CADP have been simplified by taking advantage
		of the increased flexibility of CAESAR's ``-root'' option and
		of the possibility to pass value parameters to LOTOS processes
		in SVL scripts. Precisely:

		- For demo_02: The auxiliary processes BODY_TRANSMITTER and
		  BODY_RECEIVER needed only for compositional verification
		  have been removed from files ``bitalt_protocol.lotos'' and
		  ``bitalt_mistake.lotos''.

		- For demo_08: In file ``rel_rel_B.lotos'', both processes
		  Fail_Receiver1 and Fail_Receiver2 have been replaced by one
		  single process Fail_Receiver; similarly, the two processes
		  Receiver_Thread1 and Receiver_Thread2 have been merged into
		  a single process Receiver_Thread.

		- For demo_20: The three auxiliary processes Receiver_Node_1,
		  Receiver_Node_2, and Receiver_Node_3 have been removed.

		- For demo_31: In file ``erlang.lotos'', all processes have
		  been replaced by a unique parameterized BUS process.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2024
Date: 		Mon Mar 23 11:20:32 CET 2015
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, com/lnt.open, man/*/lnt2lotos.*,
		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The ``-root'' option of LNT.OPEN and LNT2LOTOS has been
		made more general. Formerly, the process P specified using
		``-root P'' (or the process MAIN when option ``-root'' was
		not given) had to be declared in the principal module, i.e.,
		the LNT file mentioned on the command line; otherwise, the
		translation to LOTOS would abort with an error message.

		From now on, it is permitted to invoke
		   lnt2lotos -root "P [G1, ..., Gn]" F.lnt
		or
		   lnt.open -root "P [G1, ..., Gn]" F.lnt
		even if process P is not directly declared in ``F.lnt'' but
		in another LNT file transitively included by ``F.lnt''. If
		the gates G1, ..., Gn are not specified, then the formal gate
		parameters of P will be used if P is declared in ``F.lnt'',
		or an empty list of gate will be used otherwise.

		The manual page and the Reference Manual of LNT2LOTOS have
		been updated accordingly. In particular, the definition of
		the ``principal module'' has been revised.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2025
Date: 		Mon Mar 23 16:34:40 CET 2015
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_17, demos/demo_27, demos/demo_33, demos/demo_36

Nature:		Pursuing the changes undertaken in item #2023 above, four
		more CADP demos have been shortened and simplified:

		- For demo_17: Both files ``COMPO_WITHOUT_CRASHES.lib'' and
		  ``COMPO_WITH_CRASHES.lib'' have been removed, together with
		  all the processes that they contained, some of which have
		  been expanded in-line in the ``demo.svl'' script. All files
		  ``EXPERIMENT_xx.lotos'' (with xx ranging from 09 to 16) have
		  been simplified to cease including those two removed files.

		- For demo_25: 155 lines of LOTOS code have been deleted by
		  removing many processes (ChannelProxy12, ChannelProxy21,
		  Master1with2, OutputCell12, OutputCell123, OutputCell1with2,
		  OutputCell2with1, Proxy12, Proxy21, Site1, Site12, Site123,
		  Site1with2, Site2with1, Site1with23, Site2Proxy), by merging
		  processes GeneralUser1, GeneralUser2, and GeneralUser3 into
		  a single parameterized process GeneralUser, and by expanding
		  inline other processes (ChannelProxy123, ChannelProxy213,
		  ChannelProxy312, Master1, OutputCell1, OutputCell2,
		  OutputCell3, Proxy123, Proxy213, Proxy312, Site2, and Site3)
		  directly into the SVL script.

		- For demo_27: In file ``HAVi_asyn.lotos'', the auxiliary
		  processes ROOT_BUSRESET, ROOT_DCM1, ROOT_DCM2, ROOT_CMM1,
		  ROOT_CMM2, ROOT_MS1, and ROOT_MS2 have been removed. In
		  file ``HAVi_sync.lotos'', processes ROOT_CMM1, ROOT_CMM2,
		  ROOT_OTHERCOMM1, and ROOT_OTHERCOMM2 have been removed.
		  In both files, the two processes ROOT_DCM1 and ROOT_DCM2
		  have been merged into one single process DCM.

		- For demo_33: File ``CONSENSUSPROC.lib'' was renamed into
		  ``CONSENSUS.lotos''; three files ``consensus-3-1.lotos'',
		  ``consensus-3-2.lotos'', and ``TRISTATE.lib'' have been
		  removed; files ``consensus-3-1.t'' and ``consensus-3-2.t''
		  have been replaced by a single file ``CONSENSUS.t''.

		- For demo_36: Processes UNIT_INTERFACE and UNIT_INTERFACE_AUX
		  have been deleted (they were unused); process GENERATOR was
		  removed too and process GENERATOR_AUX was renamed into
		  GENERATOR.
-------------------------------------------------------------------------------
BUG FIX
Number:		2026
Date: 		Tue Mar 24 16:40:10 CET 2015
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		A bug was fixed in LNT2LOTOS, which generated incorrect LOTOS
		code when a process having no gate parameter and at least two
		variable parameters was invoked with actual value parameters
		passed using the "named style" with arguments passed in a
		different order than the way they are declared, e.g.:
		   process P (x, y: Bool) is ...
		   ...
		   P (y => b, x => a)
		In such case, LNT2LOTOS would generate LOTOS code using the
		declaration order rather than the order specified by the
		"named style". From now on, this situation is properly
		detected and an error message is emitted:
		   ** error at line ...
		      named-style value parameters are not yet supported
		      for processes
		   ** lnt2lotos: LNT program is semantically incorrect
-------------------------------------------------------------------------------
BUG FIX
Number:		2027
Date: 		Wed Mar 25 11:50:34 CET 2015
Authors:	Hubert Garavel and Radu Mateescu (INRIA/CONVECS)
File:		bin.*/cunctator.a

Nature:		A problem was fixed that caused CUNCTATOR to core dump on
		architecture sol64 (64-bit Solaris on Intel processors).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2028
Date: 		Thu Mar 26 13:47:40 CET 2015
Authors:	Eric Leo and Hugues Evrard (INRIA/CONVECS)
Files:		ext/READ_ME, ext/latex-listings/READ_ME,
		ext/latex-listings/cadp.sty,
		ext/latex-listings/cadp-lotos.sty,
		ext/latex-listings/cadp-lnt.sty,
		ext/latex-listings/cadp-mcl.sty,
		ext/latex-listings/cadp-svl.sty

Nature:		Configuration files for the LaTeX ``listings'' package have
		been added for the LOTOS, LNT, MCL, and SVL languages of CADP.
		Instructions for using these files can be found in the READ_ME
		file.
-------------------------------------------------------------------------------
VERSION 2015-c "Stony Brook"
-------------------------------------------------------------------------------
BUG FIX
Number:		2029
Date:		Fri Mar 27 13:42:55 CET 2015
Report:		Fatma Jebali and Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c, bin.*/svl

Nature:		EXP2C and SVL rejected carriage-return characters in ``.exp''
		and ``.svl'' files. Such characters are now handled properly
		as a blank.
-------------------------------------------------------------------------------
BUG FIX
Number:		2030
Date:		Mon Mar 30 17:18:54 CEST 2015
Report:		Radu Mateescu (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel

Nature:		Behaviour expressions combining both total hiding of regular
		expressions and generalized parallel composition were expanded
		incorrectly by SVL. For instance, the expression:
		    total hide "G.*" in
			par G in B1 || B2 end par
		    end hide
		was expanded incorrectly into:
		    total hide "G.*" in
			par G in
			    total hide "G.*" in B1 end hide
			||
			    total hide "G.*" in B2 end hide
			end par
		    end hide
		This bug has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2031
Date:		Tue Mar 31 17:56:05 CEST 2015
Authors:	Hubert Garavel and Radu Mateescu (INRIA/CONVECS)
File:		bin.*/xtl

Nature:		XTL could stop with a "memory shortage" system error when
		comparing tuple values. This bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2032
Date:		Fri Apr  3 15:39:18 CEST 2015
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		Various error messages emitted by LNT2LOTOS have been made
		more explicit. For instance:
		   process ``P'' is unknown
		is replaced with:
		   gate parameters in named style cannot be handled because
		   process ``P'' is not defined in the current module
		Another example is:
		   gate ``i'' is forbidden here
		which is replaced with:
		   gate ``i'' is forbidden as an actual gate parameter
-------------------------------------------------------------------------------
BUG FIX
Number:		2033
Date:		Tue Apr  7 13:12:26 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		The ``-root'' option of CAESAR did not detect the cases where
		the internal gate ``i'' was used as an actual gate parameter,
		e.g., ``-root P [..., i, ...]''. This could generate labelled
		transition systems containing labels having the internal gate
		together with offers, e.g., ``i !123''. This situation is now
		forbidden and fatal error messages are emitted:
		   #038 error during analysis:
	                ``i'' and ``I'' are reserved gate identifiers
		   #044 error during analysis:
		        gates cannot bind correctly
		        quit
-------------------------------------------------------------------------------
BUG FIX
Number:		2034
Date:		Wed Apr  8 16:34:29 CEST 2015
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos, man/*/lnt2lotos.*

Nature:		Three issues in the ``-root'' option of LNT2LOTOS have been
		addressed:

		1) Previously, LNT2LOTOS did not document the use of named
		gate parameters and ellipsis in invocations of the form:
		   -root "P [G => X, H => Y]"
		or
		   -root "P [G => X, ...]"
		Such cases were neither checked nor properly handled,
		resulting in an unspecified effect. From now on, named gate
		parameters are permitted and documented, but only if process
		P is defined in the principal LNT module. The manual page
		has been updated accordingly.

		2) Previously, LNT2LOTOS did not detect when the internal
		gate ``i''' was used as an actual gate parameter, e.g.,
		   -root "P [..., i, ...]"
		In such case, LNT2LOTOS generated an incorrect LOTOS program
		that was later rejected by CAESAR and CAESAR.ADT. From now
		on, LNT2LOTOS emits an error and stops.

		3) Previously, LNT2LOTOS generated incorrect LOTOS code when
		invoked with a non-injective gate relabelling, e.g.,
		   -root "P [... G ... G ...]"
		This code was later rejected by CAESAR and CAESAR.ADT with
		the following error messages:
		   #043 error during analysis:
		        gate declared several times
		   #044 error during analysis:
		        gates cannot bind correctly
		        quit
		   In specification MAIN [...]
		      - gate G was already declared
		This issue has been solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		2035
Date:		Thu Apr  9 11:10:01 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		A bug recently introduced since CADP 2015-b (see item #2014
		above) has been fixed. Because of this bug, CAESAR rejected
		all uses of the ``-root'' option with non-injective gate
		relabellings, i.e., ``-root P [... G ... G ... ] (...)'',
		and emitted the following error messages:
		   #110 warning :
		        option ``-root'' with identical gate parameters
		   #043 error during analysis:
		        gate declared several times
		   #044 error during analysis:
		        gates cannot bind correctly
		        quit
		   In the argument of the ``-root'' option
		      - gate G is used several times in option ``-root''
		      - gate G was already declared
		From now on, this situation is tolerated, and only causes a
		warning message:
		   #110 warning :
		        option ``-root'' with identical gate parameters
		   In the argument of the ``-root'' option
		        - gate G is used several times in option ``-root''
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2036
Date:		Thu Apr  9 18:23:02 CEST 2015
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, com/lnt.open,
		man/*/lnt2lotos.*, man/*/lnt.open.*

Nature:		The ``-root'' option of LNT2LOTOS and LNT.OPEN has been
		extended to accept value parameters for LNT processes. In
		particular, LNT.OPEN now invokes LPP to expand rich-term
		syntax notations possibly contained in such value parameters.
		The documentation of these tools has been updated.

		Also, when the main LNT process has value parameters, a
		warning message is now emitted if the ``-root'' option is
		not used (the generated LOTOS code will subsequently be
		rejected by CAESAR.ADT and CAESAR).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2037
Date:		Fri Apr 10 09:36:58 CEST 2015
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl, man/*/svl.*

Nature:		SVL has been extended to support value parameters for LNT
		processes, in the same way as for LOTOS processes (see item
		#2021 above).
-------------------------------------------------------------------------------
BUG FIX
Number:		2038
Date:		Fri Apr 10 12:53:13 CEST 2015
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		com/caesar.open

Nature:		Two issues have been fixed in the CAESAR.OPEN shell script:

		- The ``-nupn'' command of CAESAR was passed to CAESAR.ADT
		  also, causing a spurious warning of the following form:
	             #003 warning :
		          bad option (ignored)

		- The ``-prefix'' and ``-infix'' options of CAESAR.ADT were
		  passed to CAESAR also, causing spurious warnings too:
		     #003 warning :
		          bad option (ignored)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2039
Date:		Fri Apr 10 15:34:47 CEST 2015
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		demo_28/demo.svl, demo_28/cache.lnt,
		demo_28/LOTOS/demo.svl, demo_28/LOTOS/cache.lotos,
		demo_35/demo.svl, demo_35/summation.lotos,
		demo_35/LOTOS/demo.svl, demo_35/LOTOS/summation.lotos

Nature:		The demos 28 and 35 have been simplified by taking advantage
		of the possibility to pass value parameters in the ``-root''
		option of CAESAR and LNT2LOTOS:

		- In demo_28, the auxiliary processes AGENT_1, AGENT_2, and
		  AGENT_3 (plus one auxiliary process for REMOTE_DIRECTORY
		  in the LOTOS specification) have been removed.

		- In demo 35, the auxiliary processes P_0, ..., P_5 have been
		  removed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2040
Date:		Sun Apr 12 10:14:35 CEST 2015
Authors:	Radu Mateescu and Hubert Garavel (INRIA/CONVECS)
File:		bin.*/xtl

Nature:		The typing rules of XTL with respect to expressions containing
		Natural/Integer constants and/or String/Raw constants have
		been relaxed, so as to accept more XTL specifications and
		reduce the need for introducing explicit type coercions
		(``of Natural'', ``of Integer'', etc.). In particular, the
		following situations have been dealt with:
		- tuple values, e.g., (1, "a")
		- arguments of the ``print'' function, e.g., print ((0, 1))
		- abbreviated iterators, e.g., <| + on T : edge |> 1
		- expressions occurring on the left-hand side of the ``->''
		  reification operator
		- expressions occurring as the body of the XTL specification
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2041
Date:		Mon Apr 13 14:07:57 CEST 2015
Authors:	Damien Thivolle (INRIA/VASY), Hubert Garavel, and Frederic
		Lang (INRIA/CONVECS)
File:		demos/demo_05

Nature:		Demo 05, which had been emptied in January 2014 (see item
		#1770 above), has been replaced with a new demo example
		featuring the compositional verification of an airplane-
		ground communication protocol.
-------------------------------------------------------------------------------
VERSION 2015-d "Stony Brook"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2042
Date:		Mon Apr 27 18:30:14 CEST 2015
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, man/*/svl.*

Nature:		SVL now accepts LNT process instantiations with gate parameters
		in the named style. For instance, if P is a process defined in
		"file.lnt" with formal gates G1 and G2, then the following
		process instantiations:
			"file.lnt" : P [G1 => G, G2 => H]
			"file.lnt" : P [G2 => G, G1 => H]
			"file.lnt" : P [G2 => G, ...]
			"file.lnt" : P [...]
		are now valid.
-------------------------------------------------------------------------------
BUG FIX
Number:		2043
Date:		Wed Apr 29 15:48:45 CEST 2015
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		An issue was fixed in the LOTOS code generated by LNT2LOTOS,
		which in certain case would introduce superfluous code
		fragments of the form: ``>> exit''. For instance, LNT2LOTOS
		would generate ``( P [G] (N+1) >> (*! atomic *) exit )''
		instead of simply ``P [G] (N+1)''.

		Although not incorrect, such code fragments would cause
		spurious warnings to be emitted by CAESAR, e.g.:
		     warning during generation:
		     impossible rendez-vous detected
		   - a deadlock exists for rendez-vous:
		        exit
		     synchronized by parallel operator ``|[exit]|''
		     this gate/offer combination is used in the right operand:
		        exit; exit; stop
		     but not in the left operand:
		        ...
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2044
Date:		Wed Apr 29 18:59:20 CEST 2015
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel

Nature:		The way SVL handles expressions of the form
			hide ... in "file.exp"
		or
			rename ... in "file.exp"
		has changed.

		Previously, the BCG graph corresponding to "file.exp" was
		first generated using EXP.OPEN and GENERATOR, and the labels
		were then hidden or renamed in the resulting BCG graph using
		BCG_LABELS. Therefore, the result of the above expressions
		was necessarily a BCG graph.

		From now on, the above expressions are copied in intermediate
		EXP files, which enables them to be explored on-the-fly or
		compositionally (e.g., using smart reduction). Notice that
		this change slightly affects the way certain demos (e.g.,
		demo_05 and demo_08) are executed, possibly leading to smaller
		intermediate files.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2045
Date:		Thu Apr 30 14:57:15 CEST 2015
Authors:	Wendelin Serwe, Frederic Lang, and Hubert Garavel (INRIA
                CONVECS)
File:		bin.*/lnt2lotos

Nature:		LNT2LOTOS now emits a better warning when an ``inout''
		parameter of some function or process is assigned before
		used on all execution branches:
		   ** warning at line ...
		   in process P, ``inout'' parameter X should be declared
		   ``out'' because it is never used before being assigned
-------------------------------------------------------------------------------
BUG FIX
Number:		2046
Date:		Wed May  4 11:21:53 CEST 2015
Author:		Eric Leo (INRIA/CONVECS)
Files:		ext/emacs/lnt-mode.el, ext/emacs/svl-mode.el

Nature:		In the EMACS mode for the LNT and SVL languages: multi-line
		comments were not properly defined, so that the EMACS command
		"comment-region" would not work. This issue has been solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2047
Date:		Mon May 11 11:16:22 CEST 2015
Report:		Hugues Evrard (INRIA/CONVECS)
Author:		Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		In the LNT2LOTOS reference manual, Annex B (which formally
		defines the dynamic semantics of LNT2LOTOS) has been enhanced
		in several respects:

		- In Section B.6.16, a typo reported by Hugues Evrard in
		  the natural-language explanation of the semantics of the
		  "disrupt" operator has been corrected.

		- Several notations have been changed to be more intuitive:
		  gate renamings are now noted `\gamma' rather than `\sigma';
		  memory stores are now noted `\sigma' rather than `\rho';
		  configurations are now noted `<B, \sigma>' rather than
		  `{B} \rho'; sequence-passing transitions are now noted
		  using a tick (i.e., `\surd') rather than the `exit' keyword;
		  the operations on memory stores now have a clearer syntax,
		  etc.

		- The quantified variables in SOS rules are now more explicit,
		  and the nature of quantifiers (existential or universal)
		  have been precised.

		- One of the SOS rules for the sequential composition operator
		  in LNT instructions has been simplified.

		- The SOS rules for the parallel composition operator in LNT
		  behaviours have been made shorter and clearer.

		- The SOS rules for the ``loop'' operator have been simplified
		  and the pseudo-operator ``trap'' used in these rules has
		  been replaced by a simpler function.

		- The SOS rules for functions and process calls have been
		  simplified.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2048
Date:		Mon May 11 16:07:54 CEST 2015
Authors:	Eric Leo and Hubert Garavel (INRIA/CONVECS)
Files:		ext/emacs/cadp.el, ext/emacs/bes-mode.el,
		ext/emacs/rbc-mode.el, ext/emacs/READ_ME,
		ext/latex-listings/cadp.sty, ext/latex-listings/cadp-bes.sty,
		ext/latex-listings/cadp-rbc.sty, ext/latex-listings/READ_ME,
		ext/vim/cadp.vimrc, ext/vim/bes.vim, ext/vim/rbc.vim,
		ext/vim/READ_ME, ext/READ_ME

Nature:		For all the text editors supported by CADP, syntax modes have
		been added for ``.bes'' and ``.rbc'' files (see the manual
		pages of ``bes_solve'' and ``caesar_solve'' for a description
		of the BES and RBC formats).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2049
Date:		Tue May 12 10:09:16 CEST 2015
Author:		Wendelin Serwe, Frederic Lang, and Hubert Garavel (INRIA/
                CONVECS)
File:		bin.*/lnt2lotos

Nature:		LNT2LOTOS now emits better warnings when an ``in'' or
		``inout'' parameter of some function or process is not used
		and/or assigned. The following warning:
		    in process P, value of parameter N is unused
		has been replaced by more precise warnings such as:
		    in process P, parameter N is never used nor assigned
		and
		    in function F, ``inout'' parameter N should be declared
		    ``out'' because it is never used before being assigned
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2050
Date:		Tue May 12 13:35:53 CEST 2015
Authors:	Hubert Garavel (INRIA/CONVECS), Julian Jacques Maurer
		(Saarland University, Germany), and Jose-Ignacio Requeno
		(INRIA/CONVECS)
Files:		demos/demo_16/*, demos/demo_16/LOTOS/*

Nature:		Demo 16 of CADP (Philips' Bounded Retransmission Protocol) has
		been translated to LNT, with the help of draft translations
		provided by Julian Jacques Maurer and Jose-Ignacio Requeno,
		leading to a more readable formal description. The existing
		LOTOS files have been moved to the demo_16/LOTOS directory.
		Minor changes have been brought to the LOTOS files to ensure
		compatibility with the LNT description: precisely, files have
		been renamed and the ``(*! list *)'' pragma was added to the
		Msg type, so that its value now display as, e.g., ``{1, 2}''
		rather than ``CONS (DATA (1), CONS (DATA (2), NIL))''. The
		``macros.xtl'' file was simplified accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2051
Date:		Wed May 13 11:37:52 CEST 2015
Authors:	Eric Leo and Hubert Garavel (INRIA/CONVECS)
Files:		ext/gtk3/bes.lang, ext/gtk3/lnt.lang, ext/gtk3/lotos.lang,
		ext/gtk3/mcl.lang, ext/gtk3/rbc.lang, ext/gtk3/svl.lang,
		ext/gtk3/READ_ME, ext/READ_ME

Nature:		Syntax modes (with colors) have been added for all the editors
		compliant with GtkSourceView 3.0, and especially the editor
		"gedit" of Gnome. At the moment, the following languages and
		file formats are supported: BES, LNT, LOTOS, MCL, RBC, and
		SVL. See ext/gtk3/READ_ME to see how these modes can be used.
-------------------------------------------------------------------------------
BUG FIX
Number:		2052
Date:		Wed May 13 16:11:45 CEST 2015
Report:		Yin Chaoran (North China University of Technology, Beijing,
		P.R. China)
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		src/com/cadp_where

Nature:		An error was fixed in the ``cadp_where'' shell-script, which
		caused error messages of the following form:
		   sed: -e expression #1, char 1: unknown command: `^'
		to occur when running the TST command on Windows/Cygwin.
-------------------------------------------------------------------------------
VERSION 2015-e "Stony Brook"
-------------------------------------------------------------------------------
BUG FIX
Number:		2053
Date:		Fri May 15 14:03:50 CEST 2015
Report:		Fatma Jebali (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		doc/*/Champelovier-Clerc-Garavel-10-et-al.*

Nature:		The bibliography was missing from the LNT2LOTOS Reference
		Manual due to a problem in a script used to generate the
		documentation of CADP. This issue has been solved and
		hotfixed in CADP 2015-e.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2054
Date:		Wed May 20 18:40:13 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		From now on, in the NUPN format, the ``!unit_safe'' pragma
		can be followed by the name of the tool used to check unit
		safeness; this enables one to check that a NUPN file is unit
		safe by using a different tool than the one used to produce
		the NUPN file, e.g.:
			!creator pnml2nupn 1.1.2
			!unit_safe cosyverif/safety 1.0
		This change is upward compatible, as the information following
		``!unit_safe'' is optional. The version number of CAESAR.BDD
		increased to 2.4, the CAESAR.BDD manual page was updated
		accordingly, and the output generated by the options ``-mcc''
		and ``-vlpn'' of CAESAR.BDD was enhanced to use the additional
		information potentially following the ``!unit_safe'' pragma.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2055
Date:		Thu May 21 13:09:43 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		Various changes have been brought to CAESAR.BDD:

		- The (undocumented) option ``-vlpn'' has been removed, since
		  it was similar to the ``-mcc'' option, and the differences
		  were no longer useful.

		- The output of the (undocumented) option ``-mcc'' has been
		  modified by replacing the macro \PlacesTransitionsArcs with
		  a new macro \PlacesTransitionsArcsUnitsDepthBreadthBits.

		- A new option ``-encodings'' has been added, which displays
		  the various bit encodings possible for a given NUPN model.
		  Such information was previously displayed by the ``-check''
		  option on the stderr stream, it is now displayed on the
		  stdout stream when the ``-encodings'' option is used.

		The CAESAR.BDD manual has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2056
Date:		Mon May 25 10:08:55 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		CAESAR.BDD has been made more efficient when handling NUPN
		models having a simple hierarchical structure, namely, when
		the number of leaf units is greater or equal to the number of
		units minus one. This condition covers communicating automata
		(i.e., HWB code of the form 1-H-B), pseudo communicating
		automata (i.e., HWB code of the form 2-H-B), and models having
		no genuine NUPN structure (i.e., HWB code of the form --B).
		In such case, CAESAR.BDD no longer allocates its internal
		matrix-nesting structure, leading to significant memory
		savings.
-------------------------------------------------------------------------------
BUG FIX
Number:		2057
Date:		Tue May 26 08:47:42 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		The version of the Cudd BDD package used by CAESAR.BDD has
		been upgraded from Cudd 2.4.1 to Cudd 2.5.1. This removed
		a segmentation fault occurring when running CAESAR.BDD on a
		large NUPN model.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2058
Date:		Fri May 29 17:57:30 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		Twelve new options have been added to CAESAR.BDD, namely:
		``-arcs'', ``-bits'', ``-creator'', ``-density'', ``-height'',
		``-hwb'', ``-multiple-arcs'', ``-multiple-initial-tokens'',
		``-places'', ``-transitions'', ``-units'', and ``-width''.
		These options provide structural information about a NUPN
		file. Although the same results could be obtained using the
		UNIX ``grep'' command, the CAESAR.BDD options are much faster,
		especially for large NUPN models, as they do not parse the
		entire file.
-------------------------------------------------------------------------------
BUG FIX
Number:		2059
Date:		Sat May 30 10:13:56 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		The previous versions of CAESAR.BDD could make segmentation
		faults with core dumps when run on large NUPN models, because
		of overflows during integer multiplications. From now on,
		CAESAR.BDD systematically checks for overflows when integer
		multiplications are performed, and displays proper error
		messages when allocation fails:
		   caesar.bdd: could not allocate memory for arcs (...
		   bytes needed)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2060
Date:		Tue Jun  2 18:02:24 CEST 2015
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		Various dataflow-related warning messages of LNT2LOTOS have
		been enhanced. Examples of the new messages are:

		- ``in'' parameter X is never used

		- ``inout'' parameter X is never used nor assigned

		- ``inout'' parameter X should be declared ``in'' because
		   it is used but never assigned
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2061
Date:		Thu Jun  4 18:37:45 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		CAESAR.BDD has been made much faster when reading large NUPN
		files. On some examples, the time needed to parse transitions
		was reduced from 30 minutes to 25 seconds.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2062
Date:		Thu Jun  4 19:58:57 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		A new option ``-redundant-units'' has been added to CAESAR.BDD
		so as to display units that have no local places, or that
		have a single sub-unit and are not the root unit.

		The manual page of CAESAR.BDD has been updated to remove the
		former constraint #16:
		   16.  <nb-of-subplaces> = 0 => <unit-nb> = <root-unit-nb>
				              and <nb-of-units> > 1
		        -- a unit has at least one local place, except perhaps
		        -- the root unit if it has several subunits
		This constraint #16 was forbidden by the manual but tolerated
		by the CAESAR.BDD tool (except when the ``-check'' option
		was used). The manual has been aligned with the software,
		and all the subsequent constraints from #17 to #37 have been
		renumbered from #16 to #36.

		The ``-check'' option has been also adapted. From now on, it
		no longer emits a fatal error message:
		   caesar.bdd: line ...: null number of places for unit U1
		but merely a warning message:
		   caesar.bdd: line ...: redundant unit U1, which has no
		   local place and is not the root unit
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2063
Date:		Mon Jun  8 15:20:04 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		The size of the incidence matrix, which is the largest data
		structure allocated by CAESAR.BDD, has been divided by four.
		Consequently, larger NUPN models can now be processed by
		CAESAR.BDD.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2064
Date:		Thu Jun 11 14:27:15 CEST 2015
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-10-et-al.*,
		com/upc

Nature:		The ``inout'' keyword of the LNT language has been deprecated
		and should now be written ``in out'', i.e., in two words.
		This change makes LNT closer to Ada and prepares forthcoming
		modifications in LNT.

		From now on, the LNT2LOTOS compiler emits a gentle warning
		when ``inout'' is used in place of ``in out''.

		To ease the transition, the ``upc'' shell script has been
		entirely rewritten. Running the following command:
			upc 2015-LNT-INOUT [<directory>]
		will search for all ``.lnt'' files in <directory> (or in the
		user's home directory if <directory> is ommitted) and propose
		to replace ``inout'' with ``in out'' automatically.
-------------------------------------------------------------------------------
BUG FIX
Number:		2065
Date:		Fri Jun 12 12:47:54 CEST 2015
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		src/com/caesar.open

Nature:		The $CADP_TIME environment variable (see items #1276 and #1581
		above) had no effect when the ``caesar.open'' shell script
		invoked CAESAR directly (rather than invoking GENERATOR).
		This problem was fixed, so that ``caesar.open'' now provides
		time and memory statistics in all cases.
-------------------------------------------------------------------------------
VERSION 2015-f "Stony Brook"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2066
Date:		Wed Jun 17 16:37:49 CEST 2015
Report:		Hubert Garavel (INRIA/CONVECS)
Authors:	Wendelin Serwe and Frederic Lang (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		The LNT language has been enriched with a new mode noted
		``in var'' for passing parameters to functions and processes.

		Parameters declared ``in var'' are similar to parameters
		declared ``in'' but they can be assigned in the body of the
		function or process like a local variable. The new keyword
		``in var'' expresses that the parameter is a combination of
		an ``in'' parameter and a local variable (declared ``var'').

		From now on, it is not longer allowed to assign a parameter
		declared ``in'': to be assigned, such a parameter should
		be declared ``in var'' instead. A new version 6.3 of the
		LNT2LOTOS translator has been released, which warns about
		improper assignments to ``in'' variables:
		   ** warning at line ...:
		   in process P, ``in'' parameter X should be declared
		   ``in var'' because it is not only used but also assigned
		   like a local variable

		The LNT reference manual has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2067
Date:		Sat Jul  4 12:51:43 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_05/USER.lnt, demos/demo_14/pots.lnt,
		demos/archives/demo_15.old/pots.lnt, demos/demo_16/TYPES.lnt,
		demos/demo_18/CONTROL.lnt, demos/demo_18/DATAOUTPORTS.lnt,
		demos/demo_29/SPEC.lnt, demos/demo_32/MEMORY_FONC_T.lnt

Nature:		Following the introduction of the "in var" parameter mode in
		LNT (see item #2066 above), a few LNT files of the CADP demos
		have been updated by replacing "in" parameters by "in var"
		ones to avoid warnings.
-------------------------------------------------------------------------------
BUG FIX
Number:		2068
Date:		Tue Jul  7 23:28:45 CEST 2015
Report:		Hernan Ponce de Leon (Aalto University, Finland)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		Formerly, CAESAR.BDD would stop if some transitions were
		found to violate the unit-safe property. For instance, the
		following error messages could be emitted:

		   caesar.bdd: input places P1 and P4 of transition T4 belong
		   to the same unit U1 and thus cannot have both a token
		   simultaneously

		   caesar.bdd: input places P0 and P2 of transition T28 belong
		   to nested units U0 and U1 (U0 contains U1) and thus cannot
		   have both a token simultaneously

		However, this situation was an error only if the transitions
		were fireable (i.e., enabled in some reachable marking). From
		now on, CAESAR.BDD only emits warning messages (rather than
		fatal error messages) in such case. Moreover, the text of
		these messages takes into account the absence of presence of
		the "!unit_safe" pragma, e.g.,

		   caesar.bdd: transition T4 will never fire or the net is
		   not unit safe, as the input places P1 and P4 of this
		   transition belong to the same unit U1 and thus cannot
		   have both a token simultaneously

		   caesar.bdd: transition T28 will never fire because the net
		   is unit safe and the input places P0 and P2 of this
		   transition belong to two nested units U0 and U1 (U0
		   contains U1) and thus cannot have both a token
		   simultaneously
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2069
Date:		Wed Jul  8 00:07:55 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, doc/=READ_ME.txt, doc/*/Garavel-15-a.*

Nature:		Following the previous change (see item #2067 above), other
		error messages of CAESAR.BDD have been turned into warnings
		and refined to take into account the "!unit_safe" pragma.
		Examples of such enhanced messages are:

		   caesar.bdd: the ``!unit_safe'' pragma is erroneous because
		   the two initial places P0 and P3 belong to the same unit
		   U0 and yet have both a token in the initial marking

		   caesar.bdd: this net is not unit safe because the initial
		   places P0 and P2 belong to two nested units U0 and U1
		   (U0 contains U1) and yet have both a token in the initial
		   marking

		   caesar.bdd: transition T2 will never fire or the net is
		   not unit safe (if enabled once, this transition could fire
		   infinitely often and accumulate an unbounded number of
		   tokens in some of its output places)

		Also, an overview paper on the Nested-Unit Petri Nets (NUPN)
		model processed by CAESAR.BDD has been added to the CADP
		distribution.
-------------------------------------------------------------------------------
BUG FIX
Number:		2070
Date: 		Thu Jul  9 11:08:57 CEST 2015
Report:		Frederic Lang (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		A bug recently introduced in LNT2LOTOS (since the release
		2015-e of CADP - see item #2043 above) has been found and
		corrected. If an LNT variable X was used before and after a
		parallel composition, but not in the parallel composition
		itself, e.g.,
		      SPLIT (!X);
		      par P [A] || P [B] end par;
		      MERGE (!X)
		LNT2LOTOS would generate incorrect LOTOS code that would be
		rejected by the CAESAR compiler with the following message:
		   - the behaviour on the left of the ``>>'' operator:
		        P [A] ||| P [B]
		     has functionality:
		        exit
		     whereas operator ``>>'' requires functionality:
		        exit (BOOL [X_BOOLEAN:3])
-------------------------------------------------------------------------------
VERSION 2015-g "Stony Brook"
-------------------------------------------------------------------------------
BUG FIX
Number:		2071
Date: 		Fri Jul 17 11:44:36 CEST 2015
Author:		Eric Leo (INRIA/CONVECS)
File:		ext/latex-listings/cadp-rbc.sty

Nature:		The LaTeX-listing file for the RBC format of CADP has been
		corrected to properly handle the "#" and ".." symbols.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2072
Date: 		Fri Jul 17 13:11:48 CEST 2015
Author:		Eric Leo (INRIA/CONVECS)
Files:		ext/emacs/svl-aux.el, ext/emacs/READ_ME, ext/emacs/lnt-aux.el

Nature:		An auxiliary EMACS configuration file for SVL has been added,
		which enhances the display of SVL files.

		Also, the EMACS configuration file for LNT has been enhanced
		by reintegrating a proper coloring for type names and channel
		names. This feature, which had disappeared with the changes
		reported at item #2022 above, has been restored.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2073
Date: 		Tue Jul 21 16:39:07 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		man/*/caesar.bdd.*, man/*/nupn.*

Nature:		The definition of the NUPN format, previously contained in
		the CAESAR.BDD manual page, has been extracted and modified
		to form a standalone manual page, which is available by typing
		``man nupn'' and also from http://cadp.inria.fr/man/nupn.html
-------------------------------------------------------------------------------
BUG FIX
Number:		2074
Date: 		Tue Aug  4 12:08:34 CEST 2015
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		demos/demo_38/S_BOX_FUNCTIONS.lib

Nature:		In the LOTOS description of the DES encryption standard,
		three mistakes have been fixed in the algebraic equations
		defining the S-boxes S1, S4, and S6.
-------------------------------------------------------------------------------
BUG FIX
Number:		2075
Date: 		Wed Aug  5 17:38:29 CEST 2015
Report:		Gwen Salaun (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		The LNT2LOTOS translator generated incorrect LOTOS code (that
		was rejected by CAESAR) for LNT behaviours of the form:
			par
			   B1  -- one single parallel branch
			end par;
			B2
		The behaviour B2 was not translated, simply ignored. This
		error has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2076
Date: 		Wed Aug  5 19:19:25 CEST 2015
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lpp

Nature:		The LNT2LOTOS translator did not properly handle user-defined
		LNT functions whose names are decimal, binary, octal, or
		hexadecimal numbers, e.g.,
			function 123 : T is
				...
			end function
		This issue has been partially fixed, but only for one-digit
		function numbers. For instance, it is now possible to define:
			function 1 : T is
				...
			end function
		In the generated LOTOS code, this function is now declared as
		``1 : -> T'' rather than ``(1) : -> T'', which was incorrect.
-------------------------------------------------------------------------------
BUG FIX
Number:		2077
Date: 		Wed Aug 12 10:16:59 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		To implement the $CAESAR_BDD_TIMEOUT environment variable,
		CAESAR.BDD now uses the timeout mechanism of the Cudd BDD
		library. This removes most of the segmentation faults that
		could randomly occur when using the ``-exclusive-places''
		and ``-mcc'' on large NUPNs.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2078
Date: 		Thu Aug 13 21:44:23 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		From now on, user-specified timeouts (using the environment
		variable $CAESAR_BDD_TIMEOUT) are also recognized and handled
		by the ``-exclusive-places'' option of CAESAR.BDD. The manual
		page has been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2079
Date:		Mon Aug 17 17:39:58 CEST 2015
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		src/svl/standard

Nature:		A variable was not initialized in src/svl/standard, causing
		sometimes SVL to unexpectedly remove some files that the user
                wanted to have at the end of the SVL script execution. For
                instance, the file "a.bcg" would not be present in the current
                directory after executing the following script:
                        "a.aut" = generation of "a.lnt";
                        "a.bcg" = reduction of "a.aut";
                This bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2080
Date: 		Tue Aug 18 13:37:17 CEST 2015
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		lib/BIT.lib, lib/X_BIT.lib, incl/X_BIT.h,
		demos/demo_12/maa.f, demos/demo_12/main.c

Nature:		The predefined ``BIT'' and ``X_BIT'' libraries of LOTOS have
		been modified and extended. The changes, which may be not
		backward compatible, are the following:

		- The C function implementing the LOTOS operation ``0'' was
		  renamed from ADT_LOW() to ADT_ZERO_BIT(). Consequently,
		  the selector macro CAESAR_ADT_is_ADT_LOW() was renamed
		  in CAESAR_ADT_is_ADT_ZERO_BIT().

		- The C function implementing the LOTOS operation ``1'' was
		  renamed from ADT_HIGH() to ADT_ZERO_HIGH(). Consequently,
		  the selector macro CAESAR_ADT_is_ADT_HIGH() was renamed
		  in CAESAR_ADT_is_ADT_ONE_BIT().

		- The C function implementing the LOTOS operation ``not''
		  was renamed from ADT_NEG() to ADT_NOT_BIT(). The definition
		  of ADT_NOT_BIT() in the ``X_BIT.h'' file was enhanced.

		- Three predefined operators on bits have been added:
		    _and_ (*! implementedby ADT_AND_BIT *),
		    _or_  (*! implementedby ADT_OR_BIT *),
		    _xor_ (*! implementedby ADT_XOR_BIT *)  : Bit, Bit -> Bit
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2081
Date: 		Wed Aug 19 10:46:05 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The output format produced by the ``-exclusive-places'' has
		changed. The new format, which is documented in the manual
		page of CAESAR.BDD, contains more precise information, namely
		nine different values (rather than two with the old format).

		Not only the new format is richer in information, but it is
		also significantly more compact, solving practical issues
		with huge files (several gigabytes) generated using the old
		format. Experiments conducted on thousands of examples show
		that, in the average, the new format only requires 10,7% of
		the disk space previously required by the old format.

		Both formats are incompatible. Taking the example of a very
		small NUPN, the results of ``-exclusive-places'' display as:
			> 0 1
			> 0 2
			> 0 3
			> 0 4
			= 1 2
			* 1 3
			* 2 4
			= 3 4
		using the old format, and as:
			=
			<=
			<==
			<10=
			<01==
		using the new format. A conversion program from the old to
		the new format is available on demand to cadp@inria.fr.
		Following this change, the version number of CAESAR.BDD was
		raised to 2.5.
-------------------------------------------------------------------------------
BUG FIX
Number:		2082
Date:		Wed Aug 19 12:58:55 CEST 2015
Author:		Frederic Lang and Hubert Garavel (INRIA/CONVECS)
File:		src/eucalyptus/eucalyptus.tcl

Nature:		In the EUCALYPTUS graphical user interface, the popup window
		that opened when comparing an LNT program (or, a LOTOS
		program, an FSP program, an EXP composition expression) with
		an LTS did not contain any filebox for selecting this LTS.
		This bug has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2083
Date: 		Thu Aug 20 12:28:13 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		Due to a likely problem with the Cudd BDD library, the
		``-mcc'' option of CAESAR.BDD could produce meaningless
		values (namely, "Inf" or "$\geq$ Inf") for the number of
		reachable markings (first argument of the LaTeX macro
		\MarkingsFiringsBoundConcurrency). From now on, the value
		"\Unknown" is produced in such cases.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2084
Date: 		Mon Aug 24 16:19:41 CEST 2015
Authors:	Eric Leo and Hubert Garavel (INRIA/CONVECS)
Files:		ext/emacs/cadp.el, ext/emacs/nupn-mode.el, ext/emacs/README,
		ext/gtk3/nupn.lang, ext/gtk3/README,
		ext/latex-listings/cadp.sty, ext/latex-listings/cadp-nupn.sty,
		ext/latex-listings/README, ext/vim/cadp.vimrc,
		ext/vim/nupn.vim, ext/vim/README

Nature:		Configuration files have been added to support the NUPN
		format in the EMACS, GtkSourceView 3.0 ("gedit"), and VIM
		editors, as well as in the LaTeX listing package.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2085
Date: 		Wed Aug 26 10:51:55 CEST 2015
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
File:		src/exec_caesar/main.c

Nature:		The generic ``main.c'' file for EXEC/CAESAR has been enhanced
		in two ways:
		- An auxiliary function CAESAR_KERNEL_EXIT() has been added
		  to allow proper termination in gate functions.
		- A new macro CAESAR_KERNEL_DELAY has been introduced, which,
		  if defined, enables to tune the behaviour of EXEC/CAESAR
		  when the environment refuses all transitions permitted by
		  the formal specification.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2086
Date: 		Wed Aug 26 14:21:23 CEST 2015
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_38/*

Nature:		The demo_38 of CADP (DES encryption standard) has been
		entirely revisited to be more readable and demonstrate more
		CADP functionalities. This is a summary of changes done:

		- The number of LOTOS libraries was reduced from 24 to 10
		  by merging small files into a reduced number of larger ones.

		- Some LOTOS files and LOTOS identifiers have been renamed to
		  be more intuitive. A few unused types and constructors have
		  been removed. The CONTROLLER process has been simplified by
		  making it accept more general execution interleavings.

		- The SVL file has been extended to verify six properties
		  rather than a single one. Verification is done using three
		  different approaches: model checking, equivalence checking,
		  and testing/simulation.

		- The EXEC/CAESAR prototype generation that was formerly
		  optional is now part of the verification, with dedicated
		  test cases that have been added for this purpose.
-------------------------------------------------------------------------------
VERSION 2015-h "Stony Brook"
-------------------------------------------------------------------------------
BUG FIX
Number:		2087
Date:		Thu Aug 27 11:20:01 CEST 2015
Report:		Wendelin Serwe (INRIA/CONVECS)
Authors:	Frederic Lang (INRIA/CONVECS), Pierre Boullier (INRIA/ALPAGE)
File:           bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.old,
		bin.*/caesar.indent, bin.*/exp2c, bin.*/fsp2lotos,
		bin.*/lnt2lotos, bin.*/mcl_expand, bin.*/mcl_expand4,
		bin.*/svl_kernel, bin.*/xtl

Nature:		A bug was found in the code generated by the SYNTAX parser
		generator, which is used to develop most of the compilers
		present in CADP. The generated code contained a memory
		allocation problem, which could sometimes lead the generated
		compilers to crash with a segmentation fault. This happened
		in particular when parsing an expression produced by a right-
		recursive grammar rule, such as an EXP or SVL expression of
		the following form:
			((...(((A1 || A2) || A3) || A4) || ...) || An)
		when the value of n was large enough (e.g., 15 in SVL).
		The SYNTAX parser generator has been fixed with the help of
		Pierre Boulier, one of its authors, and all CADP compilers
	 	have been recompiled.
-------------------------------------------------------------------------------
BUG FIX
Number:		2088
Date:		Mon Aug 31 15:58:48 CEST 2015
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		A bug was fixed in the ``-pidlist'' option of LNT2LOTOS. If
		the LNT file contained a light syntax error that could be
		automatically corrected by the parser (using the error-
		recovery features of SYNTAX), LN2LOTOS would display a list
		of processes rather than an explanatory error message.

		This bug would show up in the EUCALYPTUS graphical user
		interface when compiling a ``lightly-incorrect'' LNT file
		(e.g., using the ``Generate labelled transition system...''
		entry in the contextual menu associated to LNT files). In
		such case, EUCALYPTUS reported an error, but displayed a
		list of processes rather than an explanation in its Results
		window.  For instance, assuming a file ``PROG.lnt'' with
		two processes P and Q, the following output was displayed:
			Error in "PROG.lnt":
			P
			Q
			child process exited abnormally
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2089
Date: 		Thu Sep  3 18:06:40 CEST 2015
Authors:	Hubert Garavel (INRIA/CONVECS) and Fabio Somenzi (University
		of Colorado, USA)
File:		bin.*/caesar.bdd

Nature:		The ``-exclusive-places'' option of CAESAR.BDD has been made
		faster using two algorithmic optimizations:

		- Loops now avoid redundant BDD computations by means of a
		  memoization technique.

		- Following a suggestion of Fabio Somenzi, the Cudd_bddLeq()
		  primitive is now used to avoid allocating and removing BDD
		  nodes. Moreover, the implementation of Cudd_bddLeq() has
		  been improved by Fabio Somenzi.

		On a test suite of nearly 10,000 NUPN models, the combined
		use of both techniques reduces the overall time by 57%.
		Actually, the benefits of memoization are quadratic, so
		that speed improvements can be higher for larger models:
		on 10 large models, the execution time was divided by 12
		on the average; on one particular model, the execution time
		was divided by 126 (from 2 hours 6 minutes down to 1 minute).
-------------------------------------------------------------------------------
BUG FIX
Number:		2090
Date:		Thu Sep 10 13:10:16 CEST 2015
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		src/svl/standard

Nature:		To minimize a composition expression contained in an EXP file,
		SVL first generates an intermediate LTS corresponding to the
		composition expression, and then minimizes this LTS. If the
		minimization fails (for instance, due to memory exhaustion),
		SVL tries another minimization, using either a stronger
		equivalence relation and/or a more efficient tool. Two
		problems that occurred during the second minimization have
		been fixed:

		- Sometimes, SVL regenerated the intermediate LTS correspon-
		  ding to the composition expression, instead of reusing the
		  already generated one.
		
		- If the second minimization failed, SVL removed the generated
		  intermediate LTS before terminating, thus preventing the
		  user from accessing this LTS.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2091
Date: 		Fri Sep 11 06:55:57 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		The algorithm implementing the ``-concurrent-units'' option
		of CAESAR.BDD was enhanced using the two techniques mentioned
		at item #2089 above (namely, memoization and use of the
		Cudd_bddLeq() primitive). The gain in time is not easy to
		measure because memoization brings a quadratic reduction
		in the number of computations; yet, on a test suite of nearly
		10,000 NUPN models, one observed an average reduction in time
		of 24% (on 32-bit Linux) and 40% (on 32-bit Solaris).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2092
Date: 		Fri Sep 11 16:50:36 CEST 2015
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
File:		demos/demo_38

Nature:		The demo_38 of CADP has been translated to LNT, leading to a
		more concise specification (less than 1500 lines of LNT,
		instead of more than 2000 lines of LOTOS). The gain is mostly
		due to the more concise definition of the data types and
		functions.

		Additionally, the former module ``CIPHER_FUNCTION'' was
		renamed into ``CIPHER'';  the other files, including the
		figure ``architecture-2.jpg'', have been updated accordingly.

		In the SVL file, Property_2 was strengthened by adding a
		second temporal logic formula requiring the DES to eventually
		produce an output after the interleaved reception of its three
		inputs.

		The translation to LNT improved in several manners the
		performance of the verification steps, mainly due to the
		symmetric sequential composition of LNT, which avoids extra
		tau-transitions generated by the ">>" operator of LOTOS.
		Concretely:

		- The generated state spaces are smaller. With the LNT
		  specification, the largest intermediate LTS has 406,192
		  states and 2,910,530 transitions only, rather than 688,422
		  states and 5,122,760 transitions with the LOTOS version.

		- Thus, the generation of the LTS corresponding to the
		  ``DES_SAMPLE.lnt'' specification (10,156,715 states and
		  75,933,635 transitions) can now be done using about one
		  gigabyte of RAM.

		Finally, the generation and minimization of the LTS for
		``DES_SAMPLE.lotos'' are now performed only on computers
		having at least 6 gigabytes of RAM, as these operations
		would be too slow otherwise.
-------------------------------------------------------------------------------
VERSION 2015-i "Stony Brook"
-------------------------------------------------------------------------------
BUG FIX
Number:		2093
Date:		Tue Sep 15 11:45:51 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		From now on, when Caesar.bdd receives a signal SIGINT, SIGQUIT
		or SIGTERM sent by the user while BDD computations are being
		performed, Caesar.bdd properly stops these computations by
		using CUDD primitives so that execution can continue with
		BDD data structures left in a consistent state.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2094
Date:		Wed Sep 23 13:07:28 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.adt

Nature:		Three optimizations have been brought to the C code generated
		by Caesar.adt from LOTOS abstract types:

		1) The calls to CAESAR_USE() now only invoke the required
		   variables rather than more complex expressions involving
		   these variables. For instance, the following generated
		   code:
		      CAESAR_ADT_USE (ADT_NOT (
		      CAESAR_ADT_Get_3_CAESAR_ADT_FUNC_MSG (CAESAR_ADT_1)));
		   has been changed to:
		      CAESAR_ADT_USE (CAESAR_ADT_1);

		2) The calls to CAESAR_USE() are moved out of expressions,
		   leading to code simplification. For instance, the following
		   generated code:
		     if (CAESAR_ADT_USE (CAESAR_ADT_1), CAESAR_ADT_USE (
		         CAESAR_ADT_2), 1) {
		         CAESAR_ADT_RESULT = ADT_TRUE ();
		          goto CAESAR_ADT_EXIT_TRACE;
		     } else {
		          CAESAR_ADT_RESULT = ADT_FALSE ();
		          goto CAESAR_ADT_EXIT_TRACE;
		     }
		   has been changed to:
 		     CAESAR_ADT_USE (CAESAR_ADT_1);
		     CAESAR_ADT_USE (CAESAR_ADT_2);
		     CAESAR_ADT_RESULT = ADT_TRUE ();
		     goto CAESAR_ADT_EXIT_TRACE;

		3) The C code generated for the ``-trace'' option has been
		   shortened by removing redundant braces { ... }.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2095
Date:		Thu Sep 24 13:45:54 CEST 2015
Author:		Frederic Lang (INRIA/CONVECS)
Files:		doc/*/Evrard-Lang-15.*, doc/*/Garavel-Lang-Mateescu-15.*

Nature:		Two papers about compositional verification and distributed
		code generation for LNT have been added to the CADP release.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2096
Date:		Fri Sep 25 13:22:56 CEST 2015
Report:		Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files: 		bin.*/svl_kernel, src/svl/standard, man/*/svl

Nature:		A new statement of the following form was added to SVL to
		explicitly translate into LOTOS (using LNT.OPEN) an LNT file
		or a particular processs in an LNT file:
			"<prefix1>.lotos" = "<prefix2>.lnt"
		or
			"<prefix1>.lotos" = "<prefix2>.lnt":<process>

		This statement generates "<prefix1>.lotos", together with all
		the .lib, .f, and .t files on which "<prefix1>.lotos" depends.

		Note that <prefix1> and <prefix2> may be either the same or
		different file prefixes.

		Note also that SVL makes sure that subsequent statements will
		overwrite neither "<prefix1>.lotos" nor its dependencies
		silently. In particular, if the implicit translation into
		LOTOS of a file named "<prefix1>.lnt" is needed (which would
		produce an intermediate file named "<prefix1>.lotos"), then
		SVL issues an error message and stops.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2097
Date:		Mon Sep 28 16:20:41 CEST 2015
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/caesar.adt

Nature:		The C code generated by CAESAR.ADT when comparing two values
		of singleton type has been modified to use these values. For
		instance, CAESAR.ADT no longer generates an equality macro
		of the following form:
		   #define EQ_SINGLE(CAESAR_ADT_1,CAESAR_ADT_2) ADT_TRUE ()
		but the following macro:
		    #define EQ_SINGLE(CAESAR_ADT_1,CAESAR_ADT_2) \
		      (CAESAR_ADT_USE (CAESAR_ADT_1), \
		       CAESAR_ADT_USE (CAESAR_ADT_2), ADT_TRUE ())
		This change removes spurious GCC warnings of the form:
		   unused parameter 'CAESAR_ADT_1' [-Wunused-parameter]
		   unused parameter 'CAESAR_ADT_2' [-Wunused-parameter]
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2098
Date:		Tue Sep 29 15:53:16 CEST 2015
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lpp, man/*/lpp.*,
		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		To enable further evolution of the LPP tool, is has been
		simplified by removing the possibility to deal with LOTOS
		files (with ``.lotos'' and ``.lib'' suffix), a possibility
		that had not been used for at least eight years. From now
		on, LPP only deals with LNT files.

		The LPP manual page has been simplified accordingly. The
		LNT2LOTOS manual has been also made more readable by moving
		all related information from Chapter 1 to a new Annex F.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2099
Date:		Wed Sep 30 11:38:23 CEST 2015
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		demos/demo_38/TYPES.lnt,
		demos/demo_38/LOTOS/BIT_ABSTRACT.lib,
		demos/demo_38/LOTOS/BIT_CONCRETE.lib,
		demos/demo_38/LOTOS/TYPES.lib,
		demos/demo_38/LOTOS/DES_ABSTRACT.f,
		demos/demo_38/demo.svl

Nature:		Following recent enhancements brought to CAESAR.ADT (see item
		#2097 above), the demo_38 has been improved in four ways:

		a) 48 warnings emitted by Gcc
		       unused parameter 'CAESAR_ADT_xxx' [-Wunused-parameter]
		   have disappeared.

		b) The definitions of BIT2_TO_NAT() and BIT4_TO_NAT() in file
		   ``TYPES.lnt'' have been simplified.

		c) The contents of files ``LOTOS/BIT_ABSTRACT.lib'',
		   ``LOTOS/BIT_CONCRETE.lib'', and ``LOTOS/TYPES.lib'' have
		   been simplified, making it possible to remove file
		   ``LOTOS/DES_ABSTRACT.f''.

		d) Finally, the SVL script ``demo.svl'' has been shortened
		   using the new SVL statement "DES.lotos" = "DES.lnt" (see
		   item #2096 above).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2100
Date:		Thu Sep 30 17:09:30 CEST 2015
Report:		Zhen Zhang (University of Utah, USA)
Author:		Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The LNT2LOTOS user manual has been enhanced in many ways:

		- A missing page break (page 88 of version 6.2 - May 15, 2015)
		  reported by Zhen Zhang has been inserted in the BNF syntax.

		- Chapter 2 has been shortened by moving its former Section
		  2.8 to Annex F.1.

		- The former Annex D.4 has been moved to Annex F.2.

		- Chapter 3 has been entirely revised and made simpler by
		  moving details (related to the LOTOS code generated for
		  LNT constants) into Annex F.3 to F.7.

		- Annex B.1 has been enhanced by adding explanations on SOS
		  rule formats and Annex B.7 has been added to provide a
		  discussion on nondeterminism.
-------------------------------------------------------------------------------
BUG FIX
Number:		2101
Date:		Thu Oct  1 16:30:23 CEST 2015
Report:		Eric Leo (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		com/svl

Nature:		When combining the -script and -output options of SVL, the
		following message was issued at the end of the execution:
			svl: WARNING cannot find file xxx.log
			(no file has been removed)

		Also, when using -script without -output, or when using
		the -expand option, the following message was issued at the
		end of the execution:
			svl: intermediate files are kept for diagnostics
			svl: run ``svl -sweep ""'' to erase

		Those messages were useless and have been removed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2102
Date:		Wed Oct  7 12:32:35 CEST 2015
Report:		Jose Manuel Colom (Universidad de Zaragoza, Spain),
		Maciej Koutny (Newcastle University, UK), and
		Manuel Silva (Universidad de Zaragoza, Spain)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		In the output produced by the ``-mcc'' option of CAESAR.BDD,
		the definitions of
		   \IsModelSimpleFreeChoice
		   \IsModelStateMachine
		   \IsModelMarkedGraph
		have been modified to be always \False (rather than possibly
		\True) when the Petri net is not ordinary (i.e., has arcs
		with multiple valuation indicated by the ``!multiple_arcs''
		pragma). Additionally, \Explain text has been added to
		indicate whether the corresponding structural properties
		``equal conflict'', ``weighted S-system'', and ``weighted
		T-system'' hold for models having multiple arcs.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2103
Date:		Mon Oct 12 11:27:32 CEST 2015
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		The syntax of the LNT language has been extended to add a
		new "out var" keyword for parameter passing in functions and
		processes. The existing "out" parameter-passing mode has
		been made more restrictive by emitting a warning if an "out"
		parameter is used after being assigned. In such case, the
		new "out var" parameter should be used, which corresponds to
		the former semantics of "out" parameters in LNT. This is
		explained by the warnings emitted by the LNT2LOTOS translator:

		   ** warning at line ...:
		   in function F, ``out'' parameter X should be declared
		   ``out var'' because its value is used in this function

		The "out var" keyword is the dual of the "in var" one (see
		item #2066 above). The LNT2LOTOS Reference Manual (chapter 6)
		has been updated accordingly.

		This change is not backward compatible in the sense that the
		above warning may appear for LNT specifications that would
		previously compile without warnings. However, the impact
		seems to be minimal. On our LNT test base, we observed that
		warnings appeared for only:
		   - 38 functions out of 77304 (0.04 %)
		   - 35 processes out of 11295 (0.3 %)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2104
Date:		Mon Oct 12 17:34:22 CEST 2015
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		The output generated by the ``-mcc'' option of CAESAR.BDD
		now includes a definition of \IsModelExtendedFreeChoice,
		which corresponds to the structural notion of "extended free
		choice". The version number of CAESAR.BDD was set to 2.6.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2105
Date:		Tue Oct 13 17:13:56 CEST 2015
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		./INSTALLATION_2, com/tst

Nature:		Various changes have been brought with respect to the use of
		the C compiler on Solaris:

		- The INSTALLATION_2 file has been updated with directives
		  for installing the most recent versions of Oracle Solaris
		  Studio.

		- The ``tst'' command has been modified in order to detect
		  the presence of /opt/solarisstudio12.4 on architectures
		  sol86 and sol64.
-------------------------------------------------------------------------------
VERSION 2015-j "Stony Brook"
-------------------------------------------------------------------------------
BUG FIX
Number:		2106
Date:		Thu Oct 15 15:51:55 CEST 2015
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/bcg_cmp, bin.*/bcg_info, bin.*/bcg_min, bin.*/exp2c,
		bin.*/pbg_cp, bin.*/pbg_info, bin.*/pbg_merge, bin.*/pbg_mv,
		bin.*/pbg_rm

Nature:		A bug introduced since CADP 2015-a (included) has been fixed:
		when a BCG graph contained a label that was either the empty
		string or consisted only of white spaces, some BCG tools
		would loop forever when processing this graph.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2107
Date:		Thu Oct 15 17:52:32 CEST 2015
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		man/*/exp.*, man/*/exp.open.*, man/*/svl.*, man/*/svl-lang.*

Nature:		The EXP.OPEN manual page was quite long. Therefore it has
		been splitted in two separate manual pages: one for the EXP
		language, and another one for the EXP.OPEN tool.

		Similarly, the SVL manual page was split in two manual pages:
		one for the SVL language, and one for the SVL tool.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2108
Date:		Wed Oct 16 17:44:53 CEST 2015
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		src/com/cadp_cc

Nature:		To avoid an issue arising with versions 5.12, 5.13, and 5.14
		of the Oracle Solaris SunCC compiler, the ``cadp_cc'' script
		now invokes this compiler with option ``-xarch=pentium_pro''
		on 32-bit machines (otherwise, this compiler can be very slow,
		e.g., take 8 hours to compile a C program that Gcc compiles
		in 10 seconds). Unfortunately, no similar remedy exists for
		64-bit architectures.
-------------------------------------------------------------------------------
BUG FIX
Number:		2109
Date:		Mon Oct 19 11:27:39 CEST 2015
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
File:		incl/LNT_V1.h

Nature:		The implementation of the LNT library did not detect overflows
		of natural and integer constants: too large constants were
		silently truncated modulo 2^32. This issue has been adressed
		by correcting the definitions of the ADT_xxxNUM_NAT() and
		ADT_xxxNUM_INT() macros to move type casts (ADT_WIDE_NAT) and
		(ADT_WIDE_INT). The modified definitions now trigger run-time
		errors if a constant overflows, e.g.:
		  error in file ``...'' at line ...:
		  natural value 7453412385 out of the range [0 .. 4294967295]
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2110
Date:		Tue Oct 20 15:05:30 CEST 2015
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lpp, bin.*/lnt2lotos,
		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The LNT language has been modified to forbid using the ``.''
		(dot) character in LNT special identifiers (namely, the
		<special-identifier-2> non-terminals in the BNF syntax).
		This change was based on the fact that the dot character is
		heavily used in the LNT syntax: (1) in the floating-point
		constants of the Real type, (2) in the field projections, and
		(3) in the range notation ``..''. Formerly, ``.'', ``..'',
		and ``...'' were reserved keywords but the dot could still be
		used in LNT identifiers (as it is the case in LOTOS).

		The LPP and LNT2LOTOS tools, and the LNT2LOTOS Reference
		Manual have been modified accordingly. This change is not
		upward compatible: LNT specifications with identifiers that
		contain dots must be modified to rename these identifiers.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2111
Date:		Wed Oct 21 11:39:14 CEST 2015
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lpp

Nature:		LPP now generates shorter and more efficient LOTOS code by
		removing leading zeros in natural and integer constants. For
		instance, constant 06789 is now translated to
		   (6 DecNum 7 DecNum 8 DecNum 9)
		rather than
		   (0 DecNum 6 DecNum 7 DecNum 8 DecNum 9)
-------------------------------------------------------------------------------
BUG FIX
Number:		2112
Date:		Thu Oct 22 12:07:37 CEST 2015
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lpp, doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The way the LPP processor encoded negative integers in LOTOS
		was not perfect, since the integer constant -2^(N-1), where
		N is the number of bits chosen for representing integers,
		could not be used, as it would trigger a run-time error.
		For instance, using -2147483648 would trigger the following
		error with N = 32:

		   #402 error in file ``...'' at line ...:
                        integer value 2147483648 out of the range
		        [-2147483648 .. 2147483647]

		To address this isssue, a different encoding has been defined
		and implemented in LPP. Annex F.4 of the LNT Reference Manual
		has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2113
Date:		Fri Oct 23 12:07:27 CEST 2015
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
File:		bin.*/lpp

Nature:		The LNT language has been enhanced to allow a ``+'' sign
		before integer and real constants. The LPP preprocessor
		and Annex F.4 of the LNT2LOTOS reference manual have been
		updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2114
Date:		Mon Oct 26 16:22:30 CET 2015
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		src/svl/standard

Nature:		When the environment variable $CADP_TIME was set, e.g., to
		``memtime'', the lines written to stdin by the CADP tools and
		those written to stderr by memtime were merged together in
		the SVL log file, in an unspecified order, making the log file
		hard to read and confusing. This issue was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2115
Date:		Tue Oct 27 15:10:14 CET 2015
Report:		Gianluca Barbon (INRIA/CONVECS)
Author:		Eric Leo (INRIA/CONVECS)
Files:		ext/READ_ME, ext/nano/*

Nature:		Configuration files have been added so as to support the Nano
		text editor with CADP.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2116
Date:		Mon Nov  2 10:20:52 CET 2015
Authors:	Gianluca Barbon and Hubert Garavel (INRIA/CONVECS)
Files:		demos/=READ_ME.txt, demos/demo_21/*, demos/demo_22/*

Nature:		Demos 21 (Peterson) and 22 (Dekker) have been translated to
		LNT. The former specifications are still available and can be
		found in the LOTOS directories.
-------------------------------------------------------------------------------
BUG FIX
Number:		2117
Date:		Tue Nov  3 17:10:01 CET 2015
Report:		Eric Leo (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		incl/X_INTEGER.h

Nature:		The implementation of the ``mod'' operator on integers was
		incorrect, which could result in segmentation faults:

		   lnt.open test.lnt generator test.bcg
		   Segmentation Fault - core dumped
		   #165 bug during optimization:
		        optimizer program execution aborted (opt. V3 limited)
	           #241 system error during simulation:
                        termination on SEGMENTATION_VIOLATION signal (files
                        completed)
                        quit

		This issue was solved by modifying the definition of macro
		ADT_MOD_INT() to add a missing type cast (ADT_WIDE_INT).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2118
Date:		Wed Nov  4 15:49:48 CET 2015
Authors:	Eric Leo and Hubert Garavel (INRIA/CONVECS)
Files:		ext/emacs/READ_ME, ext/emacs/cadp.el, ext/emacs/xtl-mode.el,
		ext/gtk3/READ_ME, ext/gtk3/xtl.lang,
		ext/latex-listings/READ_ME, ext/latex-listings/cadp.sty,
		ext/latex-listings/cadp-xtl.sty, ext/nano/READ_ME,
		ext/nano/xtl.nanorc, ext/vim/READ_ME, ext/vim/cadp.vimrc,
		ext/vim/xtl.vim

Nature:		Configuration files to support the XTL language have been
		added for the Emacs, Gedit, LaTeX listings, Nano, and Vim
		editors and pretty-printers.
-------------------------------------------------------------------------------
BUG FIX
Number:		2119
Date:		Wed Nov  4 17:03:00 CET 2015
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		If an LNT specification would contain a pragma with the
		constant -2^31, e.g.,
		   !int_inf -2147483648
		GCC would emit a spurious warning:
		   warning: this decimal constant is unsigned only in ISO C90
		To avoid this warning, the C code of the ``.t'' file generated
		by LNT2LOTOS has been modified.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2120
Date:		Thu Nov  5 10:35:55 CET 2015
Authors:	Eric Leo and Hubert Garavel (INRIA/CONVECS)
Files:		ext/jedit/READ_ME, ext/jedit/lnt.xml, ext/jedit/lotos.xml,
		ext/jedit/mcl.xml, ext/jedit/nupn.xml, ext/jedit/rbc.xml,
		ext/jedit/svl.xml, ext/jedit/xtl.xml

Nature:		The CADP support for the jEdit text editor has improved in
		many respects:

		- The existing ``lotos.xml'' configuration file has been
		  enhanced with syntax coloring for standard-library
		  functions.

		- The existing ``lnt.xml'' configuration file has been updated
		  with the new LNT keywords, support for LNT pragmas, and
		  support for standard-library functions

		- jEdit configuration files have been added for the BES, MCL,
		  NUPN, SVL, RBC, and XTL languages and formats.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2121
Date:		Thu Nov  5 17:20:32 CET 2015
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
File:		demos/demo_36/demo.svl

Nature:		The SVL script of demo 36 has been shortened (from 150 lines
		down to 96 lines) by making it more parametric.
-------------------------------------------------------------------------------
BUG FIX
Number:		2122
Date:		Fri Nov  6 11:34:23 CET 2015
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		The LOTOS generated by LNT2LOTOS was different on Solaris and
		Linux: in particular, the unique number given to identifiers
		related to "case" statements would differ across system
		architectures. This problem was solved and LNT2LOTOS now
		generates architecture-independent LOTOS code.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2123
Date:		Mon Nov  9 13:05:35 CET 2015
Authors:	Hubert Garavel and Gianluca Barbon (INRIA/CONVECS)
Files:		demos/=READ_ME.txt, demos/demo_36/=READ_ME.txt,
		demos/demo_36/sieve.lnt, demos/demo_36/demo.svl,
		demos/demo_36/LOTOS

Nature:		The demo 36 (Erathostenes sieve) has been translated to LNT.
		The former specification has been preserved and is still
		available in the LOTOS directory.
-------------------------------------------------------------------------------
VERSION 2015-k "Stony Brook"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2124
Date:		Mon Nov 16 09:28:39 CET 2015
Report:		Hubert Garavel (INRIA/CONVECS)
Authors:	Wendelin Serwe, Frederic Lang, and Hubert Garavel
		(INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The ``case'' construct of LNT has been extended to allow
		multiple (tuple-like) expressions and patterns. For instance,
		it is now possible to specify:

		   case E1, E2, E3 in
		      P1, P2, P3 -> ...
		   |  P'1, P'2, P'3 -> ...
		   |  P''1, P''2, P''3 -> ...
		   end case

		The LNT2LOTOS user manual has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2125
Date:		Tue Nov 17 15:30:30 CET 2015
Authors:	Radu Mateescu and Hubert Garavel (INRIA/CONVECS)
Files:		man/*/bes_solve.*, man/*/rbc.*

Nature:		The definition of the RBC format has been moved to a separate
		manual page, making the BES_SOLVE manual page shorter. The
		CADP web site has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2126
Date:		Wed Nov 18 13:09:15 CET 2015
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		lib/X_INTEGER.lib, incl/X_INTEGER.h,
		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		Following the changes described in item #2113 above, the
		predefined library of LNT has been enriched with a unary
		``+'' operator on integers. This makes it possible to write,
		for instance, ``+(2)'' whereas, previously, only ``+2''
		was accepted. The LNT2LOTOS Reference Manual has been updated
		accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2127
Date:		Thu Nov 19 10:48:26 CET 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/tst, src/com/cadp_where, src/com/cadp_path,
		com/installator, src/com/install_uncompress,
		src/com/cadp_shell

Nature:		On Windows, the TST shell script could emit three times
		the following output:
		   ./tst: /src/com/cadp_where: No such file or directory

		This issue has been fixed. The CADP script ``cadp_where''
		has been renamed into ``cadp_path'' and equipped with new
		options. The ``installator'', ``install_uncompress'', and
		``cadp_shell'' have been modified accordingly to invoke
		``cadp_path'' rather than ``cadp_where''.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2128
Date:		Thu Nov 19 17:05:41 CET 2015
Authors:	Radu Mateescu and Hubert Garavel (INRIA/CONVECS)
Files:		man/*/xtl.*, man/*/xtl-lang.*

Nature:         The XTL manual page was quite long and was splitted in two
                separate manual pages: one for the XTL language, and another
		one for the XTL tool. The CADP web site has been updated
		accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2129
Date:		Fri Nov 20 12:43:20 CET 2015
Report: 	Hubert Garavel (INRIA/CONVECS)
Author: 	Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		The line numbers contained in the error messages emitted by
		LNT2LOTOS for "case" statements with wrong patterns have been
		made more precise. Formerly, the line number given for a wrong
		pattern was the number of the line containing the ``end case''
		keyword; from now on, the number given is that of the line
		containing the relevant ``case'' branch.

		Similarly, in warning messages of the form:
		   process "P" contains a non-exhaustive case at line N
		the number N is now that of the line containing the ``case''
		keyword, not that of the line containing the ``end case''
		keyword as formerly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2130
Date:		Mon Nov 23 16:15:19 CET 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		INSTALLATION_2, INSTALLATION_WINDOWS, com/test,
		installator.shar

Nature:		The installation directives for CADP on Windows have been
		revisited and updated as follows:

		- In file INSTALLATION_2, the setting of the $PATH variable
		  on Windows has been simplified by removing the obsolete
		  instructions related to Windows NT4.

		- In file INSTALLATION_WINDOWS, Section 3 has been shortened
		  by removing obsolete information. The directives have been
		  updated to use version 2.873 of the Cywgin Net Release Setup
		  Program, and it is now suggested to install the Cygwin
		  package "archive/sharutils" to get the "uudecode" command.

		- The TST shell script now checks for the presence of
		  ``uudecode'' on Windows (and other architectures).

		- On Windows, the ``installator.shar'' script now tries to
		  use the ``uudecode'' command provided by version 4.15.2 of
		  the sharutils package.
-------------------------------------------------------------------------------
BUG FIX
Number:		2131
Date:		Mon Nov 23 19:10:24 CET 2015
Report:		Wendelin Serwe (INRIA/CONVECS)
Authors: 	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		The "raise" instruction had no effect when invoked in LNT
		processes, because of the subsequent optimizations performed
		by the CAESAR compiler on the LOTOS code generated by the
		LNT2LOTOS translator. This problem has been solved to make
		sure that the "raise" instruction triggers an exception at
		run time when it is invoked.
-------------------------------------------------------------------------------
BUG FIX
Number:		2132
Date:		Tue Nov 24 15:08:32 CET 2015
Report:		Hubert Garavel (INRIA/CONVECS)
Authors: 	Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		When applied to some incorrect LNT programs, the LNT2LOTOS
		translator could emit the following message:
			** error at line 0:
			   internal error: assertion failed
		This issue has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2133
Date:		Thu Nov 26 11:24:04 CET 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/tst, http://cadp.inria.fr/installator

Nature:		The directives for installing CADP have been simplified by
		using the ``wget'' or ``curl'' commands to download the
		``installator.shar'' script (previously, the user's browser
		was used for this download, which caused various problems
		depending of the particular behaviour of each browser).

		The TST shell script has been enhanced to check for the
		presence of ``curl'' on Mac OS X, and of ``wget'' on all
		other architectures.
-------------------------------------------------------------------------------
BUG FIX
Number:		2134
Date:		Thu Nov 26 13:18:52 CET 2015
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		The error messages emitted by LNT2LOTOS in presence of
		gate-typing errors have been corrected and enhanced:

		- Wrong messages of the form:
		     gate ``G'' has channel ``C'' where ``'' is expected
		  have been changed into:
		     gate ``G'' has channel ``C'' where ``any'' is expected

		- Gate-type checking has been made stricter, including
		  positional gate parameters and "any" types, leading to
		  new messages such as:
		     gate ``G'' has channel ``any'' where ``C'' is expected

		- The error messages have been unified and are now the same,
		  whether gate parameters are named or positional. For
		  instance, the error message:
                     formal and actual gate types differ for formal gate G0
		  has been changed into:
		     gate ``G'' has channel ``C1'' where ``C2'' is expected

		- From now on, all the typing errors concerning the gate
		  parameters of LNT processes are reported, whereas formerly
		  only the first error occurring in a parameter list was
		  reported.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2135
Date:		Thu Nov 26 17:43:03 CET 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		man/*/distributor.*, man/*/gcf.*, man/*/pbg.*,
		man/*/bcg_merge.*, man/*/pbg_*.*

Nature:		The definitions of the GCF and PBG formats have been moved to
		two separate manual pages, making the DISTRIBUTOR manual page
		shorter. The BCG_MERGE, PBG_CP, PBG_INFO, PBG_MV, and PBG_RM
		manual pages have been updated and enriched with additional
		bibliographic references. The CADP web site has been updated
		accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2136
Date:		Sun Nov 29 13:34:46 CET 2015
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		doc/=READ_ME.txt, doc/ps/=READ_ME.txt, doc/ps/*, man/ps/*

Nature:		The PostScript files contained in the ``$CADP/doc/ps'' and
		``$CADP/man/ps'' directories have been removed, because:

		- The same documents also exist in the ``$CADP/doc/pdf''
		  and ``$CADP/man/ps'' directories.

		- The PostScript files formerly contained in ``$CADP/doc/ps''
		  can still be downloaded from:
		     ftp://ftp.inrialpes.fr/pub/vasy/publications/cadp

		- This makes the CADP distribution much leaner (60 megabytes
		  have been removed).

		- Also, it eases CADP downloads, as the "base" tar.Z package
                  now takes 60 megabytes, rather than 130 megabytes formerly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2137
Date:		Mon Nov 30 15:44:25 CET 2015
Author:		Hubert Garavel, Frederic Lang and Radu Mateescu (INRIA/CONVECS)
Files:		INSTALLATION_2, bin.win32/*, com/tst, src/com/cadp_path

Nature:		The semantics of the $CADP_TMP environment variable, as
		described in the INSTALLATION_2 file, has been slightly
		modified on Windows. From now on, the user may have to set
		this variable explicitly if its default value, the ``/tmp''
		directory, does not exist.

		All the Windows binaries of CADP have been modified to stop
		with a proper error message if $CADP_TMP is not set and if
		``/tmp'' cannot be found.

		The TST command now checks the value of $CADP_TMP on Windows.
		It also displays a better warning message if the CADP man
		pages are not reachable via the $MANPATH environment variable.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2138
Date:		Fri Dec  4 17:01:32 CET 2015
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		doc/*/Champelovier-Clerc-Garavel-10.*

Nature:		The Reference Manual of the LNT2LOTOS translator has been
		made more uniform by unifying the vocabulary: all occurrences
		of "constructor application" and "function application" have
		been changed to "constructor call" and "function call",
		respectively, so as to remove the distinction that existed
		between, e.g., "constructor application" and "function call".
------------------------------------------------------------------------------
IMPROVEMENT
Number:		2139
Date:		Mon Dec  8 14:54:58 CET 2015
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, lib/LNT_V1.lib, incl/LNT_V1.h

Nature:		From now on, when an exception is raised, LNT2LOTOS displays
		the number of the line in the LNT source code where the
		corresponding "raise" instruction is located. In the ``.f''
		files generated by LNT2LOTOS, the ADT_RAISE_EXCEPTION() macro
		has got extra parameters, its definition and related data
		structures have been modified, as well as the message it
		displays when an exception is raised.
-------------------------------------------------------------------------------
BUG FIX
Number:		2140
Date:		Fri Dec 11 12:07:11 CET 2015
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
File:		src/com/cadp_cc

Nature:		On Windows with the GCC compiler (e.g., version 4.7.3),
		spurious warnings would be emitted when compiling C code
		including the X_NATURAL.h and X_INTEGER.h predefined include
		files. For instance, the execution of the demo_38 would give
		the following warnings:

		In file included from $CADP/incl/LNT_V1.h:99:0,
		   $CADP/incl/X_NATURAL.h: In function 'ADT_CHECKED_NAT':
		   $CADP/incl/X_NATURAL.h:75:11: warning: unknown conversion
		      type character 'l' in format [-Wformat]
		   $CADP/incl/X_NATURAL.h:75:11: warning: format '%lu' expects
		      argument of type 'long unsigned int', but argument 5 has
		      type 'long long unsigned int' [-Wformat]
		   $CADP/incl/X_NATURAL.h:75:11: warning: too many arguments
		      for the format [-Wformat-extra-args]
		   etc.

		This issue has been solved.
-------------------------------------------------------------------------------
VERSION 2015-l "Stony Brook"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2141
Date:		Tue Dec 22 17:16:44 CET 2015
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		The behaviour expressions of the LNT language have been
		enriched with a new "assert" construct, the syntax of which is:
			assert CONDITION [raise EXCEPTION]
		If the CONDITION evaluates to false, the execution stops with
		a run-time error message.

		Notice that this change is not, strictly speaking, backward
		compatible, because "assert" is now a reserved keyword.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2142
Date:		Tue Dec 29 14:19:55 CET 2015
Author:		Eric Leo (INRIA/CONVECS)
Files:		ext/READ_ME, ext/npp/READ_ME, ext/npp/bes.xml,
		ext/npp/lnt.xml, ext/npp/lotos.xml, ext/npp/mcl.xml,
		ext/npp/nupn.xml, ext/npp/rbc.xml, ext/npp/svl.xml,
		ext/npp/xtl.xml

Nature:		Configuration files for the Notepad++ text editor that is
		available on Windows have been added.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2143
Date:		Tue Dec 29 14:49:29 CET 2015
Author:		Eric Leo (INRIA/CONVECS)
Files:		ext/a2ps/READ_ME, ext/a2ps/bes.ssh, ext/a2ps/lnt.ssh,
		ext/a2ps/lotos.ssh, ext/a2ps/lotosnt.ssh, ext/a2ps/mcl.ssh,
		ext/a2ps/nupn.ssh, ext/a2ps/rbc.ssh, ext/a2ps/svl.ssh,
		ext/a2ps/xtl.ssh

Nature:		Filter files for the "a2ps" pretty-printing software have been
		added. The two filter files "lotos.ssh" and "lnt.ssh" that
		already existed have been replaced by newer versions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2144
Date:		Fri Jan  1 23:18:46 CET 2016
Author:		Hubert Garavel (INRIA/CONVECS)
File:		demo_23/scen_incl.t

Nature:		In demo_23, the definitions of three iterators on singleton
		types have been slightly enhanced by adding CAESAR_ADT_USE()
		macros telling the compiler that the iteration variables are
		not used. This removes warnings emitted by recent versions of
		the GCC compiler:

		In function 'main':
		...:283:22: warning: variable 'CAESAR_X' set but not used
		            [-Wunused-but-set-variable]
		...:336:24: warning: variable 'CAESAR_X' set but not used
			    [-Wunused-but-set-variable]
		...:389:21: warning: variable 'CAESAR_X' set but not used
			    [-Wunused-but-set-variable]
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2145
Date:		Sun Jan  3 14:37:37 CET 2016
Author:		Hubert Garavel (INRIA/CONVECS)
File:		demos/demo_23/demo.svl

Nature:		In demo_23, the definition of the property XTL_PROPERTY_4 has
		been simplified to remove a useless "let" operator:

		   let arbresgap : labelset = EVAL_A (ARBRESGAP) in ...

		which caused 16 Gcc warnings in the log file generated by SVL:

		$CADP_TMP/xtl_*.c: In function 'main':
		$CADP_TMP/xtl_*.c:2348:19: warning: variable
		'XTL_VARIABLE_1' set but not used [-Wunused-but-set-variable]
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2146
Date:		Mon Jan  4 15:02:22 CET 2016
Author:		Hubert Garavel (INRIA/CONVECS)
File:		demos/demo_27/demo.svl

Nature:		In demo 27, two useless "let" operators have been removed from
		the definition of the property SAFETY_ASYN_3_WITH_DIAGNOSTICS:

		let InfoGUIDlist : labelset = EVAL_A (GINFO _ !"GUID_LIST" _)
		let Ignore : labelset = not (BusResetStart or FinalLeader)

		This caused 2 Gcc warnings in the log file gerated by SVL:

		$CADP_TMP/xtl_*.c:1010:19: warning: variable
		'XTL_VARIABLE_16' set but not used [-Wunused-but-set-variable]
		$CADP_TMP/xtl_*.c:1005:19: warning: variable
		'XTL_VARIABLE_1' set but not used [-Wunused-but-set-variable]
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2147
Date:		Mon Jan  4 19:27:28 CET 2016
Report:		Hugues Evrard and Hubert Garavel (INRIA/CONVECS)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al-10.*,
		demo_19/CHANNELS.lnt, demo_21/peterson.lnt,
		demo_22/dekker.lnt, demo_30/hubble.lnt,
		demo_32/TYPES_COMMON_GENERIC.lnt, demo_38/property_4.lnt

Nature:		From now on, the empty channel "NONE" (or "none", or "None")
		defined as:
			channel NONE is () end channel
		is automatically predefined in LNT, meaning that this channel
		is now visible in all LNT modules and that it is no longer
		required to explicitly define this channel.

		LNT2LOTOS will emit a warning message on those LNT programs
		that explicitly define "NONE" as the empty channel (), and
		will emit a fatal error message if "NONE" is defined to be
		different from the empty channel ().

		This change is not backward compatible. The LNT Reference
		Manual has been updated accordingly. The LNT files of demos
		19, 21, 22, 3O, 32, and 38 have been modified to remove all
		explicit definitions of the "NONE" channel.
-------------------------------------------------------------------------------
BUG FIX
Number:		2148
Date:		Wed Jan  6 12:40:11 CET 2016
Authors:	Hubert Garavel and Radu Mateescu (INRIA/CONVECS)
File:		bin.win32/libm.a

Nature:		Due to an error in the ``libm.a'' system library that CADP
		provides for Windows, the EVALUATOR 4 model checker did not
		handle properly temporal-logic formulas written in the MCL V3
		language (i.e., data-less formulas). For instance, when
		evaluating property 29 of demo 05 and property 01 of demo 34,
		the following error messages would appear in the log file
		generated by SVL:

		   $CADP_TMP/caesar_*.c: error: unknown type name 'block'
		   $CADP_TMP/caesar_*.c: error: expected '=', ',', ';',
		      'asm' or '__attribute__' before 'B0'
		   $CADP_TMP/caesar_*.c: error: unknown type name 'B0'

		Notice that this issue only occurred on Windows and that
		formulas written in the MCL V4 language (i.e., value-passing
		formulas) were correctly processed by EVALUATOR 4. This bug
		has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2149
Date:		Fri Jan  8 19:10:17 CET 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		Due to a missing call to unlink(), LNT2LOTOS could forget to
		erase some temporary files, e.g. "/tmp/lnt2lotos_root_*".
-------------------------------------------------------------------------------
BUG FIX
Number:		2150
Date:		Mon Jan 11 15:00:47 CET 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Authors:	Frederic Lang and Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos, src/com/lnt_check

Nature:		In some cases, if a function F contained a non-exhaustive
		"case" statement, then LNT2LOTOS issued a cryptic warning
		message of the following form:

		   function "CASE__...__FUNCTION__RESULT" of file "..."
		   contains a non-exhaustive case

		This message has been corrected, and now displays as follows:

		   function "F" of file "..." contains a non-exhaustive case
-------------------------------------------------------------------------------
BUG FIX
Number:		2151
Date:		Mon Jan 11 18:33:59 CET 2016
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Eric Leo (INRIA/CONVECS)
Files:		ext/latex-listings/cadp-lnt.sty,
		ext/latex-listings/cadp-lotos.sty,
		ext/latex-listings/cadp-mcl.sty

Nature:		An issue was fixed in the LaTeX Listings configuration files
		for the LNT, LOTOS, and MCL languages. After the first
		comment, the remainder of the file was also understood as a
		comment. This was due to a conflict between operators such
		as "*" and "-" and comment delimiters "(*" and "--".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2152
Date:		Tue Jan 12 17:39:42 CET 2016
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, com/lnt.open, ext/a2ps/lnt.ssh,
		doc/*/Champelovier-Clerc-Garavel-et-al-10.*,
		ext/emacs/lnt-mode.el, ext/gtk3/lnt.lang, ext/jedit/lnt.xml,
		ext/latex-listings/cadp-lnt.sty, ext/nano/lnt.nanorc,
		ext/npp/lnt.xml, ext/vim/lnt.vim

Nature:		A new statement has been added to the data part of LNT:
			assert CONDITION [raise EXCEPTION]
		It is the dual for LNT functions of the "assert" construct
		introduced in LNT processes (see item #2141 above).

		The LNT reference manual has been updated and the various
		configuration files for syntax editors have been modified
		to recognize the new "assert" keyword.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2153
Date:		Tue Jan 12 18:31:33 CET 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_16/PROTOCOL.lnt, demos/demo_16/SERVICE.lnt,
		demos/demo_19/TYPES.lnt, demos/demp_29/DATA.lnt,
		demos/demo_38/KEY_PATH.lnt

Nature:		The LNT files of demos 16, 19, 29, and 38 have been enhanced
		by introducing assertions. Formerly, these assertions were
		mentioned as comments; they are now formally expressed using
		the new "assert" operators of LNT (see items #2141 and #2152
		above) and checked at run time.
-------------------------------------------------------------------------------
VERSION 2016-a "Oxford"
-------------------------------------------------------------------------------
BUG FIX
Number:		2154
Date:		Fri Jan 15 15:15:38 CET 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		com/lnt.open

Nature:		The LNT.OPEN script has been modified to properly erase the
		temporary directory ``/tmp/lnt.*'' when the LNT specification
		under processing is found to be incorrect.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2155
Date:		Mon Feb  1 15:48:12 CET 2016
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		The effect of the (undocumented) ``-mcc'' option of CAESAR.BDD
		has been modified, partially reverting a previous change done
		in May 2015 (see item #2055 above). From now on, this option
		produces the macro \PlacesTransitionsArcsUnitsDepthBreadthBits
		only when the input file is a ``true'' NUPN, and otherwise
		produces the simpler macro \ModelFixedSize.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2156
Date:		Tue Feb  2 17:51:26 CET 2016
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		src/com/lnt_depend, src/com/lnt_path,
		src/com/lnt_name, src/com/lnt.open,
		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		Various LNT scripts have been modified so that each LNT
		module included by another module is now searched, first in
		the directory of the principal module, then in the directory
		``$LNT_LOCATION/lib'' (i.e., ``$CADP/lib''). This will enable
		one to build a collection of predefined LNT libraries. The
		reference manual of the LNT2LOTOS translator has been updated
		accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2157
Date:		Wed Feb  3 10:45:43 CET 2016
Authors:	Hubert Garavel, Frederic Lang, Radu Mateescu and Wendelin
		Serwe (INRIA/CONVECS)
Files:		doc/pdf/*, doc/=READ_ME.txt,
		demos/demo_18/=READ_ME.txt, demos/demo_25/=READ_ME.txt

Nature:		To reduce the disk space required by the CADP distribution,
		75 publications (either obsolete or non-essential to CADP
		users today) have been removed from the 'doc/pdf' directory.
		Only 54 publications have been left. This saved 22 megabytes
		of disk space. The =README.txt file has been updated and
		and several URLs contained in this file have been updated.
		Finally, the =README.txt files of demos 18 and 25 have been
		updated by adding bibliographic references.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2158
Date:		Wed Feb  3 11:12:26 CET 2016
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		lib/OCTET.lib, demos/demo_12/maa.lotos

Nature:		The predefined LOTOS library OCTET.lib has been modified and
		extended:
		 - Ten C identifiers specified in the "implementedby" special
		   comments have been renamed:
		     ADT_BITi_OCT -> ADT_BITi_OCTET, for i in 1...8
		     ADT_EQ_OCT -> ADT_EQ_OCTET
		     ADT_NE_OCT -> ADT_NE_OCTET
		 - Four bitwise operations (not, and, or, xor) on Octet values
	           have been added.

		Such changes may be not backward compatible for existing LOTOS
		specifications that import OCTET.lib, and may require slight
		adaptations. For instance, file ``maa.lotos'' of demo 12 (MAA)
		was modified to remove the definition of the ``xor'' function,
		which is now defined in OCTET.lib.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2159
Date:		Wed Feb  3 12:10:04 CET 2016
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
File:		lib/BIT.lnt, lib/OCTET.lnt

Nature:		Following the introduction of predefined LNT modules (see item
		#2157 above), two LNT libraries named BIT.lnt and OCTET.lnt
		have been added to CADP. These two libraries, which are the
		LNT equivalent of the predefined LOTOS libraries BIT.lib and
		OCTET.lib, specify the Bit and Octet types, and their
		associated functions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2160
Date:		Thu Feb  4 09:42:06 CET 2016
Authors:	Frederic Lang and Radu Mateescu (INRIA/CONVECS)
Files:		demos/demo_36/=READ_ME.txt, demos/demo_36.svl

Nature:		Demo 36 (Eratosthenes sieve) has been enhanced with an
		additional property: a value-passing mu-calculus formula is
		evaluated on the graph to check that the sieve effectively
		outputs the first N prime numbers, where the primality test
		is encoded in the formula.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2161
Date:		Thu Feb  4 14:52:03 CET 2016
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		demos/=READ_ME.txt, demos/demo_12/*

Nature:		Demo 12 (MAA) has been translated from LOTOS to LNT. The
		former LOTOS specification was archived in the ``LOTOS''
		sub-directory. The code of the hand-written C files of demo
		12 (MAA) has been simplified, and some fragments of code have
		been moved from ``main.c'' to ``maa.f''. Also, the Makefile
		now runs the generated executable to compute the signature
		of a sample file.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2162
Date:		Fri Feb  5 16:43:02 CET 2016
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_31/*

Nature:		Demo 31 (SCSI-2) has been translated from LOTOS to LNT. The
		former LOTOS specification was archived in the ``LOTOS''
		sub-directory. The ``Results'' sub-directory has been removed
		(it can be regenerated automatically) and its contents have
		been replaced by a PDF file ``results.pdf''.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2163
Date:		Mon Feb  8 10:52:16 CET 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.l

Nature:		A new option ``-initial-tokens'' has been added to CAESAR.BDD
		to display the number of tokens present in the initial marking
		of a NUPN (Nested-Unit Petri Net). The CAESAR.BDD manual page
		has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2164
Date:		Tue Feb  9 11:41:04 CET 2016
Report:		Benoit Barbot (LACL, Universite Paris-Est Creteil, France)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		Inspired by a comment of Benoit Barbot regarding a Petri-net
		model submitted at the Model Checking Contest 2016, the
		output produced by the ``-mcc'' option of CAESAR.BDD has been
		enhanced: when a NUPN is conservative or sub-conservative,
		the maximum number of tokens on any reachable marking can be
		determined by examining the initial marking only.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2165
Date:		Thu Feb 11 18:33:00 CET 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		man/*/nupn.*  bin.*/caesar.bdd

Nature:		The manual page defining the NUPN format has been made more
		precise by explicitly stating that all <unsigned-integer>'s
		are assumed to be smaller than 2^31.

		However, the <nb-tokens>, <min>, and <max> integers occurring
		in a  ``!multiple_initial_tokens #<nb-tokens> #<nb-places>
		<min>...<max>'' pragma can now be as large as 2^63.

		CAESAR.BDD has been modified to properly deal with these
		enlarged numbers. The new version number of CAESAR.BDD was
		set to 2.7.
-------------------------------------------------------------------------------
VERSION 2016-b "Oxford"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2166
Date:		Wed Feb 17 15:51:32 CET 2016
Report:		Hugues Evrard (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, src/com/lnt_check

Nature:		Many error and warning messages of LNT2LOTOS have been
		modified to follow the same format as Gcc, so that they
		are now more compact and it becomes easier for text editors
		to directly indicate those lines where an error takes place.
		For instance:

		- Messages such as
		     ** lnt2lotos: LNT program is syntactically incorrect
		     ** lnt2lotos: quit
		  now display as
		     lnt2lotos: LNT program is syntactically incorrect
		     lnt2lotos: quit

		- Messages such as
		     ** warning at line 24: ...
		     ** error at line 32: ...
		  now display as
		     FILE.lnt:24: warning: ...
		     FILE.lnt:32: error: ...

		- Messages such as
		     ** in function F, line 90, program raised exception X()
		  now display as
		     MOD.lnt:90: in function F, execution raised exception X()
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2167
Date:		Sat Feb 27 11:08:20 CET 2016
Report:		Hernan Ponce de Leon (Aalto University, Finland)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		A new option ``-initial-places'' has been added to CAESAR.BDD
		and the manual page has been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2168
Date:		Mon Feb 29 10:49:21 CET 2016
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		src/svl/standard

Nature:		On Windows, the following SVL script:

		     "service.bcg" = generation of "SERVICE.lotos"

		led to an error:

		     svl: ERROR cannot create "service.lotos" needed to
		          generate "service.bcg"

		The problem was due to the fact that Windows filenames are
		case-insensitive: SVL was trying to create a new file named
		"service.lotos" although another file "SERVICE.lotos" already
		existed. This bug has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2169
Date:		Thu Mar  3 17:01:35 CET 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.*/exp2c

Nature:		Invoking the EXP2C binary with a wrong number of options
		(e.g., zero option) could result in a segmentation fault:

		     $ exp2c
		     exp2c: ERROR missing EXP file name
		     Segmentation Fault - core dumped

		This bug has been fixed. Notice that it never shows up
		during normal usage of CADP, as EXP2C is usually called by
		the EXP.OPEN shell script, which passes options correctly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2170
Date:		Fri Mar  4 12:51:54 CET 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		Certain warning messages of LNT2LOTOS have been made more
		explicit by reporting the LNT file and line where the error
		occurs. For instance, the following message:

		     warning: type mismatch (encountered ADDR while expecting
		     ADDRSET)

		now displays as follows:

		     TEST.lnt:64: warning: type mismatch (encountered ADDR
		     while expecting ADDRSET)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2171
Date:		Tue Mar  8 16:19:47 CET 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		man/*/caesar.*, man/*/caesar.adt.*

Nature:		The manual pages for CAESAR and CAESAR.ADT have been extended:
		- The ``-french'' option is better documented.
		- A BIBLIOGRAPHY section was added.
		- References have been added in the SEE ALSO section.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2172
Date:		Thu Mar 10 09:52:20 CET 2016
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		./INSTALLATION_WINDOWS, ./INSTALLATION_2,
		src/com/cadp_path, src/com/cadp_postscript

Nature:		The CADP toolbox has been slightly modified to ensure that
		it properly functions on Windows 10:
		- The installation directives have been updated to include
		  Windows 10 in the list of supported operating systems.
		- It is now emphasized that Evince should be installed for
		  all users rather than for the current user only. The
		  ``cadp_postscript'' has nevertheless been modified to
		  take into account the latter case.
		- Finally, an issue affecting the ``-unixpath'' option of
		  the ``cadp_path'' shell script when Cygwin is installed
		  in C:/ had been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2173
Date:		Thu Mar 10 14:50:48 CET 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang and Wendelin Serwe (INRIA/CONVECS)
Files:          bin.*/lnt2lotos, src/com/lnt_check

Nature:		Several warning messages of LNT2LOTOS have been improved, so
		that they now refer to function names in the LNT source code
		rather than operation names in the generated LOTOS code. The
		LNT file and line where the problem occurs are now reported.
		Finally, multiple messages about the same issue have been
		merged into a single one. For instance, the following sequence
		of messages:

		     warning: function "TABLE4_6__4CSI_CMD__CSI_CMD" contains
		     a non-exhaustive case
		     warning: function "TABLE4_6__4CSI_CMD__CSI_CMD__1ST"
		     contains a non-exhaustive case

		now displays as one single message:

		     DATA.lnt:438: warning: function TABLE4_6 contains a
		     non-exhaustive case

		Similar enhancements have been made for LNT processes.
-------------------------------------------------------------------------------
BUG FIX
Number:		2174
Date:		Fri Mar 11 11:44:51 CET 2016
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		src/com/cadp_man, ./INSTALLATION_2, ./com/tst

Nature:		The CADP manual pages could not be displayed under Windows
		using the "man" command (this problem was reported by TST),
		because Cygwin does not include the "local" manual pages by
		default in its configuration file /etc/man_db.conf.

		The problem was solved by modifying the installation
		directives given in file INSTALLATION_2. It is now advised
		to set the environment variable $MANSECT on Windows to
		avoid the problem. A new shell script ``cadp_man'' was
		added and TST now gives a detailed warning when the CADP
		manual pages cannot be displayed and either $MANSECT is not
		set or does not include the "local" manual pages.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2175
Date:		Fri Mar 11 17:44:00 CET 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang and Radu Mateescu (INRIA/CONVECS)
Files:		man/*/evaluator4.*, man/*/mcl.*

Nature:		The manual page for EVALUATOR 4 was quite long (36 pages in
		PDF format) and has been split into two distinct pages: one
		for EVALUATOR 4 and a new one for describing the MCL format.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2176
Date:		Fri Mar 11 18:06:50 CET 2016
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		demos/demo_16/PROTOCOL.lnt

Nature:		An LNT file of demo_16 has been slightly modified to avoid
		the following warning:
		   PROTOCOL.lnt:24: warning: gate OUTPUT belongs to only
		   one synchronisation interface and has thus no effect
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2177
Date:		Sun Mar 13 21:14:41 CET 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		man/*/lotos.*, man/*/caesar.*, man/*/caesar.adt.*

Nature:		A new manual page (available by typing the shell command
		"man lotos") that describes the LOTOS language as it is
		implemented in CADP has been written. The CAESAR and
		CAESAR.ADT manual pages have been updated accordingly.
-------------------------------------------------------------------------------
VERSION 2016-c "Oxford"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2178
Date:		Fri Mar 18 17:11:29 CET 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		man/*/lotos.*

Nature:		The LOTOS manual page introduced in CADP 2016-c has been
		significantly expanded (from 12 to 27 pages) so as to cover
		all notions needed to optimally use the CADP tools to analyze
		LOTOS specifications. The manual page was then proof-checked
		by Frederic Lang.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2179
Date:		Sat Mar 19 10:02:14 CET 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.adt

Nature:		Two enhancements have been brought to CAESAR.ADT:

		- If the macro CAESAR_ADT_EXPERT_F (resp. CAESAR_ADT_EXPERT_T)
		  is not defined in the ".f" file (resp. ".t") file, it is
		  assumed to be the current version number of CAESAR.ADT;
		  previously, an older version was assumed (e.g., 5.2 rather
		  than 5.4).

		- In the C code generated by CAESAR.ADT, the macro-definition
		  CAESAR_ADT_ARGUMENT_TRACE has been moved so that the code
		  looks now better.
-------------------------------------------------------------------------------
BUG FIX
Number:		2180
Date:		Sat Mar 26 19:05:35 CET 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.adt, bin.*/caesar, bin.*/caesar.old

Nature:		Although "endlib" is a reserved keyword of LOTOS, CAESAR and
		CAESAR.ADT tolerated the declaration of identifiers named
		"endlib" or "ENDLIB".  From now on, this is forbidden, and
		an error message is emitted in such case:

		#039 error during analysis:
		     ``endlib'' and ``ENDLIB'' are reserved keywords
		#037 error during analysis:
		     LOTOS specification is syntactically incorrect
		     quit
		``endlib'' and ``ENDLIB'' are not valid identifiers in LOTOS
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2181
Date:		Tue Mar 29 11:30:26 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		man/*/caesar.*, man.*/caesar.adt.*

Nature:		The manual pages for CAESAR and CAESAR.ADT have been enhanced
		in several respects:

		- In the CAESAR manual page: "filename.bcg" was not mentioned
		  as an output file; the term "automaton" has been replaced
		  by "graph", and various other corrections have been made.

		- In both manual pages: the preamble has been rewritten;
		  it is now stated that stdout is unbuffered and that stderr
		  is never used; new sections entitled TRANSLATION PHASES
		  have been added.

		These pages have been proof-checked by Frederic Lang.
-------------------------------------------------------------------------------
BUG FIX
Number:		2182
Date:		Thu Mar 31 16:57:56 CEST 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files: 		man/*/evaluator4.*, man/*/exp.*, man/*/mcl.*,
		man/*/reductor.*, man/*/svl-lang.*, man/*/svl.*,
		man/*/xtl-lang.*, man/html/*

Nature:		Various issues have been fixed in the CADP manual pages:

		- The "mcl" and "xtl-lang" manual pages contained ISO Latin-1
		  characters that caused problem on Linux (for instance,
		  these pages could not be opened using Gedit because of
		  such non-UTF characters).

		- The "exp", "reductor", "svl", and "svl-lang" manual pages
		  did not display properly in PDF, because they contained
		  tables in variable-size fonts. The problem was solved by
		  using fixed-size fonts in these tables.

		- The HTML version of all manual pages has been corrected.
		  The code for hyperlinks was not valid, as it contained
		  tags </A> and </B> in the wrong order.

		- Also, due to a problem introduced in CADP 2016-c, there
		  was too much spacing before code excerpts (<PRE> tags)
		  and after section titles (</H1> or </H2> tags).
-------------------------------------------------------------------------------
BUG FIX
Number:		2183
Date:		Sat Apr  2 10:35:09 CEST 2016
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		man/*/aut.*, man/*/fsp2lotos.*, man/*/pbg.*

Nature:		In three CADP manual pages (in NROFF or PDF form, but not
		in HTML form), the titles of sections or subsections were
		truncated if they contained more than six words. This was
		due to a limitation of NROFF whose commands only accept six
		arguments. These pages have been modified to solve the issue.
-------------------------------------------------------------------------------
BUG FIX
Number:		2184
Date:		Wed Apr  6 15:55:26 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/xtl_predefined_declarations.h

Nature:		The definition of the XTL macro XTL_STRING_PRINTF() has been
		modified to avoid a warning occurring on OS X 10.10 "Yosemite"
		or higher:
		   $CADP_TMP/xtl_*.c: warning: format string is not
		   a string literal (potentially insecure) [-Wformat-security]
-------------------------------------------------------------------------------
BUG FIX
Number:		2185
Date:		Wed Apr  6 17:01:30 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/com/cadp_hostname, installator.shar

Nature:		The "cadp_hostname" shell script has been modified in order
		not to display an error message of the following form:
			grep: /etc/hostconfig: No such file or directory
		when it is invoked by Installator or TST on a Mac machine
		running OS X 10.10 "Yosemite" or higher, as the file
		"/etc/hostconfig" no longer exists on recent OS X versions.
-------------------------------------------------------------------------------
BUG FIX
Number:		2186
Date:		Thu Apr  7 11:15:57 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
File:		src/com/cadp_indent

Nature:		The "cadp_indent" shell script has been modified in order
		not to display error messages of the following form:
			cadp_indent: the program ``indent'' failed
		                     file ``XXX.h'' will not be formatted
			mv: XXX.h.BAK: No such file or directory
		when running on OS X 10.10 "Yosemite" or higher.
-------------------------------------------------------------------------------
BUG FIX
Number:		2187
Date:		Thu Apr  7 14:24:38 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
File:		com/tst

Nature:		TST incorrectly mentioned that the default value given to the
		environment variable $CADP_LANGUAGE was "french", rather than
		"english". This issue has been solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2188
Date:		Fri Apr  8 15:23:02 CEST 2016
Report:		Gerard Berry (College de France, Paris)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		src/com/cadp_path, installator.shar

Nature:		On all execution platforms (but Windows), Installator, when
		invoked from directory /tmp (which is the usage suggested by
		the CADP web site), proposed to install CADP in /tmp/cadp
		(or, on OS X, in /private/tmp/cadp). This was an unfortunate
		default choice, as the contents of /tmp are likely to be
		erased the next time the machine is rebooted. From now on,
		Installator suggests to install CADP in $HOME/cadp (except
		on Windows).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2189
Date:		Fri Apr  8 16:36:31 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		INSTALLATION_MACOS, INSTALLATION_OSX

Nature:		The instructions for installing CADP on Mac OS X have been
		updated to take into account OS X 10.10 "Yosemite" and
		10.11 "El Capitan". Most notably:

		- The sections on XQuartz and Xcode have been rewritten.

		- From now on, the use of "wget" is recommended (rather than
		  "curl", because the "-0" option of "curl" is sometimes
		  confused with "-O", whereas "wget" requires no option).

		- Following the evolution of Apple's terminology, the file
		  INSTALLATION_MACOS has been renamed in INSTALLATION_OSX.
		  A symbolic link has been added to provide backward
		  compatibility for some time.

		- Similarly, the web page http://cadp.inria.fr/macOS.html
		  has been moved to http://cadp.inria.fr/osx.html
-------------------------------------------------------------------------------
BUG FIX
Number:		2190
Date:		Sat Apr  9 12:43:16 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.adt, man/*/lotos.*

Nature:		From now on, CAESAR.ADT forbids equations that define a
		non-constructor operation that is declared (in a "renamedby"
		type definition) as renaming another operation. The LOTOS
		manual page has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2191
Date:		Tue Apr 12 10:41:54 CEST 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		man/*/bcg_merge.*, man/*/bcg_min.*, man/*/bcg_steady.*,
		man/*/bcg_transient.*, man/*/bes_solve.*, man/*/bisimulator.*,
		man/*/determinator.*, man/*/distributor.*, man/*/evaluator.*,
		man/*/evaluator4.*, man/*/exp.*.*, man/*/exp.open.*.*,
		man/*/fsp2lotos.*.*, man/*/gcf.*, man/*/lnt2lotos.*,
		man/*/lnt.open.*, man/*/lpp.*, man/*/mcl.*, man/*/pbg.*,
		man/*/projector.*.*, man/*/rbc.*, man/*/reductor.*.*,
		man/*/solve_1.*, man/*/svl.*.*, man/*/svl-lang.*.*,
		man/*/xtl-lang.*

Nature:		In the BIBLIOGRAPHY section of many manual pages, URLs have
		been added to give direct access to the corresponding CADP
		publications.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2192
Date:		Tue Apr 12 13:15:55 CEST 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		man/*/evaluator.l, man/*/mcl3.*, man/*/mcl.*

Nature:		The EVALUATOR manual page has been splitted in two, by moving
		the description of the MCL version 3 language (i.e., Regular
		Alternation-Free Mu-Calculus) to a new manual page MCL3.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2193
Date:		Tue Apr 12 19:47:22 CEST 2016
Author:		Frederic Lang (INRIA/CONVECS)
Files:		demos/demo_05/FILES.lnt

Nature:		In module ``FILES.lnt'' of demo 05, the EQUAL function has
		been simplified by taking advantage of the "case" with
		multiple patterns recently introduced in the LNT language
		(see above item #2124).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2194
Date:		Wed Apr 13 10:56:25 CEST 2016
Report:		Hubert Garavel (INRIA/CONVECS), Hauke Pribnow (Univ. Muenster,
		Germany)
Authors:	Frederic Lang and Wendelin Serwe (INRIA/CONVECS)
Files:		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The LNT2LOTOS Reference Manual has been enhanced at various
		places. In particular:

		- In Chapter 6, informal explanations about the "?" and "!?"
		  symbols have been added.

		- In Annex E, the comparison between LNT2LOTOS and Traian
		  has been simplified by no longer discussing Traian features
		  that have not been entirely implemented. This change is
		  in line with the preparation of Traian 2.9, in which all
		  these features will be removed.
-------------------------------------------------------------------------------
VERSION 2016-d "Oxford"
-------------------------------------------------------------------------------
BUG FIX
Number:		2195
Date:		Wed Apr 20 16:42:47 CEST 2016
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/libcaesar.a

Nature:		Two minor defects have been fixed in the Caesar_Network_1
		library that is part of the OPEN/CAESAR library:

		- The case where the ".gcf" file mentions the name N of the
		  current machine but file /etc/hosts does not define this
		  name N as a synonym of "localhost" (i.e., 127.0.0.1) is
		  now better handled by launching all local instances with
		  option "-remote localhost" rather than "-remote N" to
		  avoid error messages.

		- From now on, when (local or remote) instances are launched,
		  both directories "$CADP/com" and "$CADP/bin.$ARCH" are
		  automatically inserted at the beginning of the $PATH
		  environment variable. Formerly, only the "$CADP/com"
		  directory was added, at the end of the $PATH value.

		These changes have been proof-checked by Hugues Evrard.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2196
Date:		Sun Apr 24 10:13:45 CEST 2016
Report:		Pascal Poizat (LIP6, Paris, France), Matthias Guedemann
		(INRIA/CONVECS), and Hauke Pribnow (Univ. Muenster, Germany)
Authors:	Hubert Garavel, Frederic Lang, and Wendelin Serwe
		(INRIA/CONVECS)
Files:		bin.iX86/*, bin.mac86/*, bin.x64/*, bin.win32/*

Nature:		The CADP binaries have been made faster on Mac OS X, Windows,
		and certain versions of Linux.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2197
Date:		Tue Apr 26 15:28:12 CEST 2016
Report:		Hauke Pribnow (Univ. Muenster, Germany)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
File:		incl/caesar_system.h

Nature:		The ``caesar_system.h'' include file has been modified to
		avoid warnings of the form:

		   In file included from $CADP/incl/bcg_standard.h:168:0,
		   $CADP/incl/caesar_system.h:... warning: "popen" redefined
		   $CADP/incl/caesar_system.h:... warning: "pclose" redefined

		emitted on Windows by the latest version of the MinGW GCC
		compiler.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2198
Date:		Tue Apr 26 18:57:18 CEST 2016
Report:		Hauke Pribnow (Univ. Muenster, Germany)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		./INSTALLATION_WINDOWS

Nature:		The installation directives for CADP on Windows have been
		updated to reflect the latest changes in the Cygwin packages.
		Namely:
		- The ``util-linux'' is now selected by default.
		- The ``mingw-gcc-core'' package no longer exists and has
		  been renamed in ``mingw64-i686-gcc-core''.
		A note has been added to mention that the ``mingw64-x86_64''
		package is not useful for CADP.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2199
Date:		Wed Apr 27 09:35:29 CEST 2016
Report:		Pierre Gaufillet (IRT St Exupery, Toulouse, France), Hauke
		Pribnow (Univ. Muenster, Germany), and Maciej Szymkat (AGH
		University of Science and Technology, Krakow, Poland)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		./INSTALLATION_WINDOWS, com/arch, com/tst, src/com/cadp_cc

Nature:		A few shell scripts and the installation directives for
		CADP on Windows have been modified so that CADP can now
		be used with 64-bit versions of Cygwin (previously, only
		32-bit versions of Cygwin were supported).
-------------------------------------------------------------------------------
BUG FIX
Number:		2200
Date:		Thu Apr 28 15:50:43 CEST 2016
Report:		Hauke Pribnow (Univ. Muenster, Germany)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/open_caesar/executor.c, src/open_caesar/simulator.c,
		src/open_caesar/terminator.c

Nature:		The EXECUTOR, SIMULATOR, and TERMINATOR tools have been
		modified so as to run properly even when invoked from a
		shell interpreter that is block-buffered (e.g., when using
		Mintty on Windows rather than Cygwin bash).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2201
Date:		Mon May  2 15:37:55 CEST 2016
Report:		Hauke Pribnow (Univ. Muenster, Germany)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		com/caesar.open, com/lnt.open

Nature:		The effect of the ``-silent'' and ``-verbose'' options of
		CAESAR.OPEN and LNT.OPEN has been modified in several ways:

		- The ``-silent'' option is now totally silent, except when
		  warnings or error messages are emitted. This option no
		  longer displays progress information about which tools
		  are being invoked. Its use is adapted to the case where
		  the source LOTOS or LNT specification is known in advance
		  to be correct.

		- The ``-verbose'' option is now more verbose. In particular,
		  when this option is set, CAESAR and CAESAR.ADT are now
		  invoked with their ``-verbose'' set transitively.

		- When CAESAR.OPEN and LNT.OPEN are invoked without their
		  ``-silent'' and ``-verbose'' options, they now behave
		  half-way between both options. Also, CAESAR.OPEN without
		  option is now less verbose than before, much in the same
		  way as its previous behaviour with ``-silent'' option.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2202
Date:		Mon May  2 19:10:13 CEST 2016
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		man/html/pictures/distributor*.jpg

Nature:		The five pictures illustrating the DISTRIBUTOR manual page
		(in HTML version), which had been made in 2005, have been
		replaced with new screen snapshots that are up to date and
		more accurate.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2203
Date:		Wed May  4 11:32:29 CEST 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c, man/*/exp.*

Nature:		The general parallel composition operator "par" of the EXP 2.0
		language has been extended. One can now add synchronization
		degrees of the form #N (where N is a natural number) to gates
		or labels occurring in the local synchronization interfaces
		of parallel behaviours. Formerly, such clauses #N could only
		be used in the global synchronization interface (i.e., in the
 		synchronization list that follows the keyword "par" operator).

		Therefore, the global and local synchronization interfaces
		now have the same syntax, and their elements are now called
		"synchronization elements" in the unified syntax.

		The semantics of this extension is defined as follows: in a
		parallel composition such that a subset of M of the parallel
		behaviours share the same synchronization element G#N in
		their local synchronization interface, any N among those M
		behaviours may synchronize all together. EXP.OPEN checks that
		N is less or equal to M.

		Consider for instance the following behaviour:
			par
			   G#2, H#2 -> B1
			|| G#2 -> B2
			|| G#2, H#2 -> B3
			|| H#2 -> B4
			end par
		Any two behaviours among B1, B2, and B3 may synchronize on
		gate G, and any two behaviours among B1, B3, and B4 may
		synchronize on gate H. Note that this behaviour could not
		be specified using a single parallel composition operator
		before the extension.

		Note that the new semantics is conservative as it preserves
		the meaning of synchronization elements without degrees;
		indeed, a synchronization element G without degree shared
		between M interfaces is equivalent to G#M.

		Note also that the semantics has the following (new) property:
		the global synchronization interface can be distributed among
		the local synchronization interfaces without altering the
		semantics of the "par" operator.

		The manual page describing the EXP language has been updated
		with a description of this extended "par" operator.

		Due to a refactoring of functions in EXP2C, the C code
		produced for N-among-M synchronization has slightly changed.
		The change concerns the order of data in the generated
		synchronization tables. This may affect the order in which
		labels or transitions are enumerated, and the size of the
		BCG file built using GENERATOR or REDUCTOR ; however, the
		size of the generated LTS, as well as its semantics modulo
		strong bisimulation, are preserved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2204
Date:		Fri May 13 15:13:51 CEST 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c, man/*/exp.*

Nature:		The syntax of the "par" operator of EXP 2.0 has been extended
		with a "G#1" notation to explicitly specify non-synchronized
		actions in the parallel branches. Previously, when writing a
		behaviour of the following form:
		    par
		       G -> "a.bcg"
		    || "b.bcg"
		    end par
		a warning was emitted to underline the fact that gate G
		only appears in one single interface and thus cannot be
		synchronized. To avoid this warning, the behaviour had to
		be rewritten as follows:
		   par
		       "a.bcg"
		    || "b.bcg"
		    end par
		It is now possible to write:
		    par
		       G#1 -> "a.bcg"
		    || "b.bcg"
		    end par
		so as to emphasize the fact that gate G is non-synchronised
		and thus freely interleaves with the actions of "b.bcg". In
		such case, no warning will be emitted.

		Note that the notation "par G#1 in ..." will distribute G#1
		in each branch of the parallel composition, leaving G non-
		synchronized in each branch.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2205
Date:		Wed May  4 16:41:17 CEST 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c, man/*/exp.*

Nature:		The syntax of the "par" operator of EXP 2.0 has been further
		extended with a "G#0" notation that prevents actions with a
		gate G from being fired. This new notation has the same effect
		as a "cut" construct. A warning is emitted if an interface
		simultaneously contains a clause G#0 and either a clause G
		or G#n with n>0.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2206
Date:		Sun May  8 14:21:45 CEST 2016
Report:		Hauke Pribnow (Univ. Muenster, Germany)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		./INSTALLATION_2

Nature:		The installation directives now explicitly state that the
		$CADP environment variable (i.e., the pathname to the
		directory in which CADP is installed) should contain neither
		spaces nor Unicode characters that do not belong to the ASCII
		character set.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2207
Date:		Mon May  9 17:56:46 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/caesar_standard.h, doc/*/Garavel-92-a.*

Nature:		The OPEN/CAESAR programming environment has been enriched
		with two new types CAESAR_TYPE_ARGC and CAESAR_TYPE_ARGV,
		which are useful to declare functions with variable lists of
		arguments.
-------------------------------------------------------------------------------
VERSION 2016-e "Oxford"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2208
Date:		Sun May 15 13:13:22 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
File:		incl/adt_character.h

Nature:		The definition and behaviour of function bcg_character_scan()
		defined in file "$CADP/incl/adt_character.h" has been slightly
		modified. An auxiliary function bcg_core_character_scan(),
		which can be seen as the dual of bcg_core_character_print(),
		has been introduced and is invoked by bcg_character_scan().
		Also, the results returned by bcg_character_scan() in some
		error cases have been modified. For instance:
		- bcg_character_scan ('\01') and bcg_character_scan ('\019')
		  now return BCG_SCAN_NOK_BAD_CHARACTER rather than
		  BCG_SCAN_NOK_BAD_OCTAL.
		- bcg_character_scan ('\x') now returns BCG_SCAN_NOK_BAD_HEXA-
		  DECIMAL rather than BCG_SCAN_NOK_BAD_ESCAPE.
		- bcg_character_scan ('\!') returns BCG_SCAN_NOK_BAD_ESCAPE
		  rather than BCG_SCAN_NOK_BAD_CHARACTER.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2209
Date:		Sun May 15 16:30:48 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
File:		incl/adt_string.h

Nature:		The function bcg_string_scan() defined in file "$CADP/incl/
		adt_string.h" was greatly simplified by calling the new
		auxiliary function bcg_core_character_scan() (see item #2208
		above). This allowed to remove almost-duplicated code that
		existed between "adt_character.h" and "adt_string.h". So
		doing, some error values returned by bcg_string_scan() have
		been modified. For instance, bcg_string_scan ("\"\\") now
		returns BCG_SCAN_NOK_BAD_ESCAPE rather than
		BCG_SCAN_NOK_BAD_STRING.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2210
Date:		Mon May 16 10:44:14 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
File:		INSTALLATION_WINDOWS

Nature:		The installation directives for Windows have been updated to
		better explain how to use the 64-bit Cygwin installer together
		with CADP.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2211
Date:		Tue May 17 09:32:13 CEST 2016
Report:		Hauke Pribnow (Univ. Muenster, Germany)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		man/*/bcg_write.*

Nature:		The rules given for label parsing in the BCG_WRITE manual page
		have been improved:

		- Previously, it was stated that strings follow the same
		  conventions as characters; it is now mentioned that single
		  quotes (which are always escaped in characters) can be
		  escaped or not in strings.

		- The generic paragraph stating that details about field
		  parsing and normalization can be found by examining the
		  bcg_..._scan() and bcg_..._print() functions has been
		  replaced with eight paragraphs, which explicitly refer to
		  bcg_gate_scan(), bcg_gate_print(), bcg_boolean_scan(),
		  bcg_boolean_print(), etc. at appropriate places.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2212
Date:		Wed May 18 11:22:54 CEST 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c, man/*/exp.*

Nature:		EXP.OPEN now emits warnings concerning the extended "par"
		operator (see above items #2203, #2204, and #2205) in the
		following cases:

		- The global synchronization interface has a synchronization
		  element of the form G without degree, but not all of the
		  parallel behaviours contain a label that matches G.

		- The global synchronization interface has a synchronization
		  element of the form G#N, but strictly less than N of the
		  parallel behaviours contain a label that matches G.

		- A local synchronization interface has a synchronization
		  element of the form G or G#N, but no label matches G in
		  the corresponding parallel behaviour.

		The manual page has been updated accordingly, and the version
		number of EXPOPEN has been set to 2.4.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2213
Date:		Wed May 18 16:27:56 CEST 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, man/*/svl-lang.*

Nature:		It is now possible to also use in SVL scripts the generalized
		parallel composition operator with synchronization degrees
		in synchronization interfaces, which has been recently
		introduced in EXP.OPEN (see above items #2203, #2204, #2205,
		and #2212).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2214
Date:		Sat May 21 21:30:06 CEST 2016
Report:		Hubert Garavel (INRIA/CONVECS) and Hauke Pribnow (Univ.
		Muenster, Germany)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/adt_raw.h, incl/bcg_types.h, bin.*/libBCG_IO.a,
		bin.*/bcg*, man/*/bcg_write.*

Nature:		The section of the BCG_WRITE manual page that describes how
		label fields of type "raw" should be parsed was correct in
		its principles, but not accurate enough. Namely:

		- It stated that the exclamation-mark character ! needs to be
		  always escaped (i.e., written \!) in raw values, but this
		  was not the case in the characters and strings embedded
		  in raw values.

		- It did not say anything about how to escape characters
		  other than !.

		This section has been updated to be more precise. Also, the
		bcg_raw_scan() function defined in file "$CADP/incl/adt_raw.h"
		has been entirely rewritten using the new auxiliary function
		bcg_core_character_scan() (see above item #2208). The revised
		version of bcg_raw_scan() has a different behaviour:

		- While the old version only recognized escape sequences of
		  the form '\ooo' where 'ooo' was an octal number denoting a
		  non-printable character, the new version recognizes the
		  same escape sequences as in character and string notations:
		  \a, \b, ... \n, \r, as well as octal and hexadecimal
		  notations for all characters (including printable ones),
		  and also the aforementioned escape sequence \! (which can
		  also be written \041 or \x21).

		- The new version introduces a three-state automaton to
		  properly detect embedded characters and embedded strings,
		  in which the exclamation-mark character does not need to
		  be escaped.

		- The escape sequences present in raw values are now stored
		  in memory using a single byte, whereas several bytes were
		  used formerly. For instance, \101\102 is now stored using
		  two bytes ("AB") rather than eight ("\101\102"). As a
		  consequence, labels that were formerly different (e.g.,
		  "EVENT !A\102" and "EVENT !\101B") are now identical.

		- The old version of bcg_raw_scan() was very permissive and
		  always returned the code BCG_SCAN_OK. The new version is
		  stricter and can now return the error codes such as
		  BCG_SCAN_NOK_BAD_OCTAL, BCG_SCAN_NOK_BAD_HEXADECIMAL,
		  BCG_SCAN_NOK_BAD_ESCAPE, and BCG_SCAN_NOK_BAD_RAW, the
		  latter being a new error code introduced for the case
		  where an exclamation-mark character is not properly escaped.

		Although these changes are not fully upward compatible, they
		should remain invisible to most users, as differences only
		occur on some ad hoc labels (e.g., such as the following
		label "a \! \" "a" "!" \!") that cannot be produced from
		LOTOS or LNT.

		The BCG libraries and tools (and especially BCG_IO) have been
		modified to use the new version of bcg_raw_scan() and emit
		appropriate error messages when label fields contain incorrect
		notations of raw values. From now on, such incorrect fields
		will be replaced by the default value "<invalid>" of type raw.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2215
Date:		Wed May 25 10:51:29 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/adt_real.h, bin.*/bcg_io, bin.*/libBCG_IO.a

Nature:		The function bcg_real_scan() can now return two error results
		BCG_SCAN_NOK_UNDERFLOW and BCG_SCAN_NOK_OVERFLOW, rather than
		only BCG_SCAN_NOK. The BCG_IO tool has been updated to take
		this change into account and display more explicit error
		messages in case of under/overflow.
-------------------------------------------------------------------------------
BUG FIX
Number:		2216
Date:		Mon Jun  6 15:58:12 CEST 2016
Author:		Hugues Evrard (INRIA/CONVECS)
Files:		bin.*/libcaesar.a, bin.*/distributor, bin.*/pbg*

Nature:		Following recent changes introduced in the CAESAR_NETWORK_1
		library (see item #2195 above), the distributed verification
		tools had stopped working in CADP 2016-e "Oxford". This is
		now repaired with CADP 2016-f "Oxford".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2217
Date:		Thu Jun  9 18:19:02 CEST 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe, Hubert Garavel, and Frederic Lang (INRIA/
		CONVECS)
Files:		bin.*/lnt2lotos, doc/pdf/Champelovier-Clerc-Garavel-10.pdf

Nature:		The LNT language has been enriched with a new statement
		"use X1, ..., Xn" that serves to avoid warnings about the
		variables X1, ..., Xn when their value is not used. The
		LNT2LOTOS Reference Manual has been updated to describe
		the "use" statement in functions and processes. Notice that,
		because "use" is now a new LNT keyword, the existing LNT
		specifications containing identifiers named "use" have to
		be modified in order to rename those identifiers.

		A "use" statement has been inserted in demo 32 (in file
		ELEM_E12_SAMEADDR_I.lnt) to remove the warning:
		   in function FIRST, ``in'' parameter E1 is never used

		Another "use" statement has been inserted in demo 35 (in file
		TYPES.lnt) to remove the warning:
		   in function WEIGHT, ``in'' parameter N1 is never used
-------------------------------------------------------------------------------
BUG FIX
Number:		2218
Date:		Fri Jun 10 10:07:10 CEST 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		When an LNT module is named TEST, it is not strictly required
		that it is contained in a file named "TEST.lnt" (see item
		#1853 above); in such case, the file name is not necessarily
		an identifier and may even contain special characters. This
		led to the generation of incorrect LOTOS code, as the file
		name was used to give the name of the LOTOS specification.
		From now on, the name of the LNT module (converted to upper
		case, i.e., "TEST") is used (rather than the ".lnt" file name)
		as the LOTOS specification identifier.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2219
Date:		Mon Jun 13 10:33:47 CEST 2016
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		doc/=READ_ME.txt, doc/pdf/Garavel-15-b.pdf

Nature:		The =READ_ME.txt file has been shortened, in line with the
		separation done between the complete list of CADP publications
		(http://cadp.inria.fr/publications/all.html) and the list of
		selected CADP publications (http://cadp.inria.fr/publications).
		Also, a new paper explaining the rationale for sequential
		composition in LNT has been added.
-------------------------------------------------------------------------------
VERSION 2016-f "Oxford"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2220
Date:		Mon Jun 20 13:48:26 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.adt

Nature:		In the C code generated by CAESAR.ADT, the (new-style)
		iterators for "numeral" sorts (i.e., those sorts S having
		two constructors F1 : -> S and F2 : S -> S, namely sorts
		isomorphic to natural numbers) would enumerate the range
		0...254 by default, unless the ".t" file specifies a
		different iterator for S or defines a CAESAR_ADT_HASH_...
		macro for S (see items #1250 and #1251 above for details).
		The choice of the upper bound 254 (rather than 255) was
		dictated by the wish to maintain compatibility with old-
		style iterators, which relied on a "for" loop with
		incrementation, and thus would loop back to 0 if the
		value 255 was reached.

		At present, old-style iterators are no longer used, so
		that the default iteration range was changed to 0...255
		in order to prepare future changes in CAESAR.ADT. This
		change may generate slightly larger transition systems,
		as one more value is considered when iterating on numeral
		sorts. The version number of CAESAR.ADT was set to 5.5
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2221
Date:		Tue Jun 21 14:20:38 CEST 2016
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		doc/*/Champelovier-Clerc-Garavel-et-al-10.*,
		ext/a2ps/lnt.ssh, ext/emacs/lnt-mode.el, ext/gtk3/lnt.lang,
		ext/jedit/lnt.xml, ext/latex-listings/cadp-lnt.sty,
		ext/nano/lnt.nanorc, ext/npp/lnt.xml, vim/lnt.vim

Nature:		The "use" keyword recently introduced in LNT (see item #2217
		above) has been added to the list of LNT keywords in the
		LNT2LOTOS Reference Manual. The LNT style files for editors
		have been updated to take into account this new keyword.
-------------------------------------------------------------------------------
BUG FIX
Number:		2222
Date:		Wed Jun 22 11:21:16 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.adt, man/*/lotos.*

Nature:		The following issue existed in CAESAR.ADT: when the ".t"
		file contained, for a numeral sort S, a macro-definition of
		the following form:
		   #define CAESAR_ADT_HASH_... N
		the iterator for sort S was not properly generated if the
		value of N was negative. Rather than enumerating the range
		0...(2^(-N))-1, it enumerated the empty range 0...(N-1).
		This issue was solved and the LOTOS manual page was enhanced
		with more precise explanations regarding numeral sorts.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2223
Date:		Thu Jun 23 15:12:27 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.adt

Nature:		The way CAESAR.ADT handles the macro definitions
		   #define CAESAR_ADT_HASH_... N
		contained in the ".t" file and applying to numeral sorts
		has been enhanced in several ways:

		1) Previously, the three negative values N = -30, N = -31,
		   and N = -32 were not accepted by 32-bit executables of
		   CAESAR.ADT. Such values were ignored, with the following
		   message:

		      the macro-definition CAESAR_ADT_HASH_...
		      defined in the ``.t'' file has a too small value: -32
		      the minimal value allowed is -29
		      (this macro-definition will be ignored)

		   From now on, these three values (and especially -32, which
		   is useful to implement numeral sorts as 32-bit unsigned
		   integers) are accepted.

		2) Previously, the positive values N > 2^31 (for 32-bit
		   executables of CAESAR.ADT) and N > 2^63 (for 64-bit
		   executables) were rejected.

		   From now on, all these values are accepted but, in 64-bit
		   mode, the 64 largest positive values that can also read as
		   the 64-bit negative numbers -64, -63, ..., -2, and -1.

		   Notice that, in the ".t" file, large values should be
		   written with a "U" suffix, e.g.
		      #define CAESAR_ADT_HASH_T 4294967230U
		   to avoid compiler warnings about signed/unsigned
		   conversion issues.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2224
Date:		Thu Jun 23 18:58:13 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.adt, bin.*/caesar, bin.*/caesar.old,
		com/caesar.open, man/*/caesar.adt.*, man/*/lotos.*

Nature:		A new option "-numeral N" has been introduced in CAESAR.ADT.
		This option allows to specify the range of values for all
		the numeral sorts S for which the ".t" file does not define
		a corresponding CAESAR_ADT_HASH_... macro. Previously, all
		such sorts were always implemented on one byte; their
		implementation can now be changed easily using the "-numeral"
		option.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2225
Date:		Tue Jun 28 10:14:45 CEST 2016
Authors:	Hubert Garavel, Frederic Lang, and Wendelin Serwe (INRIA/
		CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al-10.*,
		demos/demo_05/FILES.lnt, demos/demo_05/MESSAGES.lnt,
		demos/demo_05/QUEUE.lnt, demos/demo_12/maa.lnt, com/upc

Nature:		As a first step for future simplifications, the syntax of
		function declarations in the LNT language has been modified.
		When a function F raises exceptions E1, ..., En, this
		function should no longer be declared as:

		   function F (...) : T raises E1, ... En:none is
		   ...
		   end function

		but using the new syntax:

		   function F [E1, ... En:none] (...) : T is
		   ...
		   end function

		A few LNT files in demo_05 and demo_12 have been modified
		accordingly.

		Because such syntactic changes are tedious, yet easy, CADP
		provides a tool that can perform them automatically and
		update (most) LNT specifications. Running the command:

			upc 2016-LNT-FUNCTION-RAISES [<directory>]

		will search for all ``.lnt'' files in <directory> (or in
		the user's home directory if <directory> is omitted) and
                propose to automatically update those files that need to be
		changed. Files will be left unchanged if the tool cannot
		safely modify them, e.g., if they are write-protected, or if
		LNT comments occur between the "function" and "is" keywords.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2226
Date:		Sun Jul 10 10:21:26 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.adt, bin.*/caesar, bin.*/caesar.old

Nature:		The list of the C-language reserved keywords, which CAESAR
		and CAESAR.ADT use to determine whether a C identifier
		corresponding to a LOTOS sort or operation is valid, has
		been updated with the reserved keywords of C11. Namely,
		the "entry" keyword was removed from the list, while the
		"inline" and "restrict" have been added to the list.

		This change is not fully backward compatible, as the LOTOS
		specifications using such keywords in special comments, e.g.,
		   (*! implementedby restrict ... *)
		or
		   (*! comparedby inline ... *)
		are no longer accepted. In such case, "inline" and "restrict"
		should be replaced with different identifiers.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2227
Date:		Thu Jul 12 19:21:46 CEST 2016
Report:		Hauke Pribnow (Univ. Muenster, Germany)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/ocis.a

Nature:		The behaviour of the OCIS simulator, when the "-tty" option
		is set, has been modified to display immediately its messages,
		even when the output stream is block-buffered.
-------------------------------------------------------------------------------
VERSION 2016-g "Oxford"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2228
Date:		Wed Jul 13 06:45:16 CEST 2016
Authors:	Wendelin Serwe, Frederic Lang, and Hubert Garavel (INRIA/
		CONVECS)
File:		bin.*/lnt2lotos

Nature:		The syntax of LNT expressions has been slightly modified in
		two ways:

		- One can now freely combine field selections (``E.X''), field
		  updates (``E1.{X = E2}''), and array accesses (``E1 [E2]'')
		  without the need for adding extra parentheses, as it was
		  required formerly.

		- To access an element of an array return by a function, it
		  is now necessary to add parentheses around the function
		  call and its arguments. For instance, it is no longer
		  possible to write:
		     F (0, 1) [X+1]
		  One must write instead:
		     (F (0, 1)) [X+1]
-------------------------------------------------------------------------------
BUG FIX
Number:		2229
Date:		Mon Jul 25 13:06:13 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.adt, bin.*/caesar, bin.*/caesar.old,
		bin.*/caesar.indent

Nature:		The handling of sort renaming/actualization ("S1 for S2"
		clauses) and operation renaming/actualization ("F1 for F2"
		clauses) has been improved in the LOTOS compiler front-end
		that is common to CAESAR and CAESAR.ADT. The following changes
		have been brought:

		- It is no longer allowed to attach special comments to these
		  "for" clauses. This was formely allowed syntactically, but
		  not documented, and therefore not much used.

		- Many improvements have been made in the code that computes
		  LOTOS type signatures. In particular, a bug was fixed, which
		  prevented duplicates from being detected if they occurred
		  in the last element of a list.

		These changes may slightly modify the definition line numbers
		for the sorts and operations that are defined by renaming.
		Such changes may appear in the warning and error messages
		emitted by CAESAR and CAESAR.ADT, and in the ``.net'' files
		produced by the ``-network'' option of CAESAR.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2230
Date:		Thu Jul 28 08:55:18 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		The syntax of LNT has been extended. When declaring a nullary
		(i.e., constant) non-constructor function F that can raise an
		exception E, one may now write either:
			function F [E : none] : T is ...
		or:
			function F [E : none] () : T is ...
		The latter form is now permitted by the LNT concrete syntax.
-------------------------------------------------------------------------------
BUG FIX
Number:		2231	
Date: 		Sun Jul 31 14:29:09 CEST 2016
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.adt, bin.*/caesar, bin.*/caesar.old

Nature:		A bug was fixed in the LOTOS compiler front-end that is
		common to CAESAR and CAESAR.ADT: in case of type checking
		error for an overloaded function F, some overloaded profiles
		of F were printed several times rather than once, e.g.:

		- operation ACK used in value:
		     ACK (L1, L2)
		  the profile of which is
		     NAT [X_NATURAL:3], NAT [X_NATURAL:3] -> ?
		  was not declared; some operations exist with the same name
		  but with incompatible profiles:
		     ACK [35] : BLOCK_ID [13], NAT [X_NATURAL:3] -> MSG [15]
		     ACK [52] : MSG [15], NAT [X_NATURAL:3] -> MSG [15]
		     ACK [71] : BOOL [X_BOOLEAN:3], BOOL [X_BOOLEAN:3] ->
		                NAT [X_NATURAL:3]
		     ACK [35] : BLOCK_ID [13], NAT [X_NATURAL:3] -> MSG [15]
		     ACK [52] : MSG [15], NAT [X_NATURAL:3] -> MSG [15]
		     ACK [71] : BOOL [X_BOOLEAN:3], BOOL [X_BOOLEAN:3] ->
		                NAT [X_NATURAL:3]
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2232
Date:		Sat Aug 13 11:08:33 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.adt, bin.*/caesar, bin.*/caesar.old, com/upc

Nature:		The C identifiers generated for LOTOS operations without
		attached ``implementedby'' special comment have been modified.
		For such an operation F, the user has not specified a C
		identifier explicitly, so CAESAR and CAESAR.ADT must generate
		one automatically. Formerly, the generated C identifier was
		defined as follows:

		- When the LOTOS name of F started with a letter, the C
		  identifier had the form ``CAESAR_ADT_FUNC_%s'', where %s
		  was the LOTOS name;

		- When the LOTOS name of F did not start with a letter, the
		  C identifier had the form ``CAESAR_ADT_FUNC_%d'', where %d
		  was a unique number.

		From now on, the generated C identifier is defined as follows:

		- When the LOTOS name of F starts with a letter or a digit,
		  the C identifier has the form ``CAESAR_ADT_FUNC_%s'', where
		  %s is the LOTOS name (which only contains letters, digits,
		  and underscores);

		- When the LOTOS name of F starts neither with a letter nor a
		  digit (i.e., if it contains only special characters), the C
		  identifier has the form ``CAESAR_ADT_FUNCNUM_%d'', where %d
		  is a unique number.

		The new rules lead to C identifiers that are usually shorter
		and more readable. For instance, the C identifier associated
		to a LOTOS operation ``1'' is now ``CAESAR_ADT_FUNC_1'' rather
		than, e.g., ``CAESAR_ADT_FUNC_55''.

		Measured on 3.2 Gbytes of C code generated by CAESAR.ADT,
		this change led to a slight increase (0.17%) in the size of
		the code.

		Clearly, such changes are not backward compatible. In most
		cases, they should remain invisible to CADP users, as the C
		identifiers are automatically generated by CAESAR.ADT.
		However, they may also affect some ``.h'', ``.f'', ``.t'',
		``.fnt'', and ``.tnt'' files that have been manually written
		by the user. In such case, these files must be updated.

		To partly automate such updates, the ``upc'' shell script
		(key 2016-ADT-NAMING) has been extended. This script renames
		``CAESAR_ADT_FUNC_%d'' into ``CAESAR_ADT_FUNCNUM_%d'' in the
		``.h'', ``.f'', ``.t''``.fnt'', and ``.tnt'' files that have
		been produced manually. The remaining changes have to be
		performed manually as they are not done by ``upc''. Please
		contact cadp@inria.fr if help is needed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2233
Date:		Mon Aug 15 09:57:02 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.old, com/upc,
		incl/adt_string.h, incl/X_STRING.h

Nature:		Various C identifiers generated by CAESAR.ADT have been
		simplified, in the case such identifiers are related to a
		LOTOS sort S that has no attached ``implementedby''
		special comment. These C identifiers are the following:

			CAESAR_ADT_ASCII_%s
			CAESAR_ADT_BITS_%s
			CAESAR_ADT_BODY_%s
			CAESAR_ADT_CMP_%s
			CAESAR_ADT_COLLISIONS_%s
			CAESAR_ADT_CONTENTS_CMP_%s
			CAESAR_ADT_CONTENTS_HASH_%s
			CAESAR_ADT_CONTENTS_PRT_%s
			CAESAR_ADT_CREATE_%s
			CAESAR_ADT_DELETE_%s
			CAESAR_ADT_ENUM_%s
			CAESAR_ADT_FORMAT_%s
			CAESAR_ADT_HASH_%s
			CAESAR_ADT_ITR_%s
			CAESAR_ADT_ITR_FIRST_%s
			CAESAR_ADT_ITR_FIRST_FUNCTION_%s
			CAESAR_ADT_ITR_NEXT_%s
			CAESAR_ADT_ITR_NEXT_FUNCTION_%s
			CAESAR_ADT_OVERFLOW_%s
			CAESAR_ADT_POINTER_%s
			CAESAR_ADT_PRINT_CLOSE_%s
			CAESAR_ADT_PRINT_OPEN_%s
			CAESAR_ADT_PRT_%s
			CAESAR_ADT_RETRIEVE_%s
			CAESAR_ADT_SCALAR_%s
			CAESAR_ADT_SHOW_%s
			CAESAR_ADT_STAR_%s
			CAESAR_ADT_STRUCT_%s
			CAESAR_ADT_TABLE_%s
			CAESAR_ADT_UNCANONICAL_%s
			CAESAR_ADT_UNION_%s

		Formerly, the string %s was equal to ``CAESAR_ADT_TYPE_<S>'',
		where <S> is the LOTOS name of S. From now on, the string %s
		is simply equal to ``<S>'' if using <S> preserves the
		uniqueness of C identifiers. As before, if a special comment
		``implementedby T'' is attached to sort S, then the string %s
		is still equal to <T>. Note that, if multiple LOTOS sorts
		share the same name S (i.e., in different scopes), a ``__%d''
		suffix is appended to make sure that each C identifier is
		unique.

		For instance, the following C identifiers:

			CAESAR_ADT_BITS_CAESAR_ADT_TYPE_SET
			CAESAR_ADT_HASH_CAESAR_ADT_TYPE_SYMNAT
			CAESAR_ADT_SCALAR_CAESAR_ADT_TYPE_MSG__3

		have been, respectively, shortened to:

			CAESAR_ADT_BITS_SET
			CAESAR_ADT_HASH_SYMNAT
			CAESAR_ADT_SCALAR_MSG__3

		This change usually produces shorter C identifiers. Measured
		on 3.2 Gbytes of C code generated by CAESAR.ADT, one observed
		a 2.14% reduction in the size of the code. Also, the generated
		C identifiers are more regular from a logical point of view:
		if a LOTOS sort S is implemented by a C type T, then all C
		identifiers related to S now contain the string <T>, whereas
		previously, they could contain either <S> or <T>.

		This change is not backward compatible (see item #2232 above).
		The ``upc'' shell script (key 2016-ADT-NAMING) has been
		modified to automatically update the hand-written ``.h'',
		``.f'', ``.t'', ``.fnt'', and ``.tnt'' files. Notice that, in
		a few cases, the automated substitutions performed by ``upc''
		may be insufficient or even incorrect, so that manual updates
		may still be necessary. Please contact cadp@inria.fr if help
		is needed.

		The ``upc'' shell script has also been extended with ad hoc
		replacements for the predefined sorts INT, NAT, STRING,
		BITSTRING, DECSTRING, HEXSTRING, OCTSTRING, OCTETSTRING of
		the LOTOS predefined library. For instance, it replaces;
			#define CAESAR_ADT_HASH_OCTETSTRING 10
		with:
			#define CAESAR_ADT_HASH_ADT_OCTETSTRING 10
		because a special comment ``implementedby ADT_OCTETSTRING''
		is associated to the OCTETSTRING sort. Notice that such
		replacements may be incorrect if, rather than importing the
		standard LOTOS libraries, the user defines the above sorts
		without ``implementedby'' comment or with a different
		``implementedby'' value.
			
		The CADP include files ``adt_string.h'' and ``X_STRING.h''
		have been updated to rename the macro CAESAR_ADT_NATIVE_STRING
		into CAESAR_ADT_NATIVE_ADT_STRING. This change was made to
		have more regular notations and ease the task of ``upc''.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2234
Date:		Thu Aug 18 14:03:12 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.adt, bin.*/caesar, bin.*/caesar.old,
		bin.*/lnt2lotos, com/upc, demos/demo_12/maa.fnt

Nature:		Various C identifiers generated by CAESAR.ADT have been
		simplified, in the case such identifiers are related to a
		LOTOS operation F that has no attached ``implementedby''
		special comment. These C identifiers are the following:

			CAESAR_ADT_%d_%s
			CAESAR_ADT_CASE_%s
			CAESAR_ADT_CONSTANT_%s
			CAESAR_ADT_FIELD_%s
			CAESAR_ADT_FUNC_%s
			CAESAR_ADT_TRACE_%s
			CAESAR_ADT_is_%s
			CAESAR_ADT_Get_%d_%s

		Formerly, the string %s was equal to ``CAESAR_ADT_FUNC_<F>'',
		where <F> is the LOTOS name of F. From now on, the string %s
		is simply equal to ``<F>'' if it does not contain any special
		character (otherwise, the string %s will be equal to
		``CAESAR_ADT_FUNCNUM_%d'', where %d is a unique number) and
		if using <F> preserves the uniqueness of C identifiers. As
		before, if a special comment ``implementedby G'' is attached
		to operation F, then the string %s is still equal to <G>.
		Note that, if multiple LOTOS operations share the same name F
		(e.g., when operation F is overloaded), a ``__%d'' suffix is
		appended to make sure that each C identifier is unique.

		For instance, the following C identifiers:

			CAESAR_ADT_CONSTANT_CAESAR_ADT_FUNC_DUMMY
			CAESAR_ADT_is_CAESAR_ADT_FUNC_PROBE__2
			CAESAR_ADT_Get_1_CAESAR_ADT_FUNC_CONS
			CAESAR_ADT_Get_2_CAESAR_ADT_FUNC_PLUS_MSGR

		have been, respectively, shortened to:

			CAESAR_ADT_CONSTANT_DUMMY
			CAESAR_ADT_is_PROBE__2
			CAESAR_ADT_Get_1_CONS
			CAESAR_ADT_Get_2_PLUS_MSGR

		This change usually produces shorter C identifiers. Measured
		on 3.2 Gbytes of C code generated by CAESAR.ADT, one observed
		a 2.75% reduction in the size of the code. Also, the generated
		C identifiers are more regular from a logical point of view:
		if a LOTOS operation F is implemented by a C function G, then
		all C identifiers related to F now contain the string <G>,
		whereas previously, they could contain either <F> or <G>.

		This change is not backward compatible (see item #2232 above).
		The ``upc'' shell script (key 2016-ADT-NAMING) has been
		modified to automatically update the hand-written ``.h'',
		``.f'', ``.t'', ``.fnt'', and ``.tnt'' files. Notice that, in
		a few cases, the automated substitutions performed by ``upc''
		may be insufficient or even incorrect, so that manual updates
		may still be necessary. Please contact cadp@inria.fr if help
		is needed.

		The LNT2LOTOS translator has been modified to use these new
		conventions for the C identifiers associated with range and
		predicate types. Demo 12 of CADP has been updated as well.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2235
Date:		Sat Aug 20 10:03:25 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.adt, bin.*/lnt2lotos, com/upc,
		incl/LNT_V1.h, incl/X_BIT.h, incl/X_BOOLEAN.h,
		incl/X_INTEGER.h, incl/X_NATURAL.h,
		demos/demo_12/LOTOS/maa.f, demos/demo_12/maa.fnt,
		demos/demo_31/LOTOS/SCSI_A.f

Nature:		The tester and selector macros generated by CAESAR.ADT have
		been renamed. The former names, which had been defined 25
		years ago, have been replaced by more regular names that
		follow the same conventions as those for all other identifiers
		generated by CAESAR.ADT. Precisely, selectors of the form:
			CAESAR_ADT_is_%s
		have been renamed in:
			CAESAR_ADT_MATCH_%s
		and testers of the form:
			CAESAR_ADT_Get_%d_%s
		have been renamed in:
			CAESAR_ADT_GET_%d_%s

		Also, to forbid potential name conflicts between C identifiers
		related to iterators, the following identifiers:
			CAESAR_ADT_ITR_FIRST_FUNCTION_%s
			CAESAR_ADT_ITR_NEXT_FUNCTION_%s
		have been respectively renamed into:
			CAESAR_ADT_ITRFUNC_FIRST_%s
			CAESAR_ADT_ITRFUNC_NEXT_%s
		This prevents name conflicts with identifiers of the form:
			CAESAR_ADT_ITR_FIRST_%s
			CAESAR_ADT_ITR_NEXT_%s
		Notice that name conflicts with identifiers of the form:
			CAESAR_ADT_ITR_%s
		are still possible, yet unlikely, as the latter identifiers
		are deprecated (they are related to old-style iterators).

		Measured on 3.2 Gbytes of C code generated by CAESAR.ADT,
		this change led to a slight increase (0.12%) in the size of
		the code. The LN2LOTOS translator, various CADP include files,
		and a few CADP demos has been updated accordingly.

		This change is not backward compatible (see item #2232 above).
		The ``upc'' shell script (key 2016-ADT-NAMING) has been
		updated to automatically perform such identifier renaming.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2236
Date:		Mon Aug 22 11:49:37 CEST 2016
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		bin.*/caesar.adt, bin.*/caesar, bin.*/caesar.old,
		bin.*/fsp2lotos, demos/demo_02/BITALT.t, demos/demo_04/EXP.f,
		demos/demo_04/EXP.t, demos/demo_08/rel_rel_B.t,
		demos/demo_12/LOTOS/maa.f, demos/demo_12/LOTOS/maa.t,
		demos/demo_16/LOTOS/TYPES.t, demos/demo_18/LOTOS/transit_node.t
		demos/demo_19/LOTOS/cell.f, demos/demo_19/LOTOS/cell.t,
		demos/demo_20/rel_rel.t, demos/demo_23/scen_incl.t,
		demos/demo_25/cfs.t, demos/demo_26/INV2.t,
		demos/demo_29/LOTOS/SPEC.t, demos/demo_31/LOTOS/SCSI_A.f,
		demos/demo_31/LOTOS/SCSI_A.t, demos/demo_33/CONSENSUS.t,
		demos/demo_35/LOTOS/summation.t, demos/demo_36/LOTOS/sieve.t,
		demos/archive/demo_03.old/DATALINK.t,
		demos/archive/demo_05.old/list.t,
		demos/archive/demo_10.old/BITALT.t,
		demos/archive/demo_11.old/rel_rel.t

Nature:		Following recent changes (see items #2232 to #2235 above), the
		version numbers of several CADP tools have been incremented:
		   - CAESAR.ADT: from version 5.5 to 5.6
		   - CAESAR.OLD: from version 6.6 to 6.7
		   - CAESAR: from version 7.4 to 7.5
		   - FSP2LOTOS: from version 1.1 to 1.2

		Given that the contents of the ``.h'', ``.f'', and ``.t''
		files have been modified in an incompatible way (compared to
		the conventions used from CAESAR.ADT 2.2 to 2.5 included),
		new checks have been implemented:

		- CAESAR.ADT now emits a warning if a ``.t'' file contains a
		  macro-definition CAESAR_ADT_EXPERT_T whose value is less
		  than 5.6.

		- CAESAR and CAESAR.OLD now emit a warning if a ``.h'' file,
		  a ``.f'' file, or a ``.t'' file contains a macro-definition
		  CAESAR_ADT, CAESAR_ADT_EXPERT, CAESAR_ADT_EXPERT_F, or
		  CAESAR_ADT_EXPERT_T whose value is less than 5.6.

		CAESAR.ADT and FSP2LOTOS have been updated to generate files
		in which these macros are given the version 5.6.

		The ``.f'' and ``.t'' files of all the CADP demos have been
		modified to set the value of these macros to 5.6.
-------------------------------------------------------------------------------
VERSION 2016-h "Oxford"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2237
Date:		Mon Aug 29 11:59:45 CEST 2016
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		com/tst

Nature:		TST now displays more informative diagnostics on Linux when
		the "uudecode" command is not installed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2238	
Date:		Mon Aug 29 12:41:50 CEST 2016
Author:		Radu Mateescu (INRIA/CONVECS)
File:		bin.*/xtl

Nature:		The C code generated by the XTL compiler to implement the
		printing function for values of type "number" has been
		enhanced to avoid warnings emitted by recent versions of GCC:

		  $CADP_TMP/xtl_*.c: warning: format '%lu' expects argument
		                     of type 'long unsigned int', but argument
		                     3 has type 'bcg_type_integer' [-Wformat]
-------------------------------------------------------------------------------
BUG FIX
Number:		2239
Date:		Tue Aug 30 13:53:13 CEST 2016
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
File:		bin.{sol86,sol64}/lpp

Nature:		On Solaris (sol86 and sol64 architectures), the buffer of the
		LPP preprocessor was limited to 1024 characters, thus causing
		errors on LNT specifications containing long lines. The size
		of this buffer has been enlarged to 16384.
-------------------------------------------------------------------------------
BUG FIX
Number:		2240
Date:		Fri Sep  2 18:48:28 CEST 2016
Authors:	Hubert Garavel and Radu Mateescu (INRIA/CONVECS)
File:		bin.*/xtl

Nature:		The C code generated by XTL has been cleaned up to avoid the
		following GCC warning that was emitted when processing legacy
		BCG files (version 1.O of the BCG format):
		  $CADP_TMP/xtl_*.c: At top level:
		  $CADP_TMP/xtl_*.c: warning: 'bcg_gate_string' defined
		                     but not used [-Wunused-variable]
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2241
Date:		Sun Sep  4 17:37:56 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-et-al-10.*

Nature:		Formerly, the actual gates passed to a process instantiation
		had to be pairwise distinct. This was specified by the static
		semantic constraints (AG3) and (AG8) in Chapter 7 of the
		LNT2LOTOS Reference Manual. These constraints were checked
		by LNT2LOTOS, which issued a fatal error in case of violation:

		   error: gate G was already found as an actual gate parameter
		   at line 9

		These constraints have been removed. From now on, LNT2LOTOS
		accepts LNT process calls having identical actual gate
		parameters. There is no longer a fatal error in LNT2LOTOS,
		only a warning is emitted by CAESAR. The LNT2LOTOS Reference
		Manual has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2242
Date:		Fri Sep  9 16:52:39 CEST 2016
Authors:	Hubert Garavel, Frederic Lang, and Wendelin Serwe (INRIA/
		CONVECS)
File:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-et-al-10.*,
		demos/demo_05/FILES.lnt, demos/demo_05/MEDIUM.lnt,
		demos/demo_05/MESSAGES.lnt, demos/demo_05/QUEUE.lnt,
		demos/demo_05/REPOSITORY.lnt, demos/demo_05/ TFTP.lnt,
		demos/demo_05/USER.lnt, demos/demo_12/maa.lnt,
		demos/demo_12/LOTOS/maa.lotos

Nature:		The move towards "safer" exceptions in the LNT language (see
		items #2225 and #2230 above) has been pursued, with crucial
		changes that affect all the calls to user-defined LNT
		functions that can raise exceptions. The definition of the
		LNT language has been modified, and deep changes have been
		brought to the LNT2LOTOS translator, affecting the BNF
		grammar, the static semantics, the generated LOTOS code,
		and the generated C code.

		From an end-user point of view, the modifications can be
		summarized as follows:

		- When an LNT function is declared with exceptions, e.g.,
		     function F [X1, ..., Xn:none] (...) is ...
		  all calls to F must now explicitly supply actual exceptions
		  Y1, ..., Yn to instantiate the formal exception parameters
		  X1, ..., Xn of F.

		- Precisely, if F is a prefix function, all calls to F should
		  have the following form:
		     F [Y1, ..., Yn] (...)
		  rather than the previous form:
		     F (...)

		- If F is an infix function, all calls to F should have the
		  following form:
		     EXPR1 F [Y1, ..., Yn] EXPR2
		  rather than the previous form:
		     EXPR1 F EXPR2

		- Notice that this requirement of explicit actual exception
		  parameters does not (yet) apply to the functions of the
		  predefined LNT library, even if these functions can raise
		  exceptions (e.g., division by zero or head of an empty list).

		- The semantics of LNT has been turned from "unchecked"
		  exceptions to "checked" exceptions. Namely, all the actual
		  exceptions Y1, ..., Yn used in a function call must have
		  been declared. If the call to F occurs in the body of some
		  function G, then Y1, ..., Yn must be declared as exceptions
		  of G, i.e.,
		     function G [... Y1, ..., Yn:none] (...) is ...
		  If the call to F occurs in the body of some process P, then
		  Y1, ..., Yn must be declared as exceptions of P, i.e.,
		     process P [...] (...) raises ... Y1, ..., Yn:none is ...

		- A special exception noted "UNEXPECTED" has been introduced.
		  This exception is a predefined constant that ought not to
		  be defined and that is visible everywhere.

		- In the ``.lotos'' and ``.f'' files generated by LNT2LOTOS,
		  the code implementing exceptions and function calls has been
		  modified. A new LOTOS type ``LNTEXCEPTIONS'', with specific
		  sorts and operations, has been added.

		The version number of LPP and LNT2LOTOS has been increased
		to 6.5. The LNT2LOTOS Reference Manual has been updated
		accordingly.

		Such changes are not backward compatible and, unfortunately,
		they have to be performed manually, as they can not be
		easily automated (e.g., using the UPC shell-script).

		The demos 05 and 12, which contained LNT functions that raise
		exceptions, have been modified to obey the new rules. Also,
		a few identifiers have been renamed for conciseness and
		clarity.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2243
Date:		Mon Sep 12 17:49:35 CEST 2016
Report:		Hugues Evrard (INRIA/CONVECS)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		The contents of the ``.c.proto'' file generated by the
		``-external'' option of CAESAR have been improved. Formerly,
		the profiles of visible gate were incompletely documented,
		e.g.:
		   /** gate SR.0.0[3] has profile
		    *       ?BOOL.0[X_BOOLEAN:3]
		    *       !NAT
		   **/
		From now on, the type information is more detailed:
		   /** gate SR.0.0[3] has profile
		    *       ?BOOL.0[X_BOOLEAN:3] implementedby ADT_BOOL
		    *       !NAT.0[X_NATURAL:3] implementedby ADT_NAT
		   **/
-------------------------------------------------------------------------------
VERSION 2016-i "Oxford"
-------------------------------------------------------------------------------
BUG FIX
Number:		2244
Date:		Wed Sep 14 10:29:09 CEST 2016
Report:		Wendelin Serwe (INRIA/CONVECS)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files: 		bin.*/caesar, bin.*/caesar.old, man/*/lotos.*

Nature:		A bug has been fixed in the skeleton C code generated by
		the ``-external'' option of CAESAR. This code was incorrect
		(precisely, it did not type check) in the particular case
		where a gate function with several profiles had an output
		offer ("!") whose type was non scalar (typically, a C struct
		type) and whose size was strictly smaller than an "int" value.

		On Solaris, the C compiler would emit error messages such as:
		   "gate.c", line ...: invalid cast expression
		On Linux, GCC would emit error messages such as:
		   gate.c:...: error: conversion to non-scalar type requested

		The generated C code has been modified to avoid casting to
		(int) some of the arguments passed to va_arg().

		The LOTOS manual page has been updated to state that the
		macro-definition CAESAR_ADT_SCALAR_%s must be correctly set
		for external LOTOS sorts (i.e., sorts that are manually
		implemented by C types).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2245
Date:		Thu Sep 15 10:44:53 CEST 2016
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/pdf/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The syntax of LNT has been made more general by enabling
		exception parameters in function calls to be named parameters.
		So far, only positional parameters were allowed. For named
		parameters, the following error message was displayed:
		   exceptions can be passed only in positional style
		From now on, this restriction no longer exists.

		Sections 6.4 and A.6 of the LNT2LOTOS reference manual have
		been updated to document named exception parameters in
		function calls.
-------------------------------------------------------------------------------
BUG FIX
Number:		2246
Date:		Sat Sep 17 22:22:33 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
File:		com/rfl

Nature:		When RFL was invoked without defining the environment variable
		$CADP, a cascade of unexpected error messages was displayed:

		   RFL: the $CADP variable is not defined in the environment
		   com/rfl: 84: com/rfl: ABORT: not found
		   com/rfl: 1: com/rfl: /com/arch: not found
		   com/rfl: 1: com/rfl: /src/com/cadp_hostname: not found
		   com/rfl: 1: com/rfl: /src/com/cadp_hostname: not found
		   RFL: the expected usage of this command is:
		      rfl [-f old_license_file] hostname_1 hostname_2 ...
		   *** RFL aborted ***

		The spurious error lines have been removed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2247
Date:		Mon Sep 26 16:25:30 CEST 2016
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		src/xtl/actl_x.mcl, src/xtl/mcl_pattern.mcl,
		src/xtl/standard.mcl

Nature:		The encodings of inevitability operators using fixed point
		operators have been improved, such that the diagnostics
		(examples and counterexamples) generated by EVALUATOR contain
		all the transitions necessary to explain the truth value of
		the MCL formulas containing these inevitability operators.
		Precisely, the following macro-definitions have been changed.

		- In file "actl_x.mcl":
		  AU_A_A (P1, A1, A2, P2)

		- In file "mcl_pattern.mcl":
		  Existence_Globally (P)
		  Existence_After (P, Q)
		  Existence_After_Until (P, Q, R)
		  Response_Globally (S, P)
		  Response_After (S, P, Q)
		  Response_After_Until (S, P, Q, R)
		  Response_Chain_2_1_Globally (S, T, P)
		  Response_Chain_2_1_After (S, T, P, Q)
		  Response_Chain_2_1_After_Until (S, T, P, Q, R)
		  Response_Chain_1_2_Globally (S, T, P)
		  Response_Chain_1_2_After (S, T, P, Q)
		  Response_Chain_1_2_After_Until (S, T, P, Q, R)
		  Response_Constrained_Chain_1_2_Globally (S, T, Z, P)
		  Response_Constrained_Chain_1_2_After (S, T, Z, P, Q)
		  Response_Constrained_Chain_1_2_After_Until (S, T, Z, P, Q, R)

		- In file "standard.mcl":
		  INEVITABLE (A)
		  INEVITABLE_1_WHERE_2 (A, P)
		  INEVITABLE_1_TIMES_2 (A, N)
		  ALWAYS_1_UNTIL_2 (A, B)

		These changes rely on the following modal logic identity:
		   < A > true and [ A ] P = < A > P and [ A ] P
		and they preserve the meaning of the above operators. Thus,
		the Boolean verdict obtained by verifying any existing MCL
		formula containing these operators will not change. The
		possible changes can occur in the diagnostics produced by
		EVALUATOR, which are now more explanatory. The Web page
		   http://cadp.inria.fr/resources/evaluator/rafmc.html
		has been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2248
Date:		Tue Oct 11 15:11:22 CEST 2016
Report:		Paula-Andrea Lago-Martinez (LIG/SIGMA, Grenoble, France)
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libBCG_IO.a, bin.*/bcg_cmp, bin.*/bcg_graph,
		bin.*/bcg_io, bin.*/bcg_labels, bin.*/bcg_min,
		bin.*/bcg_min.old

Nature:		A bug in the BCG tools was fixed, which had been introduced
		in June 2016 and had been present in CADP 2016-f, 2016-g,
		2016-h, and 2016-i. Because of this bug, floating-point
		numbers in transition labels were incorrectly parsed and
		converted to wrong values (often 0.000000). For instance,
		a label "G !12.233" was converted to "G !0.000000" when
		using BCG_IO.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2249
Date:		Wed Oct 12 15:25:10 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/eucalyptus/eucalyptus.tcl

Nature:		The EUCALYPTUS graphical user interface has been extended to
		support the ``-numeral'' option of CAESAR.ADT recently
		introduced (see item #2224 above). This option can be set
		from the menu "Options" -> "CAESAR and CAESAR.ADT" ->
		"OPTIONS SPECIFIC TO CAESAR.ADT" -> "Cardinal of numeral
		types...".
-------------------------------------------------------------------------------
BUG FIX
Number:		2250
Date:		Wed Oct 12 16:08:20 CEST 2016
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
File:		src/eucalyptus/eucalyptus.tcl

Nature:		An issue has been fixed in the EUCALYPTUS graphical user
		interface, which tried to increase speed by checking file
		modification dates and not invoking CAESAR.ADT if the ".h"
		file to be generated existed already and was more recent than
		the ".lotos" file. Actually, testing file timestamps was not
		sufficient, as one must also take into account the options
		with which CAESAR.ADT was previously invoked, as well as
		the timestamps of files included by the LOTOS ``library''
		command. Therefore, this optimization of EUCALYPTUS has been
		removed; CAESAR.ADT is now invoked in all cases, but will
		itself stop quickly if the ".h" file to be generated exists
		and is up to date wrt the aforementioned criteria.

		The version number of EUCALYPTUS has been advanced to 2.11.
-------------------------------------------------------------------------------
VERSION 2016-j "Oxford"
-------------------------------------------------------------------------------
BUG FIX
Number:		2251
Date:		Tue Oct 25 17:51:31 CEST 2016
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		The recent change in the semantics of the macro-definition
		CAESAR_ADT_SCALAR_%s (see item #2244 above) was not fully
		implemented in LNT2LOTOS: precisely, LNT2LOTOS did not
		define this macro when translating LNT range types. As a
		consequence, the skeleton C code generated by CAESAR with
		option ``-external'' was incorrect if a value of type range
		was sent or received on a visible gate, causing GCC to emit
		an error message of the following form:

		   TEST.c.proto.c: In function `G':
		   TEST.c.proto.c:70: warning: `ADT_RANGE__T' is promoted to
		                      `int' when passed through `...'
		   TEST.c.proto.c:70: warning: (so you should pass `int' not
		                      `ADT_RANGE__T' to `va_arg')
		   TEST.c.proto.c:70: note: if this code is reached, the
		                      program will abort

		This problem has been fixed: from now on, LNT2LOTOS duly
		generates a macro CAESAR_ADT_SCALAR_%s for LNT range types.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2252
Date:		Fri Oct 28 17:52:20 CEST 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		doc/=READ_ME.txt, http://cadp.inria.fr/publications,
		http://cadp.inria.fr/tutorial

Nature:		The list of selected publications about CADP has been
		improved in various respects:

		- The section entitled "Papers about LNT and former languages:
		  E-LOTOS, LOTOS NT, etc." was confuse and too long. The
		  material related to LNT, NTIF, and NUPNs was moved to other
		  sections. The remaining section was renamed "Papers about
		  translations for other languages" and sorted into many sub-
		  sections, and extended with a few recent references.

		- The "publications" and "tutorial" pages of the CADP web
		  site have been updated accordingly. In particular, the LNT
		  section in the tutorial page was significantly enhanced.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2253
Date:		Tue Nov  8 18:32:11 CET 2016
Report:		Thomas Lambolais (Ecole des Mines, Ales, France)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		./INSTALLATION_1, ./INSTALLATION_2, ./INSTALLATION_4,
		./INSTALLATION_MACOS, ./INSTALLATION_OSX, bin.mac86/README,
		com/tst, incl/adt_real.h

Nature:		The CADP toolbox was ported to the latest version 10.12
		("Sierra") of macOS.

		- In the documentation for installing CADP, an ``-O'' option
		  was added to calls to ``wget'' to take care of multiple
		  downloads of the same file.

		- To follow the fluctuating terminology of Apple, some earlier
		  changes in the CADP documentation (see item #2189 above)
		  have been reverted. Namely, most occurrences of "Mac OS X"
		  have been changed to "macOS". The file INSTALLATION_OSX was
		  renamed to INSTALLATION_MACOS, and a symbolic link named
		  INSTALLATION_OSX was added for backward compatibility.
		  Similarly, the web page:
		     http://cadp.inria.fr/osx.html
		  was renamed to:
		     http://cadp.inria.fr/macOS.html
-------------------------------------------------------------------------------
BUG FIX
Number:		2254
Date:		Wed Nov  9 11:08:49 CET 2016
Report:		Alexander Graf-Brill (Saarland University)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		./INSTALLATION_MACOS, com/tst

Nature:		The INSTALLATION_MACOS files (and its corresponding web page
		http://cadp.inria.fr/macOS.html) have been modified to take
		care of certain versions of XQuartz (e.g., 2.7.6) that no
		longer install themselves in /usr/X11R6, but only in /opt/X11.
		With such versions, the ``wish'' command provided with CADP
		and the Installator program can fail with error messages such
		as the following one:

		   Installator started, please wait a moment...
		   dyld: Library not loaded: /usr/X11R6/lib/libX11.6.dylib
		   Referenced from: /tmp/Installator/tcl-tk/bin.mac86/wish
		   Reason: image not found
		   ... Abort trap ...

		This issue can be solved by typing the command:
		   sudo /usr/libexec/x11-select /opt/X11
		The TST shell script has been updated to detect this issue
		and provide helpful diagnostics.
-------------------------------------------------------------------------------
BUG FIX
Number:		2255	
Date:		Wed Nov  9 18:37:00 CET 2016
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		src/svl/standard

Nature:		When executing an SVL statement of the form:
		   "file_min.bcg" = observational reduction of "file.bcg"
		a warning of the following form was issued:

		   svl: WARNING observational reduction is not available
		        using branching reduction instead

		This warning was incorrect, as observational reduction has
		been available in BCG_MIN since November 2013 (see item #1742
		above). This bug was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2256
Date:		Thu Nov 10 16:20:25 CET 2016
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		src/com/cadp_adjust

Nature:		On some versions of Windows, the execution of Installator
		would give the text files of CADP (e.g., ADDRESSES, VERSION,
		etc.) incorrect ACLs (Access Control Lists), so that these
		files would not be readable from a Cygwin shell script run
		by the administrator. As a consequence, the prototype LICENSE
		files generated by RFL and sent by Installator had an empty
		"Package:" line (i.e., the version information was missing).
		Such situation might have been caused by the new version
		1.7.34 of Cygwin, which changes the way file permissions are
		managed. To address this issue, the ``cadp_adjust'' shell script
		has been modified to use "setfacl" and "getfacl".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2257
Date:		Sat Nov 12 22:12:15 CET 2016
Report:		Ken Turner (University of Stirling, Scotland, UK),
		Hauke Pribnow (Univ. Muenster, Germany), and
		Anne-Lise Courbis (Ecole des Mines, Ales, France)
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		./INSTALLATION_2, ./INSTALLATION_4, ./INSTALLATION_WINDOWS,
		bin.*/ocis, com/contributor, com/tst, com/xeuca,
		src/com/cadp_adjust, src/com/cadp_cc, src/com/cadp_path,
		src/com/cadp_pdf, src/com/cadp_postscript, src/com/cadp_psbox,
		src/com/cadp_web, src/monitor/distributor.tcl,
		tcl-tk/com/wish, cadp_cygwin.com, installator.shar

Nature:		The Windows version of the CADP toolbox has been adapted to
		the case where Cygwin is not installed in "C:\", but in one
		of the directories "C:\Cygwin" or  "C:\Cygwin64" that the
		Cygwin installer proposes by default.

		Such an adaptation was requested by several CADP users, but
		was difficult to implement because, when Cygwin is not
		installed in "C:\", Windows binaries and Cygwin tools give
		two different meanings to the root directory "/"  ("/" means
		"C:\" for Windows and "C:\Cygwin" or "C:\Cygwin64" for Cygwin).

		To prepare such adaptation, many patches have been gradually
		and silently brought to CADP in 2014, 2015, and 2016. From
		the end-user point of view, the observable changes are the
		following ones:

		- The INSTALLATION_WINDOWS and INSTALLATION_2 files have
		  been updated. It is still advised to set the environment
		  variable $CADP to "/cadp". However, it is no longer
		  recommended to set the environment variable $CADP_TMP to
		  "/tmp" (because Windows and Cygwin binaries may now have
		  diverging views about the location of "/tmp"). From now
		  on, it is advised not to set $CADP_TMP on Windows, which
		  is equivalent to the following assignment:
		     CADP_TMP=`"$CADP"/src/com/cadp_path -tmp`

		- The INSTALLATION_4 file now states that $CADP should be
		  set to "c:/cadp" during the manual installation on Windows,
		  and then to "/cadp" once the installation is complete.

		- The ``cadp_adjust'' shell script (which is invoked by
		  Installator) now creates a symbolic link "C:\Cygwin\cadp"
		  -> "C:\cadp" when Cygwin is not installed in "C:\". This
		  link can located elsewhere if CADP is not installed in
		  "C:\cadp". The TST shell script checks for the existence
		  of this symbolic link, when it is needed. Do not remove
		  this link, because it is essential for the proper
		  functioning of CADP.

		- The TST shell script no longer displays the following
		  warning message when $CADP is a symbolic link:
		     *** Warning: some symbolic links still exist in the
		         $CADP directory. Symbolic links are specific
		         extensions of Cygwin and, as such, will not
		         be recognized by pure Windows applications, such
		         as CADP binary programs

		- The TST shell script now displays a warning message if
		  $CADP is set to a Cygwin pathname starting with /cygdrive.

		- The TST shell script now displays a warning message when
		  Cygwin is not installed in "C:\" and when a directory named
		  "C:\tmp" exists (the presence of such a directory would
		  cause trouble to the binary tools of CADP).
-------------------------------------------------------------------------------
VERSION 2016-k "Oxford"
-------------------------------------------------------------------------------
BUG FIX
Number:		2258
Date:		deferred since Fri Aug 19 16:55:37 CEST 2016
Author:		Hugues Evrard (INRIA/CONVECS)
Files:		bin.*/libcaesar.a

Nature:		The code of the ``caesar_network_1'' library has been
		carefully scrutinized and various issues have been detected
		and solved:

		1) A memory leak, which could occur when the function
		   CAESAR_CREATE_NETWORK_1() was invoked with an invalid
		   argument, was fixed.

		2) Function CAESAR_CREATE_NETWORK_1(), when invoked with an
		   invalid argument, no longer terminates with exit(), but
		   emits an error message and gives the control back to its
		   caller function. A similar modification was applied to
		   function CAESAR_OPEN_CONNECTIONS_NETWORK_1().

		3) Function CAESAR_CREATE_NETWORK_1() now checks the size of
		   its buffer argument and displays an error message if this
		   size is too small or too large.

		4) Function CAESAR_CREATE_NETWORK_1() now checks whether
		   the allocation of the network object has succeeded or not.

		5) Two cases of uninitialized variables have been found and
		   corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		2259
Date:		Thu Nov 17 16:07:28 CET 2016
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libcaesar.a

Nature:		Another bug was fixed in the CAESAR_CREATE_NETWORK_1() of
		the ``caesar_network_1'' library. When the number of worker
		processes to be launched exceeded the limits of the operating
		system, an error message containing random, non-printable
		characters was displayed, e.g.:

		  main: error while checking architecture on host localhost.
		  An error message was returned: (Node 512, localhost:DIR_512)
		  Too many open files together with an unexpected architecture
		  string: ^XO^M^H

		This issue was solved and the error message was enhanced.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2260
Date:		Wed Nov 23 17:09:30 CET 2016
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libcaesar.a

Nature:		New checks have been added in the ``caesar_network_1'' library
		to detect whether some directories specified in a GCF file are
		prefixes of other directories specified in this GCF file. In
		such case, an informative error message is now emitted, as
		all worker processes are expected to operate in distinct and
		mutually disjoint directories.

		Previously, the creation of the network would usually fail
		with a cryptic error message:
		   main: unable to create the working directory /home/x/y
		   on host localhost. Check the configuration value of
		   'directory'
		Now, a more precise message is displayed:
		   main: configuration error - instance (localhost, /home/x/y)
		   should not be a sub-directory of (localhost, /home/x)

		Also, the wording and syntax of various error messages have
		been improved.
-------------------------------------------------------------------------------
BUG FIX
Number:		2261
Date:		Sat Nov 26 12:07:25 CET 2016
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/X_INTEGER.h, incl/X_NATURAL.h

Nature:		The include files ``X_INTEGER.h'' and ``X_NATURAL.h'' have
		been modified to include file ``caesar_system.h'', which
		replaces, on Windows, all calls to fprintf() by calls to
		the CADP-specific own_fprintf() function. Indeed, the former
		function does not recognize the formats "%lld" and "%llu"
		on Windows, while the latter function properly implements
		these formats. Additionally, this change suppresses GCC
		compiler warnings of the following form:

		   $CADP/incl/X_NATURAL.h:75:28: warning: unknown conversion
		   type character 'l' in format [-Wformat=]
		   ...
		   $CADP/incl/X_NATURAL.h:75:28: warning: format '%lu' expects
		   argument of type 'long unsigned int', but argument 5 has
		   type 'long long unsigned int' [-Wformat=]
		   $CADP/incl/X_NATURAL.h:75:28: warning: too many arguments
		   for format [-Wformat-extra-args]

		   $CADP/incl/X_INTEGER.h:72:28: warning: unknown conversion
		   Type character 'l' In format [-Wformat=]
		   ...
		   $CADP/incl/X_INTEGER.h:72:28: warning: format '%ld' expects
		   argument of type 'long int', but argument 5 has type
		   'long long int' [-Wformat=]
		   $CADP/incl/X_INTEGER.h:72:28: warning: too many arguments
		   for format [-Wformat-extra-args]
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2262
Date:		Sat Nov 26 19:00:15 CET 2016
Author:		Hubert Garavel (INRIA/CONVECS)
File:		com/tst

Nature:		The TST shell script has been enhanced to display better
		messages when an environment variable (e.g., $CADP_NAVIGATOR,
		etc.) is unset or set to the empty string, as no corresponding
		software can be found in the $PATH.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2263
Date:		Tue Dec  6 17:34:20 CET 2016
Authors:	Hubert Garavel and Lina Marsso (INRIA/CONVECS)
Files:		demos/demo_12/maa.fnt, demos/demo_12/maa.lnt,
		demos/demo_12/LOTOS/maa.f, demos/demo_12/LOTOS/maa.lotos,
		demos/demo_12/doc/Davies-Clayden-88.pdf

Nature:		The demo_12 (Message Authentication Algorithm) has been
		revisited and enhanced in various ways:

		- In ``maa.lnt'', fragments of dead code (already present
		  in the LOTOS specification written in 1992 by H.B. Munster)
		  have been removed. Namely, the sort AcceptableMessage was
		  removed, together with the following functions:
		  Authenticator, Contents, Flatten, head (for sort Message),
		  length (for sorts Message and SegmentedMessage), Normal,
		  Restrict, T, union (for sorts Message), and ++ (for sorts
		  Message and SegmentedMessage).

		- In ``maa.lnt'', function MUL1 has been greatly simplified
		  and made more readable by taking advantage of the "var"
		  operator of LNT, which did not exist in LOTOS. After doing
		  so, the auxiliary functions MUL1_XY, MUL1_UL, and MUL1_SC
		  became useless and have been removed.

		- Similarly, function MUL2 has been simplified, leading to
		  the removal of functions MUL2_XY, MUL2_UL, MUL2_DEL,
		  MUL2_FL, and MUL2_SC.

		- Similarly, function MUL2A has been simplified, leading to
		  the removal of functions MUL2A_XY, MUL2A_UL, MUL2A_DL,
		  and MUL2A_SC.

		- The original description of the Message Authentication
		  Algorithm has been added in ``doc/Davies-Clayden-88.pdf''.

		- The LNT specification ``maa.lnt'' has been enriched with
		  test cases contained in Tables 1, 2, and 3 of document
		  Davies-Clayden-88.pdf.

		- The execution of these tests revealed a mistake in the
		  C function HIGH_MUL() defined in ``LOTOS/maa.f'' and
		  ``maa.fnt''. This function, which computes the highest 32
		  bits of the product of two 32-bit numbers was complex and
		  incorrect. It has been replaced by a one-line function.

		- Consequently, the MAC code computed by the Makefile for
		  file ``LOTOS/maa_original.lotos'' has changed. Formerly,
		  it was equal to 0xE9C1EDA3, now it is equal to 0xD63EDDCB.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2264
Date:		Wed Dec  7 12:29:57 CET 2016
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/libcaesar.a

Nature:		New checks have been added in the ``caesar_network_1'' library
		to detect whether some directories specified in a GCF file are
		identical to the directory in which the coordinator process
		itself is executing. In such case, an error message is emitted:

		   main: configuration error - instance #1 (localhost:/home/x)
		   should not be located in the directory from which the
		   parent program is launched
-------------------------------------------------------------------------------
BUG FIX
Number:		2265
Date:		Thu Dec  8 18:35:06 CET 2016
Report:		Paula-Andrea Lago-Martinez (LIG, Grenoble, France)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libBCG_IO.a, bin.*/bcg_io

Nature:		When invoked on a graph containing a long execution sequence
		(e.g., with more than 135,000 transition), BCG_IO could cause
		a stack overflow when generating the sequence format. Namely,
		a call of the following form:
			bcg_io LONG_SEQUENCE.seq OUTPUT.seq
		would cause:
		   Segmentation fault (core dumped)
		   bcg_dynamic: dynamic program error

		The problem was due to a translation function that was written
		recursively in BCG_IO. This was solved by optimizing this
		function to avoid tail recursion.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2266
Date:		Fri Dec  9 11:17:07 CET 2016
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		bin.*/libBCG_IO.a, bin.*/bcg_io

Nature:		Following a prior bug fix (see item #2265 above), BCG_IO has
		also been enhanced so that graphs containing long execution
		sequences can be translated to pseudo-LOTOS, i.e.,
			bcg_io LONG_SEQUENCE.bcg OUTPUT.lotos
		without causing a stack overflow. This was done by optimizing
		two recursive functions in the LOTOS translation algorithm of
		BCG_IO. The indentation conventions for the pseudo-LOTOS code
		generated by BCG_IO have been modified so as to produce files
		that are shorter (e.g., 500 times shorter) and more readable.

		From now on, all the translation algorithms of BCG_IO should
		be capable of handling very long execution sequences without
		problem.
-------------------------------------------------------------------------------
BUG FIX
Number:		2267
Date:		Mon Dec 12 14:08:55 CET 2016
Report:		Anne-Lise Courbis (Ecole des Mines d'Ales, France) and
		Marcin Szpyrka (AGH University of Science and Technology,
		Krakow, Poland)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/cadp_memory, com/tst

Nature:		A bug was fixed in the CADP_MEMORY utility. On localized
		versions of Linux (e.g., French, Polish), CADP_MEMORY would
		not output any result and abort after one or two minutes.
		As a consequence, this caused many OPEN/CAESAR and BCG tools
		(e.g., BCG_MIN, BCG_OPEN, EVALUATOR, EXP.OPEN, etc.) to
		abort with the following error message:

		   Killed
		   #926 error in function CAESAR_CREATE_TABLE_1
		   [caesar_table_1.c:705]
		   quit

		A quick fix for this problem is to set both environment
		variables $LANG and $LC_ALL to value "C". Alternatively,
		setting variable $CADP_MEMORY manually (as explained in
		file $CADP/INSTALLATION_2) also avoids the issue.

		The TST shell script has been enhanced to display better
		error messages when CADP_MEMORY fails.
-------------------------------------------------------------------------------
BUG FIX
Number:		2268
Date:		Mon Dec 12 19:45:07 CET 2016
Authors:	Hugues Evrard, Hubert Garavel, and Wendelin Serwe (INRIA/
		CONVECS)
File:		bin.*/libcaesar.a, bin.*/distributor.a, bin.*/pbg_*

Nature:		There was a flaw in the distributed termination algorithm
		implemented in the ``caesar_network_1'' library: when a
		worker process crashed before the opening of TCP sockets,
		the entire network could freeze, because the coordinator
		node and the other worker nodes were waiting for messages
		that the crashed node would never send (such an issue did
		not happen if the crash occurred after the opening of TCP
		sockets).

		This issue has been fixed and, from now on, a better
		distributed termination algorithm is used, which takes into
		account the possible existence of several network objects
		and makes sure that all connections are closed before
		terminating. Also, the new algorithm emits better traces
		on each worker node and properly indicates which node has
		caused the distributed termination.
-------------------------------------------------------------------------------
BUG FIX
Number:		2269
Date:		Tue Dec 13 10:48:32 CET 2016
Report:		Frederic Lang (INRIA/CONVECS) and Jules Lefrere (Univ.
		Grenoble Alpes, France)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The LNT.OPEN command did not work properly when invoked with
		option ``-root P'' on a LNT specification named ``P.lnt''
		(this only occurred when the LNT specification contained a
		process having the same name P), e.g.,
		   lnt.open -root P P.lnt generator OUTPUT.bcg

		In such case, LNT.OPEN would incorrectly give process P the
		behaviour ``stop'', leading to a Labelled Transition System
		with one state and zero transition. This issue was caused
		by an overloading conflict, in the LOTOS code generated by
		LNT2LOTOS, between the specification identifier P and the
		process identifier P. To solve the problem, LNT2LOTOS was
		modified to generate, when invoked with option ``-root null''
		on a LNT specification ``P.lnt'', LOTOS code in which the
		specification identifier is ``NULL'' rather than P.
-------------------------------------------------------------------------------
BUG FIX
Number:		2270
Date:		Tue Dec 13 16:07:40 CET 2016
Report:		Hubert Garavel and Lina Marsso (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		When compiling LNT functions containing long sequences of
		"assert" statements, LNT2LOTOS could become very slow, use
		a lot of memory, and even fail with an error message:
		  memory full in exceptions enter_function: Not enough space

		This problem has been fixed. For instance, the recently
		updated LNT specification of demo_12 (see item #2263 above)
		is now translated in a few seconds, whereas it previously
		failed because of memory exhaustion.
-------------------------------------------------------------------------------
VERSION 2016-l "Oxford"
-------------------------------------------------------------------------------
BUG FIX
Number:		2271
Date:		Thu Dec 15 11:32:37 CET 2016
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		A problem similar to the one described by item #2270 above
		could occur when compiling LNT functions containing either
		long sequences of "assert" statements alternating with
		assigments, or sequences of "if-then-else" statements, each
		of which contains a "return" or "raise" statement. On such
		examples, LNT2LOTOS could abort with the following message:
		  memory full in exceptions enter_function: Not enough space
		This problem has been solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2272
Date:		Thu Dec 15 16:23:09 CET 2016
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		demos/demo_19/graphics/README, demos/demo_19/CONTROLLER.lnt,
		demos/demo_19/STATES.lnt

Nature:		A few LNT source files of demo_19 ("Production Cell") have
		been enhanced. The values of the enumerated type ELEVEN_STATES
		have been renumbered. Some comments about the initial state
		and the initial values have been added.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2273
Date:		Thu Jan  5 12:52:08 CET 2017
Authors:	Hubert Garavel and Lina Marsso (INRIA/CONVECS)
Files:		lib/=READ_ME.txt, lib/OCTETVALUES.lib, lib/OCTETVALUES.lnt,
		demos/demo_12/maa.lnt, demos/demo_12/LOTOS/maa.lotos

Nature:		A new library exporting a collection of functions for the 256
		possible octet values has been added. This library is defined
		both in LOTOS and LNT. The source files of demo_12 ("MAA")
		have been simplified by importing this new library.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2274
Date:		Mon Jan  9 19:40:34 CET 2017
Authors:	Hubert Garavel and Lina Marsso (INRIA/CONVECS)
Files:		demos/demo_12/maa.lnt, demos/demo_12/maa.fnt,
		demos/demo_12/LOTOS/maa.lotos, demos/demo_12/LOTOS/maa.f

Nature:		The LOTOS and LNT specifications of demo_12 ("MAA") have been
		deeply revised and enhanced in various ways:

		- In both the LOTOS and LNT specifications, the following
		  operations have been removed:
		  _&_ : Nat, Nat -> Bit (its C implementation was removed too)
		  _*_ : Bit, Nat -> Nat
		  ADD_BLOCK : Block, Block -> Block
		  Block : Nat -> Block (this function is now written in C)
		  Byte_1, ..., Byte_4 : Byte -> Octet
		  DOUBLE : Bit -> Nat
		  NatNum : Octet -> Nat
		  NatNum : Block -> Nat
		  NatNum : Bit, ..., Bit -> Nat
		  power_1, ..., power_32 : -> Nat

		- In both the LOTOS and LNT specifications, the profile of
		  operations ADD, LOW_MUL, and HIGH_MUL was changed from
                  Nat, Nat -> Nat to Block, Block -> Block. The profile of
		  operation CAR was changed from Nat, Nat -> Bit to
		  Block, Block -> Block. These changes have triggered changes
		  in the MUL1*, MUL2*, MUL2A*, and Q functions, which now
		  handle Blocks rather than Nats.

		- In both the LOTOS and LNT specifications, the constructor
		  Block : Bit, ..., Bit -> Block has been replaced by another
		  constructor Block : Octet, Octet, Octet, Octet -> Block.
		  As a consequence, some functions (XOR, CYC, FIX, FIX2, etc.)
		  have been adapted.

		- In the LOTOS specification, the following operations have
		  been removed:
                  NatNum : Pair -> Nat
                  MUL1_XY : Nat, Nat -> Nat
                  MUL2_XY : Nat, Nat -> Nat
                  MUL2A_XY : Nat, Nat -> Nat

		- In the LOTOS specification, the variables H4, H5, H6, H7,
		  H8, H9 : Block were not used and have been removed. A few
		  corresponding functions:
		  H4, H6, H8, H0, H7, H9 : Block -> Block
		  H5 : Block, Octet -> Block
		  that were explicitly present in [Munster-91-a] but expanded
		  inline in the LOTOS specification of demo_12, have been
		  restored.

		- In the LNT specification, the types TwoPairs and ThreePairs
		  have been removed. The following functions have also been
		  removed:
		  f : Pair, Octet -> ThreePairs
		  NatNum : Pair -> Nat
		  R : TwoPairs -> Block

		- In the LNT specification, two functions _AND_ and _OR_ :
		  Block, Block -> Block have been added.

		- In the LNT specification, the "multiplicative" functions
		  MUL1, MUL2, and MUL2A have been simplified by taking
		  advantage of LNT assignments.

		- In the LNT specification, the functions Prelude, MainLoop,
		  MainLoopRepeated, Coda, and S have been simplified by
		  introducing "out" parameters.

		- The LNT specification has been enriched with 160 unit
		  tests derived from the original MAA specification.

		- Also, the "main.c" program has been simplified and made
		  more readable.

		All in one, the size of the LOTOS specification has been
		reduced from 1095 lignes (in CADP 2016-l) down to 809 lines.
		Conversely, the size of the LNT specifications has increased
		because of the addition of unit tests.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2275
Date:		Tue Jan 10 15:57:42 CET 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The internal code of LNT2LOTOS was revised at several places
		in order to reduce the use of recursion. These changes allowed
		to divide the size of the execution stack by two when
		compiling LNT code containing long sequences of process calls
		or communication actions.
-------------------------------------------------------------------------------
VERSION 2017-a "Sophia Antipolis"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2276
Date:		Tue Jan 17 15:14:52 CET 2017
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/pdf/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The static semantics of LNT has been relaxed by removing the
		constraint (FD4) stating that variables and exceptions share
		the same name space. From now on, it is permitted that a
		variable and an exception have the same name in a given scope.
-------------------------------------------------------------------------------
BUG FIX
Number: 	2277
Date: 		Wed Jan 18 17:15:47 CET 2017
Author:		Wendelin Serwe(INRIA/CONVECS)
Files:		bin.*/bes_solve

Nature:		Previously, the BES_SOLVE tool could corrupt the contents of
		its buffer containing statistics about distributed resolution
		of a Boolean equation system. This problem has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2278
Date:		Mon Jan 30 15:22:01 CET 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		In LNT functions, calling a function with a single exception
		parameter was impossible without using the "eval" keyword.
		This was due to a missing syntax rule in the LNT grammar
		implemented in LNT2LOTOS. This problem has been fixed, so
		that the "eval" keyword is now optional in this case.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2279
Date:		Wed Feb  1 19:03:27 CET 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/pdf/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The simple "loop ... end loop" statement (without loop label
		nor "while" condition) was not permitted in LNT functions,
		although it is allowed in LNT processes. The LNT grammer has
		been modified to permit simple loops in LNT functions.

		For such simple loops, LNT2LOTOS checks that the body of the
		loop contains at least one "return" statment or one "break L"
		statement, where L is the label of a loop enclosing the simple
		loop. Such checks are meant to ensure that the simple loop has
		a chance to terminate. Otherwise, LNT2LOTOS issues an error
		message and stops.

		Before this change, LNT programs that contained simple loops
		were syntactically rejected:
		   Error : ``%IDENTIFIER IN'' is inserted before ``NULL''
		   lnt2lotos: LNT program is syntactically incorrect
		After this change, they are either accepted or rejected for
		static semantics reasons, e.g.:
		   TEST.lnt:10: error: loop never terminates
		   lnt2lotos: LNT program is semantically incorrect

		The LNT2LOTOS reference manual has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number: 	2280
Date: 		Thu Feb  2 16:27:27 CET 2017
Author:		Wendelin Serwe(INRIA/CONVECS)
Files:		bin.*/bes_solve

Nature: 	The statistical information printed by BES_SOLVE with option
		``-stat'' for the distributed resolution algorithm has been
		improved to more ressemble the information displayed by the
		sequential algorithms. From now on, global information (total
		numbers added for all blocks) are displayed only once, and
		additional global information (e.g., number of variables,
		explored dependencies, calls, and redundant calls) is printed.
		Also, some error messages have been enriched; for instance,
		a communication error displays also the corresponding error
		code of the operating system.
-------------------------------------------------------------------------------
BUG FIX
Number:		2281
Date:		Mon Feb  6 15:48:13 CET 2017
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The LOTOS code generated by LNT2LOTOS for certain "case"
		intructions occurring in LNT functions (but not in LNT
		processes) could be incorrect, because of a wrong calculation
		of the list of potentially-defined LNT variables. Such
		incorrect LOTOS code would trigger a segmentation fault
		during the type survey phase of CAESAR and CAESAR.ADT:
		   Segmentation Fault - core dumped
		   #139 bug during type survey:
		        survey program execution aborted
		        quit
		This problem has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number: 	2282
Date: 		Wed Feb  8 11:16:23 CET 2017
Author:		Wendelin Serwe(INRIA/CONVECS)
Files:		bin.*/bes_solve

Nature:		In the case where there was not enough memory to create the
		data structures required for the distributed resolution of a
		Boolean equation system, BES_SOLVE printed a message to the
		standard output of a worker, and the resolution continued, but
		failed later due to a memory corruption. From now on, the
		resolution is halted and a proper error message is emitted.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2283
Date:		Thu Feb  9 10:15:47 CET 2017
Report:		Hubert Garavel and Lina Marsso (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The translation algorithm used by LNT2LOTOS to compile the
		"if-then-else" instructions in LNT functions has been
		revised. The previous algorithm was expensive in terms of
		memory, and could sometimes fail to compile large LNT
		specifications, with an error message of the following form:
		  memory full in exceptions enter_function: Not enough space
		The new algorithm uses less memory and is also expected to
		be faster, although we could not find concrete examples of
		speed improvements.
-------------------------------------------------------------------------------
IMPROVEMENT
Number: 	2284
Date:		Fri Feb 10 17:36:06 CET 2017
Authors:	Hubert Garavel and Lina Marsso (INRIA/CONVECS)
Files:		demos/demo_12/*

Nature:		The demo_12 (MAA) has been further enhanced in many ways:

		- The "main.c" file now has a "-t" option that passes the
		  built-in test vectors.

		- "main.c" now emits a warning if the file has more than
		  the recommended size of 1,000,000 blocks, i.e., 4,000,000
		  bytes.

		- "main.c" now takes the key as two 8-digit hexadecimal
		  numbers J and K, rather than as a 8-byte character string.

		- "main.c" file now accepts an (optional) expected MAC value
		  on its command line, and checks whether the computed result
		  is equal to this value.

		- "main.c" computed an incorrect checksum, as the list of
		  blocks storing the message was built in reverse order.

		- A new "Tests" directory has been added, which contains two
		  files "order-iso-8730-annex-E-*.txt" that implement the MAA
		  test vectors specified in Annex E.3 and E.4 of ISO 8730.

		- The "Makefile" now uses the "-t" option of "main.c" and
		  passes the new test vectors contained in "./Tests". The
		  key used with file "maa_original.lotos" is now (J = 1F619C6D,
		  K = 2C196A9F) rather than "abcdefgh".

		The LOTOS version (in file "LOTOS/maa.lotos") was revised,
		as it is no longer relevant to demonstrate its consistency
		with respect to "maa_original.lotos":

		- All the comments showing the correspondence between
		  "maa.lotos" and "maa_original.lotos" have been dropped.

		- The signatures of LOTOS types have been reorganized.

		- The sort AcceptableMessage has been removed.

		- The definition of the sort Message has been modified by
		  changing its constructors to "nil" and "++". This enabled
		  simplifications in ``main.c'' and in function REVERSE()
		  defined in "maa.f".

		- The definition of the sort SegmentedMessage has been
		  modified by changing its constructors to "nil" and "++".

		- Two new functions AND, OR : Block, Block -> Block have been
		  added and the definitions of the two functions FIX1 and FIX2
		  have been shortened.

		- The two functions BYT and PAT have been simplified and a
		  new function AuxBYT has been introduced.

		- The MAC function has been replaced by two functions
		  MACfirst and MACnext.

		- The following operations have been suppressed:
		  Authenticator : Pair, AcceptableMessage -> Block
		  Contents : AcceptableMessage -> Message
		  Flatten : SegmentedMessage -> Message
		  Length : Message  -> Nat
		  Length : SegmentedMessage -> Nat
		  Normal  : SegmentedMessage -> Bool
		  Restrict : Message -> AcceptableMessage
		  RestrictC : Message -> AcceptableMessage
		  Reverse : SegmentedMessage -> SegmentedMessage
		  T : Message -> AcceptableMessage
		  256 : -> Nat
		  1000000 : -> Nat
		  _eq_ : Message, Message -> Bool
		  _eq_ : SegmentedMessage, SegmentedMessage -> Bool
		  _ne_ : Message, Message -> Bool
		  _ne_ : Block, Block -> Bool
		  _ne_ : SegmentedMessage, SegmentedMessage -> Bool
		  _+_ : Message, Block -> Message
		  _+_ : Message, SegmentedMessage -> SegmentedMessage
		  _++_ : Message, Message -> Message
		  _++_ : SegmentedMessage, SegmentedMessage -> SegmentedMessage

		- The following functions have been renamed
		  f has been renamed in AuxPrelude
		  S has been renamed in AuxMAA
		  Init_Segment has been renamed in SplitSegment
		  Segmentation has been renamed in CutSegment and simplified

		- Unused variables in "forall" clauses have been removed.
		  A few other variables have been renamed.

		- The size of maa.lotos was reduced from 812 to 409 lines.

		The LNT version of the MAA has been significantly revised:

		- Three modules (BLOCK.lnt, BLOCKVALUES.lnt, and MESSAGE.lnt)
		  have been added.

		- The type Pair has been removed, and replaced by "out"
		  parameters in many functions.

		- The following operations have been suppressed:
		  Segment : Message -> SegmentedMessage
		  _+_ : Message, Block -> Message
		  _+_ : Message, SegmentedMessage -> SegmentedMessage
		  _+_ : SegmentedMessage, Message -> SegmentedMessage
		  append : Message, SegmentedMessage -> SegmentedMessage
		  reverse : SegmentedMessage -> SegmentedMessage

		- The MainLoopCore function has been expanded in MainLoop.

		- The SegmentMAC function has been expanded in MAC.

		- The Coda, MainLoopRepeated, and S functions have been
		  expanded in MAA.

		- The BYT, FIX1, and FIX2 fonctions have been simplified.

		- The functions J1_*, J2_*, K1_*, and K2_* have been replaced
		  by only two functions PreludeJ and PreludeK, which are more
		  readable and enable unit tests to be simplified. Two other
		  functions PreludeHJ and PreludeHK have been introduced.

		- Many test vectors taken from ISO 8730 and ISO 8731-2 have
		  been added to the LNT specification. Consequently, the size
		  of the LNT specification increased from 1144 to 1541 lines.
-------------------------------------------------------------------------------
VERSION 2017-b "Sophia Antipolis"
-------------------------------------------------------------------------------
IMPROVEMENT
Number: 	2285
Date:		Wed Feb 15 12:00:41 CET 2017
Authors:	Hubert Garavel and Lina Marsso (INRIA/CONVECS)
Files:		demos/demo_12/*

Nature:		The LNT and LOTOS versions of demo_12 (MAA) have been further
		enhanced as follows:

		* MESSAGE.lnt:
		  - this module was removed and merged again in maa.lnt

		* maa.lnt:
		  - one no longer duplicates values of type Message to build
		    values of SegmentedMessage
		  - type SegmentedMessage was removed
		  - function Split: Message -> SegmentedMessage was removed
		  - function MAA was merged in function MAC and removed
		  - function Prelude is now invoked only once per message
		  - function Coda was reintroduced to allow code factoring

		* LOTOS/maa.lotos:
		  - one no longer duplicates values of type Message to build
		    values of SegmentedMessage
		  - sort SegmentedMessage was removed
		  - operations SplitSegment and CutSegment were removed
		  - function Prelude is now invoked only once per message
		  - funtion MainLoop: TwoPairs, Message -> TwoPairs was removed
		  - function ComputeXYVW: TwoPairs, Block -> TwoPairs was
		    renamed into MainLoop
		  - function R was renamed into ComputeZ
		  - functions MACfirst and MACnext were removed and replaced
		    by MAAstart, MAA, and MAAjump

		* maa.fnt:
		  - the C implementation of function REVERSE() was removed as
		    this function is now automatically generated by lnt2lotos

		* maa.fnt, LOTOS/maa.f, and main.c:
		  - BUILD_BIT_FROM_NAT was renamed into NAT_TO_BIT
		  - BUILD_BLOCK_FROM_NAT was renamed into NAT_TO_BLOCK
		  - BUILD_OCTET_FROM_NAT was renamed into NAT_TO_OCTET
		  - NATNUM_OCTET was renamed into OCTET_TO_NAT
		  - NATNUM_BLOCK was renamed into  BLOCK_TO_NAT
		  - some comments written in French were translated to English

		* doc:
		  - a recent paper Garavel-Marsso-17.pdf was added.
-------------------------------------------------------------------------------
BUG FIX
Number: 	2286
Date:		Wed Feb 22 18:45:43 CET 2017
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		LNT2LOTOS could generate incorrect code when a variable
		defined in a pattern of a "case" statement was subsequently
		used in a statement occurring "after" (as opposed to "inside")
		this "case" statement. The problem would show only when the
		"case" statement was itself embedded in another statement
		(e.g., a "case" or a "while" statement) and when the variable
		was used outside this embedding statement.

		For instance, considering the following (sample) function F,
		the call F (1, L), where L is a non-empty list, would
		always return 0 (the initial value of R) instead of the
		first element of list L.

			function F (X:Nat, L:T) : NAT is
			   var R:NAT, I:NAT in
			      R := 0;
			      I := 0;
			      while I < X loop
			         case L in
			            nil -> return 0
			         |  cons (R, any Nat) -> I := I + 1
			         end case
			      end loop;
			      return R
			   end var
			end function

		This bug has been fixed. It showed up only in rare situations.
		We observed that it affected only one program out of 5000 in
		our LNT validation base. The version number of LNT2LOTOS was
		increased from 6.5 to 6.6.
-------------------------------------------------------------------------------
IMPROVEMENT
Number: 	2287
Date:		Thu Mar  9 11:38:46 CET 2017
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_19/*

Nature:		The LNT and LOTOS specifications of the "Production Cell"
		have been enhanced as follows:

		- The LOTOS sort ERROR_LIST and the LNT sort ERROR_LIST
		  have been removed and replaced by character strings. The
		  functions EMPTY_ERROR_LIST(), CMP_ERROR_LIST(), and
		  PRT_ERROR_LIST() have also been removed. Consequently,
		  file "TYPES.tnt" has been deleted.

		- If the "start" command is invoked with the "-debug" option,
		  the execution trace is now written to the standard error
		  rather than in file "debug.seq"; it is therefore possible
		  to pipe this trace into a compression command such as "gzip"
		  to reduce disk space.

		- A recent paper Garavel-Serwe-17.pdf was added in the ``doc''
		  directory. The =READ_ME.txt file and various comments in
		  CHANNELS.lnt and CONTROLLER.lnt have been revised.
-------------------------------------------------------------------------------
IMPROVEMENT
Number: 	2288
Date:		Thu Mar 16 15:03:55 CET 2017
Report:		Hubert Garavel and Lina Marsso (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The performance improvements of the LNT2LOTOS translator
		described in items #2270, #2271, and #2283 above were still
		not sufficient to handle large LNT functions mixing
		assignments and assertions, in particular when the values
		of variables are large terms. This could result in error
		messages of the following form:

		  memory full in exceptions enter_function: Not enough space

		The translation algorithm has been deeply revised in order to
		handle these functions more efficiently. In particular, some
		versions of the MAA specification (demo 12) that could not
		be handled are now succesfully translated by LNT2LOTOS.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2289
Date:		Fri Mar 24 10:31:25 CET 2017
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The translation from LNT functions to LOTOS operations was
		further enhanced by optimizing the intermediate code when
		this is possible. In particular, expressions of the form:
		   if E then B1; return E' else B2 end if; B3
		are now handled as:
		   if E then B1; return E' else B2; B3 end if

		Such a transformation improves in several respects the
		quality of the generated LOTOS code by:

		- eliminating redundant LOTOS equations, e.g., two identical
		  equations occurring in the generated LOTOS code;

		- eliminating unreachable LOTOS equations, e.g., an equation
		  with a premiss P' following another equation with a stronger
		  premiss P (i.e., P => P')

		- eliminating unused auxiliary LOTOS operations of the
		  form ``CASE__<K>__<V>'' (where <K> is a number and <V> is
		  a variable identifier),

		- simplifying the premises of certain LOTOS equations; for
 		  instance, a condition "A AND NOT (B), NOT (B)" can now
		  be replaced by the equivalent and simpler "A AND NOT (B)".

		Due to these simplifications, some LNT specifications that
		generated LOTOS code too large to be handled by CAESAR.ADT
		   #213 error in file ``.h'':
		        memory shortage for abstract data types
		        in operation LOTOSNT_CONS
		can now be processed succesfully.
-------------------------------------------------------------------------------
VERSION 2017-c "Sophia Antipolis"
-------------------------------------------------------------------------------
BUG FIX
Number:		2290
Date:		Tue Apr 11 16:50:32 CEST 2017
Report:		Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Authors:	Frederic Lang, Wendelin Serwe, and Hubert Garavel (INRIA/
		CONVECS)
Files:		bin.*/caesar.adt

Nature:		A memory allocation error was found and fixed in CAESAR.ADT.
		Although this error affected all architectures, we only
		observed it on Solaris (sol86 and sol64 architectures), but
		not on Linux. The error only occurred for large LOTOS programs
		(usually, larger than 20 Mbytes, but we have been able to
		produce a smaller, handcrafted LOTOS example that had "only"
		300 kbytes and exhibited the same error). On such programs,
		CAESAR.ADT would have one of the three faulty behaviours:
		 - enter into infinite loop
		 - stop with a segmentation fault
		 - stop with a wrong error message:
			#306 bug during compilation phase:
			     unexpected case (not defined by equations)
			     quit
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2291
Date:		Fri Apr 14 10:28:24 CEST 2017
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		LNT2LOTOS now optimizes the LOTOS code generated for the
		"if-then-else" instructions in function definitions. When
		both branches contain identical assignments, e.g.:

		    if C then
		       X := E;
		       ...
		    else
		       X := E;
		       ...
		    end if

		the computation of E and the assignment of X are, in the
		generated LOTOS code, made independent of the condition C;
		in such case, LNT2LOTOS generates fewer LOTOS algebraic
		equations, or LOTOS operations with fewer arguments.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2292
Date:		Tue Apr 25 12:45:29 CEST 2017
Report:		Hubert Garavel and Lina Marsso (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The translation from LNT functions to LOTOS operations was
		further improved so that LNT2LOTOS can now efficiently handle
		functions which contain many assertions intertwined with
		sequences of assignments. The new version of LNT2LOTOS
		generates different LOTOS code for LNT functions containing
		"assert" statements. For each "assert" statement, LNT2LOTOS
		generates new LOTOS operations named ASSERT__<K>__<V>, where
		<K> is a unique number associated to the "assert" statement
		and <V> is a variable identifier. Also, LNT2LOTOS now
		generates equations having simpler Boolean conditions.

		This enhancement has three advantages:

		1) LNT2LOTOS now uses much less memory, and can thus handle
		   larger LNT specifications. For instance, LNT2LOTOS could
		   not handle the complete version of demo 12 ("Message
		   Authenticator Algorithm"), due to lack of memory (4 Gbytes
		   exhausted after 105 seconds of user time). This example
		   is now processed in 14 seconds of user time.

		2) The size of the generated LOTOS code is smaller (on the
		   demo_12 examples, this size was divided by two, from 420
		   kbytes down to 202 kbytes). Although the introduction of
		   the ASSERT__<K>__<V> operations increases the size of the
		   LOTOS code, it enables global saving that can be super-
		   linear.

		3) As a side effect, certain LNT specifications that
		   contained incorrectly-typed assignments "X := E" are now
		   rejected by LNT2LOTOS, whereas they could be tolerated
		   by earlier versions of LNT2LOTOS if variable X was
		   eliminated by substitution.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2293
Date:		Tue Apr 25 16:02:21 CEST 2017
Author:		Wendelin Serwe (INRIA/CONVECS)
File:		com/tst

Nature:		The TST shell script has been enhanced to properly display
		the Glibc version number on CentOS systems (previously, TST
		would display an "unknown" version number).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2294
Date:		Wed Apr 26 12:10:15 CEST 2017
Authors:	Hubert Garavel and Lina Marsso (INRIA/CONVECS)
File:		demos/demo_12/maa.lnt

Nature:		The LNT specification of the Message Authenticator Algorithm
		has been been enriched with the test vectors mentioned in
		Table 6 of [ISO 8731-2:1992], namely iterations on a message
		containg 20 null blocks. The new LNT specification, which
		was too large to be compiled with LNT2LOTOS, can now be
		handled successfully thanks to the enhancements described in
		items #2291 and #2292 above.
-------------------------------------------------------------------------------
VERSION 2017-d "Sophia Antipolis"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2295
Date:		Tue May  2 10:42:27 CEST 2017
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.*/lpp

Nature:		LPP now translates LNT character strings more concisely into
		LOTOS, by not adding a final NUL character (noted STRING_000)
		character when it is not required.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2296
Date:		Thu May  4 15:19:29 CEST 2017
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/caesar_standard.h, bin.*/libcaesar.a,
		src/open_caesar/executor.c, src/open_caesar/generator.c,
		src/open_caesar/generator2.c, src/open_caesar/declarator.c,
		src/open_caesar/reductor2.c, src/open_caesar/reductor3.c,
		doc/pdf/Garavel-92-a.pdf

Nature:		The API of the OPEN/CAESAR library for handling POSIX signals
		has been modified and improved in several ways:

		1) A new type CAESAR_TYPE_SIGNAL_HANDLER has been added and
		   the profile of function CAESAR_SIGNALS() has been updated
		   to use this new type.

		2) The function CAESAR_SIGNALS() has been renamed to
		   CAESAR_SET_SIGNALS(). This is an incompatible change. All
		   OPEN/CAESAR application programs using CAESAR_SIGNALS()
		   have been modified accordingly.

		3) A new function CAESAR_RESET_SIGNALS() has been added to
		   the OPEN/CAESAR library.
-------------------------------------------------------------------------------
BUG FIX
Number:		2297
Date:		Fri May  5 17:14:35 CEST 2017
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/caesar_standard.h, bin.*/libcaesar.a

Nature:		The CAESAR_SET_SIGNALS() function now catches the SIGSEGV
		signal (i.e., segmentation violation) properly and makes
		sure that the signal handler will execute properly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2298
Date:		Mon May  8 11:49:10 CEST 2017
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.adt, incl/caesar_system.h, src/com/cadp_cc,
		demos/demo_12/Makefile, demos/demo_12/LOTOS/Makefile,
		demos/demo_19/start, demos/demo_38/demo.svl,
		demos/demo_38/LOTOS/demo.svl, demos/demo_40/demo.svl

Nature:		The C code generated by CAESAR.ADT has been enhanced to
		display informative error messages when the evaluation of
		a constant fails in function CAESAR_ADT_INIT(). Usually,
		such an evaluation may fail for three reasons:

		- The value of the constant is so large that it exhausts
		  all the available memory (this case is not so frequent).

		- The value of the constant requires so much computation
		  that the stack overflows, raising a SIGSEGV signal. This
		  occurs, e.g., with lists having more than one hundred
		  thousands elements.

		- The evaluation of the constant triggers an exception
		  (namely, a signal SIGTERM). This occurs when the LOTOS
		  is generated from an LNT specification containing
		  definitions such as:
		     function C [ERROR] : T is raise ERROR end function

		In such cases, the previous versions of CAESAR would fail
		abruptly during the type survey phase, without detailed
		information on the reason of the failure:

		   caesar: syntax analysis of ``test''
		   caesar: semantic analysis of ``test''
		   caesar: [...]
		   caesar: restriction of ``test''
		   caesar: expansion of ``test''
		   caesar: type survey of ``test''
		   Segmentation Fault - core dumped
		   #139 bug during type survey:
		        survey program execution aborted
		        quit

		This made debugging tedious, as function CAESAR_ADT_INIT()
		can evaluate several constants, so the user had to guess
		which one was failing. From now on, the error message is
		much more precise and informative:

		   caesar: syntax analysis of ``test''
		   caesar: semantic analysis of ``test''
		   caesar: [...]
		   caesar: restriction of ``test''
		   caesar: expansion of ``test''
		   caesar: type survey of ``test''
		   #277 error in file ``.h'' :
		        unexpected problem in function CAESAR_ADT_INIT()
		        caught signal 11 (Segmentation Fault)
		        while evaluating constant operation N_1000000 [64]
		        implemented by function CAESAR_ADT_FUNC_N_1000000
		   Terminated
		   #139 bug during type survey:
		        survey program execution aborted
		        quit

		These are two other examples of caught exceptions:

		   #277 error in file ``.h'' :
		        unexpected problem in function CAESAR_ADT_INIT()
		        caught signal 8 (Arithmetic Exception)
		        while evaluating constant operation CTI_CONVYEAR [129]
		        implemented by function CAESAR_ADT_FUNC_CTI_CONVYEAR
		and

		   #277 error in file ``.h'' :
		        unexpected problem in function CAESAR_ADT_INIT()
		        caught signal 15 (Terminated)
		        while evaluating constant operation POWER_8 [112]
		        implemented by function CAESAR_ADT_FUNC_POWER_8

		The C code now generated by CAESAR_ADT makes use of the novel
		features of the OPEN/CAESAR library (see items #2296 and #2297
		above). As a consequence, it is not backward compatible in
		two respects:

		- It must now be compiled with -D_POSIX_C_SOURCE=200809L
		  rather than -D_POSIX_C_SOURCE=200112L in order to get the
		  declaration of function strsignal(). Otherwise, warnings
		  will be emitted. The ``cadp_cc'' shell script has been
		  modified accordingly.

		- It must now be linked against the OPEN/CAESAR library
		  (i.e., with options -L$CADP/bin.`$CADP/com/arch` -lcaesar
		  -lcaesar_plug) so as to get the code of library functions
		  CAESAR_SET_SIGNALS() and CAESAR_RESET_SIGNALS(). A few
		  Makefiles and SVL scripts in CADP demos have been modified
		  to invoke the C compiler with these options.
-------------------------------------------------------------------------------
BUG FIX
Number:		2299
Date:		Tue May  9 14:47:25 CEST 2017
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.adt, bin.*/caesar, bin.*/caesar.old

Nature:		A buffer overflow was detected and fixed in CAESAR and
		CAESAR.ADT. This bug occurred when invoking these tools
		with option ``-comments'' on a LOTOS specification that
		contains very long identifiers (e.g., larger than 1000
		characters), e.g., the LOTOS specifications generated
		by the successive application of GRL2LNT and LNT2LOTOS.
		In such case, CAESAR.ADT would generate a ``.h'' file
		that was syntactically incorrect, with broken lines.
-------------------------------------------------------------------------------
VERSION 2017-e "Sophia Antipolis"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2300
Date:		Tue May 22 11:52:58 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/pdf/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		A new pragma "!card <int>" has been added for LNT types. It
		enables the user to specify the maximum number of values for
		a type and force the dynamically allocated values of this type
		to be stored in an OPEN/CAESAR table_1 (this is sometimes
		known as "hash-consing"). This functionality was previously
		available using handwritten ".tnt" files, but the new pragma
		makes it easier and more readable.
-------------------------------------------------------------------------------
BUG FIX
Number:		2301	
Date:		Tue May 23 16:36:34 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:          bin.*/exp2c, man/*/exp.*

Nature:		Previously, when a composition expression contained an LTS
		file name F, EXP.OPEN first checked whether F existed, then
		if F.bcg existed, and at last if F.aut existed. If no file
		was found, EXP.OPEN displayed the following error message:

			exp2c: ERROR line XXX: cannot read file ``F'' nor
			``F.bcg'' nor ``F.aut''

		This behaviour, which was independent of the extension of
		file F, caused two problems:

		1) If file F had an unknown extension (i.e., different from
		   ".bcg", ".aut", ".seq", and ".fc2") and if both files
		   F and F.bcg (or F.aut, respectively) existed, EXP.OPEN
		   selected F, despite that it was not a valid LTS file and
		   although a valid file existed. EXP.OPEN then printed the
		   following error message:

			exp2c: ERROR file ``F'' has no extension

		2) If F had a known extension (e.g., "X.bcg") but did not
		   exist, then the displayed error message of EXP.OPEN was
		   misleading:

			exp2c: ERROR line XXX: cannot read file ``X.bcg'' nor
			``X.bcg.bcg'' nor ``X.bcg.aut''

		These problems have been fixed. In case 1), EXP.OPEN does not
		anymore check for the existence of F, but for the existence
		of F.bcg and/or F.aut. If none of these files exists, EXP.OPEN
		displays a better error message:

			exp2c: ERROR line XXX: cannot read file ``F.bcg''
			nor ``F.aut''

		In case 2), EXP.OPEN only checks for the existence of X.bcg
		and if the file is not found, EXP.OPEN halts with the
		following error message

			exp2c: ERROR line XXX: cannot read file ``X.bcg''

		without anymore checking for the existence of other files.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2302
Date:		Wed May 24 10:57:42 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c

Nature:		EXP.OPEN now checks whether the labels present in the
		composition expressions present in its input ``.exp'' file
		contain only blank characters (this includes the particular
		case of the empty string). When such a label is found,
		EXP.OPEN now displays a warning message:

			exp2c: WARNING line XXX: empty label

		Also, the line spacing between warning/error messages has
		been uniformized.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2303
Date:		Wed Jun  7 12:28:32 CEST 2017
Report:		Sarah Chabane (University of Boumerdes, Algeria)
		Laurent Georget (Centrale/Supelec, Rennes, France)
		Raquel Oliveira (IRIT, Toulouse, France)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
File:		src/com/cadp_cc

Nature:		On recent versions of Ubuntu (e.g., Ubuntu 17.04), the
		GCC 6.* compiler is configured by default to generate
		position-independent code, which is incompatible with the
		libraries distributed with CADP. This caused, when invoking
		many CADP tools, error messages of the following form:

		  /usr/bin/ld: $CADP/bin.x64/libbcg_info.a(bcg_info_main.o):
		  relocation R_X86_64_32 against `.rodata.str1.1' can not be
		  used when making a shared object; recompile with -fPIC

		  /usr/bin/ld: $CADP/bin.x64/libbcg_info.(bcg_info_xxx.o):
		  relocation R_X86_64_32 against `.rodata.str1.8' can not be
		  used when making a shared object; recompile with -fPIC

		  /usr/bin/ld: $CADP/bin.x64/libcaesar.a(caesar_standard.o):
		  relocation R_X86_64_32 against `.bss' can not be used when
		  making a shared object; recompile with -fPIC

		  /usr/bin/ld: $CADP/bin.x64/libcaesar_plug.a(caesar_plug.o):
		  relocation R_X86_64_32 against `.rodata.str1.1' can not be
		  used when making a shared object; recompile with -fPIC
		  /usr/bin/ld: final link failed: Nonrepresentable section
		  on output
		  collect2: error: ld returned 1 exit status

		This problem has been addressed by modifying the script file
		$CADP/src/com/cadp_cc to invoke GCC with appropriate options.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2304
Date:		Thu Jun  8 14:10:13 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:          bin.*/exp2c

Nature:		When a label having probabilistic or a stochastic meaning
		was explicitly synchronized by some parallel composition
		operator, EXP.OPEN displayed the following warning message:

		   some stochastic or probabilistic label is synchronized

		This message has been replaced by a more informative one:

		   the probabilistic label "TICK; prob 1" is synchronized
		   (this may concern other probabilistic labels as well)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2305
Date:		Fri Jun  9 10:56:02 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		com/exp.open, bin.*/exp2c, man/*/exp.*, man/*/exp.open.*

Nature:		Two new options "-prob" and "-rate" have been added to
		EXP.OPEN. These options are similar to those of BCG_MIN.

		Option "-prob" indicates that transitions whose labels are
		of the form "prob %p" or "label; prob %p" (where %p denotes
		a floating-point number in the range ]0..1] and "label"
		denotes a character string that does not contain the ";"
		character) must be interpreted as probabilistic transitions.

		Option "-rate" indicates that transitions whose labels are
		of the form "rate %f" or "label; rate %f" (where %f denotes
		a strictly positive floating-point number and "label" denotes
		a character string that does not contain the ";" character)
		must be interpreted as stochastic transitions.

		Options "-prob" and "-rate" can be used together, without
		restriction.

		Probabilistic and stochastic transitions can always execute
		asynchronously (i.e., they interleave with other transitions).
		If some parallel composition attempts to synchronize
		probabilistic (resp. stochastic) transitions explicitly, then
		EXP.OPEN issues a warning message (see item #2304 above).

		Following this change, the version number of EXP.OPEN was set
		to 2.5.

		This change is not backward compatible, as the previous
		version 2.4 of EXP.OPEN did not have the "-prob" and "-rate"
		options and, by default, always interpret transitions of the
		form "prob %p", "label; prob %p", "rate %f", "label; rate %f"
		as probabilistic or stochastic transitions. With EXP.OPEN 2.5,
		this only occurs if the "-rate" and/or "-prob" options are
		used; without these options, the above transitions have no
		special meaning and are treated like ordinary actions. Thus,
		using the new options "-prob" and "-rate" is now mandatory
		to preserve the same behaviour as EXP.OPEN 2.4.
-------------------------------------------------------------------------------
VERSION 2017-f "Sophia Antipolis"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2306
Date:		Mon Jun 19 15:35:45 CEST 2017
Author:		Frederic Lang (INRIA/CONVECS)
Files:		doc/pdf/Evrard-Lang-15.pdf, doc/pdf/Evrard-Lang-17.pdf,
		doc/=READ_ME.txt, doc/biblio.bib

Nature:		The paper [Evrard-Lang-15] (8 pages) has been replaced by a
		recent journal paper [Evrard-Lang-17] (66 pages), which gives
		a more detailed presentation of the DLC (Distributed LNT
		Compiler) tool.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2307
Date:		Tue Jun 20 17:44:56 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c, com/exp.open, src/svl/standard, man/*/exp.open.*

Nature:		The "-ratebranching" option of EXP.OPEN has been replaced by
		the combination of options "-rate" (see item #2305 above) and
		"-branching".

		If EXP.OPEN is still called with option "-ratebranching",
		it now issues a warning message and continues as if it had
		been called with options "-rate -branching".

		SVL has been modified accordingly, so as to call EXP.OPEN with
		options "-rate -branching" instead of "-ratebranching".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2308
Date:		Wed Jul  5 11:23:44 CEST 2017
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c

Nature:		Error messages about synchronization vectors have been
		improved. EXP.OPEN now indicates the precise line number
		of the incriminated vector instead of the line number of
		the "par" operator containing this vector.
-------------------------------------------------------------------------------
BUG FIX
Number:		2309
Date:		Tue Jul  6 15:22:25 CEST 2017
Report:		Enno Ruijters (University of Twente, The Netherlands) and
		Gianni Zampedri (FBK, Torino, Italy)
Author:		Frederic Lang (INRIA/CONVECS)
File:		src/svl/standard

Nature:		When performing smart reduction, SVL first invokes the EXP2C
		binary directly (without resorting to the EXP.OPEN command) to
		generate intermediate ".exp" files containing synchronization
		vectors; then, SVL calls EXP.OPEN on these intermediate ".exp"
		files to generate a BCG graph.

		When invoking EXP2C, SVL forgot to add on the command line
		the options specified by the user in the shell variable
		$EXP_OPEN_OPTIONS; however, when invoking EXP.OPEN, these
		options were correctly passed.

		This could cause semantic errors, for instance, if variable
		$EXP_OPEN_OPTIONS contained important options such as "-rate".
		In such case, EXP2C and EXP.OPEN were used in an inconsistent
		way, since they were not called with the same options, hence
		interpreting "rate" transitions in a different way. This
		problem was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2310
Date:		Fri Jul  7 12:48:40 CEST 2017
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/pdf/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		In the static semantics of LNT, the constraint (PE3) did not
		require that the formal gates of a procedure are pairwise
		distinct. This constraint has been strengthened and the
		corresponding checks have been implemented in LNT2LOTOS.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2311
Date:		Mon Jul 10 11:39:16 CEST 2017
Author:		Frederic Lang (INRIA/CONVECS)
File:		src/svl/standard

Nature:		Since the "-ratebranching" option of EXP.OPEN is deprecated
		(see item #2307 above), SVL now issues a warning message if
		the shell variable $EXP_OPEN_OPTIONS contains this option.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2312
Date:		Mon Jul 10 14:10:42 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		src/svl/standard, man/*/svl.*

Nature:		Options "-branching", "-deadpreserving", "-strong", and
		"-weaktrace" of EXP.OPEN should be mutually exclusive, i.e.,
		every call to EXP.OPEN should contain at most one of those
		options. If not, EXP.OPEN issues a warning message.

		So far, SVL did not check, when invoking EXP.OPEN, that such
		mutual exclusion was enforced by the user-defined shell
		variable $EXP_OPEN_OPTIONS. The presence of conflicting
		options, which could cause semantic trouble, was not clearly
		reported to the user; it just caused a warning message
		(issued by EXP.OPEN) in the ".log" file generated by SVL.

		From now on, SVL checks for mutual exclusion when calling
		EXP.OPEN, and issues error messages if needed. For instance,
		if $EXP_OPEN_OPTIONS contains both options "-strong" and
		"-branching", then SVL issues the following message:

		  ERROR: variable $EXP_OPEN_OPTIONS contains mutually
		  exclusive options -branching and -strong
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2313
Date:		Tue Jul 11 11:30:56 CEST 2017
Author:		Hubert Garavel (INRIA/CONVECS)
File:		com/rfl

Nature:		From now on, the RFL script can be called without argument,
		which is equivalent to invoking: rfl `hostname`. This makes
		its use simpler when there is only a single machine.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2314
Date:		Wed Jul 12 12:30:00 CEST 2017
Report:		Aymane Bouzafour (Tiempo, Montbonnot, France)
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
File:		bin.*/lnt2lotos,
		doc/pdf/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The LNT2LOTOS Reference Manual, which contains the definition
		of the LNT language, has been enhanced in several ways. First,
		the terminology has been made simpler:

		- The vocabulary for gates and channels was confusing, which
		  made it difficult to distinguish between those two notions.
		  The "gate profiles" have been renamed to "channel profiles".
		  The corresponding constraints (GP1), ..., (GP3) have been
		  renamed to (CP1), ..., (CP3) accordingly. The "experiments"
		  and "exp_declarations" have been renamed to "profile
		  parameters". The error messages emitted by LNT2LOTOS have
		  been updated accordingly.

		- Similarly, "behaviour expressions" (a reminiscence of
		  LOTOS) are now called "behaviours".

		- Also, "process instantiations" (another reminiscence of
		  LOTOS) are now called "process calls", which strengthens
		  the analogy with function calls and procedure calls.

		- Also, "polymorphic gates" are now called "untyped gates".

		Then, the structure of the document has been revised, so
		that the table of contents becomes more detailed and easier
		to use:

		- A sectioning error introduced in section 7.4 in June 2017
		  (since CADP 2017-f) has been corrected.

		- In chapters 4, 5, 6, and 7, the sub-subsections have been
		  removed to leave only sections and subsections. Especially,
		  each subsection entitled "Semantics" has been removed and
		  replaced with a list of subsections.

		- A similar flattening was applied to appendixes B et D.

		Finally, the contents of the document have been enriched:

		- A new section 2.9 ("Semantic checks") was added, which
		  gathers at one place definitions that were previously
		  scattered in several chapters.

		- A new section 3.2 ("Meta-language") was inserted, which
		  gathers definitions related to the Extended BNF notation.

		- A new section 4.5 ("Constructors, functions, procedures,
		  and processes") was added, which provides a comparative
		  overview of routines in LNT.

		- A new chapter 6 ("Channel definitions in LNT") was added,
		  which gathers definitions related to channels that were
		  previously in the chapter on processes, but are actually
		  common to functions and processes.

		- The new section 7.3 ("Resolution of syntactic ambiguities"),
		  formerly section 6.3 ("Precedence rules") now contains
		  precise descriptions of syntactic ambiguities that were
		  previously sketched as footnotes.

		- The new section 7.10.5 ("Assertions") has been rewritten.

		- A new section 8.3 ("Resolution of syntactic ambiguities")
		  has been added, with explanations previously given as
		  footnotes.

		- Appendix G was enriched with information about versions
		  6.6 and 6.7 of LNT2LOTOS.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2315
Date:		Thu Jul 13 17:07:18 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		src/svl/standard, man/*/svl.*

Nature:		EXP.OPEN has four "partial-order reduction" (POR) options
		(namely, "-branching", "-deadpreserving", "-strong", and
		"-weaktrace"), which are mutually exclusive (see item #2312
		above).

		When calling EXP.OPEN, SVL tries to automatically infer, from
		the context of the composition expression, a POR option, which
		is then passed to EXP.OPEN. SVL did not check so far whether
		this option was compatible with the (possibly conflicting)
		options specified by the user in the shell variable
 		$EXP_OPEN_OPTIONS. In case of conflict, it was unclear to
		the user which partial order reduction was performed by
		EXP.OPEN (this could only be guessed by analyzing the warning
		messages in the ".log" file generated by SVL).

		The behaviour of SVL has been modified to address this issue:

		- If a POR option is already present in the shell variable
		  $EXP_OPEN_OPTIONS, then SVL calls EXP.OPEN with this option,
		  without trying to infer a different one.

		- Otherwise, SVL continues to work as previously, by trying to
		  infer the appropriate POR option from the context of the
		  composition expression.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2316
Date:		Sat Jul 15 10:57:02 CEST 2017
Report:		Wellison Raul Mariz Santos (Univ. Rio Grande do Norte, Brazil)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.iX86/*, bin.x64/*

Nature:		Various changes have been brought to the Linux binaries of
		CADP so as to better support recent versions of Linux such
		as Ubuntu 16.04.2 and Debian 9.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2317
Date:		Wed Jul 19 19:18:04 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, com/upc, ext/*/lnt.*,
		doc/pdf/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		Pursuing the changes already initiated for exceptions in LNT
		functions (see items #2225, #2242, and #2245 above),
		changes have been brought to LNT processes, so as to merge
		the two concepts of gates and exceptions into a single one.

		The syntax of process declarations was modified to be fully
		aligned on the syntax of function declarations:

		1) The "raises" clause in process declarations has been
		   removed, and "raises" is no longer an LNT keyword.

		2) Exceptions in process declarations must now be declared
		   between square brackets (like gates) but preceded by the
		   "raise" keyword.

		3) For symmetry, the syntax of function declarations was
		   extended to allow the use of the "raise" keyword when
		   declaring exceptions. However, this keyword remains
		   optional in function declarations (where each gate is
		   implicitly an exception), whereas it is mandatory in
		   process declarations.

		4) From now on, when an LNT process P is declared with
		   exception parameters, all calls to P must now explicitly
		   supply actual exceptions, in the same way as gates.
		   Previously, exceptions were kind of global constants that
		   could not be renamed when invoking a process.

		These changes have been implemented in LNT2LOTOS, the version
		of which was advanced to 6.7. Some error messages have been
		modified; for instance:
		   error: exception G was not declared
		now displays as:
		   error: gate G was not declared as an exception

		Such changes are not backward compatible, but the UPC shell
		script can be used to automate a large part of the migration
		effort. Running the command:

			upc 2017-LNT-PROCESS-RAISES [<directory>]

		will search for all ``.lnt'' files in <directory> (or in
		the user's home directory if <directory> is omitted) and
		propose to automatically update those files that need to be
		changed. Files will be left unchanged if the tool cannot
		safely modify them, e.g., if they are write-protected, or if
		LNT comments occur between the "process" and "is" keywords.

		This script will modify the declarations of LNT process having
		exceptions declared with the obsolete "raises" syntax. For
		instance, it will perform the following substitutions:

		process P raises E : none is ...
		->
		process P [raise E : none] is ...

		process P (N : nat) raises E : none is ...
		->
		process P [raise E : none] (N : nat) is ...

		process P [G1, ..., Gm:C] (...) raises E1, ..., En:none is ...
		->
		process P [G1, ..., Gm:C, raise E1, ..., En:none] (...) is ...

		Caution! UPC does only a half job, in the sense that it only
		modifies process declarations (points 1 and 2 in the above
		list), but not process calls (point 4 in the above list). The
		latter have to be modified manually to insert the missing
		actual exception parameters between square brackets. Such
		changes are tedious, yet easy, and LNT2LOTOS or CAESAR will
		complain about all missing parameters.

		The LNT configuration files for pretty printers and text editors
		have been updated to remove the "raises" keyword.

		The LNT2LOTOS Reference Manual has been updated accordingly:

		- In the abstract syntax, all non-terminals E ("exceptions")
		  have been renamed to G ("gates").
		- The non-terminal "actual_exception" has been replaced by
		  "actual_gates", the definition of which moved from chapter
		  8 (processes) to chapter 7 (functions).
		- From now on, "actual_gates" is also used when defining
		  "procedure_call".
	   	- Section 3.10.2 ("Exceptions in function and process calls")
		  was moved to section 6.5 ("Gates and exceptions").
		- In section 6.7, the definition of "gate compatibility"
		  has been revised.
		- The static semantics constraints (AGi) and (PEi) have been
		  revisited to make them as symmetric as possible, thus
		  reflecting the analogy between procedure calls and process
		  calls.
		- In section 8.8.10, two new constraints (PAR7) and (PAR8)
		  have been added.

		Notice finally that LNT2LOTOS cannot currently detect the
		case where a formal exception parameter is instantiated by
		an actual gate that has not been declared as an exception,
		and generates a LOTOS specification that compiles properly
		but executes incorrectly (i.e., without substitution of
		the formal exception parameter).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2318
Date:		Thu Jul 20 09:12:34 CEST 2017
Author:		Frederic Lang (INRIA/CONVECS)
Files:		demos/demo_05/FILES.lnt, demos/demo_05/MEDIUM.lnt,
		demos/demo_05/MESSAGES.lnt, demos/demo_05/QUEUE.lnt,
		demos/demo_05/REPOSITORY.lnt, demos/demo_05/ TFTP.lnt,
		demos/demo_05/USER.lnt, demos/demo_05/demo.svl

Nature:		The demo 05, which contains LNT processes that can raise
		exceptions, has been updated to obey the new syntax of
		LNT (see item #2317 above).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2319
Date:		Fri Jul 21 15:41:06 CEST 2017
Report:		Frederic Lang (INRIA/CONVECS)
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		Previously, LNT2LOTOS did not check whether the gates
		synchronised by a "par" operator (i.e., the gates occurring
		in the global synchronisation set or in a synchronisation
		interface of the "par" operator) were declared. When such
		a gate was not declared, LNT2LOTOS generated incorrect LOTOS
		code that was later rejected by CAESAR and CAESAR.ADT.

		LNT2LOTOS has been improved in this respect. It now checks:
		 - that all the synchronised gates have been declared, and
		 - that they have not been declared as exceptions.
		Otherwise, LNT2LOTOS issues an error message and stops without
		generating any (correct or incorrect) LOTOS code.
-------------------------------------------------------------------------------
VERSION 2017-g "Sophia Antipolis"
-------------------------------------------------------------------------------
BUG FIX
Number:		2320
Date:		Wed Aug 23 09:39:11 CEST 2017
Report:		Wendelin Serwe (INRIA/CONVECS)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		doc/pdf/Garavel-92-a.pdf, man/*/caesar_graph.*

Nature:		In the manual page describing the CAESAR_GRAPH API, there was
		an error in the specification of the CAESAR_FORMAT_STATE()
		primitive. It was written: if CAESAR_FORMAT = 0, each state
		is printed on a single line terminated by a new-line character
		(``\n''). This was incorrect: ``terminated'' was replaced by
		``which should not be terminated''.
-------------------------------------------------------------------------------
BUG FIX
Number:		2321
Date:		Wed Aug 23 10:05:31 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		The static semantics constraint (PE3) of the LNT Reference
		Manual was incompletely implemented in LNT2LOTOS: when a
		function F is a procedure (i.e., does not return a result),
		when F is called from within a process, and when the named
		style is used for calling F, LNT2LOTOS did not check that
		the formal gates (on the left-hand side of the ``=>'' symbol)
		were pairwise distinct. For instance, it would not reject
		the following LNT code fragment:

		   process MAIN [PRINT:any, raise A, B : none] is
		      var X : int in
		      eval F [Z => A, Z => B] (?X)
		      end var
		   end process

		This problem was solved. Notice that the missing check was
		correctly done when function F was not a procedure, and when
		F was called from within a function rather than a process.
		It was also done for a process called from within a process.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2322
Date:		Wed Aug 23 14:10:31 CEST 2017
Authors:	Frederic Lang, Radu Mateescu, Wendelin Serwe, and Hubert
		Garavel (INRIA/CONVECS)
Files:		doc/*/Champelovier, man/*/lnt2lotos.*, man/*/reductor.*

Nature:		The LNT Reference Manual has been extended in two ways:

		- In Section 3.11, explanations have been added regarding
		  the (ab)use of unary operations without parentheses.

		- In Section 7.3, explanations have been added regarding the
		  lack of precedence of the usual arithemetical and logical
		  operators.

		Also, the LNT2LOTOS and REDUCTOR manual pages have been
		enhanced to remove ambiguities.
-------------------------------------------------------------------------------
BUG FIX
Number:		2323
Date:		Wed Aug 23 16:15:33 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		By unifying the code written for checking LNT functions and
		LNT processes, it appeared that LNT2LOTOS did not check some
		semantic constraints listed in the LNT Reference Manual.
		Precisely, the following checks were missing:
		  (COM3) The "i" gate cannot be used with offers nor with a
		         Boolean guard.
		  (FE2)  A formal gate parameter cannot be named "i".
		  (H3)   A gate declared by a "hide" operator cannot be named
		         "unexpected".
		These checks are now implemented.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2324
Date:		Wed Aug 23 17:31:57 CEST 2017
Author:		Hubert Garavel (INRIA/CONVECS)
File:		src/com/cadp_cc

Nature:		The ``cadp_cc'' shell script has been enhanced to take care
		of the $MALLOC_DEBUG on Solaris (which plays the same role
		as $MallocScribble on OSX). The new version of ``cadp_cc''
		unsets $MALLOC_DEBUG when invoking the Solaris CC compiler,
		thus avoiding crashes of the following form:

		   $ export MALLOC_DEBUG=WATCH,RW
		   $ caesar.adt test
		   caesar.adt: syntax analysis of ``test''
		   caesar.adt: semantic analysis of ``test''
		   caesar.adt:    - processes binding
		   caesar.adt:    - gates binding
		   caesar.adt:    - types binding
		   caesar.adt:    - signature analysis
		   caesar.adt:    - sorts binding
		   caesar.adt:    - variables binding
		   caesar.adt:    - operations binding
		   caesar.adt:    - functionality analysis
		   caesar.adt: interface of ``test''
		   caesar.adt: verification of ``test''
		   caesar.adt: type survey of ``test''
		   Fatal error in /opt/solstudio12.2/prod/bin/acomp
		   cc: Status 133
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2325
Date:		Wed Aug 23 18:14:38 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		Several error messages displayed by LNT2LOTOS during its
		static-analysis phases have been enhanced in various ways:

		1) Some messages that were too verbose have been shortened.

		2) Some messages have been modified to use the same vocabulary
		   as the LNT Reference manual. For instance, "gate experiment
		   name" and "gate experiment identifier" have been replaced
		   with "channel profile parameter".

		3) Also, some redundant messages that reported several times
		   the same error have been removed. For instance:

		Before:
		   error: ``unexpected'' must not be declared in a list of
		   formal gate parameters
		   error: exception UNEXPECTED is already declared at line 0
		After:
		   error: exception ``unexpected'' is forbidden in a gate
		   declaration

		Before:
		   error: gates declared as exceptions must have channel
		   ``none''
		   error: gate ASSERT_EXCEPTION used as an exception should
		   be declared with channel ``none''
		After:
		   error: gates declared as exceptions must have channel
		   ``none''
-------------------------------------------------------------------------------
BUG FIX
Number:		2326
Date:		Wed Aug 23 19:09:38 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
File:		bin.*/caesar.adt

Nature:		A memory-allocation error was fixed in CAESAR.ADT, which
		could lead to segmentation faults such as

		   $ caesar.adt test
		   caesar.adt: syntax analysis of ``test''
		   caesar.adt: semantic analysis of ``test''
		   caesar.adt:    - processes binding
		   caesar.adt:    - gates binding
		   caesar.adt:    - types binding
		   caesar.adt:    - signature analysis
		   caesar.adt:    - sorts binding
		   caesar.adt:    - variables binding
		   caesar.adt:    - operations binding
		   caesar.adt:    - functionality analysis
		   caesar.adt: interface of ``test''
		   caesar.adt: verification of ``test''
		   caesar.adt: type survey of ``test''
		   caesar.adt: compilation of ``test''
		   Segmentation fault (core dumped)

		This bug was very difficult to observe: it only show up on
		Solaris 10 (32 bits) when a given number of variables was a
		power of ten.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2327
Date:		Thu Aug 24 12:30:03 CEST 2017
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.*/lnt2lotos

Nature:		LNT2LOTOS did not properly check that the variables used in
		Boolean guards of LNT communication actions were assigned
		before use. For instance, given the following LNT fragment:

		   var X:int in
		      G (?any Bool) where X > 0
		   end var

		LNT2LOTOS would not emit an error message but instead produce
		incorrect LOTOS code that was later rejected by CAESAR and
		CAESAR.ADT with an error message such as:
		   variable or constant operation LOCAL__X__1 was not declared
		From now on, LNT2LOTOS detects such errors and emits a clear
		error message:
		   TEST.lnt:1778: error: variable X defined at line 1763 is
		   not initialized at this point
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2328
Date:		Fri Aug 25 18:19:30 CEST 2017
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libcaesar.a, bin.*/bes_solve, bin.*/distributor,
		bin.*/pbg_*

Nature:		Several error messages emitted by the distributed verification
		tools of CADP (i.e., BES_SOLVE, DISTRIBUTOR, and the PBG tools)
		when parsing incorrect GCF files have been enhanced to be more
		informative and/or more concise. This was done by enhancing
		the CAESAR_NETWORK_1 library that underlies these tools with
		two new primitives CAESAR_FORMAT_INSTANCE_NETWORK_1() and
		CAESAR_STRING_INSTANCE_NETWORK_1(). These are several examples
		of messages changes:

		Before:
		   main: configuration error - duplicate instance: (mach,
		   "$HOME")
		After:
		   main: configuration error - instance #3 (mach) is identical
		   to instance #1 (mach)

		Before:
		   main: configuration error - instance (mach, /tmp/bis)
		   should not be a sub-directory of (mach, /tmp)
		After:
		   main: configuration error - instance #21 (mach:/tmp/bis)
		   should not be in a sub-directory of instance #3 (mach:/tmp)

		Before:
		   main: error while checking architecture on host mach. An
		   error message was returned: (Node 252, mach:/tmp/dir252)
		   No buffer space available
		After:
		   main: error while checking architecture for instance #252
		   (mach:/tmp/dir252): No buffer space available
-------------------------------------------------------------------------------
VERSION 2017-h "Sophia Antipolis"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2329
Date:		Tue Aug 29 17:04:32 CEST 2017
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/caesar_standard.h, bin.*/libcaesar.a,
		doc/*/Garavel-92-a.*, man/*/caesar_standard.*

Nature:		The ``caesar_standard'' part of the OPEN/CAESAR library was
		enhanced by adding a new type named CAESAR_TYPE_FORMAT, with
		three constants (CAESAR_INVALID_FORMAT, CAESAR_CURRENT_FORMAT,
		and CAESAR_MAXIMAL_FORMAT) and two associated procedures
		CAESAR_PRINT_FORMAT() and CAESAR_HANDLE_FORMAT(). The
		``caesar_standard'' manual page and the OPEN/CAESAR Reference
		Manual have been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2330
Date:		Wed Aug 30 18:51:54 CEST 2017
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/caesar_bitmap.h, incl/caesar_cache_1.h,
		incl/caesar_edge.h, incl/caesar_hide_1.h,
		incl/caesar_mask_1.h, incl/caesar_rename_1.h,
		incl/caesar_solve_1.h, incl/caesar_stack_1.h,
		incl/caesar_table_1.h,
		bin.*/libcaesar.a, bin.*/exhibitor.a, bin.*/ocis,
		bin.*/xsimulator.a, doc/*/Garavel-92-a.*,
		man/*/caesar_bitmap.*, man/*/caesar_cache_1.*,
		man/*/caesar_edge.*, man/*/caesar_hide_1.*,
		man/*/caesar_mask_1.*, man/*/caesar_rename_1.*,
		man/*/caesar_solve_1.*, man/*/caesar_stack_1.*,
		man/*/caesar_table_1.*

Nature:		The following documented functions of the OPEN/CAESAR library:

		   CAESAR_FORMAT_BITMAP()
		   CAESAR_FORMAT_CACHE_1()
		   CAESAR_FORMAT_EDGE()
		   CAESAR_FORMAT_EDGE_LIST()
		   CAESAR_FORMAT_HIDE_1()
		   CAESAR_FORMAT_MASK_1()
		   CAESAR_FORMAT_RENAME_1()
		   CAESAR_FORMAT_STACK_1()
		   CAESAR_FORMAT_SOLVE_1()
		   CAESAR_FORMAT_TABLE_1()

		and a few similar, undocumented functions have been modified
		as follows:

		   - The type of their format parameter has been changed from
		     CAESAR_TYPE_NATURAL (i.e., unsigned long) to
		     CAESAR_TYPE_FORMAT (i.e., unsigned char).

		   - The result type of these functions has been changed from
		     void to CAESAR_TYPE_FORMAT.

		   - The format parameter can now have the two special values
		     CAESAR_CURRENT_FORMAT and CAESAR_MAXIMAL_FORMAT, which
		     now makes it possible to query the current and maximal
		     value of the format. In particular, one can query the
		     current value, modify it, and restore the original value
		     afterwards.

		Also, the following functions:

		   CAESAR_MAX_FORMAT_BITMAP()
		   CAESAR_MAX_FORMAT_CACHE_1()
		   CAESAR_MAX_FORMAT_EDGE()
		   CAESAR_MAX_FORMAT_EDGE_LIST()
		   CAESAR_MAX_FORMAT_HIDE_1()
		   CAESAR_MAX_FORMAT_MASK_1()
		   CAESAR_MAX_FORMAT_RENAME_1()
		   CAESAR_MAX_FORMAT_STACK_1()
		   CAESAR_MAX_FORMAT_SOLVE_1()
		   CAESAR_MAX_FORMAT_TABLE_1()

		are now deprecated, as each constant CAESAR_MAX_FORMAT_xxx()
		is equal to CAESAR_FORMAT_xxx (NULL, CAESAR_MAXIMAL_FORMAT).
		For backward compatibility, these functions are now provided
		as macro-definitions, but it is recommended not to use them
		any longer, as they can be removed in the future.

		The OPEN/CAESAR Reference Manual and the related manual pages
		have been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2331
Date:		Thu Aug 31 14:30:05 CEST 2017
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/caesar_standard.h, incl/bcg_standard.h,
		bin.*/libbcg_io.a, bin.*/caesar, bin.*/caesar.old,
		bin.*/exp2c, bin.*/libseq.a, bin.*/libcaesar_plug.a,
		bin.*/exhibitor.*, bin.*/ocis.*, bin.*/xsimulator.*,
		src/open_caesar/declarator.c, src/open_caesar/simulator.c,
		src/open_caesar/simulator.i, src/open_caesar/terminator.c

Nature:		Following the change described in item #2330 above, the
		``caesar_graph'' API of OPEN/CAESAR was modified and
		simplified as follows:

		- The two API primitives CAESAR_FORMAT_STATE() and
		  CAESAR_FORMAT_LABEL() now take an argument and return a
		  result of type CAESAR_TYPE_FORMAT.

		- The two primitives CAESAR_MAX_FORMAT_STATE() and
		  CAESAR_MAX_FORMAT_LABEL() have been removed from the API;
		  these functions are now deprecated and temporarily replaced
		  by two macro-definitions that return, respectively
		     CAESAR_FORMAT_STATE (CAESAR_MAXIMAL_FORMAT)
		  and
		     CAESAR_FORMAT_LABEL (CAESAR_MAXIMAL_FORMAT)

		The OPEN/CAESAR Reference Manual and the ``caesar_graph''
		manual page have been updated accordingly. The version
		number of OPEN/CAESAR was consequently set to 2.7.

		All OPEN/CAESAR-compliant compilers have been updated to
		implement the new OPEN/CAESAR API:
		   - the version number of CAESAR was set to 7.6
		   - the version number of CAESAR.OLD was set to 6.8
		   - the version number of EXP2C was set to 2.6
		   - the version number of SEQ.OPEN was set to 1.3
		   - BCG_OPEN and the ``libcaesarplug.a'' library have been
		     updated too.

		All the OPEN/CAESAR application tools included in the CADP
		distribution have also been updated, including Declarator,
		Exhibitor, Ocis, Simulator, Terminator, and Xsimulator.
-------------------------------------------------------------------------------
BUG FIX
Number:		2332
Date:		Fri Sep  1 19:47:01 CEST 2017
Report:		Frederic Lang (INRIA/CONVECS)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		A bug was fixed in the way LNT2LOTOS handled certain LNT
		pragmas followed by a natural number (for instance, !nat_sup,
		!card, etc.). If this natural number started with a zero,
		it was copied into the generated C code and then interpreted
		as an octal number by the C compiler. This would cause two
		kinds of problems:

		1) The generated C code could be incorrect and rejected as
		   such by the C compiler. For instance, "!nat_sup 09" would
		   cause the following error messages:

		      ".../adt_natural.h", line XXXXXX: token not allowed
		      in directive: 09
		      ".../adt_natural.h", line XXXXXX: #error: "ADT_SUP_NAT
		      is incompatible with ADT_BITS_NAT"
		      cc: acomp failed for ...c
		      #327 error in file ``.t'' during type survey phase:
		           survey program is rejected by the C compiler
		           quit

		2) The generated C code could be valid but mistaken by the
		   C compiler. For instance, "!nat_sup 010" would not be
		   interpreted as "!nat_sup 10" but as ""!nat_sup 8", since
		   010 (in octal) means 8.

		From now on, LNT2LOTOS generates C code that always contains
		decimal constants rather than octal ones. The LNT2LOTOS
		Reference Manual was updated to mention that the pragma
		arguments are decimal numbers.
-------------------------------------------------------------------------------
BUG FIX
Number:		2333
Date:		Tue Sep  5 12:30:42 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/libcaesar.a

Nature:		A bug was fixed in the CAESAR_NETWORK_1 library: when
		analyzing the ".gcf" files, the value of the "user" fields
		was not taken into account when comparing directories, so
		that directories having the same name but located in different
		user accounts were considered to be identical. Thus, correct
		".gcf" files could be rejected with an erroneous error message
		such as:
		   main: configuration error - instance #2 (user2@localhost)
		   is identical to instance #1 (user1@localhost)
		   main: CAESAR_CREATE_NETWORK_1 failed
		This issue is now solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2334
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Date:		Wed Sep  6 15:19:01 CEST 2017
Files:		incl/bcg_standard.h, incl_bcg_user.h, incl/caesar_kernel.h,
		incl/caesar_standard.h, incl/caesar_system.h,
		bin.*/exp2c, bin.*/caesar

Nature:		A few BCG and OPEN/CAESAR include files have been modified
		so as to factorize in "caesar_system.h" all architecture-
		dependent and portability-related aspects. This makes these
		include files more readable and easier to maintain. The C
		code generated by EXP.OPEN and by CAESAR has been modified
		accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2335
Date:		Thu Sep  7 17:16:19 CEST 2017
Report:		Frederic Lang (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/com/cadp_indent,
		demos/demo_12/Makefile, demos/demo_12/LOTOS/Makefile,
		demos/demo_19/start, demos/demo_40/demo.svl

Nature:		On Solaris, the ``indent'' command (at least, the version
		shipped as part of Solaris Studio 12.2) has various bugs.
		In particular, it sometimes inserts '\f' (Ctrl-L) characters
		rather than '\n' (Ctrl-M) characters. This error often causes
		problems with CAESAR.ADT, for instance with demo_40:

		   $ caesar.open negotiation.lotos generator _
		   caesar.open: using ``(direct) caesar''
		   caesar.open: calling ``caesar.adt -silent negotiation''
		   caesar.open: calling ``caesar -silent negotiation''
		   "./negotiation.h", line 1472: invalid source character: '#'
		   "./negotiation.h", line 1472: undefined symbol: ifndef
		   "./negotiation.h", line 1472: syntax error before or at:
		   CAESAR_ADT_NO_DIAGNOSIS
		   "./negotiation.h", line 1517: #if-less #endif
		   cc: acomp failed for /tmp/caesar_21009_21133_0.c
		   #138 error in file ``.h'' during type survey:
		        survey program is rejected by the C compiler
		        quit

		The ``cadp_indent'' has been modified to circumvent this
		issue, by replacing all '\f' characters with '\n' characters.
		This change solves many issues with the Solaris ``indent''.
		In particular, it is no longer necessary to invoke CAESAR.ADT
		with its ``-indent'' option in demos 12, 19, and 40.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2336
Date:		Fri Sep  8 12:08:03 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/svl, src/svl/standard, man/*/svl.*

Nature:		From now on, the ``-debug'' option of SVL stops the execution
		as soon as a shell command (e.g., a CADP tool or a Unix
		command) terminates with a non-zero exit status. This enables
		one to detect problems as soon as they occur.
-------------------------------------------------------------------------------
BUG FIX
Number:		2337
Date:		Fri Sep  8 17:57:57 CEST 2017
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/tgv.a

Nature:		Several buffer-overflow errors have been found and removed
		from TGV. For instance, TGV would cause a segmentation error
		when given a test purpose having more than 843,664 states.
		Similar issues would occur with long file names (more than
		1024 characters), long error messages (more than 1024
		characters), or long regular expressions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2338
Date:		Mon Sep 11 12:58:12 CEST 2017
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/tgv.a, man/*/tgv.*, src/eucalyptus/eucalyptus.tcl

Nature:		By default, TGV displayed a lot of information during its
		execution. Unfortunately, the important information (namely,
		warnings and error messages) was difficult to see, as it
		was surrounded with irrelevant information. From now on,
		TGV is silent by default and only displays the most important
		information.

		The former behaviour can be obtained by invoking TGV with a
		new option ``-verbose''. The two former options ``-q'' and
		``-v'' are now deprecated and should no longer be used. The
		TGV manual page and the EUCALYPTUS graphical user interface
		have been updated accordingly.
		
		Also, many warning and error messages of TGV have been changed
		to be more readable or more informative.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2339
Date:		Mon Sep 11 16:37:09 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/tgv.a, src/eucalyptus/eucalyptus.tcl

Nature:		A new option ``-monitor'' has been added to TGV. This option
		enables the user to follow in real time how the test-case
		generation progresses. The EUCALYPTUS graphical user interface
		has been modified to give access to this new option. The
		version number of EUCALYPTUS was set to 2.12.
-------------------------------------------------------------------------------
BUG FIX
Number:		2340
Date:		Tue Sep 12 11:38:09 CEST 2017
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c

Nature:		EXP.OPEN could issue a warning of the following form:
		    WARNING the stochastic label "rate 0.4" is synchronized
		    (this warning may concern other stochastic labels as well)
		even when EXP.OPEN was not called with option ``-rate'',
		although this warning only makes sense with option ``-rate''.
		A similar problem existed for probabilistic labels of the
		form "prob ...", even when EXP.OPEN was not called with
		option ``-prob''. Both problems have been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2341
Date:		Wed Sep 13 14:36:33 CEST 2017
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/tgv.a

Nature:		The ``-verif'' option of TGV could stop abruptly with the
		following error message:
		bcg_edge: previous state are not increasing in BCG_WRITE_EDGE
		leaving the generated test case incomplete. This issue has
		been fixed. The version number of TGV has been set to 1.7.
-------------------------------------------------------------------------------
VERSION 2017-i "Sophia Antipolis"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2342
Date:		Thu Sep 14 11:58:40 CEST 2017
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lpp, man/*/lpp.*

Nature:		From now on, LPP automatically adds the ".lnt" extension
		to its input and output files if this extension is missing.
		For instance, invoking:
		   lpp F
		or
		   lpp F G
		is now equivalent to invoking:
		   lpp F.lnt
		or
		   lpp F.lnt G.lnt
		respectively. This change makes the conventions for invoking
		LPP symmetric with those for invoking LNT2LOTOS. The LPP
		manual page has been updated and its organization has been
		simplified.
-------------------------------------------------------------------------------
BUG FIX
Number:		2343
Date:		Thu Sep 14 16:44:14 CEST 2017
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lpp, man/*/lpp.*, man/*/lnt2lotos.*

Nature:		From now on, LPP checks that the names of its input and output
		files only contain letters, digits, and underscores, and
		forbids all other characters. This avoids unexpected errors
		as such names are later turned into LOTOS identifiers, or
		parts of LOTOS identifiers.

		The LPP manual page has been updated. The LNT2LOTOS manual
		page has also been modified to mention the same constraint
		with respect to filenames.
-------------------------------------------------------------------------------
BUG FIX
Number:		2344
Date:		Wed Sep 15 14:48:39 CEST 2017
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libcaesar.a

Nature:		A bug was fixed regarding the handling of the SIGSEGV signal
		(segmentation violation) in the CAESAR_SET_SIGNALS() and
		CAESAR_RESET_SIGNALS() functions of the OPEN/CAESAR standard
		library.
-------------------------------------------------------------------------------
BUG FIX
Number:		2345
Date:		Thu Sep 16 11:16:26 CEST 2017
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		bin.*/ocis

Nature:		OCIS would fail with a segmentation fault if an error (e.g.,
		an exception raised by the evaluation of abstract data types)
		occurred when firing an initial transition, i.e., a transition
		starting from the initial state. This bug has been fixed.
		Notice that OCIS behaved properly if errors occurred when
		firing non-initial transitions.

		Also, in interactive mode, the OCIS banner is now displayed
		at the very beginning of the execution, before evaluating
		data type constants and firing initial transitions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2346
Date:		Tue Sep 19 15:13:25 CEST 2017
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		A new type pragma "!bits" has been added to the LNT language.
		This pragma indicates the number of bits to be used when
		storing the values of a given type.

		The pragma "!bits N" is equivalent to the former pragma
		"!card -N". The "!card" pragma has been restricted so that
		it no longer accept negative values as arguments. The "!bits"
		pragma, which is more readable, should be used in such case.

		The LNT2LOTOS Reference Manual has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2347
Date:		Thu Sep 21 10:33:58 CEST 2017
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		The LNT language has been enhanced: from now on, the five
		pragma names "comparedby", "implementedby", "iteratedby",
		"printedby", and "representedby" are no longer reserved
		keywords, meaning that it is now permitted to declare LNT
		identifiers having these names. Sections 3.3 and E.2 of the
		LNT2LOTOS Reference Manual have been updated accordingly.

		This makes the LNT language both simpler (less keywords) and
		more coherent (previously, for instance, "comparedby" was a
		reserved keyword, while "nat_bits" was not).

		A consequence of this change is that the LNT2LOTOS parser is
		now stricter. Previously, the parser could remplace a wrong
		pragma by a correct one (e.g., it could replace !implementedby
		with !representedby for a process, or replace !representedby
		with !implementedby for a constructor). From now on, such
		mistakes are fatal errors that are no longer repaired by the
		parser.
-------------------------------------------------------------------------------
BUG FIX
Number:		2348
Date:		Tue Sep 26 18:51:06 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS) and Aymane Bouzafour (Tiempo,
		Montbonnot, France)
Authors:	Hubert Garavel and Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/libevaluator.a, incl/adt_boolean.h,
		incl/adt_character.h, incl/adt_gate.h,
		incl/adt_integer.h, incl/adt_natural.h,
		incl/adt_raw.h, incl/adt_real.h, incl/adt_string.h

Nature:		A bug recently introduced in CADP 2017-i was found. When
		invoking Evaluator 4 with its "-diag" option, the linker
		would complain about multiple definition of certain symbols:

		  ld: fatal: symbol 'bcg_boolean_scan' is multiply-defined:
		  (file .../libevaluator.a(evaluator_extract.o) type=FUNC;
		  file .../libBCG_IO.a(bcg_io_write_bcg.o) type=FUNC);

		  ld: fatal: symbol 'bcg_boolean_write' is multiply-defined:
		  (file .../libevaluator.a(evaluator_extract.o) type=FUNC;
		  file .../libBCG_IO.a(bcg_io_write_bcg.o) type=FUNC);

		  ld: fatal: symbol 'bcg_boolean_read' is multiply-defined:
		  (file .../libevaluator.a(evaluator_extract.o) type=FUNC;
		  file .../libBCG_IO.a(bcg_io_write_bcg.o) type=FUNC);
		  etc.

		This bug, which did not appear when using Evaluator 3 or when
		using Evaluator 4 without its "-diag" option, was fixed in
		CADP 2017-j. It was also hotfixed (i.e., back propagated
		to CADP 2017-i, on October 3, 2017), so that only CADP
		downloads between September 13 and October 3 have this bug.
-------------------------------------------------------------------------------
BUG FIX
Number:		2349
Date:		Wed Oct  4 11:21:21 CEST 2017
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/tgv.a

Nature:		In the source code of TGV, all calls to malloc() are now
		properly followed by a test that checks whether the result
		returned by malloc() is NULL and, if so, displays a proper
		error message. On a few large examples, TGV now exits
		properly rather than halting with a segmentation fault.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2350
Date:		Thu Oct  5 04:38:45 CEST 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos doc/*/Champelovier-Clerc-Garavel-et-al-10.*,
		demos/demo_32/S4.lnt, demos/demo_32/LOTOS/S4.lnt

Nature:		The LNT2LOTOS translator has been enhanced in two ways:

		(1) The algorithm used to compute the gates used by each
		    routine (function or process) has been made more precise.
		    From now on, when a routine is called with the ellipsis
		    notation "...", only the gates actually used in the call
		    are considered. Previously, all gates declared in the
		    current scope were considered. In particular, the new
		    algorithm reduces the number of gates passed to the LOTOS
		    processes implementing LNT loops and continuations.

		(2) LNT2LOTOS now warns about gates that are declared but not
		    used. Such warnings are helpful to detect mistakes and/or
		    to make LNT specifications simpler and more readable.
		    Following the introduction of these warnings, the "S4.lnt"
		    and "S4.lotos" files of demo_32 have been simplified by
		    removing a few useless gates.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2351
Date:		Thu Oct 12 11:39:27 CEST 2017
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		./INSTALLATION_2, ./INSTALLATION_WINDOWS

Nature:		The instructions for installing CADP on Windows have been
		simplified by removing support for Windows XP and Vista,
		both of which are no longer maintained by Microsoft.
------------------------------------------------------------------------------
BUG FIX
Number:		2352
Date:		Fri Oct 13 10:32:44 CEST 2017
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		doc/*/Champelovier-Clerc-Garavel-et-al-10.*,
		ext/a2ps/lnt.ssh, ext/emacs/lnt-mode.el, ext/gtk3/lnt.lang,
		ext/jedit/lnt.xml, ext/latex-listings, ext/nano/lnt.nanorc,
		ext/npp/lnt.xml, xt/vim/lnt.vim

Nature:		The list of LNT keywords in Section 3.3 of the LNT2LOTOS
		Reference Manual has been updated:
		 - The "do" keyword, which was outdated, has been removed.
		 - The "range" keyword, which was missing, has been added.

		The LNT style files for editors have been updated similarly.
		Moreover, the new "!bits" pragma has been added to these
		style files.

		Also, Section 8.6 of the LNT2LOTOS Reference Manual has been
		enriched with explanations on the difference between gates
		and exceptions as regards the actual parameters passed in
		process calls and in the "-root" command-line option.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2353
Date:		Fri Oct 13 12:28:51 CEST 2017
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		ext/a2ps/exp.ssh, ext/a2ps/READ_ME, ext/emacs/cadp.el,
		ext/emacs/exp-mode.el, ext/emacs/READ_ME, ext/gtk3/exp.lang,
		ext/gtk3/READ_ME, ext/jedit/exp.xml, ext/jedit/READ_ME,
		ext/latex-listings/cadp-exp.sty, ext/latex-listings/cadp.sty,
		ext/latex-listings/READ_ME, ext/nano/exp.nanorc,
		ext/nano/READ_ME, ext/npp/exp.xml, ext/npp/READ_ME,
		ext/vim/cadp.vimrc, ext/vim/exp.vim, ext/vim/READ_ME

Nature:		A collection of style files for editors has been added for
		the EXP format of CADP. To benefit from these files, read
		the explanations given in the corresponding READ_ME files.
-------------------------------------------------------------------------------
VERSION 2017-j "Sophia Antipolis"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2354
Date:		Mon Oct 23 14:44:44 CEST 2017
Authors:	Hubert Garavel, Frederic Lang, and Wendelin Serwe (INRIA/
		CONVECS)
Files:		doc/pdf/Garavel-Lang-Serwe-17.pdf, doc/=READ_ME.txt

Nature:		A new paper entitled "From LOTOS to LNT" has been added,
		which presents the historical background and motivation
		underlying the definition of the LNT language.
-------------------------------------------------------------------------------
BUG FIX
Number:		2355
Date:		Tue Oct 31 18:20:40 CET 2017
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.old

Nature:		Two situations where arrays could be accessed with indexes
		out of bounds, possibly leading to memory corruption, have
		been detected and corrected in the error-handling modules of
		CAESAR and CAESAR.ADT.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2356
Date:		Mon Nov  6 10:43:40 CET 2017
Report:		Nazmus Sakib (Utah State University, USA)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		com/tst

Nature:		The TST shell-script has been enhanced so as to display more
		accurate information about Linux distributions (including the
		case of CentOS).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2357
Date:		Mon Nov  6 15:38:39 CET 2017
Author:		Hubert Garavel (INRIA/CONVECS)
File:		incl/X_ACTION.h

Nature:		The definition of the ADT_FBY() macro-definition has been
		enhanced by adding a (void) cast. This suppresses warnings
		emitted by recent versions of GCC.
-------------------------------------------------------------------------------
BUG FIX
Number:		2358
Date:		Tue Nov  7 18:17:27 CET 2017
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/libcaesar_base.a, bin.*/READ_ME, com/caesar.open,
		demos/demo_19/start, demos/demo_38/demo.svl,
		demos/demo_38/LOTOS/demo.svl

Nature:		Following the introduction of functions CAESAR_SET_SIGNALS()
		and CAESAR_RESET_SIGNALS() in the OPEN/CAESAR library (see
		items #2296 and #2298 above), the demos 19 and 38 no longer
		worked on macOS. These demos failed with the following
		error message:

		   duplicate symbol _CAESAR_HINT_ALIGNMENT_STATE in:
		      /var/folders/lm/...
		      $CADP/bin.mac86/libcaesar_plug.a(caesar_plug.o)
		   duplicate symbol _CAESAR_HINT_SIZE_STATE in:
		      /var/folders/lm/...
		      $CADP/bin.mac86/libcaesar_plug.a(caesar_plug.o)
		   ld: 2 duplicate symbols for architecture i386
		   clang: error: linker command failed with exit code 1
		   (use -v to see invocation)

		The problem has been solved by introducing a new library
		named "libcaesar_base.a" that is a minimal subset of
		"libcaesar.a" to be used with EXEC/CAESAR. The two files
		"demo_19/start" and "demo_38/demo.svl" have been updated
		to replace "-lcaesar -lcaesar_plug" with "-lcaesar_base".
-------------------------------------------------------------------------------
BUG FIX
Number:		2359
Date:		Wed Nov  8 11:52:35 CET 2017
Report:		Wendelin Serwe (INRIA/CONVECS)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/libcaesar.a

Nature:		A bug has been found in the CAESAR_NETWORK library. Because
		of this bug, correct ".gcf" files could be incorrectly
		rejected with an error message of the form:

		main: configuration error - instance #10 (localhost:10)
		should not be in a sub-directory of instance #1 (localhost:1)

		This error was due to an incorrect test for checking the
		inclusion of directories (leading to the wrong conclusion
		that "10" is a sub-directory of "1").
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2360
Date:		Wed Nov  8 13:55:07 CET 2017
Report:		Alexander Graf-Brill (Saarland University, Germany),
		Franco Mazzanti (ISTI/CNR, Pisa, Italy), and
		Jan Staunton (University of York, UK)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/arch, com/bcg_open, com/caesar.open, com/contributor,
		com/exp.open, com/installator, com/seq.open, com/tst,
		com/wish, src/com/cadp_cc, src/com/cadp_cpp,
		src/com/cadp_crlf, src/com/cadp_echo, src/com/cadp_edit,
		src/com/cadp_flags, src/com/cadp_hostname,
		src/com/cadp_indent, src/com/cadp_ln, src/com/cadp_mail,
		src/com/cadp_pdf, src/com/cadp_postscript, src/com/cadp_print,
		src/com/cadp_psbox, src/com/cadp_rm, src/com/cadp_shell,
		src/com/cadp_sum, src/com/cadp_web, src/com/cadp_which,
		src/com/cadp_x11, src/com/install_df,
		src/com/install_uncompress, src/com/xeuca,
		src/com/xeuca_convert, src/com/xeuca_info, src/com/xeuca_ps,
		src/com/xeuca_term

Nature:		Preliminary steps have been done to prepare a 64-bit version
		of CADP for Apple computers running macOS:

		- The value returned by "arch -detailed" for such computers
		  has been changed from mac86-64 to mac64. Following this
		  change, many shell scripts of CADP have been updated.

		- Many other shell scripts of CADP have been extended to
		  support architecture "mac64" as well as "mac86".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2361
Date:		Thu Nov  9 18:30:41 CET 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos,
		doc/pdf/Champelovier-Clerc-Garavel-et-al-10.pdf

Nature:		Enhancements of the LNT language recently undertaken (see
		item #2347 above) have been pursued. From now on, "external"
		is no longer a reserved keyword of LNT. As a consequence,
		error messages regarding incorrect pragmas have improved.
		For instance, the following error message
		  [TEST:7] Error : ``%STRING'' is inserted before ``NULL''
		  lnt2lotos: LNT program is syntactically incorrect
		is now more explicit:
		  TEST.lnt:6: error: unsupported function pragma ``!STATIC''
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2362
Date:		Fri Nov 10 19:11:10 CET 2017
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		./INSTALLATION_2, ./INSTALLATION_MACOS, src/com/cadp_indent,
		http://cadp.inria.fr/status.html,
		http://cadp.inria.fr/macOS.html,
		http://cadp.inria.fr/legacy_macOS.html

Nature:		The instructions for installing CADP on Apple computers
		running macOS have been greatly simplified by removing
		support for obsolete versions of macOS, which are no longer
		supported by Apple, i.e.:
		 - Mac OS X 10.6 "Snow Leopard" (end of support: April 2014)
		 - Mac OS X 10.7 "Lion" (end of support: November 2014)
		 - OS X 10.8 "Mountain Lion" (end of support: November 2014)
		 - OS X 10.9 "Mavericks" (end of support: November 2016)

		As a consequence, the file INSTALLATION_MACOS and the Web
		page http://cadp.inria.fr/macOS.html have been drastically
		shortened by removing case distinctions dependent on the
		version of macOS and removing the five annexes A to E. Such
		deleted information has been retained in a legacy page:
		http://cadp.inria.fr/legacy_macOS.html

		Support has also been added for macOS 10.13 "High Sierra"
		(i.e., Darwin 17.0.0). In particular, the "cadp_indent"
		shell script has been modified in similar way to a recent
		change done for Solaris (see item #2335 above) so as to avoid
		a problem with the "indent" command of XCode, which inserts
		"Form Feed" characters where "Line Feed" ones are expected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2363
Date:		Mon Nov 13 10:56:27 CET 2017
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/com/cadp_edit, src/com/cadp_pdf, src/com/cadp_postscript,
		src/com/xeuca_term

Nature:		Several shell scripts used by the EUCALYPTUS user interface
		have been enhanced to better support the various interfaces
		available with Linux distributions (Gnome, MATE, KDE, etc.):

		- On Linux, "cadp_edit" now selects, if the $EDITOR
		  environment is not set, a suitable text editor taken in
		  the list: "pluma", "gedit", "kate", "mousepad", etc.

		- On Linux, "cadp_pdf" and "cadp_postscript" now search
		  for "atril" in addition to "evince".

		- On Linux, "xeuca_term" now invokes x-terminal-emulator
		  (or another similar terminal application) rather than xterm
		  (which may be absent).
-------------------------------------------------------------------------------
VERSION 2017-k "Sophia Antipolis"
-------------------------------------------------------------------------------
BUG FIX
Number:		2364
Date:		Tue Nov 14 10:28:11 CET 2017
Report:		Zhen Zhang (Utah State University, USA)
Author:		Frederic Lang (INRIA/CONVECS)
File:		src/svl/standard

Nature:		Since change #2336 above, when it is called with the -debug
		option, SVL stops the script execution as soon as a command
		returns a non-zero exit status. This caused SVL to stop even
		in cases that could not be considered as errors, namely when
		the ``grep'' command (often used in SVL) terminated correctly
		but returned a non-zero exit status, meaning that the
		searched string was not found. This bug has been solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		2365
Date:		Wed Nov 15 14:54:36 CET 2017
Report:		Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
File:		bin.*/mcl_expand4

Nature:		On a few incorrect ``.mcl'' files, MCL_EXPAND 4 would
		emit the following error message:
		   #006 bug: unexpected case in LOTOS NT function
		   ``MCL_RETRIEVE_Y_DEFINITION''
		This problem, which never occurred on correct ``.mcl'' files
		has been solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2366
Date:		Tue Nov 21 18:42:10 CET 2017
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/xtl_expand

Nature:		The XTL_EXPAND command, which is a preprocessor used by
		EVALUATOR 3, EVALUATOR 4, and XTL for ``.mcl'' and ``.xtl''
		files, has been improved in several respects:

		1) The non-fatal errors, which would not stop the execution,
		   are now displayed as warnings, so that all errors are
		   now fatal (see item #1975 above). For instance, the
		   issue "possibly wrong number of arguments in a macro call"
		   is now a warning rather than a non-fatal error.

		2) By default, XTL_EXPAND now displays more warnings. For
		   instance, the issue "macro definition hides earlier one"
		   is now displayed systematically, whereas it was formerly
		   displayed only if the "-warning" option was specified on
		   the command line.

		3) The syntax of warning and error messages has been
		   normalized with respect to other CADP tools. From now on,
		   the filename and line number are displayed as [%s:%d],
		   rather than [%s : %d] (in French) or [%s: %s] (in English).
-------------------------------------------------------------------------------
BUG FIX
Number:		2367
Date:		Wed Nov 29 16:21:41 CET 2017
Report:		Frederic Lang and Wendelin Serwe (INRIA/CONVECS)
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		com/aldebaran, com/tst, com/upc,
		src/com/cadp_adjust, src/com/cadp_cc, src/com/cadp_indent,
		src/com/cadp_path, src/com/lnt_depend, src/com/xeuca_convert,
		src/com/xeuca_version, src/svl/standard,
		demos/demo_12/demo.svl, demos/demo_12/main.c,
		demos/demo_12/Makefile, demos/demo_12/LOTOS/Makefile,
		demos/demo_12/Tests/order-iso-8730-annex-E-3[.txt],
		demos/demo_12/Tests/order-iso-8730-annex-E-4[.txt]

Nature:		CADP had stopped working properly because of recent changes
		brought to the Cygwin software (around February 2017).
		These changes have modified the semantics of Cygwin pipes,
		which are now opened in binary mode, whereas they were
		previously opened in text mode. In particular, this modified
	 	the behaviour of Cygwin commands ``awk'', ``grep'', and
		``sed'', which no longer eliminate from their input stream
		the '\r' characters (Carriage Return) that may be present.

		To restore a proper functioning, many shell scripts of CADP
		were modified to insert commands, such as "tr -d '\015'",
		that remove undesirable '\r' characters.

		Many minor bugs for CADP on Windows have been fixed:

		- ``cadp_adjust'' now properly handles ``.txt'' files that
		  do not end with a '\n' character (New Line).

 		- On Windows, ``cadp_indent'' no longer attempts to execute
		  post-indentation processing, as the "mv" command seems
		  to cause intermittent errors of the form:
		     mv: cannot move 'F.h.BAK' to 'F.h': Device or
		     resource busy
		  both when Cygwin is in C:\ and when it is installed
		  elsewhere.

		- ``cadp_path'' invoked with option -check_cygwin_link or
		   -make_cygwin_link could emit a spurious error message:
		      cadp_path: line 644: [: =: unary operator expected
		      *** Symbolic link ``'' does not exist
		      ==> Create it as a symbolic link to ``C:''
		    when Cygwin was installed in "C:\" and CADP in
		    "C:/cadp".

		- In demo_12, the ``main.c'' file was modified because of
		  a problem occurring when calling sscanf() with format
		  "%2hhx". Windows-specific code has been added to avoid
		  that problem.

		- In demo_12, an erroneous comment was corrected (by
		  replacing 8411251D with FDA371B8) in both ``Makefile''
		  and ``LOTOS/Makefile''.

		- In demo_12, both files Tests/order-iso-8730-annex-E-3.txt
		  and Tests/order-iso-8730-annex-E-4.txt, so as to prevent
		  ``cadp_adjust'' from modifying the contents of these
		  files by inserting '\r' characters on Windows. The two
		  Makefiles have been modified accordingly.

		Additionally, the TST script now displays information to
		tell whether the Cygwin filesystems are mounted in text
		or binary mode.

		After applying all these changes, we verified that CADP
		works properly on Windows 10 with a recent Cygwin version
		and GCC 6.4.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2368
Date:		Sat Dec  2 12:13:06 CET 2017
Authors:	Hubert Garavel and Radu Mateescu (INRIA/CONVECS)
Files:		src/xtl/walk.xtl, src/xtl/walk_print_basic.xtl,
		demos/demo_14/macros_v4.mcl, demos/demo_14/demo.svl,
		demos/demo_25/demo.svl, demos/demo_27/demo.svl

Nature:		Following the change that makes XTL_EXPAND emit more warnings
		(see item #2366 above), some predefined XTL libraries and
		CADP demos have been modified in order to avoid or remove
		all warnings:

		1) The ``walk.xtl'' library has been modified to remove
		   seven macro-definitions:
		      WALK__PRINT_EDGE
		      WALK__PRINT_STATE
		      WALK__PRINT_LOOP
		      WALK__PRINT_FOUND
		      WALK__PRINT_NOTFOUND
		      WALK__PRINT_DEADLOCK
		      WALK__PRINT_NONDTM
		   and a new library ``walk_print_basic.xtl'' has been
		   added to include these macros when needed. So doing,
		   one avoids warnings of the following form:

		      #035 warning: macro definition ``WALK__PRINT_EDGE''
		           [walk_print_nice.xtl:29] hides earlier one
		      #035 warning: macro definition ``WALK__PRINT_STATE''
		           [walk_print_nice.xtl:40] hides earlier one
		      #035 warning: macro definition ``WALK__PRINT_LOOP''
		           [walk_print_nice.xtl:50] hides earlier one
		      etc.

		   when library ``walk_print_nice.xtl'' is used. Such
		   warnings no longer occur with demos 25 and 27.

		2) A few MCL formulas contained in file ``demo.svl'' of
		   demo_14 have been modified to avoid warnings of the form:

		      #011 warning during syntax analysis phase:
                           obsolete construct ``@ ( R ) [...]'',
		           please use ``< R > @'' instead

		3) In demo_14, the macro Signal (Subscriber, Tone) has been
		   renamed to SignalAny (Subscriber, Tone) so as to avoid
		   warnings of the form:

		      #018 error: possibly wrong number of arguments
		           in the call of macro ``Signal''
-------------------------------------------------------------------------------
BUG FIX
Number:		2369
Date:		Mon Dec  4 15:20:00 CET 2017
Report:		Anne-Lise Courbis (Ecole des Mines, Ales, France)
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		cadp_cygwin.com, com/tst, INSTALLATION_WINDOWS

Nature:		The prior changes brought for CADP on Windows to support the
		case where Cygwin is not installed in "C:\", but either in
		"C:\Cygwin" or in "C:\Cygwin64" (see item #2257 above) were
		not totally sufficient. For instance, the LPP preprocessor
		would sometimes abort with the following error message:
		   lpp: could not create directory ``/tmp/lnt.2228''

		To address this issue, the script ``cadp_cygwin.com'' now
		creates in "C:\" a series of symbolic links pointing to
		the path where Cygwin installs its /bin, /dev, /etc, /home,
		/lib, /sbin, /tmp, /usr, and /var directories. Such
		symbolic links only exist on versions of Windows more
		recent than Windows Vista.

		Similarly, the TST script checks that, when Cygwin is not
		installed in "C:\", these symbolic links duly exist.

		The INSTALLATION_WINDOWS file has been significantly revised:
		 - The instructions for uninstalling Cygwin now mention
		   the new symbolic links created by cadp_cygwin.com.
		 - Discussions on de-installing obsolete versions of
		   Cygwin have been removed.
		 - At many places, occurrences of "C:\" have been replaced
		   by $CYGROOT, a variable denoting the directory in which
		   Cygwin is actually installed.
		 - Orthographic and indentation mistakes have been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2370
Date:		Tue Dec  5 17:56:27 CET 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		bin.x64/bcg_min.old

Nature:		On architecture x64 (i.e., 64-bit Linux), the old version
		of BCG_MIN 1.x, which is still present in CADP as a means
		to provide redundancy, did not work. It immediately stopped
		with the following error message;

		   bcg_min: invalid previous block (internal error #1)

		This problem has been fixed. The version number of BCG_MIN
		and other BCG tools and libraries has been advanced from
		1.7 to 1.8.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2371
Date:		Wed Dec  6 12:43:34 CET 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
File:		bin.*/mcl_expand4

Nature:		The warning and error messages displayed by the MCL_EXPAND 4
		preprocessor, which is invoked by EVALUATOR 4, have been
		enhanced in several respects:

		1) Certain messages have been improved, either by making
		   certain acronyms explicit (e.g., PNF for "Positive Normal
	           Form") or by making their text more informative.

		2) In lexical, syntactic, and semantic error messages, the
		   line numbers given were sometimes incorrect, and have
		   been replaced by accurate line numbers.

		3) Also, the syntax of warning and error messages has been
		   normalized in the same way as described in paragraph 3)
		   of item #2366 above.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2372
Date:		Thu Dec  7 11:57:46 CET 2017
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		incl/caesar_system.h, bin.*/libcaesar.a, bin.*/bcg_merge

Nature:		The CAESAR_NETWORK_1 library, which is a component of the
		OPEN/CAESAR library, has been made simpler by removing
		certain type definitions from its interface and particular
		cases from its implementation code. Such changes have been
		triggered by the wish to support the CLANG compiler, which
		is needed for porting of CADP to the 64-bit macOS operating
		system.

		Following these changes, the code of BCG_MERGE has been
		adapted to include certain code fragments removed from the
		CAESAR_NETWORK_1 library and only used by BCG_MERGE.
-------------------------------------------------------------------------------
VERSION 2017-l "Sophia Antipolis"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2373
Date:		Wed Dec 20 12:04:31 CET 2017
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/bcg_merge

Nature:		From now on, BCG_MERGE writes its error messages to stdout
		(like the other CADP tools) rather than to stderr. Also,
		some non-intuitive error messages have been made more
		informative.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2374
Date:		Wed Dec 20 14:28:26 CET 2017
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl. com/svl, man/*/svl.*

Nature:		A new option "-v" has been added to SVL. This option, which
		is similar to "awk" or "make", enables one to set SVL
		variables from the command line, e.g.,
		   svl -v REDUCTOR_OPTIONS="-monitor" ...
		The SVL manual page has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2375
Date:		Wed Dec 20 17:21:59 CET 2017
Authors:	Wendelin Serwe, Frederic Lang, and Hubert Garavel (INRIA/
		CONVECS)
Files:		./INSTALLATION_1, ./INSTALLATION_4, com/tst

Nature:		The installation files now clearly specify that, on Windows,
		the CADP tools should be executed in a directory located on
		drive C when CADP is installed in "C:/cadp". The TST shell
		script now checks this condition and emits a warning if it
		is not satisfied.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2376
Date:		Wed Dec 20 17:55:09 CET 2017
Report: 	Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		com/arch, com/installator, com/rfl, com/tst,
		src/com/cadp_adjust, src/com/cadp_cc, src/com/cadp_cpp,
		src/com/cadp_crlf, src/com/cadp_edit, src/com/cadp_indent,
		src/com/cadp_ln, src/com/cadp_path, src/com/cadp_rm,
		src/com/cadp_shell, src/com/cadp_which, src/com/install_df,
		src/com/xeuca_info, src/com/xeuca_ps, src/com/xeuca_term

Nature:		Some preliminary steps have been made towards a 64-bit
		version of CADP for Windows. From now on, the result of
		"$CADP/com/arch -detailed" on a 64-bit processor running
		Windows is no longer "win32-cygnus", but "win64-cygnus".
		Many shell scripts have been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2377
Date:		Thu Dec 21 11:09:50 CET 2017
Author:		Lian Apostol (INRIA/CONVECS)
File:		src/com/cadp_postscript

Nature:		On Windows with Cygwin not installed in C:/, the script
		"cadp_postscript" did not launch a PostScript viewer, as
		it did not find a proper path to the Evince command.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2378
Date:		Wed Jan  3 10:54:15 CET 2018
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		incl/X_*.h

Nature:		The include files located in "incl/X_*.h" have been enhanced
		in two ways:

		- A header (with version numbers and modification times)
		  has been added to each of these files.

		- The three files "X_INTEGER.h", "X_NATURAL.h", and
		  "X_STRING.h" have bee shortened by removing old-style
		  prototypes for the following functions:
		     ADT_CHECKED_INT(), ADT_CHECKED_NAT(), ADT_GCD_NAT(),
		     ADT_CONCAT_STRING(), ADT_ISEMPTY_STRING(),
		     ADT_PREFIX_STRING(), ADT_SUFFIX_STRING(),
		     ADT_SUBSTR_STRING(), ADT_NTH_STRING(),
		     ADT_INDEX_STRING(), ADT_RINDEX_STRING(),
		     ADT_TO_STRING_NAT(), ADT_TO_STRING_INT(),
		     ADT_TO_STRING_CHAR(), ADT_TO_STRING_REAL()
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2379
Date:		Wed Jan 10 10:36:59 CET 2018
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		./INSTALLATION_2, ./INSTALLATION_WINDOWS, com/contributor,
		com/installator, com/tst, com/xeuca, src/com/cadp_windows

Nature:		Because "cadp_cygwin.com" now creates a symbolic link
		"C:/tmp" when Cygwin is not installed in C:/ (see item
		#2369 above), the directory "/tmp" always exists on Windows.
		Consequently, the code of CADP on Windows has been simplified
		by undoing changes done in November 2016 (see item #2257
		above), namely:

		- From now on, the default value of $CADP_TMP is /tmp
		  (this value is no longer the result of "cadp_path -tmp").

		- The installation guidelines of CADP have been updated
		  accordingly and enhanced at various places.

		- The CONTRIBUTOR, INSTALLATOR, TST, and XEUCA shell scripts
		  have been modified to use /tmp rather than "cadp_path -tmp".
		
		Also, the "cadp_windows" file, which had been deprecated
		since 2012, has been removed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2380
Date:		Wed Jan 10 18:02:37 CET 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		com/tst

Nature:		The TST shell script now displays information about:
		- virtualization, if CADP is run in a virtual machine,
		- the semantics of Cygwin pipes ("text-mode" in older
		  versions of Cygwin vs "binary-mode" in recent versions).
-------------------------------------------------------------------------------
BUG FIX
Number:		2381
Date:		Fri Jan 12 17:43:52 CET 2018
Report:		Anne-Lise Courbis (Ecole des Mines d'Ales, France) and
		Lian Apostol (INRIA/CONVECS)
Authors:	Hubert Garavel and Lian Apostol (INRIA/CONVECS)
Files:		src/com/cadp_chmod, src/installator/installator.tcl

Nature:		On Windows with Cygwin not installed in C:/, Installator
		would give incorrect file permissions to the CADP files
		downloaded and installed on the user machines (i.e., most
		likely in C:/cadp). Because these files did not have read
		nor execute permissions, the prototype license file prepared
		by RFL were incomplete; moreover, all files (e.g., the
		INSTALLATION* files) could not be read by the user.

		After investigation, it appeared that the problem was caused
		by Cygwin's "chmod" command not working properly (or, at
		least, not intuitively). In a nutshell, "chmod" has no effect
		when it is invoked on a file "c:/dir/file" whereas it works
		as expected when invoked on a file "/cygdrive/c/dir/file".

		A new auxiliary shell-script "cadp_chmod" has been introduced
		to replace "c:/" by "/cygdrive/c/" before invoking "chmod",
		and INSTALLATOR has been modified to invoke "cadp_chmod"
		rather than "chmod".
-------------------------------------------------------------------------------
BUG FIX
Number:		2382
Date:		Fri Jan 12 18:50:02 CET 2018
Author:		Lian Apostol (INRIA/CONVECS)
Files:		com/tst

Nature:		On Windows, the TST shell-script could emit "false positive"
		warnings of the following form:
		   *** Your version of Cygwin is obsolete (bug #3)
		This problem has been fixed.
-------------------------------------------------------------------------------
VERSION 2018-a "Uppsala"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2383
Date:		Mon Jan 15 15:55:14 CET 2018
Authors:	Frederic Lang (INRIA/CONVECS) and Holger Hermanns (Saarland
		University, Germany)
Files:		bin.*/bcg_steady, bin.*/bcg_transient

Nature:		When invoked on a Continuous-Time Markov Chain having only
		one state (e.g., a single state with a single loop "rate 1"),
		BCG_STEADY and BCG_TRANSIENT stopped abruptly with the
		following message:
		   bcg_steady: empty generator matrix
		or
		   bcg_transient: empty generator matrix

		BCG_STEADY and BCG_TRANSIENT have been extended to handle
		single-state Markov chains and to properly compute state
		solution vectors and transition throughputs on such models.
-------------------------------------------------------------------------------
BUG FIX
Number:		2384
Date:		Thu Jan 18 11:07:37 CET 2018
Report:		Lian Apostol (INRIA/CONVECS)
Authors:	Hubert Garavel and Lian Apostol (INRIA/CONVECS)
File:		src/installator/installator.tcl, installator.shar

Nature:		A bug had been introduced in Installator since CADP 2018-a.
		On all architectures, in the "Setting permissions" window
		of Installator, the following error messages would appear:
			Error while executing chmod
			Error while executing chmod
		and the file permissions were not set properly. Consequently,
		the prototype license file sent by Installator was incomplete
		and could not be processed. This problem was hotfixed on
		January 18, 2018.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2385
Date:		Mon Jan 22 10:26:17 CET 2018
Report:		Lian Apostol (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		http://cadp.inria.fr/installator/index.html

Nature:		The CADP installator web page has been updated to recommend
		erasing "installator.shar" before downloading a new copy.
		Indeed, the "wget" command does not erase the existing
		"installator.shar" file, but rather creates files named
		"installator.shar.1", "installator.shar.2", etc. This
		could be confusing to users, who would not benefit from
		the latest version of "installator.shar".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2386
Date:		Mon Jan 22 14:52:24 CET 2018
Report:		Soren Enevoldsen (Aalborg University, Denmark)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		man/*/caesar_standard.*, doc/*/Garavel-92-*

Nature:		The OPEN/CAESAR documentation and manual pages have been
		enhanced by adding prototypes for function parameters.
		Indeed, the absence of prototypes could be ambiguous, as
		occcurrences of "()" in function definitions were sometimes
		misunderstood as "(void)". Full prototypes are now specified
		for:

		- The CAESAR_LOOP() function that is a function parameter of
		  CAESAR_ITERATE_STATE() in the "caesar_standard" library;

		- The CAESAR_SUBCACHE_ORDER() and CAESAR_SUBCACHE_CHILD()
		  function parameters of CAESAR_CREATE_CACHE_1() in the
		  "caesar_cache_1" library;

		- The CAESAR_VARIABLE_ITERATE() function parameter of
		  CAESAR_CREATE_SOLVE_1(), the CAESAR_LOOP() function
		  parameter of CAESAR_ITERATE_STABLE_VARIABLE_SOLVE_1(),
		  and the CAESAR_LOOP() function parameter of
		  CAESAR_ITERATE_DIAGNOSTIC_SOLVE_1() in the
		  "caesar_solve_1" library.
-------------------------------------------------------------------------------
BUG FIX
Number:		2387
Date:		Tue Jan 23 10:46:48 CET 2018
Report;		Lian Apostol (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/com/cadp_adjust, src/com/cadp_path

Nature:		Further changes have been made to enable CADP to work
		smoothly on Windows when Cygwin is not installed in "C:/":

		- The "cadp_adjust" shell script was modified to avoid a
		  spurious warning that could be seen in Installator:
		     *** /cadp/new.2018-a exists but is not a symbolic link
		     ==> replace it by a symbolic link to C:/cadp/new.2018-a

		- The "-check_default_tmp" option of the "cadp_path" shell
		  script was modified to avoid a spurious warning that
		  occurred when running TST:
		     Variable ``$CADP_TMP'' is not set (default value is
		     ``/tmp'')
		     *** The existence of directory ``C:/tmp'' is likely to
		     cause trouble
		     ==> Remove this directory  or set variable ``$CADP_TMP''
		     explicitly
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2388
Date:		Fri Jan 26 08:54:52 CET 2018
Authors:	Radu Mateescu and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/evaluator.a, bin.*/mcl_expand, bin.*/mcl_expand4

Nature:		Two issues have been fixed in the EVALUATOR model checker:

		- When invoked on an empty ".mcl" file (or a non-empty
		  ".mcl" file that expands to an empty ".xm" file after
		  being pre-processed using XTL_EXPAND), MCL_EXPAND 3
		  and MCL_EXPAND 4 would emit a syntax error message
		  mentioning the intermediate ".xm" file (which the user
		  is not aware of) rather than the source ".mcl" file.

		- When called with its "-verbose" option on a file "F.mcl",
		  the progress messages displayed by EVALUATOR 3 would refer
		  to "F.xm" rather than "F" or "F.mcl".

		More generally, following deep changes brought to the
		internals of the SYNTAX compiler generator, MCL_EXPAND 3
		and MCL_EXPAND 4 have been enhanced to display line numbers
		belonging to the source ".mcl" file rather than to the
		intermediate ".xm" file generated by XTL_EXPAND.

		Consequently, the warning and error messages emitted by
		MCL_EXPAND 3 and 4 for syntax errors, and the semantic
		error messages emitted by EVALUATOR are easier to understand,
		as they now refer to the original lines of the ".mcl" file
		rather than lines of the ".xm" file, from which comments
		have been removed and in which macro-definitions have been
		expanded. These are examples of such changes:
		
		before:
		   [TEST.xm:52] Warning: The invalid character "|" is deleted
		after:
		   [TEST.mcl:39] Warning: The invalid character "|" is deleted

		before:
		   ambiguous call of function ``<>'' [TEST.xm:107]
		after:
		   ambiguous call of function ``<>'' [TEST.mcl:74]
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2389
Date:		Tue Jan 30 11:53:03 CET 2018
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		bin.*/bcg_steady, bin.*/bcg_transient,
		man/*/bcg_steady.*, man/*/bcg_transient.*

Nature:		The command-line options of BCG_STEADY and BCG_TRANSIENT
		have been simplified. Previously, the "-thr" option was
		always selected and could not be disabled (more precisely,
		"-thr -" was selected by default unless "-thr file" was
		explicitly selected). From now on, option "-thr -" is
		selected by default unless at least one of the following
		options "-mat", "-red", "-sol", or "-thr" is explicitly
		selected. This change is not backward compatible, but
		is expected to have a low impact for CADP users. The
		manual pages have been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2390
Date:		Tue Jan 30 15:03:49 CET 2018
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		In the warning and error messages emitted by LNT2LOTOS for
		lexical and syntactic problems, the line numbers are now
		more precise. For instance, if there is a syntax error
		with a "loop" or "par" behaviour, LNT2LOTOS now gives
		the line number corresponding to the "loop" or "par"
		keyword; previously, LNT2LOTOS gave the line number of
		the "end loop" or "end par" keyword.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2391
Date:		Wed Jan 31 14:30:01 CET 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/bcg_steady, bin.*/bcg_transient

Nature:		BCG_TRANSIENT and BCG_STEADY now warn the user when the
		"-thr" option is selected (explicitly or by default) and
		the input BCG graph does not contain (either initially or
		after applying maximal progress) any stochastic transition
		having a label of the form "label; rate %f". In such case,
		the following warning is now emitted:

		   option -thr is ignored as no transition is tagged with
		   a label

		Previously, in this situation, BCG_STEADY and BCG_STEADY
		would print a line of the following form:
		   throughput measures:
		not followed by throughput values, which was disconcerting.

		Additionally, the error and warning messages printed by
		BCG_STEADY and BCG_TRANSIENT were not uniform, and have
		been modified to follow the same conventions as for the
		other tools of CADP.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2392
Date:		Fri Feb  2 09:18:28 CET 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/mcl_expand, bin.*/mcl_expand4

Nature:		MCL_EXPAND 3 and 4 now use less memory when parsing ".mcl"
		files, due to the replacement of many calls to strdup() by
		calls to the sxstrget() function of the SYNTAX compiler
		generator.
-------------------------------------------------------------------------------
BUG FIX
Number:		2393
Date:		Mon Feb  5 17:33:13 CET 2018
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/bcg_steady, bin.*/bcg_transient

Nature:		On some Markov models containing probabilistic transitions,
		BCG_STEADY and BCG_TRANSIENT could stop with the following
		error message:

		    sum of probabilities from state 1 greater than 1

		although the sum of probabilities was never greater than 1 in
		any state. For instance, this would occur on the following
		model (given in ".aut" format):

		   des (0, 6, 5)
		   (0, "prob 0.8", 1)
		   (0, "prob 0.2", 2)
		   (1, "rate 1", 3)
		   (2, "rate 2", 4)
		   (3, "rate 1", 1)
		   (4, "rate 2", 2)

		This problem was due to a floating-point conversion and
		rounding errors, which have been corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		2394
Date:		Thu Feb  6 16:32:38 CET 2018
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/evaluator.a

Nature:		When the EVALUATOR 3 model checker was invoked on an erroneous
		file "f.mcl", it did not remove the intermediate file "f.xm"
		created by the XTL_EXPAND preprocessor. This bug was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2395
Date:		Wed Feb  7 17:43:54 CET 2018
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/bcg_steady, bin.*/bcg_transient,
		man/*/bcg_steady.*, man/*/bcg_transient.*

Nature:		In BCG_STEADY and BCG_TRANSIENT, two different notions
		coexisted: state numbers (ranging from 0 to N), and vector
		or matrix indexes (ranging from 1 to N+1). Although this was
		properly documented in the manual page, the output of options
		"-sol", "-mat", and "-red" was not straightforward for
		humans, because users had to convert matrix indexes to state
		numbers and vice versa.

		Worse, in some error messages, there was a confusion between
		state numbers and matrix indexes. For instance in the
		following message:

		    cycle of vanishing states detected in the transition
		    system; this cycle involves states 4 and 2

		the cycle actually involved states 3 and 1; in the following
		message:

		    sum of probabilities from state 5 greater than 1

		the error actually concerned state 4.

		From now on, vectors and matrices are indexed by state
		numbers, so that no confusion is possible any more. This
		means that every vector or matrix index is now decremented
		when displayed to the user.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2396
Date:		Thu Feb  8 15:01:31 CET 2018
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/bcg_steady, bin.*/bcg_transient,
		man/*/bcg_steady.*, man/*/bcg_transient.*

Nature:		BCG_STEADY and BCG_TRANSIENT reject input models that
		contain circuits of probabilistic transitions, because
		such circuits represent ``time lock'' situations. However,
		BCG_STEADY and BCG_TRANSIENT handled differently the
		particular case of probabilistic loops, i.e., the presence
		of at least one transition having the same source and target
		state and whose label has either the form "prob %p" or
		"label; prob %p". Such loops were just taken into account
		for maximal progress, and then silently ignored.

		From now on, BCG_STEADY and BCG_TRANSIENT forbid probabilistic
		loops as well as longer circuits of probabilistic transitions.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2397
Date:		Thu Feb  8 18:03:10 CET 2018
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/distributor.a

Nature:		From now on, Distributor triggers a distributed termination
		of all computing nodes when a state table overflows on a
		particular computing node. This way, termination occurs as
		soon as an overflow error occurs, and a proper error message
		is written in the trace file of the node on which overflow
		occurred.
-------------------------------------------------------------------------------
BUG FIX
Number:		2398
Date:		Fri Feb  9 16:47:30 CET 2018
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/mcl_expand, bin.*/mcl_expand4, bin.*/evaluator.a

Nature:		The error messages emitted by the EVALUATOR model checker
		have been improved in two ways:

		- A bug was fixed in EVALUATOR 3, which invoked XTL_EXPAND
		  with an incorrect option "-nocontrol", leading to wrong
		  line numbers.

		- EVALUATOR 3 also issued error messages with incorrect
		  line numbers when the input file contained inclusion
		  directives "library ... end_library".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2399
Date:		Fri Feb  9 18:12:17 CET 2018
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/distributor.a

Nature:		Previously, the ".log" files generated when running the
		Distributor tool were called "distributor-N.log", where N
		was the number of the computing node. This convention had
		the following drawback: any invocation of Distributor would
		erase the log files generated by the previous invocation,
		even if Distributor had been invoked in the same directory
		but on a different specification. In particular, this was
		a problem for ".pbg" files, which gather both ".bcg" and
		".log" files.

		From now on, the ".log" files generated by Distributor follow
		the same naming conventions as the ".bcg" fragments also
		generated by Distributor: when Distributor is invoked on a
		specification SPEC, the ".log" files are named "SPEC-N.log"
		(the BCG fragments being named "SPEC-N.bcg").
-------------------------------------------------------------------------------
VERSION 2018-b "Uppsala"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2400
Date:		Wed Feb 14 15:54:13 CET 2018
Report:         Alexander Graf-Brill (Saarland University, Germany),
                Franco Mazzanti (ISTI/CNR, Pisa, Italy), and
                Jan Staunton (University of York, UK)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		INSTALLATION_2, INSTALLATION_4, INSTALLATION_MACOS,
		com/arch, bin.mac64/*, gc/bin.mac4/libgc.a,
		incl/caesar_system.h, src/com/cadp_cc,
		tcl-tk/bin.mac64/duplex, tcl-tk/bin.mac64/libTix8.4.2.dylib,
		tcl-tk/bin.mac64/libtcl8.4.dylib, tcl-tk/bin.mac64/wish,
		tcl-tk/bin.mac64/libtk8.4.dylib, tcl-tk/bin.mac64/pkgIndex.tcl
		tcl-tk/lib-tk/listbox.tcl, tcl-tk/lib-tk/tk.tcl,
		tcl-tk/lib-tk/text.tcl,

Nature:		The migration work undertaken in November 2017 (see item #2360
		above) and pursued in the background during the next months
		has been completed: there is now a 64-bit version of CADP
		for macOS (in addition to the already existing 32-bit version).
		
		The new architecture is named "mac64" and is systematically
		proposed by Installator. If both the 32-bit ("mac86") and
		64-bit ("mac64") are installed on the same machine, the
		latter is now used by default, unless the environment
		variable $CADP_BITS has been set to 32.

		Notice that three files ("listbox.tcl", "tk.tcl", and
		"text.tcl") of the TK distribution have been modified to
		properly handle the case of the MouseWheel event, which
		does not seem to exist on macOS/XQuartz.
-------------------------------------------------------------------------------
BUG FIX
Number:		2401
Date:		Wed Feb 14 16:55:03 CET 2018
Report:		Lian Apostol (INRIA/CONVECS)
Authors:	Hubert Garavel and Lian Apostol (INRIA/CONVECS)
File:		com/installator

Nature:		On Windows/Cygwin, Installator tried to check that it was
		run with administrator privilege, but the detection was
		not properly done. It was therefore possible to launch
		Installator as a normal user, and Installator would later
		fail during its execution. Three modifications have been
		applied:

		1) The "installator" shell script no longer checks the
		   presence of the directory /Users/Default because this
		   test was not relevant on the recent versions of Windows,
		   and because it did not work if Cygwin was not installed
		   in C:/.

		2) The "installator" shell script no longer invokes the
		   "check_lock.exe" program to check whether it runs with
		   administrateur privilege, as this test was found not to
		   work on Windows 7 or higher.

		3) The "installator" shell script now examines the Cygwin
		   groups to check whether it is run with administrator
		   privilege.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2402
Date:		Wed Feb 14 17:43:54 CET 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Lian Apostol (INRIA/CONVECS)
File:		cadp_cygwin.com

Nature:		The "cadp_cygwin.com" shell script now checks, by examining
		the Cygwin groups, whether it is run with administrator
		privilege, and stops immediately if it is not the case.
		Previously, "cadp_cygwin.com" did not perform such a check
		and, if launched without administrator privilege, displayed
		repeated error messages of the following form:
		     You do not have sufficient privilege to perform
		     this operation
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2403
Date:		Thu Feb 15 12:52:17 CET 2018
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/ocis.a, src/com/cadp_path

Nature:		Following item #2379, OCIS has been modified as follows:
		if the environment variable $CADP_TMP is not defined, it
		is no longer set by default to `$CADP/src/com/cadp_path -tmp`
		but to "/tmp". This change is mostly intended to the Windows
		version of OCIS.

		Consequently, the "-tmp" option, which was no longer useful,
		has been removed from the "cadp_path" script.
-------------------------------------------------------------------------------
BUG FIX
Number:		2404
Date:		Mon Feb 19 10:53:03 CET 2018
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		A bug was fixed in CAESAR.BDD: in the output produced by
		the "-mcc" option, the Boolean value of HasModelNestedUnits
		could be incorrect. More precisely, the "-mcc" option could
		generate as output:
		   \newcommand\HasModelNestedUnits[0]{\False}
		rather than:
		   \newcommand\HasModelNestedUnits[0]{\True}
		Such errors were very rare (they were observed only on
		three examples out of 8000+) and only occurred on certain
		architectures (e.g., on "sol64" and "x64" but neither on
		"sol86" nor "iX86").
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2405
Date:		Tue Feb 27 18:21:51 CET 2018
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		READ_ME, gc/bin.*/libgc.a, gc/READ_ME

Nature:		The GC garbage collector library invoked by the "-gc" option
		of CAESAR was upgraded from version 6.8 to version 7.6.4.

		The new version was found to work better on Solaris. It was
		tested on 11600+ LOTOS specifications using dynamically
		allocated data types: the old version 6.8 caused 21 (resp.
		24) segmentation faults on 32-bit (resp. 64-bit) Solaris,
		which are all corrected using the new version.

		Under Linux and Windows, no problem was found using either
		the old or the new version.
-------------------------------------------------------------------------------
BUG FIX
Number:		2406
Date:		Sun Mar 11 10:26:49 CET 2018
Report:		Hugues Evrard (Imperial College, London, UK)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		On 64-bit Linux ("x64" architecture), CAESAR would run
		forever when invoked with options "-exec -external", e.g.:
			caesar -exec -external spec.lotos
		This problem, which only occurred on architecture "x64", has
		been fixed. It was caused by writing, using  fprintf(), on a
		wrong file descriptor, which has been opened and closed.
-------------------------------------------------------------------------------
VERSION 2018-c "Uppsala"
-------------------------------------------------------------------------------
BUG FIX
Number:		2407
Date:		Fri Mar 30 16:09:39 CEST 2018
Authors:	Radu Mateescu and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/mcl_expand, bin.*/mcl_expand4

Nature:		In 2018, the error and warning messages of MCL_EXPAND and
		MCL_EXPAND v4 have been enhanced (see item #2388 above).

		However, these changes did introduce a few problems in
		corner cases, especially when there is a "library" clause
		occurring in the middle of a (syntactically or semantically)
		incorrect MCL formula. In such case, the file and line
		number mentioned in the error message could be incorrect
		due to the file inclusion triggered by the "library" clause.

		There was no problem if the MCL formula was correct or if
		the "library" clauses occurred at the beginning of the
		".mcl" file.

		This issue has been fixed by modifying the code of the
		SYNTAX compiler generator. Also, the aspects of messages
		emitted for syntax errors and semantic errors have been
		aligned.
------------------------------------------------------------------------------
IMPROVEMENT
Number:		2408
Date:		Fri Apr  7 11:22:03 CEST 2018
Authors:	Radu Mateescu and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/xtl, bin.*/xtl_expand, man/*/xtl.*

Nature:		A new option "-source F:L", where F is a file name and L
		a line number, has been added to XTL and to the XTL_EXPAND
		preprocessor (which is also used by EVALUATOR 3 and
		EVALUATOR 4).

		When present, this option modifies the file names and line
		numbers displayed in the error and warning messages emitted
		by XTL, as if XTL code being compiled was located at line L
		of file F rather than starting at line 1 of the actual ".xtl"
		file. This option only modifies the messages triggered by
		errors occurring in the top-level ".xtl" file; the messages
		triggered by errors present in included XTL libraries (if
		any) are kept unchanged. To implement this option, it was
		necessary to modify the SYNTAX compiler generator.

		The XTL manual page has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2409
Date:		Mon Apr 23 14:53:47 CEST 2018
Authors:	Radu Mateescu and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/evaluator.a, bin.*/evaluator4.a,
		man/*/evaluator.*, man/*/evaluator4.*

Nature:		A new option "-source F:L", where F is a file name and L a
		line number, has been added to EVALUATOR 3 and EVALUATOR 4.

		This option has the same behaviour as the "-source" option
		of XTL (see item #2408 above), the sole difference being
		that it applies to ".mcl" files rather than ".xtl" ones.

		The EVALUATOR 3 and EVALUATOR 4 manual pages have been updated
		accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2410
Date:		Wed Apr 25 11:04:21 CEST 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, src/svl/standard

Nature:		SVL now invokes EVALUATOR 3, EVALUATOR 4, and XTL with the
		new "-source" option, so that error and warning messages
		regarding temporal logic formulas now display line numbers
		in the SVL file itself, rather than in the temporary files
		generated to contain the temporal logic formulas. This will
		make it easier for users to modify incorrect MCL and XTL
		formulas contained in SVL files.

		Note: in fact, SVL has been invoking EVALUATOR 3, EVALUATOR 4,
		and XTL with the "-source" option since CADP 2018-a but, so
		far, these tools were silently ignoring the "-source" option.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2411
Date:		Thu Apr 26 15:41:40 CEST 2018
Authors:	Hubert Garavel and Lina Marsso (INRIA/CONVECS)
Files:		demos/demo_12/=READ_ME.txt,
		demos/demo_12/doc/Garavel-Marsso-18.pdf

Nature:		A new publication has been added, which documents the LNT
		and LOTOS specifications of demo_12 (i.e., the Message
		Authenticator Algorithm).
-------------------------------------------------------------------------------
VERSION 2018-d "Uppsala"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2412
Date:		Wed May 16 11:22:51 CEST 2018
Authors:	Hubert Garavel, Radu Mateescu, and Frederic Lang (INRIA/
		CONVECS)
Files:		bin.*/evaluator.a, bin.*/evaluator3.a, bin.*/READ_ME,
		src/svl/standard, man/*/svl.*, man/*/svl-lang.*,
		man/*/evaluator.*, man/*/evaluator3.*, man/evaluator4.*,
		man/*/mcl.*, man/*/mcl3.*, man/*/mcl4.*

Nature:		The internal organization and documentation of the EVALUATOR
		model checker (versions 3 and 4) has been revised and
		simplified:

		- The binary library "evaluator.a" containing EVALUATOR 3
		  has been renamed to "evaluator3.a".

		- A symbolic link "evaluator.a -> evaluator3.a" has been
		  added for backward compatibility, but its use is now
		  discouraged.

		- The SVL language and compiler have been updated, so
		  as to invoke "evaluator3.a" rather than "evaluator.a".

		- The man page "evaluator" used to describe EVALUATOR 3
		  has been renamed to "evaluator3".

		- A new overarching man page "evaluator" has been added,
		  which describes the common features of EVALUATOR 3 and
		  EVALUATOR 4.

		- The man page "mcl" used to describe the language MCL v4
		  supported by EVALUATOR 4 has been renamed to "mcl4".

		- A new overarching man page "mcl" has been added, which
		  describes the common features of the MCL v3 and MCL v4
		  languages.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2413
Date:		Thu May 17 11:21:06 CEST 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/mcl_expand, man/*/mcl3.*, man/*/mcl4.*,
		demos/archive/demo_15.old/requirement02.mcl,
		demos/demo_21/demo.svl, demos/demo_22/demo.svl
		demos/demo_31/demo.svl

Nature:		In December 2017, a new syntax for the infinite repetition
		operator of MCL v4 was adopted (see item #2368 above). This
		new syntax is now effective also for MCL v3.

		The old syntax is still available, but its use triggers the
		following warning that suggests to migrate to the new syntax:
		   warning during syntax analysis phase:
		   obsolete construct ``@ ( R )'' [file.mcl:line],
		   please use ``< R > @'' instead

		The manual page for MCL v3 was updated accordingly. The
		manual page for MCL v4 was also simplified by removing that
		incompatibility issue between MCL v3 and MCL v4, as both
		languages are now aligned. Finally, four CADP demos have
		been updated to use the new syntax in MCL v3 formulas.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2414
Date:		Tue May 22 09:26:17 CEST 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl.*,
		man/*/svl-lang.*, src/xtl/livelock.mcl

Nature:		Following the change described in item #2413 above, the
		generic property file "livelock.mcl" was modified, as it
		used the old syntax:
		     < true* > @ ( "i" )
		rather than the new syntax:
		     < true* > < "i" > @
		From now on, this file can be used with EVALUATOR3 as well
		as EVALUATOR4.

		SVL has been modified so that both EVALUATOR3 and EVALUATOR4
		can be used to compute "livelock" statements (formerly, only
		EVALUATOR3 could be used for such purpose).

		SVL has also been modified so that both EVALUATOR3 and
		EVALUATOR4 can be used to compute "deadlock" statements
		(formerly, SVL did not allow to use any version of EVALUATOR
		for such purpose).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2415
Date:		Tue May 22 15:15:22 CEST 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/mcl_expand, bin.*/evaluator3,
		man/*/mcl3.*, man/*/mcl4.*

Nature:		The MCL v3 and MCL v4 languages have been further aligned
		by removing the difference that existed between both
		languages as regards the respective precedences of the "."
		(concatenation) and "|" (choice) operators in regular
		expressions.

		Initially, "|" had a higher precedence than "." in MCL v3.
		This was cumbersome in practice, and was modified in MCL v4,
		where "." has a higher precedence than "|". The MCL v4
		solution reduces the number of parentheses needed in regular
		formulas, which frequently consist of several alternatives,
		each one being a concatenation.

		MCL v3 has been modified and aligned with MCL v4: from now
		on, "." has a higher precedence than "|" in both MCL v3 and
		MCL v4. For instance, a regular formula "R1 . R2 | R3" is now
		parsed as "(R1 . R2) | R3" by EVALUATOR 3, rather than
		"R1 . (R2 | R3)".

		This change is not backward compatible, and may lead to
		different truth values when evaluating legacy MCL v3 formulas
		that rely on the former precedences of "." and "|" (i.e.,
		formulas containing "R1 . R2 | R3" or "R1 | R2 . R3" regular
		expressions). To avoid this issue, MCL_EXPAND now displays a
		warning message, indicating that parentheses should be added
		to maintain the original meaning of the formula:

		  in MCL version 3, operator ``.'' [test.mcl:7] now has
		  higher precedence than ``|'' [test.mcl:5]; add parentheses
		  to get rid of this warning

		The manual page for MCL v3 was updated accordingly. The
		manual page for MCL v4 was also simplified by removing that
		incompatibility issue between MCL v3 and MCL v4, as both
		languages are now aligned.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2416
Date:		Tue May 22 18:11:21 CEST 2018
Authors:	Radu Mateescu and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/evaluator3, bin.*/evaluator4,
		bin.*/mcl_expand, bin.*/mcl_expand4

Nature:		The two versions of MCL_EXPAND ("mcl_expand" for EVALUATOR 3
		and "mcl_expand4" for EVALUATOR 4) have been unified. More
		precisely, the "mcl_expand" executable has been removed,
		and "mcl_expand4" has been renamed to "mcl_expand". Both
		EVALUATOR 3 and EVALUATOR 4 have been modified to invoke
		the unified MCL_EXPAND properly.

		The version numbers of EVALUATOR 3, EVALUATOR 4, and
		MCL_EXPAND have been increased to 3.8, 4.2, and 4.1,
		respectively.

		The unification of both versions of MCL_EXPAND brings
		significant advantages to the users of EVALUATOR 3:

		- From now on, EVALUATOR 3 recognizes formulas having the
		  following syntax:
		     [ R ] -|
		  which already existed in MCL v4, but not in MCL v3. Such
		  formulas caused a syntax error with the former version of
		  EVALUATOR 3: they are now accepted. The "mcl3" manual page
		  has been extended to document this new feature of MCL v3.

		- EVALUATOR 3 can now handle some MCL v3 formulas having
		  alternation depth greater than one, since MCL_EXPAND
		  supports certain classes of (practically useful) formulas
		  having alternation depth 2. The "STATE FORMULA" section
		  of the "mcl3" manual page has been updated to document
		  this new possibility.

		- EVALUATOR 3 now properly rejects those MCL v3 formulas
		  with alternation depth greater than one that cannot be
		  handled. The former version of "mcl_expand" did not detect
		  some of these formulas and tried to process them anyway,
		  leading to an internal bug with bizarre error messages:
		     unexpected case in LOTOS NT function ``getting next
		     from an empty list''
		     unexpected case in ``switch'' [mcl_error_dump.c:819]
		     quit

		- EVALUATOR 3 now benefits from better error messages
		  (already present in EVALUATOR 4), e.g., for formulas
		  having alternation depth greater than one.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2417
Date:		Wed May 23 10:51:19 CEST 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
File:		bin.*/mcl_expand

Nature:		Three error messages emitted by MCL_EXPAND when EVALUATOR 3
		or EVALUATOR 4 are invoked on MCL formulas of alternation
		depth greater than one have been enhanced. For instance,
		the following error message:

		   forbidden recursive call [prop.mcl:21] (after propagating
		   negations) of mu-variable ``X'' [prop.mcl:15] through a
		   regular []-modality with iteration

		now displays as:

		   formula of alternation depth greater than one: forbidden
		   recursive call [prop.mcl:21] (after propagating negations)
		   of mu-variable ``X'' [prop.mcl:15] through a modality
		   ``[...]'' that contains iteration operators (``*'', ``+'',
		   etc.)
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2418
Date:		Wed May 23 12:21:40 CEST 2018
Authors:	Hubert Garavel and Radu Mateescu (INRIA/CONVECS)
Files:		src/com/xeuca_version, src/eucalyptus/eucalyptus.tcl,
		src/eucalyptus/help/ft.Composition_Expressions,
		src/eucalyptus/help/ft.Labelled_Transition_Systems,
		src/eucalyptus/help/fnc.*

Nature:		The EUCALYPTUS graphical user interface has been enhanced in
		various respects:

		- The "Tool Versions" entry of the "Help" menu now displays
		  the version numbers of many more CADP tools.

		- In the "Tools" section of the "Help" page, the manual
		  pages of many more CADP tools are now accessible.

		- In the "Files" section of the "Help" page, new manual
		  pages have been added, e.g., "AUT files", "BCG files",
		  etc. The "Composition expressions" page was obsolete
		  and has been remplaced with "EXP files". The pages for
		  "Compare", "Info", "Livelock", "Reduce", and "Labelled
		  Transition Systems" have also been updated.

		- In the "Functions" section of the "Help" page, several
		  manual pages that were already listed in the "Tools"
		  section have been removed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2419
Date:		Wed May 23 15:53:43 CEST 2018
Report:		Natalia Kuczma and Marlena Olszewska (AGH University of
		Science and Technology, Krakow, Poland)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		com/tst

Nature:		The TST command has been extended to detect and report about
		two situations in which CADP is not properly installed:

		- From now on, TST checks that $CADP/LICENSE is a not a
		  directory, but a file. Otherwise, the CADP tools fail
		  with an error message such as:
		     *017 protection violation:
		     unknown global checksum kind (``0'') in $CADP/LICENSE

		- If the file $CADP/LICENSE does not exist but if a file
		  named $CADP/LICENSE.bin exists, then TST suggests to
		  rename "LICENCE.bin" into "LICENSE", as some mail clients
		  automatically add the ".bin" extension to "LICENSE" when
		  storing that file to disk.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2420
Date:		Thu May 24 17:14:23 CEST 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/evaluator3, bin.*/mcl_expand

Nature:		MCL_EXPAND displays better error messages when EVALUATOR 3
		is invoked on a ".mcl" file that contains a correct formula
		written in the MCL v4 (rather than MCL v3) language.

		Previously, no syntax error would be reported, as MCL_EXPAND
		accepts both the MCL v3 and MCL v4 syntaxes. So, the
		processing of the MCL v4 formula would continue and, only
		later, bizarre semantic error messages would appear
		(e.g., typing errors, ambiguous calls to functions, tau
		actions forbidden in weak modality, etc.), ending with this
		cryptic error message:
		   boolean equations system incompatible with Evaluator 3.5

		From now on, EVALUATOR 3 immediately stops when parsing an
		MCL v4 formula, and gives a much clearer message:
		   error during syntax analysis phase:
		   construct ``let'' [TEST.mcl:6] does not belong to
		   MCL version 3 but to MCL version 4 or higher
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2421
Date:		Fri May 25 19:00:45 CEST 2018
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		INSTALLATION_2, com/tst, src/com/cadp_basename,
		src/com/cadp_indent, src/com/cadp_more, src/com/cadp_path,
		src/com/cadp_replace, src/com/cadp_which, src/com/lnt_depend

Nature:		CADP, which was already running on Solaris 10, has been
		ported to Solaris 11. The following changes have been made:

		- The directives given in INSTALLATION_2 and the TST shell
		  script have been updated to handle version 12.6 of the
		  Oracle Developer Studio.

		- An error in the "cadp_basename" and TST scripts has been
		  fixed: the path "/usr/xpg4/basename" was replaced with
		  "/usr/xpg4/bin/basename" (see item #1149 above).

		- An error in the TST script was fixed: the auxiliary command
		  "cadp_fold" is no longer invoked if CADP is not installed.

		- The "cadp_indent" was modified to support Solaris 11.

		- The "-default" option of the "cadp_more" script was
		  modified to handle the case where the environment variable
		  $MORE contains options (e.g., when $MORE = "less -ins").

		- The "cadp_path" was modified to remove Bash-specific
		  constructs rejected by the Korn shell used in Solaris 11.

		- The "cadp_replace" script was modified to avoid a
		  mysterious bug with the "test" command of the Korn shell.

		- The "cadp_which" was modified to handle the special
		  behaviour of the "type" command in the Korn shell.

		- The "lnt_depend" command was modified by Wendelin Serwe
		  to handle the Korn shell semantics for global variables
		  in recursive shell functions.
-------------------------------------------------------------------------------
VERSION 2018-e "Uppsala"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2422
Date:		Mon May 28 10:19:09 CEST 2018
Authors:	Radu Mateescu and Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_14/demo.svl, demos/demo_31/demo.svl,
		demos/archive/demo_15.old/requirement{06,09,10,11}.mcl

Nature:		Following a recent change in the MCL v3 language (see item
		#2415 above), several formulas have been modified, by
		adding extra parentheses, so as to avoid warnings about
		the higher precedence of "." over "|".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2423
Date:		Tue May 29 18:01:35 CEST 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/mcl_expand, man/*/mcl3.*

Nature:		MCL v3 has been extended with the option operator ("?")
		on regular formulas, which was already present in MCL v4.
		EVALUATOR 3 now recognizes regular formulas "R ?" expressing
		that a transition sequence either is empty, or satisfies R.
		This improvement contributes to the unification of MCL v3
		and MCL v4 (see item #2416 above).

		The "mcl3" manual page has been extended to document this
		new feature of MCL v3.
-------------------------------------------------------------------------------
BUG FIX
Number:		2424
Date:		Tue Jun  5 12:45:30 CEST 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/mcl_expand

Nature:		For some MCL v4 formulas, MCL_EXPAND generated C code that
		triggered the following warning when compiled with recent
		versions of GCC:

		    "comparison of unsigned expression >= 0 is always
		    true [-Wtype-limits]"

		An example of such formula was < { ... } > true, which is
		semantically equivalent to < true > true. This issue has
		been corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2425
Date:		Wed Jun  6 19:03:19 CEST 2018
Authors:	Lina Marsso and Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_06, demos/=READ_ME.txt

Nature:		A new demo example has been added. This demo features the
		formal specification in LNT of the Transport Layer Security
		(TLS 1.3) handshake protocol.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2426
Date:		Mon Jun 11 11:20:15 CEST 2018
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/tgv.a, man/*/tgv.*

Nature:		A new option "-self" has been added to TGV. This option
		suppresses warnings about "*"-transitions that are
		automatically added to output-incomplete test purposes.

		The TGV manual page has been updated accordingly. Moreover,
		the readability of this manual page has been enhanced by:
		- better explaining the semantics of "*"-transitions
		- improving the definition of test purposes and test cases
		- changing subsections into sections
		- renaming "type" to "tag".
-------------------------------------------------------------------------------
VERSION 2018-f "Uppsala"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2427
Date:		Tue Jun 26 17:41:15 CEST 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/evaluator3.a, bin.*/evaluator4.a, bin.*/xtl,
		bin.*/xtl_expand, man/*/evaluator3.*, man/*/evaluator4.*,
		man/*/xtl.*

Nature:		A new option ``-depend'' has been added to MCL_EXPAND and to
		the EVALUATOR 3, EVALUATOR 4, and XTL model checkers. This
		option displays the list of library files included (directly
		or transitively) in an input XTL or MCL file using the 
		``library ... end_library'' clause. The manual pages of
		EVALUATOR 3, EVALUATOR 4, and XTL have been updated
		accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2428
Date:		Tue Jul  3 11:03:37 CEST 2018
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old, bin.*/caesar.adt

Nature:		The writing of the TRAIAN 3 compiler (restarted in 2018 and
		developed in parallel with CADP) enabled one to reexamine
		the code of CAESAR and CAESAR.ADT for handling library
		files, i.e., the ``.lib'' files that are (transitively)
		included in a LOTOS specification by means of the ``library
		... endlib'' clause. The following changes have been made:

		- From now on, at most 255 library files can be included,
		  rather than 256 files previously. This avoids a potential
		  arithmetic overflow because files are numbered using 8
		  bits and because the main ``.lotos'' file always has a
		  number.
		   
		- Previously, if the same ``.lib'' file was included twice,
		  it would count for two, whereas it now counts only for one.
		  From now on, one can include 255 different library files,
		  potentially enabling one to include more files than before.

		- Also, the buffers used by CAESAR and CAESAR.ADT to store
		  file numbers and shell commands have been enlarged, so
		  as to avoid overflows.
-------------------------------------------------------------------------------
BUG FIX
Number:		2429
Date:		Wed Jul  4 10:34:23 CEST 2018
Report:		Hermann Felbinger (Graz University of Technology, Austria)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/tgv.a

Nature:		Since CADP 2018-f (June 13, 2018), the TGV tool has stopped
		functioning properly. When running TGV, the following error
		message was emitted:

		   *007 protection violation:
		    illicit attempt at using "tgv 1.7" on machine "x"
		    no appropriate license
		    quit
		
		This problem has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2430
Date:		Thu Jul  5 10:43:00 CEST 2018
Report:		Wendelin Serwe (INRIA/CONVECS)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.old

Nature:		In the rare cases, where the definition of a LOTOS identifier
		(e.g., a type, a process, etc) spans over several files due
		to the presence of ``library ... endlib'' clauses, CAESAR
		and CAESAR.ADT could associate incorrect file names (but
		correct line numbers) to this identifier. This would lead to
		incorrect error messages, but also improper ``.net'' files
		(containing an interpreted Petri net) or ``.gph'' files
		(containing the LTS in textual format). This problem has
		been fixed.

		For instance, consider a process definition of the form:
		   (* this is an example *)
		   process library L endlib [G] : noexit :=
		      error
		   endproc
		where file ``L.lib'' only contains the name P of the process
		being defined. Because the process body (``error'') is
		incorrect, an error message was emitted, starting with
		   In process P [1]
		meaning that process P is defined at line 1 of the ``.lotos''
		file, which was incorrect. From now on, this error message
		starts with
		   In process P [L:1]
		meaning that process P is defined at line 1 of ``L.lib''.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2431
Date:		Fri Jul  6 16:21:36 CEST 2018
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old, bin.*/caesar.adt,
		man/*/caesar.*, man/*/caesar.old.*, man/*/caesar.adt.*

Nature:		CAESAR and CAESAR.ADT have been enhanced with a new option
		``-depend'', which prints the list of ``.lib'' files that
		are included in a LOTOS file using the ``library ... endlib''
		directives. For instance, running
		   caesar -depend test_225.lotos
		may produce the following output:
		   ANALYSIS_225_A.lib
		   /opt/Cadp/lib/BOOLEAN.lib
		   ANALYSIS_225_B.lib
		   /opt/Cadp/lib/OCTET.lib
		   /opt/Cadp/lib/NATURALNUMBER.lib
		   /opt/Cadp/lib/DECDIGIT.lib
		   /opt/Cadp/lib/BIT.lib
		The manual pages have been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2432
Date:		Mon Jul  9 14:56:08 CEST 2018
Report:		Hana Mkaouar (ENIS, Tunisia) and Gianluca Barbon (INRIA/
		CONVECS)
Authors:	Hubert Garavel and Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/evaluator3.a, bin.*/evaluator4.a

Nature:		Since CADP 2018-f (June 13, 2018), the execution of the
		EVALUATOR 3 and EVALUATOR 4 model checkers could fail on
		certain versions of Ubuntu (e.g., Ubuntu 16.04.4 LTS) with
		the following error message:

		  $CADP/bin.x64/libBCG_IO.a(bcg_io_write_bcg.o):
		  In function `BCG_IO_WRITE_BCG_END': 
		  bcg_io_write_bcg.c:(.text...): undefined reference to `log' 
		  bcg_io_write_bcg.c:(.text...): undefined reference to `ceil' 
		  collect2: error: ld returned 1 exit status 

		This problem, which was not observed on other Linux versions,
		such as Debian 9, has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2433
Date: 		Mon Jul  9 15:16:36 CEST 2018
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/scrutator.a, man/*/scrutator.*

Nature:		A tool named SCRUTATOR (developed in 2O08) has been added
		to the CADP toolbox. This tool allows to explore and prune
		an LTS on the fly, according to various criteria: elimination
		of deadlocks, preservation of (potential or inevitable)
		reachability of certain actions, etc.

		In addition to pruning, SCRUTATOR can also reduce the LTS
		on the fly modulo various relations (tau*.a, tau-confluence,
		weak trace equivalence, etc.).
-------------------------------------------------------------------------------
VERSION 2018-g "Uppsala"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2434
Date:		Tue Aug 21 16:11:30 CEST 2018
Authors:	Hubert Garavel and Lina Marsso (INRIA/CONVECS)
Files:		demos/demo_06/handshake.lnt

Nature:		The comments in the "handshake.lnt" file of demo_06 have
		been enhanced, to better show the correspondance between
		the LNT code and the informal specification of TLS 1.3.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2435
Date:		Wed Aug 22 17:25:31 CEST 2018
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		demos/=READ_ME.txt, demos/demo_17/=READ_ME.txt,
		demos/demo_17/LOTOS, demos/demo_17/doc, demos/demo_17/*

Nature:		The demo_17 (distributed leader election protocol) has been
		converted from LOTOS to LNT. Precisely:

		- All the LOTOS files have been moved to the subdirectory
		  "demos/demo_17/LOTOS".

		- A few LOTOS files (namely, "SERVICE_WITHOUT_CRASHES.lotos",
		  "CHANG_ROBERTS_STATION_ORIGINAL.lib", and
		  "CHANG_ROBERTS_STATION_REVISION_1.lib") have been enhanced.

		- The LNT files (prepared by W. Serwe and enhanced by H.
		  Garavel) have been installed in "demos/demo_17". The
		  comparison confirms that LNT leads to more concise and
		  more readable specifications than LOTOS. Also, the LNT
		  specification of "SERVICE_WITH_CRASHES.lnt" has been
		  greatly simplified.

		- The file "doc/Garavel-Mounier-96.pdf" has been added.
-------------------------------------------------------------------------------
BUG FIX
Number:		2436
Date:		Thu Aug 23 10:57:16 CEST 2018
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c

Nature:		When called with option -interface, EXP.OPEN generates a
		synchronisation file with extension ".sync", to be used with
		PROJECTOR. When some labels contained characters having a
		special meaning in regular expressions (namely, '.', '[', ']'
		'*', '\', '^', and '$'), the ".sync" file was incorrectly
		interpreted. This bug has been solved by escaping these
		characters with a '\' character.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2437
Date:		Thu Aug 23 12:49:51 CEST 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		com/svl, src/svl/standard

Nature:		A new shell macro named SVL_COMMAND_FOR_CLEAN is now available
		in the SVL library file "src/svl/standard". This macro takes
		as argument a shell command, which is stored in the log file
		generated by SVL and later executed when "svl -clean" is
		invoked. The version number of SVL has been set to 2.8.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2438
Date:		Thu Aug 23 14:32:26 CEST 2018
Authors:	Etienne Lantreibecq (STMicroelectronics, Grenoble) and
		Wendelin Serwe (INRIA/CONVECS)
Files:		demos/=READ_ME.txt, demos/demo_11

Nature:		A new demo, which features a hardware block called "Dynamic
		Task Dispatcher", has been added. The LNT code of this demo
		was reviewed and lightly simplified by Hubert Garavel.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2439
Date:		Thu Aug 23 17:32:41 CEST 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		demos/demo_14/demo.svl, demos/demo_16/demo.svl,
	 	demos/demo_17/demo.svl, demos/demo_18/demo.svl,
		demos/demo_21/demo.svl, demos/demo_22/demo.svl,
		demos/demo_28/=READ_ME.txt, demos/demo_28/demo.svl,
		demos/demo_29/=READ_ME.txt, demos/demo_29/demo.svl,
		demos/demo_30/demo.svl, demos/demo_31/demo.svl,
		demos/demo_32/=READ_ME.txt, demos/demo_32/demo.svl,
		demos/demo_35/demo.svl, demos/demo_36/demo.svl,
		demos/demo_38/=READ_ME.txt, demos/demo_38/demo.svl

Nature:		The SVL scripts of many CADP demos have been modified to use
		the new macro SVL_COMMAND_FOR_CLEAN (see item #2437 above),
		wherever the SVL script calls a subscript located in a 
		LOTOS sub-directory, which is usually done as follows:

		    % (cd LOTOS ; svl)

		In each of these scripts, the following command was inserted:

		    % SVL_COMMAND_FOR_CLEAN "(cd LOTOS ; svl -clean)"

		to tell SVL that "svl -clean" should also be recursively
		executed in the LOTOS sub-directory.
-------------------------------------------------------------------------------
BUG FIX
Number:		2440
Date:		Fri Aug 24 15:07:48 CEST 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Lian Apostol (INRIA/CONVECS)
Files:		src/contributor/contributor.tcl

Nature:		On Windows, CONTRIBUTOR would halt on screen "Sending files"
		and an error window would pop up with the following message:

		   Error: Unable to create the archive
		   C:/cygwin/tmp/CONTRIBUTOR-...s.tar.gz.
		   See C:/cygwin/home/.../.config/cadp/contributor/tar.log
		   for more details about the problem

		This bug was fixed.
-------------------------------------------------------------------------------
VERSION 2018-h "Uppsala"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2441
Date:		Mon Aug 27 16:52:54 CEST 2018
Authors:	Hubert Garavel, Radu Mateescu, and Wendelin Serwe (INRIA/
		CONVECS)
Files:		demos/demo_11/=READ_ME.txt, demos/demo_11/macros.mcl,
		demos/demo_11/demo.svl  
		demos/demo_11/Scenarios/APPLICATION_X_3_3.lnt,
		demos/demo_11/Scenarios/APPLICATION_X_8_1.lnt,
		demos/demo_11/Scenarios/APPLICATION_X_8_2.lnt,
		demos/demo_11/Scenarios/HMP_partial.lnt

Nature:		The recent demo_11 (see item #2438 above) has been enhanced
		in several ways:

		1) The "macros.mcl" file has been modified to avoid warnings
		   of the following form:
		      variable 'caesar_x_variable_1' set but not used
		      [-Wunused-but-set-variable]
		   emitted by the GCC compiler (such warnings reported
		   occurrences of variables defined but never used in
		   MCL temporal-logic formulas).

		2) Four LNT files located in "demo_11/Scenarios" have been
		   modified to avoid LNT2LOTOS warnings about non-exhaustive
		   cases and CAESAR warnings about impossible rendezvous on
		   the gate "exit".

		3) The "demo.svl" file has been enriched with comments.

		4) The property PHI_1 was slightly modified to bound the
		   iterations of the "exists" operator, namely by replacing
		      exists y:Nat ...
		   with
		      exists x:Nat among { 0 ... $N - 1 } ...
		   This change made the execution of demo_11 much faster
		   (4 or 5 minute faster in total, given that property PHI_1
		   is evaluated 16 times).
-------------------------------------------------------------------------------
BUG FIX
Number:		2442
Date:		Wed Aug 29 11:04:52 CEST 2018
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/xtl

Nature:		A bug was fixed in the XTL model checker, which caused
		error messages of the following form:

		   $ xtl test.xtl lts.bcg
		   xtl: expansion of ``test''
		   xtl: syntax analysis of ``test''
		   xtl: semantic analysis of ``test''
		   xtl:    - indexing
		   xtl:    - types binding
		   xtl:    - variables binding
		   xtl:    - functions binding
		   xtl:    - expressions typing
		   Segmentation fault (core dumped)

		This error happened on XTL files containing statements of
		the form "print (V)" or "V1 = V2", where the values V, V1, 
		and V2 are of a type defined externally in C (i.e., using
		a "type ... end_type" directive).
-------------------------------------------------------------------------------
BUG FIX
Number:		2443
Date:		Thu Aug 30 13:56:56 CEST 2018
Author:		Frederic Lang (INRIA/CONVECS)
Files:		com/svl

Nature:		Following the introduction of the SVL_COMMAND_FOR_CLEAN macro
		(see item #2437 above), the command "svl -clean" would write
		a spurious line:
			svl: executing ``''
		if the shell macro SVL_COMMAND_FOR_CLEAN was not invoked
		by the user in the SVL script. This issue was solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		2444
Date:		Thu Aug 30 15:22:09 CEST 2018
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/xtl

Nature:		The XTL model checker, when invoked on a file "f.xtl"
		containing certain (fatal) lexical or syntactic errors,
		did not erase the preprocessed intermediate file "f.xp"
		before aborting its execution with a "quit" error message.
		This problem has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2445
Date:		Tue Sep  4 17:46:50 CEST 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		src/svl/standard

Nature:		From now on, blank lines are removed from the ".seq"
		diagnostic files generated by the "deadlock" and "livelock"
		statements of SVL.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2446
Date:		Thu Sep  6 17:14:46 CEST 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/xtl

Nature:		The XTL model checker now performs consistency checks
		(similar to those already done by CAESAR and CAESAR.ADT) on
		the C identifiers specified by the pragmas "!implementedby",
		"!comparedby", "!enumeratedby", and "!printedby" in an XTL
		program. 

		These identifiers (external C types and functions) are now
		checked against duplications, clashes with the C keywords, 
		and illegal prefixes of the form "XTL_" or "xtl_". If any
		of these checks fails, XTL aborts its execution with an
		appropriate error message (previously, XTL would generated
		incorrect C code that was then rejected by the C compiler).	
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2447
Date:		Mon Sep 10 09:57:53 CEST 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/svl_kernel, src/svl/standard, man/*/svl-lang.*

Nature:		From now on, SVL does not require anymore that every "property"
		statement contains at least one verification statement, namely
		"comparison", "verify", "deadlock", "livelock", or a shell-line
		with an "expected" clause.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2448
Date:		Tue Sep 11 10:53:26 CEST 2018
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo_17/BASIC_STATION.lnt,
		demos/demo_17/demo.svl, demos/demo_17/LOTOS/demo.svl

Nature:		The demo_17 (distributed leader election protocol) has
		been enhanced in several respects:

		- In file "BASIC_STATION.lnt", the parameter INIT is now
		  declared "in var" rather than "in", which removes a
		  warning emitted by LNT2LOTOS.

		- The "demo.svl" file now uses the generalized n-ary
		  parallel composition operator and the hiding operator
		  of LNT, rather than LOTOS operators.

		- The "demo.svl" and "LOTOS/demo.svl" files have been
		  modified to be more readable. They now use parameterized
		  SVL properties and "check" statements, rather than
		  "for" loops of the Bourne shell.
-------------------------------------------------------------------------------
VERSION 2018-i "Uppsala"
-------------------------------------------------------------------------------
BUG FIX
Number:		2449
Date:		Tue Sep 25 10:13:07 CEST 2018
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		man/*/caesar_graph.*, doc/pdf/Garavel-92-a.pdf

Nature:		The manual page for the CAESAR_GRAPH API has been updated to
		reflect prior changes related to the introduction of the type
		CAESAR_TYPE_FORMAT (see item #2331 above). This manual page
		now specifies that:

		- Functions CAESAR_FORMAT_STATE() and CAESAR_FORMAT_LABEL()
		  take an argument of type CAESAR_TYPE_FORMAT (rather than
		  CAESAR_TYPE_NATURAL).

		- The deprecated functions CAESAR_MAX_FORMAT_STATE() and
	          CAESAR_MAX_FORMAT_LABEL() return a result of type
		  CAESAR_TYPE_FORMAT (rather than CAESAR_TYPE_NATURAL).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2450
Date:		Mon Oct  1 15:50:04 CEST 2018
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos,
		doc/pdf/Champelovier-Clerc-Garavel-et-al-10.pdf 

Nature:		The definition of the LNT language has been simplified as
		follows: it is no longer permitted to attach an "!external"
		pragma to the constructors of types declared themselves
		as "!external". Indeed, all constructors of an external
		type should be external, and all constructors of a non-
		external type should be non-external. Formerly:

		- For a type having the "!external" pragma, all constructors
		  were automatically considered to be external, meaning that
		  "!external" constructor pragmas were silently added where
		  they were missing.

		- For a type not having the "!external" pragma, the
		  presence of "!external" pragmas for constructors was
		  not detected by LNT2LOTOS and later caused the following 
		  CAESAR.ADT error:

		     #301 error during verification phase:
		     non-external sort with an external constructor
		     quit
		     In type T [11]
		     - constructor C [18] is declared external
		       whereas its result sort S [13]
		       is not declared external

		From now on, "!external" pragmas for constructors are
		syntactically prohibited, as the "!external" pragma for
		type is sufficient.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2451
Date:		Mon Oct  8 14:13:12 CEST 2018
Authors:	Hubert Garavel (INRIA/CONVECS), Frederic Lang (INRIA/CONVECS)
		and Laurent Mounier (Verimag, Grenoble, France)
Files:		doc/pdf/Garavel-Lang-Mounier-18.pdf, doc/=READ_ME.txt

Nature:		A new publication [Garavel-Lang-Mounier-18] has been added,
		which provides a tutorial and a survey on compositional
		verification.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2452
Date:		Tue Oct  9 12:09:20 CEST 2018
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		Six new options have been implemented in CAESAR.BDD, namely:
		-max-place, -max-transition, -max-unit, -min-place,
		-min-transition, and -min-unit.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2453
Date:		Wed Oct 10 14:39:51 CEST 2018
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/nupn_info, com/READ_ME, src/nupn/nupn_trivial_units.awk,
		man/*/nupn_info.*

Nature:		A new tool named NUPN_INFO has been added to the CADP toolbox.
		This tool can be seen as an extension of CAESAR.BDD with new
		options. The first option, ``-trivial-units'', erases the
		unit structure of a NUPN.
-------------------------------------------------------------------------------
BUG FIX
Number:		2454
Date:		Thu Oct 11 10:10:35 CEST 2018
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		src/com/cadp_temporary,
		com/caesar.open, com/fsp.open, com/lnt.open, com/upc,
		src/com/cadp_cc, src/com/cadp_sum, src/com/cadp_indent,
		src/com/cadp_psbox, src/com/xeuca_kill, demos/demo_19/start

Nature:		When the $CADP_TMP environment variable was not set, the
		temporary directories generated by FSP.OPEN and LNT.OPEN
		were named "/tmp/fsp.$$" and "/tmp/lnt.$$", where $$ is the
		number of the current process. In rare cases, this could
		create a problem if another CADP user had already created
		such a temporary directory with the same name (this could
		happen as the kernel reuses the number of past processes).

		To address this issue, a new script "cadp_temporary" has
		been added, which creates temporary files and directories
		having unique names, so as to avoid any risk of name
		collisions.

		The FSP.OPEN and LNT.OPEN, as well as many other CADP
		scripts, have been modified to invoke "cadp_temporary".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2455
Date:		Thu Oct 11 17:49:19 CEST 2018
Author:		Hubert Garavel (INRIA/CONVECS)
File:		INSTALLATION_MACOS

Nature:		The CADP toolbox has been ported to the latest version 10.14
		"Mojave" of Apple's macOS operating system. No changes were
		needed in the toolbox, excepted in the documentation.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2456
Date:		Fri Oct 12 11:02:04 CEST 2018
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/rfl,
		com/bcg_open, com/caesar.open, com/exp.open, com/seq.open
		man/*/bcg_open.*, man/*/caesar.open.*, man/*/exp.open.*,
		man/*/fsp.open.*, man/*/lnt.open.*, man/*/seq.open.*

Nature:		Some CADP shell scripts, which assigned and used a local
		variable $USER, have been modified, because $USER is also
		a system variable that (like $LOGNAME) contains the user's
		login name; such assignments were causing trouble in the
		recently added "cadp_temporary" script. Precisely:

		- In the RFL script, occurrences of $USER have been changed
		  to $USER_NAME.

		- In the "bcg_open", "caesar.open", "exp.open", and "seq.open"
		  scripts, the variable $PROG was renamed to $EXEC, and the
		  variable $USER was renamed to $PROG.

		As a followup of the latter change, the manual pages of
		"bcg_open", "caesar.open", "exp.open", "fsp.open", "lnt.open",
		and "seq.open" have been modified: the OPEN/CAESAR application
		program (also known as the "exploration module" or "user
		module") is now called "prog" rather than "user", as the
		latter name was ambiguous, causing a confusion with the user
		of the tool.
-------------------------------------------------------------------------------
VERSION 2018-j "Uppsala"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2457
Date:		Mon Oct 15 10:30:37 CEST 2018
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The meaning of the ``-redundant-units'' option of CAESAR.BDD
		has changed. Formerly, a unit was said to be redundant:
		- either if it had one single sub-unit
		- or if it contained no local places and was different
		  from the root unit.

		From now on, a unit is said to be redundant iff it has one
		single sub-unit. The ``-redundant-units'' now only displays
		such units.

		Units having no local places are said to be void. Void units
		are now forbidden (unless they are equal to the root unit)
		and CAESAR.BDD (e.g., with option ``-check'') now rejects 
		such units with an error message of the following form:
		   caesar.bdd: line 9: unit U1 is void (i.e., has no local
		   place) and is not the root unit

		The version number of CAESAR.BDD has been advanced to 2.8.
-------------------------------------------------------------------------------
BUG FIX
Number:		2458
Date:		Mon Oct 15 17:59:29 CEST 2018	
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/nupn_info, src/nupn/nupn_trivial_units.awk,
		src/nupn/trivial_units.awk 

Nature:		A minor problem has been fixed in the ``-trivial-units''
		option of NUPN_INFO: the pragmas of the following form
		``!unit_safe'' (not followed by a tool name) were not
		properly translated in the output of NUPN_INFO.

		Also, the file ``src/nupn/nupn_trivial_units.awk'' has been
		renamed to ``src/nupn/trivial_units.awk''.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2459
Date:		Tue Oct 16 15:19:09 CEST 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		man/*/svl-lang.*

Nature:		The description of shell variables in the SVL manual page
		has been enhanced: these variables are now defined in several
		tables contained in new subsections.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2460
Date:		Wed Oct 17 14:17:04 CEST 2018
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		CAESAR.BDD has been extended with five new options:
		``-leaf-units'', ``-void-units'', ``-root-unit'',
		``-void-nonroot-units'', and ``-void-root-unit''. Also,
		various corrections and enhancements have been brought to
		the CAESAR.BDD manual page.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2461
Date:		Thu Oct 18 16:58:12 CEST 2018
Authors:        Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		com/bcg_draw, com/bcg_info, com/bcg_open, com/rfl,
		src/com/cadp_postscript, src/com/cadp_temporary

Nature:		Following the changes undertaken to generate unique temporary
		files (see item #2454 above), a new option ``-t'' has been
		added to the ``cadp_temporary'' script. Several CADP scripts
		have been modified to take advantage of ``cadp_temporary''
		with its new option.
-------------------------------------------------------------------------------
BUG FIX
Number:		2462
Date:		Fri Oct 19 11:32:48 CEST 2018
Report:		Wendelin Serwe and Lina Marsso (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		In some cases, LNT2LOTOS generated incorrect LOTOS code for
		an LNT process (say P) declaring an exception parameter
		(say E) and passing this exception E to another process.
		CAESAR would reject the generated LOTOS code, with the
		following list of error messages:

		    #045 error during analysis:
		         gate not declared
		    #047 error during analysis:
		         gates cannot bind correctly
		         quit
		    In process P [78]
		       - gate E was not declared

		This bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2463
Date:		Mon Oct 22 10:28:54 CEST 2018
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/nupn_info, src/nupn/place_fusion.awk, man/*/nupn_info.*

Nature:		A new option ``-place-fusion'' has been added to NUPN_INFO.
		This option implements the place-fusion abstraction defined
		in [Garavel-15-a]. The NUPN_INFO manual page has been updated
		accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2464
Date:		Wed Oct 24 19:36:02 CEST 2018
Report:		Franco Mazzanti (ISTI-CNR, Pisa, Italy)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.mac64/caesar, bin.mac64/caesar.adt,
		bin.mac64/caesar.indent, bin.mac64/caesar.old,
		bin.mac64/exp2c, bin.mac64/fsp2lotos, bin.mac64/lnt2lotos,
		bin.mac64/mcl_expand, bin.mac64/svl_kernel, bin.mac64/xtl

Nature:		On macOS, the 64-bit binaries of most CADP compilers could
		cause a segmentation fault in presence of a lexical or
		syntactic error (for instance, when parsing a specification
		containing CR/LF characters). This problem, which only
		occurred for "mac64" binaries and not for "mac86" binaries,
		was caused by a bug in the error recovery module of the
		SYNTAX compiler generator. This bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2465
Date:		Mon Oct 29 14:34:51 CET 2018
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.adt, bin.*/caesar.old,
		bin.*/caesar.indent, bin.*/exp2c, bin.*/fsp2lotos,
		bin.*/lnt2lotos, bin.*/mcl_expand, bin.*/svl_kernel,
		bin.*/xtl

Nature:		The error and warning messages of most CADP compilers have
		been unified. Most messages now start with ""error: " or
		"warning: ", rather than "Error: ", "Error : ", "Error:\t",
		etc.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2466
Date:		Mon Nov 12 12:23:02 CET 2018
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/nupn_info, src/nupn/void_removal.awk, man/*/nupn_info.*

Nature:		A new option ``-void-removal'' has been added to NUPN_INFO.
		This option cleans up a NUPN by deleting its void units.
		The NUPN_INFO manual page has been updated accordingly.
-------------------------------------------------------------------------------
VERSION 2018-k "Uppsala"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2467
Date:		Thu Nov 22 15:50:33 CET 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c, com/exp.open, man/*/exp.open.*

Nature:		A new option ``-depend'' has been added to EXP2C and EXP.OPEN.
		This option displays both:
		 - the list of EXP files included (directly or transitively)
		   in the input EXP file,
		 - the list of automata, hide, rename, and cut files used
		   (directly or transitively) in the input EXP file.
		The manual page of EXP.OPEN has been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2468
Date:		Tue Dec  4 10:10:37 CET 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/xtl

Nature:		The XTL compiler would cause segmentation faults when dealing
		with XTL programs containing declarations of external types
		without the pragmas ``!printedby'' or ``!comparedby''. This
		bug was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2469
Date:		Thu Dec  6 19:34:02 CET 2018
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.sol86/*, bin.sol64/*,  com/rfl, com/tst, com/svl,
		src/com/cadp_basename, src/com/cadp_compiler,
		src/com/cadp_echo, src/com/cadp_hostname,
		src/com/cadp_print, src/com/cadp_temporary,
		src/com/lnt_depend, src/com/lnt_name,
		src/com/xeuca_ps, src/svl/standard

Nature:		The CADP toolbox has been ported to the operating system
		SunOS 5.11 OpenIndiana ("Hipster"), which can be seen as
		the open-source version of Oracle Solaris 11.

		The following OpenIndiana packages should be installed
		before using CADP: "cc", "system/header", "gnuplot", and
		"gnu-indent".

		Package "compatibility/ucb" should NOT be installed, as the
		/usr/ubc/tr command is buggy. Additionally, this package
		will be soon removed from Solaris 11.

		Many "sol86" and "sol64" binaries of CADP have been upgraded
		to work on OpenIndiana (as well as Solaris 10 and 11).

		Many shell scripts of CADP have been modified not to use
		the "/usr/ucb" executables any longer (including "echo -n").

		Some scripts have also been modified not to use "tr" with
		character ranges (e.g. "tr [A-Z] [a-z]"), since "/usr/bin/tr"
		on OpenIndiana currently behaves improperly if the locale is
		different from "C".

		The "cadp_compiler" shell script has been updated to support
		the Sun C 5.15 compiler (Oracle Studio 12.6) as well as
		recent, non-Apple versions of CLANG.

		The "cadp_temporary" shell script has been modified to avoid
		a bizarre problem with "mktemp" on OpenIndiana.
-------------------------------------------------------------------------------
BUG FIX
Number:		2470
Date:		Fri Dec  7 11:13:46 CET 2018
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/xtl

Nature:		The XTL compiler could generate invalid C code for XTL
		programs containing "too many" (e.g., more than 5)
		declarations of external functions. Such C code was then
		rejected by the C compiler with an error message such as:
		   implicit function declaration: XTL_FUNCTION_297
		This bug was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2471
Date:		Sat Dec  8 11:06:53 CET 2018
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/com/cadp_indent

Nature:		On Solaris with recent versions of GNU indent installed, the
		invocation of "cadp_indent" could leave backup files (with
		file name ending with "~") in the current directory. This
		problem was caused by a bug of GNU indent, whose --version
		option terminates with a non-zero exit code (see for details
		https://savannah.gnu.org/bugs/?55153). The "cadp_indent"
		script has been modifed to detect and avoid this problem.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2472
Date:		Wed Dec 12 23:42:11 CET 2018
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/installator/installator.tcl

Nature:		Some messages of INSTALLATOR concerning stable versions and
		beta versions could be confusing. These messages have been
		modified to be explicit and more precise.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2473
Date:		Thu Dec 13 10:54:00 CET 2018
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		A new option "-trivial" has been added to CAESAR.BDD.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2474
Date:		Thu Dec 13 15:46:45 CET 2018
Report:		David N. Jansen (Radboud Universiteit, The Netherlands),
		Thomas Lambolais (Ecole des Mines, Ales, France)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		INSTALLATION_MACOS, INSTALLATION_OSX

Nature:		The instructions given in file INSTALLATION_MACOS to set
		the hostname statically were incorrect (dots are not
		accepted for setting the value of LocalHostName, but
		dashes are) and have been modified.

		Also, file INSTALLATION_OSX, which was a symbolic link to
		INSTALLATION_MACOS provided for backward compatibility
		(see item #2253 above) has been removed.
-------------------------------------------------------------------------------
VERSION 2018-l "Uppsala"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2475
Date:		Tue Jan  8 15:42:26 CET 2019
Authors:	Hubert Garavel, Frederic Lang, and Armen Inants (INRIA/
		CONVECS)
Files:		man/*/aldebaran.*, man/*/bcg_cmp.*, man/*/bcg_info.*,
		man/*/bcg_io.*, man/*/bisimulator.*,
		man/*/caesar_diagnostic.*, man/*/caesar_stack_1.*,
		man/*/cunctator.*, man/*/declarator.*, man/*/determinator.*,
		man/*/distributor.*, man/*/evaluator3.*, man/*/evaluator4.*,
		man/*/executor.*, man/*/exhibitor.* man/*/exp.*,
		man/*/exp.open.*, man/*/seq.open.*, man/*/fsp2lotos.*,
		man/*/fsp.open.*, man/*/generator.*, man/*/ocis.*,
		man/*/predictor.*, man/*/projector.*, man/*/reductor.*,
		man/*/scrutator.*, man/*/simulator.*, man/*/seq.*
		man/*/svl.*, man/*/svl-lang.*, man/*/terminator.*,
		man/*/tgv.*, man/*/xsimulator.*

Nature:		In all the CADP manual pages, the "SEQUENCE format" has
		been renamed to "SEQ format", so as to create a symmetry
		with the other formats AUT, BCG, EXP, etc.

		A new manual page "seq" has been added, which provides a
		standalone definition of the SEQ format. Such definition
		is no longer given by the "exhibitor" manual page, which
		has become much shorter and more readable. The organization
		of these pages has been improved by permuting some sections,
		adding subsections, and giving better explanations. Armen
		Inants proofread the new "seq" and "exhibitor" pages and
		suggested further enhancements.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2476
Date:		Wed Jan  9 18:10:49 CET 2019
Authors:	Frederic Lang, Hubert Garavel, Radu Mateescu, and Armen
		Inants (INRIA/CONVECS)
Files:		man/*/bes.*, man/*/bes_solve.*, man/*/caesar_solve_1,
		man/*/rbc.*, doc/*/Garavel-92-a.*

Nature:		A new manual page has been written to provide a definition
		of CADP's BES format for specifying Boolean Equation Systems.

		The contents of this new page are based on material already
		present in the "caesar_solve_1" and "rbc" manual pages,
		but the contents have been entirely revised and several
		ambiguities have been clarified.

		Consequently, the "caesar_solve_1" and "rbc" manual pages
		are now shorter, and reference the new "bes" manual page.
		The "bes_solve" manual page was updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2477
Date: 		Fri Jan 11 19:30:13 CET 2019
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/libcaesar.a, incl/caesar_solve_2.h,
		man/*/caesar_solve_2.*, doc/*/Garavel-92-a.*

Nature:		The OPEN/CAESAR environment was enhanced with a new generic
		library (named CAESAR_SOLVE_2) for solving linear equation
		systems on the fly. A manual page for this library (10 pages)
		was written. Consequently, the OPEN/CAESAR Reference Manual
		now has 215 pages.
-------------------------------------------------------------------------------
BUG FIX
Number:		2478
Date:		Sat Jan 12 14:09:32 CET 2019
Report:		Yann Genevois (INRIA/VASY)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt_depend, bin.*/lnt2lotos, bin.*/lpp,
		src/com/lnt_depend, src/com/lnt_open, src/svl/standard,
		man/*/svl.*, doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		So far, the LNT_DEPEND tool, which computes dependencies
		between LNT modules, was implemented by a tricky, yet
		concise 250-line shell script implemented using "sed" and
		regular expressions.

		Unfortunately, this shell script did not handle comments
		spanning over several lines with nesting-like patterns,
		such as occurrences of (* ... (* ... *) at the beginning
		of an LNT file. Consequently, certain included LNT modules
		were not detected, leading LNT2LOTOS to produce incomplete
		LOTOS specifications that did not compile (e.g., because
		certain type definitions were missing).

		A new version of LNT_DEPEND is now provided, which is no
		longer implemented as a shell script, but as a genuine
		executable program developed using the SYNTAX compiler
		generator. Not only, this new version fixes the above
		problem, but it is also significantly faster. For instance,
		the time needed to process some LNT specifications of demo_38
		has decreased from 7 to 2.3 seconds.

		The former shell script "src/com/lnt_depend" has been removed
		and replaced by executables located in "bin.*/lnt_depend".
		The version number of LNT2LOTOS has been increased to 6.8;
		SVL files, documentation, and manual pages have been updated
		accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2479
Date:		Sat Jan 12 15:45:55 CET 2019
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		src/eucalytus/eucalyptus.tcl,
		src/eucalyptus/help/ft.ISO_LOTOS_Specs,
		src/eucalyptus/help/ft.LOTOS_Libraries

Nature:		The Help menu of the EUCALYPTUS graphical interface has been
		updated to reflect recent changes in the CADP documentation:

		- The menu now gives access to the "bes", "nupn_info", "seq",
		  and "scrutator" manual pages.

		- The former page concerning "ISO LOTOS Specs" has been
		  removed and replaced by an access to the "lotos" manual
		  page, which is by far more complete.

		- The page concerning "LOTOS Libraries" has been updated.
-------------------------------------------------------------------------------
VERSION 2019-a "Pisa"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2480
Date:		Mon Jan 14 10:45:04 CET 2019
Authors:	Hubert Garavel, Armen Inants, Frederic Lang, and Radu
		Mateescu (INRIA/CONVECS)
Files:		man/*/bes.*, man/*/caesar_solve_1.*, man/*/caesar_solve_2.*,
		man/*/exhibitor.*, man/*/seq.*

Nature:		The manual page of CAESAR_SOLVE_1 has been enhanced with a
		new introduction. The BES, CAESAR_SOLVE_2, EXHIBITOR, and
		SEQ manual pages have been corrected and improved at
		various places.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2481
Date:		Wed Jan 16 11:07:35 CET 2019
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt_depend, bin.*/lnt2lotos, com/lnt.open,
		man/*/ln2lotos.*, man/*/lnt.open.*

Nature:		A new option "-depend" has been added to the LNT_DEPEND,
		LNT2LOTOS, and LNT.OPEN tools.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2482
Date:		Fri Jan 18 15:21:01 CET 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt_depend,
		demos/demo_05/REPOSITORY.lnt, demos/demo_05/USER.lnt

Nature:		The recently added LNT_DEPEND tool has been modified to
		support the case where the user replaces the predefined
		LNT modules (e.g., BOOLEAN, NATURAL, etc.) with custom
		versions. 

		Two LNT files of demo_05 have been simplified by not
		importing the BOOLEAN and NATURAL libraries explictly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2483
Date:		Mon Feb 11 14:08:45 CET 2019
Report:		Jules Lefrere (MOSIG/HECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/evaluator4

Nature:		The EVALUATOR4 model checker produced a segmentation fault
		when invoked on semantically erroneous formulas containing
		(non-existent) data types with names starting by "A".

		The error was corrected and now the tool properly terminates
		its execution by displaying the appropriate error message:
		    error during type binding phase:
		    unknown external type ``T'' [file.mcl:line]
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2484
Date:		Wed Feb 13 11:45:11 CET 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/nupn_info, src/nupn/redundant_removal.awk 

Nature:		The NUPN_INFO tool has been enhanced with a new option
		"-redundant-removal" that simplifies a NUPN by eliminating
		its redundant units.
-------------------------------------------------------------------------------
VERSION 2019-b "Pisa"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2485
Date:		Tue Mar  5 14:43:59 CET 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The output format used by the "-exclusive-places" option of
		CAESAR.BDD to display the half-matrix of incompatible places
		was too verbose. This format has been slightly modified to
		introduce compression: namely, when some character C is
		followed by an integer (N), this indicates that C must be
		repeated N times.

		Such a simple compression mechanism enables significant
		savings in disk space. On 12671 NUPN examples, a reduction
		by a factor of 214 (mean value) up to 4270 (maximal value)
		was observed. For instance, a file of 8,609,016,152 bytes
		was compressed to 2,095,842 bytes only (i.e., a reduction
		by a factor of 4107). Moreover, the reduction is also
		effective when gzip compression is used, as the size of
		gzipped files is reduced by a factor of 4 (mean value) up
		to 27 (maximal value).

		This change is not backward compatible. Conversion tools
		between the old and new (compressed) format are available
		on demand to cadp@inria.fr. The version number of CAESAR.BDD
		was set to 2.9.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2486
Date:		Mon Mar 11 16:21:28 CET 2019
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/mcl_expand

Nature:		The MCL_EXPAND program version 4.1 distributed as part of
		the CADP toolbox has been replaced by a new program
		MCL_EXPAND version 5.0, which is designed to handle
		probabilistic formulas and is significantly larger
		(with 13,000 lines of LOTOS NT code added, compared to
		MCL_EXPAND 4.1). 

		This change is updward compatible. When used in conjunction
		with the Evaluator 3 and Evaluator 4 model checkers, the
		new version MCL_EXPAND 5.0 should behave as MCL_EXPAND 4.1,
		with three minor changes:

		- Some error messages have been renumbered; for instance:
		     #013 error during syntax analysis phase:
		  is now displayed as
		     #015 error during syntax analysis phase:

		- For incorrect ".mcl" files, the attempts made by the
		  SYNTAX compiler generator to repair syntactic errors may
		  lead to different results, as the BNF grammar has changed.

		- For MCL v4 formulas, the C code generated by MCL_EXPAND v5
		  may be slightly different, as certain optimizations are
		  now performed. For instance, tests of the following form:
		    if (ADT_NOT (ADT_NOT (...))) {
		  have been simplified:
		    if (...) {
-------------------------------------------------------------------------------
BUG FIX
Number:		2487
Date:		Tue Mar 12 16:41:51 CET 2019
Report:		Hubert Garavel (INRIA/CONVECS)
Authors:	Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/mcl_expand

Nature:		MCL_EXPAND 4.1 generated incorrect C code for certain
		MCL formulas containing modalities of the following form:

		    < { ... ?x:T }+ > P (x)

		where "P (x)" is a state formula containing occurrences of
		the data variable "x" initialized and exported by the diamond
		modality. Such C code would not compile properly, leading
		to error messages of the following form:

		   undefined struct/union member: caesar_struct_profile_2
		   left operand of "." must be struct/union object

		This problem was solved as a consequence of the replacement
		of MCL_EXPAND 4.1 by MCL_EXPAND 5.0.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2488
Date:		Wed Mar 13 11:46:13 CET 2019
Report:		Enrico Magnano (FBK, Torino, Italy)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		man/*/caesar_graph.*, doc/*/Garavel-92-a.*

Nature:		The ``caesar_graph'' manual page that defines the Open/Caesar
		Application Programming Interface has been updated to give
		more complete definitions for the CAESAR_FORMAT_STATE() and
		CAESAR_FORMAT_LABEL() primitives. Also, the definitions of
		the two deprecated primitives CAESAR_MAX_FORMAT_STATE() and
		CAESAR_MAX_FORMAT_LABEL() have been shortened.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2489
Date:		Wed Mar 13 12:45:46 CET 2019
Report:		Enrico Magnano (FBK, Torino, Italy)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		man/*/caesar_graph.*, doc/*/Garavel-92-a.*

Nature:		The ``caesar_graph'' manual page has been modified to
		provide more accurate definitions of CAESAR_TYPE_STATE and
		CAESAR_TYPE_LABEL. In particular, the definitions of
		CAESAR_BODY_STATE and CAESAR_BODY_LABEL now require that
		these two types are declared as "struct" types, and make it
		clear that these "struct" types must be named, respectively,
		CAESAR_STRUCT_STATE and CAESAR_STRUCT_LABEL. These new
		definitions are more demanding than the previous ones, but
		they are already respected by all the available Open/Caesar-
		compliant implementations.
-------------------------------------------------------------------------------
VERSION 2019-c "Pisa"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2490
Date:		Mon Apr  1 13:00:22 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		doc/=READ_ME.txt, doc/biblio.bib, doc/pdf/Garavel-15-a.pdf,
		doc/pdf/Garavel-19.pdf, doc/pdf/Mateescu-Sighireanu-00.pdf

Nature:		The "doc" library has been updated in several respects:

		- Paper [Mateescu-Sighireanu-00] has been removed from CADP,
		  since it is subsumed by a more recent one.

		- Paper [Garavel-15-a] has been replaced by [Garavel-19],
		  which is a more recent journal version.

		- Following the migration to OpenIndiana, file "biblio.bib"
		  had been corrupted, all monthly releases of CADP containing
	 	  increasingly larger versions of this file:
		  -r--r----- 1 cadp  cadp      71199 Oct  1  2018 biblio.bib
		  -r--r----- 1 cadp  cadp     142398 Dec 13 12:50 biblio.bib
		  -r--r----- 1 cadp  cadp  194983504 Jan 10 17:57 biblio.bib
		  -r--r----- 1 cadp  cadp  292404057 Feb 13 19:40 biblio.bib
		  -r--r--r-- 1 cadp  cadp  389824610 Mar 13 18:25 biblio.bib
		  The file has been restored to its expected size:
		  -rw-r--r-- 1 cadp  cadp      71207 Apr  1 15:29 biblio.bib
-------------------------------------------------------------------------------
BUG FIX
Number:		2491
Date:		Wed Apr  3 10:38:31 CEST 2019
Report:		Philippe Ledent (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/xtl

Nature:		A bug was fixed in the XTL compiler. This bug caused
		segmentation faults for XTL programs containing implicit
		assignments to the fields of type String of anonymous tuples.
		Such assignments occur, e.g., in the "for ... end_for" loops,
		when the fields of type String of the loop accumulator are
		updated using the "replace" operator. Following this change,
		the version number of XTL was advanced to 1.6.
-------------------------------------------------------------------------------
BUG FIX
Number:		2492
Date:		Fri Apr  5 18:37:47 CEST 2019
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/evaluator4

Nature:		When invoked with the "-expand" option, the EVALUATOR4 model
		checker assumed that the MCL file was present in the current
		directory. If the MCL file was in another directory (given
		by its absolute path name on the command line), EVALUATOR4
		did not find it. This has been corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2493
Date:		Wed Apr 10 11:37:40 CEST 2019
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/evaluator5.a, bin.*/libevaluator.a, bin.*/READ_ME,
		man/*/evaluator5.*, man/*/evaluator.*,
		man/*/mcl5.*, man/*/mcl.*

Nature:		A new model checker named EVALUATOR 5.0 has been added to
		the CADP toolbox. This tool extends EVALUATOR 4.0 with the
		possibility of checking probabilistic properties on the fly.

		The language accepted as input by EVALUATOR 5.0 is MCL v5,
		which extends MCL v4 with a new probabilistic operator. 
		This operator specifies the probability of transition
		sequences described using generalized regular formulas.
		The probabilistic operator is interpreted on Probabilistic
		Labelled Transition Systems (PTSs), whose transition labels
		consist of channel names, data values, and probabilities.

		EVALUATOR 5.0 is backward compatible with EVALUATOR 4.0, to
		which it adds a new option "-epsilon" specifying the precision
		of floating-point computations. The libevaluator.a library
		(common to Evaluator 4 and 5) has been updated.

		Two new manual pages "evaluator5" and "mcl5" have been added.
-------------------------------------------------------------------------------
BUG FIX
Number:		2494
Date:		Thu Apr 12 13:19:05 CEST 2019
Report:		Pierre Bouvier (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		The parser of CAESAR.BDD was too laxist and accepted NUPN
		files that were incorrect according to the "nupn" manual
		page, especially when:

		- Extra characters where present before an end-of-line or
		  before the end-of-file.

		- Spaces were missing between two successive tokens, e.g.
			T0#1...     rather than T0 #1
			units#2...  rather than units #2...
			places#3... rather than places #3...
			rootunit... rather than root unit...
			etc.

		The parser has been revised and made stricter at many places.
		This change is upward compatible, except for some incorrect
		NUPN files that were previously accepted and will now be
		rejected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2495
Date:		Fri Apr 12 15:22:17 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
File:		src/eucalyptus/eucalyptus.tcl

Nature:		The EUCALYPTUS graphical user interface has been updated to
		give the choice between the three versions of Evaluator; the
		menu "Options -> Evaluator version" enables the user to 
		choose between versions 3, 4, or 5. Previously, only
		version 3 could be used within EUCALYPTUS.

		Also, the "Help" menu of EUCALYPTUS now gives access to the
		new manual pages MCL5 and EVALUATOR5.
-------------------------------------------------------------------------------
VERSION 2019-d "Pisa"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2496
Date:		Tue Apr 16 11:11:31 CEST 2019
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		com/svl, bin.*/svl_kernel, man/*/svl.*, man/*/svl-lang.*

Nature:		The SVL language has been updated to support version 5 of
		EVALUATOR. The manual pages have been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2497
Date:		Wed Apr 17 16:43:05 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/nupn_info, src/com/cadp_awk,
		src/com/nupn/place_fusion.awk,
		src/com/nupn/redundant_removal.awk,
		src/com/nupn/void_removal.awk,  man/*/nupn_info.*

Nature:		Various enhancements have been made to the NUPN_INFO tool:

		- From now on, when NUPN_INFO is called with an unknown
		  option, it no longer invokes CAESAR.BDD with this option.

		- From now on, NUPN_INFO no longer sends error messages
		  to its standard error; such messages are sent to the
		  standard output.

		- The options "-place-fusion", "-redundant-removal", and
		  "-void-removal" have been made faster by invoking
		  CAESAR.BDD appropriately.

		- The script ``cadp_awk'' has been adapted to better support
		  OpenIndiana and Solaris 11.

		The NUPN_INFO manual page has been updated to reflect these
		changes and to document the "-redundant-removal" option. 
		More details concerning the other options ("-trivial-units",
		"-place-fusion", and "-void-removal") have also been added.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2498
Date:		Fri Apr 19 16:45:56 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/nupn_info, src/com/cadp_awk,
		src/nupn/canonical-nupn.awk, man/*/nupn_info.*

Nature:		NUPN_INFO has been extended with a new "-canonical-nupn"
		option that attempts to normalize a NUPN file by removing
		tabulations, extra spaces and empty lines, sorting the list 
		of units and the list of transitions by increasing numbers,
		and also sorting the lists of sub-units, of input places, 
		and output places of transitions. The manual page of
		NUPN_INFO has been extended to document this new option.

		The outputs produced by the "-redundant-removal" and
		"-void-removal" options of NUPN_INFO are now automatically
		put under such a normalized form by invoking NUPN_INFO with
		its "-canonical-nupn" option.
-------------------------------------------------------------------------------
BUG FIX
Number:		2499
Date:		Wed Apr 24 12:16:21 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/nupn/redundant-removal.awk, src/nupn/place-fusion.awk,
		src/nupn/library.awk, man/*/nupn_info.*
		
Nature:		NUPN_INFO, when invoked with its "-redundant-removal" option,
		could generate incorrect NUPN files if the places of a
		redundant unit U did not have contiguous numbers with the
		places of the unit with which U was merged. This problem has
		been solved by adding code to properly renumber places
		when merging redundant units. A library file "library.awk"
		has been added to provide common Awk code shared by both
		"-redundant-removal" and "-place-fusion" options.
-------------------------------------------------------------------------------
BUG FIX
Number:		2500
Date:		Mon Apr 29 17:41:23 CEST 2019
Report:		Frederic Lang (INRIA/CONVECS)
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt_depend

Nature:		LNT_DEPEND could make segmentation faults on certain
		architectures (e.g., x64 but not sol64) when parsing
		module headers referencing predefined types, such as:
		   module REPOSITORY (NATURAL, BOOLEAN, FILES) is ...
		This bug has been solved.
-------------------------------------------------------------------------------
BUG FIX
Number:		2501
Date:		Tue Apr 30 15:32:36 CEST 2019
Report:		Frederic Lang (INRIA/CONVECS)
Authors:	Hubert Garavel and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt_depend

Nature:		On Solaris, LNT_DEPEND could issue "false positive" messages:
		   lnt_depend: recursive inclusion of module "BOOLEAN"
		   lnt_depend: recursive inclusion of module "NATURAL"

		Also, on Linux, LNT_DEPEND could emit several times the
		same warning; for instance, the following warnings could
		be displayed 9 times each:
		   lnt_depend: warning: ignoring predefined pseudo-module
		               BOOLEAN
		   lnt_depend: warning: ignoring predefined pseudo-module
		               NATURAL

		The SYNTAX compiler-generation system has been enhanced to
		better handle transitive inclusions of the same modules.
		Consequently, LNT_DEPEND is now faster and displays (only
		once) more informative messages, such as:
		    lnt_depend: warning: ignoring predefined pseudo-module
		                BOOLEAN included by "./QUEUE.lnt"
		    lnt_depend: warning: ignoring predefined pseudo-module
		                NATURAL included by "./REPOSITORY.lnt"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2502
Date:		Mon May  6 11:08:20 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		man/*/nupn.*, bin.*/caesar, bin.*/caesar.old,
		bin.*/caesar.bdd, src/com/nupn/redundant_removal.awk,
		src/com/nupn/void_removal.awk

Nature:		The definition of the NUPN format has slightly evolved.
		Previously, spaces and tabulations could be used freely
		where a single space was allowed. From now on, the rules
		have been made stricter: tabulations are prohibited;
		multiple spaces are not permitted; spaces are not permitted
		at the beginning or end of a line; empty or blank lines are
		forbidden.

		Such new rules provide a canonical form for ``.nupn'' files,
		prohibiting files that differ only due to spaces. They also
		make it simpler to parse ``.nupn'' files using script
		languages such as Awk, without lowering the format
		readability for humans. For instance, it becomes certain
		that useful information always starts in column one of
		each line.

		Such a format change is not upward compatible, in the
		sense that formerly valid NUPN files may no longer be
		accepted under the new rules. However, one can use
		NUPN_INFO with its "-canonical-nupn" option to convert
		files from the old to the new format.

		The CAESAR compiler has been modified to generate ``.nupn''
		files complying with the new rules. Precisely, CAESAR no
		longer generates lines ending with a space before the
		newline character.

		The parser of CAESAR.BDD has been modified to reject NUPN
		files violating the new rules.

		Finally, the Awk code of NUPN_INFO that implements the
		options "-redundant-removal" and "-void-removal" has been
		simplified and made faster due to the new rules.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2503
Date:		Fri May 10 10:32:42 CEST 2019
Author:		Radu Mateescu (INRIA/CONVECS)
File:		bin.*/mcl_expand

Nature:		MCL_EXPAND 5.0 displays warnings when it detects the presence
		of nondeterminism in the regular formulas on transition
		sequences occurring in probabilistic operators. For regular
		formulas involving typed variables and conditions on data
		values, this detection cannot be completely done statically.

		This detection has been enhanced by refining the equality test
		between data expressions, such that some action predicates that
		were previously considered as different are now recognized as
		equivalent. This reduces the number of warnings produced by
		MCL_EXPAND 5.0 about nondeterminism in probabilistic formulas.
-------------------------------------------------------------------------------
BUG FIX
Number:		2504
Date:		Sun May 12 10:24:32 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		The parser of CAESAR.BDD for the NUPN format could enter into
		an infinite loop if the end of file would occur when parsing
		a "!creator" pragma, a "!unit_safe" pragma, or an unknown
		pragma (e.g., "!wrong"). This bug has been fixed, so that
		CAESAR.BDD now stops with a proper error messages on such
		truncated NUPN files.

		Additionally, the error messages emitted when unexpected
		characters are present before the end of a line, or before
		the end of file, have been made more informative.
-------------------------------------------------------------------------------
VERSION 2019-e "Pisa"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2505
Date:		Wed May 15 16:37:39 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		./INSTALLATION_MACOS, http://cadp.inria.fr/macOS.html,
		com/tst, src/com/cadp_awk, src/com/install_uncompress,
		installator.shar

Nature:		The installation directives for macOS have been extended to
		support the Homebrew package system, as an alternative to
		MacPorts, which was already supported (indeed, Homebrew and
		MacPorts seem to be incompatible).

		The TST and "install_uncompress" scripts have been updated to
		detect and use the GNU tar binary that is installed by
		Homebrew in /usr/local/bin/gtar.

		The "cadp_awk" script has been modified to use the GNU awk
		binary rather than the standard /bin/awk shipped with macOS.
		The INSTALLATION_MACOS directives have been updated to
		document the installation of GNU awk using either Homebrew
		or MacPorts. The TST command has been updated to check the
		presence of a GNU awk binary.
-------------------------------------------------------------------------------
BUG FIX
Number:		2506
Date:		Thu May 16 10:08:26 CEST 2019
Report:		Radu Mateescu (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:          bin.*/svl_kernel

Nature:		A bug was found in the expansion of SVL meta-operators.
		Hiding was propagated under cut (and vice-versa), leading to
		incorrect behaviour. For instance:
			hide A in cut A in P
		could be expanded to:
			cut A in hide A in P
		which is not semantically equivalent. This bug was fixed.
------------------------------------------------------------------------------
IMPROVEMENT
Number:		2507
Date:		Thu May 23 17:23:01 CEST 2019
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:          bin.*/caesar.bdd, bin.*/caesar, bin.*/caesar.old,
		bin.*/exp2c, com/nupn_info, ext/a2ps/nupn.ssh,
		ext/emacs/nupn-mode.el, ext/gtk3/nupn.lang,
		ext/jedit/nupn.xml, ext/latex-listings/cadp-nupn.sty,
		ext/nano/nupn.nanorc, ext/npp/nupn.xml, ext/vim/nupn.vim,
		ext/vim/svl.vim, src/nupn/canonical_nupn.awk,
		src/nupn/label_length.awk, src/nupn/library.awk,
		src/nupn/place_fusion.awk, src/nupn/redundant_removal.awk,
		src/nupn/trivial_unit.awk, src/nupn/void/removal.awk,
		man/*/caesar.bdd.*, man/*/nupn.*, man/*/nupn_info.*

Nature:		The NUPN format has been extended with a "labels" section
		that enables places, transitions, and/or units to be given
		(optional) names. This extension is upward compatible in the
		sense that the old NUPN format is a subset of the new one.
		Technically, the NUPN grammar on the "nupn" manual page now
		defines 9 new non-terminals (<label-description>, <place-flag>, 
		<trans-flag>, <unit-flag>, <label-length>, <place-label>,
		<trans-label>, <unit-label>, and <label>) and 14 new semantic
		rules numbered from 37 to 50. Additionally, the non-terminal
		<transition-nb> was renamed into <trans-nb> for symmetry
		reasons.

		The CAESAR.BDD tool has been updated to implement the new
		NUPN format and the "-check" option implements all the checks
		defined by the semantic rules. The "-mcc" option no longer
		reads auxiliary ".places" and ".trans" files, as the relevant
		information is now provided by the "labels" section of the
		input ".nupn" file. The version number of CAESAR.BDD has
		been advanced to 3.0.

		The CAESAR compiler has been modified, so that its "-nupn"
		and "-prenupn" options now produce NUPN files with a "labels"
		section containing transition labels. The version numbers
		of CAESAR.OLD and CAESAR have been set to 6.9 and 7.7,
		respectively.

		The EXP.OPEN tool has been modified, so that its "-nupn"
		option now produces NUPN files with a "labels" section
		containing place, transition, and unit labels. The version
		number of EXP.OPEN has been advanced to 2.7.

		The NUPN_INFO tool was updated so that all its options now
		handle the potential presence of a "labels" section. Moreover,
		the "-canonical-nupn" option has been extended to remove
		useless "labels" lines and to automatically compute the
		exact maximal label length (to do so, a new "label_length.awk"
		script has been added).

		Finally, all the editor style files for the NUPN format have
		been updated to recognize the new "labels" keyword.
------------------------------------------------------------------------------
BUG FIX
Number:		2508
Date:		Wed May 29 11:07:23 CEST 2019
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/libevaluator.a

Nature:		When assigning probabilities to the transitions going out of
		a state, the EVALUATOR 5 model checker may have to normalize
		the probabilities of neighbour transitions. This requires a
		comparison of probabilities with 1.0. This comparison, which
		needs to be done up to the precision given by the "-epsilon"
		option, was too sloppy and caused erroneous results when the
		sum of probabilities assigned to transitions was close to 1.0.
		This bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2509
Date:		Mon Jun  3 12:05:13 CEST 2019
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
File:		bin.*/xtl, bin.*/libXTL.a, man/*/xtl-lang.*

Nature:		A new function "string" that converts transition labels to
		character strings was added to the XTL language. This function
		is useful for manipulating the entire content of a label
		(e.g., comparing it with a given string value, printing it on
		standard output, etc.). The manual page of the XTL language
		has been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2510
Date:		Thu Jun  6 14:40:13 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
File:		com/nupn_info

Nature:		In some cases, NUPN_INFO invoked with its "-void-removal" or
		"-redundant-removal" options would return the exit code 1
		rather than 0, although the result displayed on the standard
		output was correct. This problem has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2511
Date:		Fri Jun  7 14:49:44 CEST 2019
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/libevaluator.a

Nature:		When checking MCL formulas containing probabilistic operators,
		EVALUATOR 5 did not detect properly the case where all the
		transitions going out of a state of the PTS (probabilistic
		transition system) are assigned probability zero. Such case
		is equivalent to deleting all the transitions going out of
		that state, which thus becomes a sink state (deadlock), a
		forbidden situation since, for any state, the sum of the
		probabilities of outgoing transitions must by equal to one.
		Such bug, which caused an abnormal termination with an
		arithmetic exception, has been fixed, so that EVALUATOR 5 
		now halts its execution with an appropriate error message.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2512
Date:		Tue Jun 11 15:08:15 CEST 2019
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/libevaluator.a

Nature:		The error and warning messages displayed by EVALUATOR 5 when
		computing the probabilities to be assigned to transitions
		have been enhanced. The new messages are similar to the other
		error and warning messages emitted by the tool, and give more
		precise information about the assignment of probabilities
		(already present in the PTS, set on the fly using a "-rename"
		option, computed by normalization, etc.).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2513
Date:		Wed Jun 12 14:40:24 CEST 2019
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/mcl_expand

Nature:		The vacuity checks carried out by MCL_EXPAND have been 
		enhanced to detect and report tautological MCL formulas of
		the following form "< R > @", when the regular expression R
		matches the empty word "nil". Indeed, such formulas express
		the existence of traces consisting of an infinite repetition
		of subsequences satisfying R; if R matches "nil", such
		formulas are true on any state of the transition system,
		because from any state there is an (empty) transition sequence
		consisting of the infinite repetition of "nil". From now on,
		MCL_EXPAND, which is called by all versions of EVALUATOR, 
		detects (a safe approximation of) these formulas and displays
		an appropriate warning message.
-------------------------------------------------------------------------------
VERSION 2019-f "Pisa"
-------------------------------------------------------------------------------
BUG FIX
Number:		2514
Date:		Fri Jun 14 08:28:19 CEST 2019
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/xtl

Nature:		A bug was fixed in the XTL compiler, which could cause an
		error message "double free or corruption" on Linux when the
		XTL input file was syntactically incorrect.
-------------------------------------------------------------------------------
BUG FIX
Number:		2515
Date:		Wed Jun 19 10:35:23 CEST 2019
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c

Nature:		There was a bug in EXP.OPEN when the composition expression
		contained a renaming or hiding rule, some pattern of which
		started with blank characters. In that case, the leading blank
		characters were ignored.

		For instance, in:
		    single rename " Y" -> "" in "a.bcg" end rename
		the label "X YZ" of "a.bcg" was incorrectly renamed into
		"X Z" instead of "XZ".

		Similarly, in:
		    partial hide " Y" in "a.bcg" end hide
		the label "XY" of "a.bcg" was unexpectedly hidden.

		This bug was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2516
Date:		Thu Jun 27 12:36:23 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		caesar.bdd, man/*/caesar.bdd.*

Nature:		The documentation of CAESAR.BDD stated that the two options
		"-concurrent-units" and "-dead-transitions" would, in case of
		an interrupt or a timeout expiration, terminate immediately
		and return the exit code 5. However, upon timeout, these
		options could terminate abruptly, e.g.:

		   $ export CAESAR_BDD_TIMEOUT=1
		   $ caesar.bdd -concurrent-units file.nupn
		   caesar.bdd: caught signal SIGBDD (timeout after 1 seconds)
		   Segmentation fault (core dumped)

		or

		   $ export CAESAR_BDD_TIMEOUT=1
		   $ caesar.bdd -dead-transitions file.nupn
		   caesar.bdd: caught signal SIGBDD (timeout after 1 seconds)
		   Segmentation fault (core dumped)

		These segmentation faults have been suppressed. Moreover,
		upon interrupt or timeout, these two options no longer 
		terminate immediately, but stop the BDD-based exploration of
		reachable markings and return, making pessimistic assumptions,
		a valid output that can contain unknown values noted ".".

		The CAESAR.BDD manual page has been modified to document the
		new behaviour and the modified output formats with its
		unknown values.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2517
Date:		Thu Jun 27 18:46:39 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, bin.*/caesar, bin.*/caesar.old,
		man/*/caesar.bdd.*

Nature:		The output format of the "-dead-transitions" option of
		CAESAR.BDD has been modified, so that all the vector values
		are displayed on a single line rather than one line each.
		This makes the new format more concise (by 50%) and easier
		to read for humans. The CAESAR.BDD manual page, and the
		CAESAR and CAESAR.OLD tools have been updated accordingly.

		Also, the option "-dead" of CAESAR.BDD, which was a synonym
		of "-dead-transitions" kept for backward compatibility (see
		item #1827 above) is no longer accepted. From now on, only
		"-dead-transitions" is accepted by CAESAR.BDD.
-------------------------------------------------------------------------------
BUG FIX
Number:		2518
Date:		Fri Jun 28 14:01:00 CEST 2019
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/xtl

Nature:		When evaluating "exists" (resp. "forall") expressions that
		quantify several variables, the XTL compiler did not terminate
		the evaluation immediately after the body of the quantifier
		became true (resp. false). This bug has been corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2519
Date:		Fri Jun 28 16:28:22 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, bin.*/caesar, bin.*/caesar.old,
		man/*/caesar.bdd.*

Nature:		The output format of the "-concurrent-units" of CAESAR.BDD
		has been modified to be 50% more compact (namely, the spaces
		between characters in the generated half matrix have been
		removed). The CAESAR.BDD manual page, and the CAESAR and
		CAESAR.OLD have been updated accordingly.

		Additionally, the "-unit" option, which was merely an alias
		of "-concurrent-units" kept for backward compatibility (see
		item #1829 above) has been removed; From now on, only
		"-concurrent-units" is accepted.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2520
Date:		Thu Jul  4 11:48:27 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd.*, man/*/caesar.bdd.*

Nature:		CAESAR.BDD has been enriched with two new options named
		"-initial-units" and "-permanent-units", respectively. The
		manual page has been updated.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2521
Date:		Thu Jul  4 13:01:39 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd.*, man/*/caesar.bdd.*

Nature:		The "-encodings" option of CAESAR.BDD has been extended to
		take into account 4 new encodings suggested in Section 6.3
		(entitled "Further Encoding Schemes for NUPN Markings") of
		[Garavel-19], in addition to the 5 encodings already computed
		by this option. These new encodings are based on the
		determination of "permanent" units, i.e., units that have
		one token in the initial marking and never lose this token;
		in such case, one can have more compact encodings by not
		considering the cases where such units have no token.

		The output format of the "-encodings" option has slightly
		evolved. For instance, the former output:

		comparison of possible binary encodings
		 - one-bit-per-place encoding                         = 47
		 - log2(N)+1 encoding of unit places                  = 26
		 - log2(N+1) encoding of unit places                  = 21
		 - log2(N)+1 encoding of unit places with overlapping = 26
		 - log2(N+1) encoding of unit places with overlapping = 21

		is now displayed as follows:

		comparison of possible binary encodings:
		(a) one-bit-per-place encoding                         = 47
		(b) log2(N)+1 encoding of unit places                  = 26
		(c) log2(N+1) encoding of unit places                  = 21
		(d) log2(N)+1 encoding of unit places with overlap     = 26
		(e) log2(N+1) encoding of unit places with overlap     = 21
		(f) log2(N)+1 encoding of unit places with permanency  = 20
		(g) log2(N+1) encoding of unit places with permanency  = 20
		(h) log2(N)+1 encoding of unit places with overlap and
		permanency = 26
		(i) log2(N+1) encoding of unit places with overlap and
		permanency = 20

		The "-bits" et "-hwb" options of CAESAR.BDD have also been
		modified to use encoding (i) rather than encoding (e), which
		was the previous choice. This may change the HWB code of
		a small proportion of NUPN models.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2522
Date:		Fri Jul  5 12:15:32 CEST 2019
Report:		Pierre Bouvier (INRIA/CONVECS)
Authors:	Hubert Garavel and Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/mcl_expand, com/tst

Nature:		Some preliminary changes have been brought to CADP in order
		to provide support for the forthcoming Debian 10.0 Linux
		distribution. These changes are the following:

		1) The TST script has been modified to not display the
		spurious warning on Debian 10:
		*** The CADP software might not work correctly on Debian 10.0
		==> Please upgrade to Debian 2.2 (potato) or higher

		2) The TST command no longer checks the presence of "ed"
		on Unix machines, as the "ed" command is only used for the
		Windows version of CADP.

		3) The C code generated by MCL_EXPAND (and subsequently used
		by all versions of EVALUATOR) was modified to avoid warnings
		of the following form:
		    this statement may fall through [-Wimplicit-fallthrough=]
		emitted by Gcc 8.4.0, which is shipped with Debian 10.
-------------------------------------------------------------------------------
BUG FIX
Number:		2523
Date:		Tue Jul  9 15:57:02 CEST 2019
Report:		Pierre Bouvier (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		Following the extension of the NUPN format with a "labels"
		section (see item #2507 above), the "-check" section of
		CAESAR.BDD would generate incorrect messages for ".nupn"
		files containing place labels and/or transition labels. For
		instance, it displayed:
		   3 places are never marked, e.g., place ``x''
		   7 transitions can never fire, e.g., transition ``x''
		rather than:
		   3 places are never marked, e.g., place 0
		   7 transitions can never fire, e.g., transition 21
		This error was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2524
Date:		Tue Jul  9 17:14:59 CEST 2019
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/exp2c

Nature:		Following the extension of the NUPN format with a "labels"
		section (see item #2507 above), the "-nupn" option of EXP2C
		and EXP.OPEN was updated in May 2019 to generate the extended
		NUPN format. However, this generation was incorrect, since
		the lines of the "labels" section started with upper-case
		letters ("T", "P", and "U") rather than lower-case ones ("t",
		"p", and "u"). This error has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2525
Date:		Wed Jul 10 14:58:51 CEST 2019
Report:		Franco Mazzanti (ISTI-CNR, Pisa, Italy)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		com/bcg_open, com/caesar.open, com/exp.open, com/seq.open,
		src/com/cadp_dylib

Nature:		On recent macOS versions, the Xsimulator tool had stopped
		working properly, and would abort with the following error
		message:

		   $ dyld: Library not loaded: /noprefix/lib/libtk8.4.dylib 
		   Referenced from: /private/tmp/d1/./xsimulator 
		   Reason: image not found 
		   sh: line 1: 11663 Abort trap: 6 ./xsimulator - 

		This problem was due to Apple's System Integrity Protection
		mechanism, which ignores or resets the environment variable
		$DYLD_LIBRARY_PATH used by Xsimulator. The issue was solved
		by introducing an auxiliary script "cadp_dylib", which is
		invoked by "bcg_open", "caesar.open", "exp.open", and
		"seq.open".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2526
Date:		Wed Jul 10 16:17:58 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The "-exclusive-places" option of CAESAR.BDD has been removed
		and replaced by a new option named "-concurrent-places".
		The output of the new option is the similar to that of the 
		former option but, in the generated half matrix, each "0" is
		replaced by "1" and each "1" is replaced by "0". The manual
		page has been updated accordingly.

		Such a change matches the concept of "concurrency relation"
		that can be found in the scientific literature (see, e.g.,
		the relation "Ui || Uj" defined in [Garavel-Serwe-06]),
		whereas the concept of exclusive places formerly computed
		by CAESAR.BDD was much less common.

		Because this change and a few previous ones are not backward
		compatible, the version number of CAESAR.BDD was set to 3.1.
-------------------------------------------------------------------------------
BUG FIX
Number:		2527
Date:		Thu Jul 11 11:31:13 CEST 2019
Report:		Wendelin Serwe (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		src/svl/standard

Nature:		In rare cases, commands executed by SVL could fail, depending
		on the contents of the current directory. For instance, the
		following SVL script:
		    % DEFAULT_PROCESS_FILE="spec.lnt"
		    "ALTERNATE_R3.bcg" = generation of ALTERNATE [R3] (DOWN);
		failed if the current directory contained a file named either
		"R" or "3", because SVL called the following command:
		    eval lnt.open -root 'ALTERNATE [R3] (DOWN)' ...
		where "[R3]" was interpreted as a shell regular expression
		that could expand to "R" and/or "3" if files with such a name
		were present in the current directory. This problem was fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2528
Date:		Thu Jul 11 18:28:43 CEST 2019
Report:		Gwen Salaun (INRIA/CONVECS),
		Franco Mazzanti (ISTI-CNR, Pisa, Italy)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		tcl-tk/lib-tix/Grid.tcl, tcl-tk/lib-tix/HList.tcl,
		tcl-tk/lib-tix/Init.tcl, tcl-tk/lib-tix/TList.tcl

Nature:		On 64-bit macOS, the OCIS simulator did not work properly
		and aborted with an error message of the following form:

		   $ Error in startup script: Can't find a usable Init.tcl
		   in the following directories:
		   ...
		   $CADP/tcl-tk/lib-tix/Init.tcl: no event type or button
		   # or keysym
		   no event type or button # or keysym
		       while executing
		   "bind TixHList <MouseWheel> {
		   ...
		   This probably means that Tix wasn't installed properly.
		   ...
		   "package require Tix"
		       (file "$CADP/src/ocis/ocis.tcl" line 17)

		This problem with Tix was similar to the one for Tk fixed
		in February 2018 (see item #2400 above). A solution was
		brought by modifying 4 files of the Tix library.
-------------------------------------------------------------------------------
VERSION 2019-g "Pisa"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2529
Date:		Tue Jul 16 09:36:55 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd.*, bin.*/caesar , bin.*/caesar.old,
		man/*/caesar.bdd.*

Nature:		From now on, the half matrix displayed by CAESAR.BDD's
		"-concurrent-units" option is compressed using the same
		algoritm as for the "-concurrent-places" (see item #2485
		above). Measured on a collection of 13588 NUPNs, the disk
		space required to store the corresponding half matrices
		was divided by 6.4.

		The CAESAR.BDD manual page has been extended to formally
		describe the compression and decompression algorithms
		(see the sections entitled "COMPRESSION ALGORITHM" and
		"DECOMPRESSION ALGORITHM").

		Since this change is not backward compatible, the version
		number of CAESAR.BDD was advanced to 3.2. The CAESAR tool
		has also been modified to process the compressed format
		produced by CAESAR.BDD invoked with the "-concurrent-units"
		option.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2530
Date:		Tue Jul 16 11:03:27 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd.*, bin.*/caesar.*, man/*/caesar.bdd.*

Nature:		From now on, the "-dead-transitions" option of CAESAR.BDD
		also displays its results using the same compressed format
		as for the "-concurrent-places" and "-concurrent-units"
		options. Measured on a collection of 13588 NUPNs, the disk
		space required to store the corresponding transition vectors
		was divided by 2.4. The CAESAR tool has also been updated
		to take into account this new format.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2531
Date:		Mon Jul 22 15:28:24 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd.*, man/*/caesar.bdd.*

Nature:		CAESAR.BDD has been enriched with a new option "-idle-units",
		which is, to some extent, the dual of "-permanent-units". The
		CAESAR.BDD manual page has been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2532
Date:		Tue Jul 23 09:17:33 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd.*

Nature:		Three issues have been fixed concerning the encodings
		displayed by CAESAR.BDD:

		- Contrary to what was stated by the last paragraph of item 
		  #2521 above, CAESAR.BDD's "-bits" option did not display
		  the result of encoding (i) but that of encoding (e).

		- Similarly, the "-hwb" option did not use the number of bits
		  computed by encoding (i) but that of encoding (e).

		- Similarly, the "-mcc" option did not use the number of bits
		  computed by encoding (i) but that of encoding (e) when
		  displaying the \PlacesTransitionsArcsUnitsHeightWidthBits
		  LaTeX macro-definition.
-------------------------------------------------------------------------------
BUG FIX
Number:		2533
Date:		Tue Jul 23 14:13:56 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd.*

Nature:		CAESAR.BDD invoked with its "-mcc" option would cause a
		segmentation fault (core dump) on NUPN models having a
		non-empty section defining transition labels. This issue
		was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2534
Date:		Tue Jul 23 17:06:20 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd.*

Nature:		The output of the "-mcc" option of CAESAR.BDD has been
		modified as follows: 

		- From now on, the value of the LaTeX macro-definition
		  \HasModelNestedUnits is \True iff the input NUPN is not
		  trivial (as defined in [Garavel-19]). Previously, this
		  result was computed using an ad-hoc algorithm. In most
		  cases, the results are the same; in a few cases, a
		  definition:
			\newcommand\HasModelNestedUnits[0]{\False}
		  may be replaced with:
			\newcommand\HasModelNestedUnits[0]{\True}

		- As a consequence of the above modification, the value of
		  the macro definition \ModelFixedSize may change. Typically,
		  a definition such as:
			\newcommand\ModelFixedSize[0]{
				\PlacesTransitionsArcs{38}{12}{92}}
		  may become:
			\newcommand\ModelFixedSize[0]{
				\PlacesTransitionsArcsUnitsHeightWidthBits
				{38}{12}{92}{38}{3}{35}{37}}
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2535
Date:		Mon Jul 29 16:13:59 CEST 2019
Report:		Pierre Bouvier (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd.*

Nature:		CAESAR.BDD now emits better messages for NUPN models having
		transitions with zero input places and at least one output
		place. For instance, the former message:

		  caesar.bdd: transition T0 will never fire or the net is not
		  safe (if enabled once, this transition could fire infinitely
		  often and accumulate an unbounded number of tokens in some
		  of its output places)
		  [...]
		  caesar.bdd: the net is not unit safe: firing transition T0
		  puts a token in place P1 although unit U2 already has a
		  token in the current marking

		now displays as:

		  caesar.bdd: the net is not safe because transition T0 is
		  always enabled and can fire infinitely often, accumulating
		  an unbounded number of tokens in its output places

		Similarly, the following message:

		  caesar.bdd: transition T0 will never fire because the net
		  is unit safe (if enabled once, this transition could fire
		  infinitely often and accumulate an unbounded number of
		  tokens in some of its output places)
		  [...]
		  caesar.bdd: pragma ``!unit_safe'' is present for an unsafe
		  net
		  caesar.bdd: the net is not unit safe: firing transition T0
		  puts a token in place P1 although unit U2 already has a
		  token in the current marking

		now displays as:

		  caesar.bdd: the ``!unit_safe'' pragma is erroneous because
		  transition T0 is always enabled and can fire infinitely
		  often, accumulating an unbounded number of tokens in its
		  output places
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2536
Date:		Tue Jul 30 19:30:58 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd.*

Nature:		The "-bits", "-encodings", and "-hwb" options of CAESAR.BDD
		have been modified in various ways:

		- The algorithms used to compute the encodings (h) and (i)
		  have been slightly corrected. In a few cases, the number
		  of bits of encoding (h) could be larger to that of
		  encoding (f), and the number of bits of encoding (i)
		  could be larger to that of encoding (g). This is no
		  longer the case.

		- The number of bits corresponding to the encodings (f), (g),
		  (h), and (i) has been reduced by taking advantage of the
		  information about idle units (see item #2531 above).
		  Previously, these encodings exploited information about
		  permanent units only. The output text produced by the
		  "-encodings" option has been updated accordingly.

		Also, the algorithms used to compute the list of permanent
		units and idle units have been enhanced. As a consequence,
		the options "-bits", "-encodings", "-hwb", "-idle", "-mcc",
		and "-permanent" now compute much faster. For instance, on
		a medium-size example, the time taken by the "-encodings"
		option was reduced from 2 minutes 15 down to 1 second.
		More generally, the total time to compute the "-encodings"
		option for all models of a collection of 13588 NUPNs was
		reduced from 7 hours 17 minutes to 29 minutes 43 seconds.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2537
Date:		Fri Aug  2 16:33:11 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd.*, man/*/caesar.bdd.*

Nature:		CAESAR.BDD has been extended with a new option "-dead-places",
		which is the symmetric option of "-dead-transitions" when
		transitions are replaced by places. The manual page has been
		updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2538
Date:		Fri Aug 23 18:59:32 CEST 2019
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		LNT2LOTOS could generate erroneous LOTOS code for an LNT
		parallel composition operator occurring as the last
		statement of an LNT process definition, when at least
		two branches of the parallel composition compute "out"
		variables; in such case, the list of "out" variables
		could be improperly sorted. The generated LOTOS code
		would compile properly if the "out" variables had the
		same type, but would be semantically incorrect. This
		difficult issue has been solved.
-------------------------------------------------------------------------------
VERSION 2019-h "Pisa"
-------------------------------------------------------------------------------
BUG FIX
Number:		2539
Date:		Wed Aug 28 12:37:00 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
File:		src/com/cadp_indent

Nature:		On SunOS systems (Solaris or Illumos/OpenIndiana), the
		CADP_INDENT shell script was modified to properly handle
		remote ZFS file systems that are mounted using NFS (e.g.,
		when a Solaris 10 machine accesses a distant ZFS file
		system). In such case, the former version of CADP_INDENT
		could abort with an error message such as:

		   caesar.adt: indentation of ``test'' 
		   cadp_indent: the program ``indent'' failed
		                file ``test.h'' will not be formatted

		leaving a truncated file "test.h" in the current directory.
		This issue has been solved.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2540
Date:		Mon Sep  9 11:06:49 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
File:		com/tst

Nature:		On SunOS systems, the TST shell script no longer emits a
		warning message of the following form:

		   *** /opt/SUNWspro does not exist
		   ==> Read file $CADP/INSTALLATION_2 to install Oracle
		       Developer Studio

		if /opt/SUNWspro does not exist. The installation guidelines
		indeed recommend to have such a directory (or symbolic link),
		but this is not mandatory (for instance, on OpenIndiana, it
		might be sufficient to install the "cc" package, which gives
		access to a working, although old, C compiler).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2541
Date:		Wed Sep 11 10:36:55 CEST 2019
Authors:	Hubert Garavel, Frederic Lang, Radu Mateescu, and Wendelin
		Serwe (INRIA/CONVECS)
Files:		bin.*/bcg_cmp.a, bin.*/bcg_labels.a, bin.*/bcg_merge.a,
		bin.*/bcg_min.a, bin.*/bisimulator.a, bin.*/caesar,
		bin.*/caesar.old, bin.*/caesar.adt, bin.*/caesar.bdd,
		bin.*/cunctator.a, bin.*/determinator.a, bin.*/distributor.a,
		bin.*/evaluator3.a, bin.*/evaluator4.a, bin.*/evaluator5.a,
		bin.*/libBCG_IO.a, bin.*/libevaluator.a, bin.*/libexhibitor.a,
		bin.*/libexp_open.a, bin.*/ocis.a, bin.*/pbg_info,
		bin.*/projector.a, bin.*/reductor.a, bin.*/tgv.a,
		src/open_caesar/generator.c, src/open_caesar/executor.c,
		src/open_caesar/generator2.c, src/open_caesar/reductor2.c,
		src/open_caesar/reductor3.c, src/open_caesar/simulator.i,
		src/open_caesar/terminator.c 

Nature:		On OpenIndiana, the definition of the NULL constant was
		recently changed in system file "/usr/include/sys/null.h".
		Following this change, the Sun C 5.11 compiler started to emit
		warnings of the following form:

		"test.c": warning: argument #6 is incompatible with prototype:
		prototype: pointer to function(...) returning unsigned char...
	        argument : pointer to void

		each time the NULL value was assigned to a function pointer
		or passed as an argument to a function-pointer parameter.
		This issue was solved by adding casts before such occurrences
		of NULL, especially in calls to CAESAR_CREATE_MASK_1(),
		CAESAR_CREATE_STACK_1(), and CAESAR_CREATE_TABLE_1(). Such
		modifications make the code more readable.

		The C code generated by Caesar.adt was modified accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2542
Date:		Thu Sep 12 10:31:40 CEST 2019
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/mcl_expand

Nature:		A bug was fixed in the MCL_EXPAND tool, which generated
		invalid C code for certain MCL v5 formulas containing both
		probabilistic operators "prob" and infinite looping operators
		"<...>@". When trying to evaluate these formulas on an LTS
		using EVALUATOR 5, the C compiler produced error messages of
		the following form:

		    undefined symbol: caesar_type_boolean_variable_4
		    syntax error before or at: )

		This has now been corrected.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2543
Date:		Thu Sep 12 19:28:12 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
File:		com/arch

Nature:		The ARCH shell script was modified to take into account the
		forthcoming operating system macOS 10.15 "Catalina", which
		no longer supports 32-bit executables. On this system, ARCH
		will always return "mac64" (rather than "mac86"), even if
		the $CADP_BITS environment variable is explicitly set to 32.
		This change will prevent Installator from proposing the
		installation of 32-bit version of CADP on future versions
		of macOS.
-------------------------------------------------------------------------------
VERSION 2019-i "Pisa"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2544
Date:		Wed Sep 18 17:06:45 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar, bin.*/caesar.old

Nature:		The C code generated by CAESAR has been modified to avoid
		a "-Wmaybe-uninitialized" warning emitted by GCC 6.5, when
		enumerating the domain of a sort for which no iterator is
		provided by the user:
		  file.c...: warning: 'CAESAR_REGISTER_LOCAL__S__1_0_1' may be
		  used uninitialized in this function [-Wmaybe-uninitialized]
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2545
Date:		Thu Sep 19 12:34:28 CEST 2019
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
File:		com/cadp_echo

Nature:		The "cadp_echo" auxiliary shell script has been slightly
		modified to work around a current bug of OpenIndiana, which
		is described at https://www.illumos.org/issues/11688.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2546
Date:		Tue Oct  1 18:12:34 CEST 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old

Nature:		The C code generated by CAESAR for its type-survey phase has
		been modified to avoid a "-Wunused-but-set-variable" warning
		emitted by GCC 6.5, when computing the cardinal of the domain
		of a sort:
		  /tmp/caesar_...: warning: variable 'CAESAR_X' set but not
		  used [-Wunused-but-set-variable]
-------------------------------------------------------------------------------
VERSION 2019-j "Pisa"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2547
Date:		Thu Oct 17 11:44:46 CEST 2019
Report:		Muhammad Atif (University of Lahore, Pakistan)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		./INSTALLATION_WINDOWS, src/com/cadp_psbox

Nature:		Various changes have been made to update the instructions
		for installing CADP on Windows:

		- Some URLs using "http" have been replaced with "https" ones.

		- From now on, Evince is installed as a Cygwin package, rather
		  than a separate software.

		- Annex D of the INSTALLATION_WINDOWS file, which explains
		  how to install Ghostscript and GSview has been updated as
		  follows: old URLs http://pages.cs.wisc.edu/~ghost/gsview/*
		  have been removed; dead URLs to download Ghostscript 9.07
		  now point to https://github.com/ArtifexSoftware (basically,
		  the Gsview software is no longer supported).

		- The "cadp_psbox" has been modified so as to search for
		  "gswin32c.exe" not only in "C:\Program Files", but also
		  in "C:\Program Files (x86)".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2548
Date:		Sat Nov  2 07:40:36 CET 2019
Authors:	Hubert Garavel and Pierre Bouvier (INRIA/CONVECS)
Files:		src/com/xeuca_term, src/com/cadp_xterm,
		src/eucalyptus/eucalyptus.tcl

Nature:		The "xeuca_term" shell script has been renamed to "cadp_xterm"
		since this script is now to be used by many CADP tools rather
		than EUCALYPTUS only. The EUCALYPTUS code has been updated
		accordingly.

		Two new options ("-default" and "-option") have been added
		to "cadp_xterm". These options are used internally when the
		shell script is invoked by other tools.

		On SunOS architectures "sol86" and "sol64" (i.e., Solaris
		and OpenIndiana), "cadp_xterm" now gives priority to
		"x-terminal-emulator", "gnome-terminal", and "mate-terminal"
		before "xterm".
-------------------------------------------------------------------------------
BUG FIX
Number:		2549
Date:		Sat Nov  2 08:40:55 CET 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/ocis/ocis.tcl, man/*/ocis.*

Nature:		On recent Linux distributions that do not install the "xterm"
		command by default, the "Windows" / "Open shell window" menu
		of OCIS had no effect. This problem has been solved, as OCIS
		now invokes "cadp_xterm" rather than "xterm" directly.

		The OCIS manual page and on-line help menu have also been
		updated to remove any explicit reference to "xterm".
-------------------------------------------------------------------------------
BUG FIX
Number:		2550
Date:		Sat Nov  2 11:00:07 CET 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/com/cadp_edit, installator.shar

Nature:		Three issues have been fixed in the "cadp_edit" shell script:

		- A variable misnamed $CADP_PDF_VIEWER was renamed to $EDITOR.

		- When run on recent distributions of Linux that do not have
		  the "xterm" command installed by default, "cadp_edit" would
		  emit the following warning when the environment variable
		  $EDITOR was not set:
		     cadp_edit: 20: cadp_edit: xterm: not found
		  This problem has been solved. From now on, "cadp_edit"
		  invokes "cadp_xterm" to properly open a terminal. 

		- When invoked from Installator on Linux, "cadp_edit" would
		  emit the following warning:
		     /usr/bin/x-terminal-emulator: to set an icon, please
		     use -name <profile> and set a profile icon
		  This problem was solved by no longer setting in Installator
		  the environment variable $XTERM_OPTIONS to "-n Installation
		  -T Installation" before calling "cadp_edit".
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2551
Date;		Sat Nov  2 11:56:16 CET 2019
Author:		Hubert Garavel (INRIA/CONVECS)
File:		com/tst

Nature:		On Linux, the TST shell script no longer emits a warning
		when the "xterm" binary is not installed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2552
Date:		Tue Nov  5 15:17:01 CET 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		src/installator/installator.tcl, installator.shar

Nature:		Installator no longer offers a button to edit the contents
		of the ".rhosts" file, since this feature is now obsolete
		and insecure.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2553
Date:		Tue Nov  5 17:05:18 CET 2019
Report:		Pierre Bouvier (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
File:		com/arch

Nature:		The ARCH command has been modified has follows: on a 64-bit
		Linux, this command always displayed "iX86" as a result when
		the environment variable $CADP_BITS was set to 32. From now
		on, in such a setting, this command will only return "iX86" if
		the 64-bit Linux seems properly configured to execute 32-bit
		binaries; otherwise, if the compatibility mode for 32-bit
		executables seems to be missing, this command will display
		"x64".

		Consequently, Installator will no longer propose to install
		32-bit CADP binaries on a 64-bit Linux if it appears that
		the compatibility mode is missing.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2554
Date:		Tue Nov  5 18:14:08 CET 2019
Report:		Pierre Bouvier (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar, bin.*/caesar.old, com/nupn_info,
		src/nupn/canonical_nupn.awk, src/nupn/place_fusion.awk,
		src/nupn/library.awk, src/nupn/trivial_units.awk,
		man/*/nupn_info.*

Nature:		The NUPN manual page states that the new-style syntax:
		   initial places #1 <natural>
		should be preferred to the old-style syntax:
		   initial place <natural>

		Several CADP tools have been modified accordingly:

		- CAESAR and CAESAR.OLD, when invoked with their "-nupn"
		  option, generate a NUPN file that uses the new-style syntax.

		- The "canonical-nupn" option of NUPN_INFO now converts the
		  old-style syntax to the new-style one (previously, it would
		  do the reverse).

		- The Awk code implementing the "-place_fusion" and
		  "-trivial-units" options of NUPN_INFO has been simplified
		  to no longer preserve the old-style syntax.
-------------------------------------------------------------------------------
VERSION 2019-k "Pisa"
-------------------------------------------------------------------------------
BUG FIX
Number:		2555
Date:		Thu Nov 21 17:37:38 CET 2019
Files:		bin.*/caesar.bdd
Authors:	Hubert Garavel (INRIA/CONVECS) and Fabio Somenzi (Univ. of
		Colorado, USA)
Files:		bin.*/caesar.bdd

Nature:		On large NUPN models, the BDD of which has more than 2044
		variables, the "-check" and "-mcc" options of CAESAR.BDD
		would sometimes print a negative number of reachable markings, 
		e.g.:

		   iteration 2: markings = -1, visited = ... nodes, etc.
		   iteration 3: markings = -1, visited = ... nodes, etc.
		   iteration 4: markings = -1, visited = ... nodes, etc.
		   ...
		   partial number of reachable markings: -1
		   ...
		   \newcommand\MarkingGraphFixedSize[0]{\MarkingsFiringsBound
                   Concurrency{-1\Explain{stated by \CAESARBDD\ version 3.2}}

		This problem has been solved. In the latter case, CAESAR.BDD
		now displays \Unknown rather than -1. Thanks are due to
		Fabio Somenzi for e-mail discussions on this topic in 2015.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2556
Date:		Sun Nov 24 08:52:40 CET 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		The algorithm used by the "-mcc" option of CAESAR.BDD to
		compute the property \IsModelLoopFree has been made faster.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2557
Date:		Wed Nov 27 18:37:25 CET 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		The algorithm that implements the "-dead-places" option of 
		CAESAR.BDD has been strengthened as follows. As before,
		the list of dead places is first computed using a symbolic
		state-space exploration algorithm (based on the CUDD BDD
		package). But, if this exploration does not terminate on
		time, an explicit-state approximated exploration algorithm
		is then invoked, which computes a subset of dead places
		and which is of lower time complexity.

		For small models on which the symbolic algorithm succeeds,
		no change occurs. However, on a set of 558 large NUPN models
		that could not be exhaustively explored by the symbolic
		algorithm (when setting $CAESAR_BDD_TIMEOUT to 60 seconds)
		the following improvements have been observed:

		- For these models, the number of unknown values (noted ".")
		  in the results returned by the "-dead-options" has been
		  reduced by 27.5%.

		- For 41 of these models, the "-dead-places" option now
		  produces a fully exact result (without unknown values).
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2558
Date:		Mon Dec  2 18:40:56 CET 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		The algorithm that implements the "-dead-transitions" option
		of CAESAR.BDD has also been strengthened with an explicit-
		state exploration algorithm that computes a subset of dead
		transitions.

		On 336 large NUPN models that could not be exhaustively
		explored by the symbolic algorithm (when setting variable
		$CAESAR_BDD_TIMEOUT to 60 seconds) the following improvements
		have been observed: the number of unknown values (noted ".")
		has been reduced by 4.6% and, for two examples, the result
		of the "-dead-transitions" option is now fully complete.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2559
Date:		Tue Dec  3 16:03:18 CET 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		The output of the "-mcc" option of CAESAR.BDD has evolved to
		meet the requirements of the 2020 edition of the Model
		Checking Contest (http://mcc.lip6.fr/models.php):

		- A new property \HasModelDeadPlaces was added, which shares
		  the algorithms used by the "-dead-places" option.

		- The property \IsModelQuasiLive was removed and replaced
		  by its logical negation \HasModelDeadTransitions. The
		  accuracy of the latter property was enhanced by reusing
		  the same algorithms as for the "-dead-transitions" option.

		The version number of CAESAR.BDD was advanced to 3.3.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2560
Date:		Fri Dec  6 15:41:47 CET 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The "-check" option of CAESAR.BDD has been simplified and
		made faster by no longer computing and displaying information
		about dead places and dead transitions. Indeed, such
		information can now be obtained (with greater accuracy) by
		using the "-dead-places", "-dead-transitions", and/or "-mcc"
		options of CAESAR.BDD. The manual page has been updated
		accordingly. 
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2561
Date:		Mon Dec  9 15:11:05 CET 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The output of the "-concurrent-places" option of CAESAR.BDD
		has been modified as follows. Previously, all diagonal
		elements of the half matrix were always equal to "=". From
		now on, each diagonal element is equal to "0" if the
		corresponding place is dead, to "1" if it is not dead, or
		to "." if this information is unknown. The CAESAR.BDD
		manual page has been updated accordingly.
-------------------------------------------------------------------------------
VERSION 2019-l "Pisa"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2562
Date:		Sat Dec 14 23:19:51 CET 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The semantics of the half matrix produced by CAESAR.BDD's
		``-concurrent-places'' option has been slightly modified:
		the "1" cell value now has priority over the "[", "~", and
		"]" values. The CAESAR.BDD tool and its manual page have
		been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2563
Date:		Tue Dec 17 18:47:59 CET 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The ``-concurrent-places'' option of CAESAR.BDD has been
		enhanced to produce less unknown values (".", "[", "~",
		or "]"). To do so, two new rules have been implemented:

		- If a place Q1 is dead, then it is not concurrent with
		  any other place Q2; thus, a "0" can be put in the
		  corresponding matrix cells.

		- If a (dead or not) transition T has only a single input
		  place Q1, then Q1 is not concurrent with any output place
		  of T different from Q1 (otherwise, the net would not be
		  safe); thus, a "0" can be put in the corresponding matrix
		  cells.

		On 259 large models, the total number of unknown values
		(2.07 billion) was reduced by 5.5%.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2564
Date:		Thu Dec 26 10:14:02 CET 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The ``-mcc'' option of CAESAR.BDD has been enhanced to better
		compute the lower bound for the maximal number of tokens in
		reachable markings (i.e., the last parameter of the generated
		LaTeX macro \MarkingsFiringsBoundConcurrency):

		- In some rare cases, CAESAR.BDD could display an incorrect
		  lower bound (i.e., a value too high), although we did not
		  find a single example in a test suite of 12,000+ NUPNs where
		  this problem would occur. This first problem was fixed.

		- In some cases, CAESAR.BDD could generate an explanative
		  comment "lower bound given by the number of initial tokens"
		  that was not appropriate. This second problem was fixed.

		- New algorithmic approaches have been implemented, so that
		  CAESAR.BDD now displays a lower bound that is both correct
		  and greater than formerly. In many cases, the lower bound
		  becomes equal to the upper bound, so that CAESAR.BDD now
		  provides an exact value for the largest number of tokens
		  in reachable markings, without exploring all markings
		  (this is, in fact, an advantage of the NUPN model).
-------------------------------------------------------------------------------
BUG FIX
Number:		2565
Date:		Fri Dec 27 23:54:08 CET 2019
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		When applied to a NUPN that is safe, but not unit safe, 
		the ``-mcc'' option of CAESAR.BDD would display an incorrect
		upper bound for the maximal number of tokens in reachable
		markings (i.e., the last parameter of the generated LaTeX
		macro \MarkingsFiringsBoundConcurrency). For such NUPNs,
		the upper bound is the number of places rather than the
		width (i.e., the number of leaf units). This issue has
		been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2566
Date:		Tue Jan  7 14:24:46 CET 2020
Report:		Pierre Bouvier (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		When invoked with its ``-density'' option on a NUPN having
		zero transition, CAESAR.BDD would do a division by zero
		and display the result ``-nan''. The definition of arc
		density given in the CAESAR.BDD manual page has been
		modified to specify that the density is zero if the NUPN
		has no transition (hence, no arc). The CAESAR.BDD tool was
		updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2567
Date:		Wed Jan  8 15:22:36 CET 2020
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		Two new options "-min-concurrency" and "-max-concurrency"
		have been added to CAESAR.BDD. These options are described
		in the CAESAR.BDD manual page.
-------------------------------------------------------------------------------
VERSION 2020-a "Aalborg"
-------------------------------------------------------------------------------
BUG FIX
Number:		2568
Date:		Fri Feb  7 16:25:35 CET 2020
Authors:	Hubert Garavel and Pierre Bouvier (INRIA/CONVECS)
Files:		bin.sol86/*, bin.sol64/*

Nature:		Some CADP executables did not work properly under the
		latest version 11.4 of the Solaris operating system:
		when launched, they would trigger an error message of
		the following form:
		the old ioctl()-based /proc interface is no longer supported
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2569
Date:		Tue Feb 11 17:13:15 CET 2020
Authors:	Hubert Garavel and Frederic Lang (INRIA/CONVECS)
Files:		com/caesar.open, com/lotos.open, com/lnt.open,
		demos/demo_01/=READ_ME.txt, demos/demo_01/demo.svl,
		demos/demo_07/=READ_ME.txt, demos/demo_09/=READ_ME.txt,
		demos/demo_17/LOTOS/demo.svl, demos/demo_24/=READ_ME.txt,
		demos/demo_24/demo.svl, demos/demo_24/makefile.old,
		doc/=READ_ME.txt, doc/pdf/Garavel-92-a.pdf,
		ext/emacs/svl-aux.el, gc/README, man/catl/*, man/html/*,
		man/manl/bcg_open.l, man/manl/bes_solve.l,
		man/manl/bisimulator.l, man/manl/caesar.adt.l,
		man/manl/caesar.l, man/manl/caesar.open.l,
		man/manl/cunctator.l, man/manl/declarator.l,
		man/manl/determinator.l, man/manl/distributor.l,
		man/manl/evaluator3.l, man/manl/evaluator4.l,
		man/manl/evaluator5.l, man/manl/executor.l,
		man/manl/exhibitor.l, man/manl/exp.l,
		man/manl/exp.open.l, man/manl/fsp2lotos.l,
		man/manl/generator.l, man/manl/lnt.open.l,
		man/manl/lotos.l, man/manl/lotos.open.l,
		man/manl/ocis.l, man/manl/predictor.l,
		man/manl/projector.l, man/manl/rbc.l,
		man/manl/reductor.l, man/manl/scrutator.l,
		man/manl/seq.open.l, man/manl/simulator.l,
		man/manl/svl.l, man/manl/svl-lang.l,
		man/manl/terminator.l, man/manl/tgv.l,
		man/manl/xsimulator.l, man/pdf/*, man/whatis,
		man/windex, src/eucalyptus/eucalyptus.tcl,
		src/eucalyptus/default/caesar.open,
		src/eucalyptus/default/lotos.open,
		src/ocis/ocis.tcl, src/open_caesar/READ_ME,
		src/svl/standard

Nature:		The CAESAR.OPEN shell script, which was introduced in 1992,
		has been renamed to LOTOS.OPEN. This change was motivated
		by three reasons: (i) The new name is more regular with
		respect to similar shell scripts (BCG_OPEN, EXP.OPEN,
		FSP.OPEN, LNT.OPEN, and SEQ.OPEN) where "OPEN" follows the
		name of a format or specification language; (ii) The change
		removes the confusion between OPEN/CAESAR, which is meant
		to be language independent, and CAESAR.OPEN, which was
		LOTOS specific; (iii) Although LOTOS was historically the
		first language connected to OPEN/CAESAR, it is now time to
		de-emphasize the role of LOTOS, as it is progressively
		replaced by LNT.

		To preserve backward compatibility, a symbolic link
		"caesar.open -> lotos.open" has been created in the "com"
		directory. However, CADP users are advised to implement
		the change, as "caesar.open" is deprecated and this link
		will be removed at some time in the future. 

		Following the change, EUCALYPTUS, LNT, and SVL have been
		updated to invoke "lotos.open" instead of "caesar.open".

		The three SVL variables $CAESAR_OPEN_EXECUTABLE,
		$CAESAR_OPEN_CC_OPTIONS, and $CAESAR_OPEN_OPTIONS have
		been removed (SVL will emit a warning if these variables
		are still set) and replaced with $LOTOS_OPEN_EXECUTABLE,
		$LOTOS_OPEN_CC_OPTIONS, and $LOTOS_OPEN_OPTIONS, respectively.

		Many manual pages and a few demo examples have been updated
		as well. Finally, the CADP web site was modified accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2570
Date:		Wed Feb 12 15:37:38 CET 2020
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.sol86/*, bin.sol64/*

Nature:		From now on, all CADP executables for SunOS-based operating
		systems are compiled on OpenIndiana, whereas they were
		previously compiled on Solaris 10.

		Some programs have been modified so as to ensure that their
		executables still work on Solaris 10. In particular, error
		messages of the following form:
		  libc.so.1: version 'ILLUMOS_0.6' not found (required by...)
		  libc.so.1: open failed: No such file or directory
		  Killed
                have been suppressed. Also, since we can no longer ensure
		that the new executables will continue working on the
		old versions of Solaris 8 and 9, the web page at
		http://cadp.inria.fr/status.html has been updated to
		disclaim support for Solaris 8 and 9.
-------------------------------------------------------------------------------
VERSION 2020-b "Aalborg"
-------------------------------------------------------------------------------
BUG FIX
Number:		2571
Date:		Mon Feb 17 08:34:35 CET 2020
Report:		Hugues Evrard (Google, London, UK)
Author:		Frederic Lang (INRIA/CONVECS)
File:		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		A documentation error in the LNT2LOTOS reference manual
		("delete" instead of "remove" in the section on "Predefined
		function declarations") was corrected.
------------------------------------------------------------------------------
IMPROVEMENT
Number:		2572
Date:		Mon Mar  2 10:15:35 CET 2020
Authors:	Hubert Garavel, Frederic Lang, and Wendelin Serwe (INRIA/
		CONVECS)
Files:		bin.*/exp2c, bin.*/fsp2lotos, bin.*/lnt2lotos,
		bin.*/mcl_expand, bin.*/svl_kernel

Nature:		All the CADP executables built using Syntax and TRAIAN
		(namely, EXP2C, FSP2LOTOS, LNT2LOTOS, MCL_EXPAND, and SVL)
		have been recompiled using the new version 3.0 of TRAIAN
		(see http://vasy.inria.fr/traian/traian_3_0.html for details).

		This has two advantages: (1) the development of LNT2LOTOS and
		MCL_EXPAND, which had been halted because the source code of
		these tools became too large to be compiled using TRAIAN 2.9,
		has restarted; (2) by using the UNIX command "what" (or
		"strings" on Linux), one can see the list of LOTOS NT files
		used to produce each of the aforementioned CADP executables.
-------------------------------------------------------------------------------
BUG FIX
Number:		2573
Date:		Tue Mar  3 14:24:05 CET 2020
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		For an infinite loop containing an "if" statement with a
		nonterminating "then" clause and no explicit "else" clause,
		LNT2LOTOS could generate incorrect LOTOS code that executed
		the loop only once. This issue has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2574
Date:		Tue Mar 10 15:35:28 CET 2020
Report:		Sihem Amer-Yahia and Abdelouahab Chibah (LIG/SLIDE, Grenoble,
		France)
Author:		Radu Mateescu (INRIA/CONVECS)
Files:		bin.*/mcl_expand

Nature:		For some rare cases of MCL formulas, which have a top-level
		modality containing redundant operators in its regular
		subformula, the optimisations carried out by MCL_EXPAND could
		change the interpretation of these formulas. On some LTSs,
		this triggered erroneous results of EVALUATOR (version 3, 4,
		and 5). This error has been corrected.
-------------------------------------------------------------------------------
BUG FIX
Number:		2575
Date:		Wed Mar 11 10:11:22 CET 2020
Author:		Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		For a loop with a non-terminating body, LNT2LOTOS could
		generate LOTOS code that, under some conditions, caused a
		warning about an impossible rendezvous on gate "exit". This
		arose when a recursive call to the loop body could never occur
		actually. The static detection of nontermination has been
		improved to avoid the generation of dead LOTOS code and the
		corresponding warning.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2576
Date:		Thu Mar 12 11:43:44 CET 2020
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lpp, bin.*/lnt_depend,
		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		In order to make LNT and LOTOS NT closer, LNT has been
		extended with a new module pragma "!version" that already
		exists in LOTOS NT. At the moment, this pragma is accepted
		while parsing LNT, and ignored afterwards. The LNT2LOTOS
		reference manual has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2577
Date:		Thu Mar 12 15:48:03 CET 2020
Report:		Hubert Garavel (INRIA/CONVECS)
Authors:	Frederic Lang and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, bin.*/lnt_depend,
		doc/*/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		To make LNT and LOTOS NT closer, the "with" clause attached
		to modules and type definitions no longer requires that
		function identifiers be surrounded by double quotes. For
		instance, one can now write directly
		   ... with <, >, le, ge
		rather than
		   ... with "<", ">", "le", "ge"
		The latter form is still accepted, yet deprecated and might
		be removed in the future. The LNT2LOTOS reference manual has
		been updated accordingly.
-------------------------------------------------------------------------------
VERSION 2020-c "Aalborg"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2578
Date:		Sat Mar 21 11:43:26 CET 2020
Report:		Pierre Bouvier (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		man/*/nupn.*, man/*/caesar.bdd.*

Nature:		The NUPN manual page has been modified to give a more precise
		definition of the pragma "!multiple_arcs". The previous 
		definition was slightly ambiguous for ordinary arcs, i.e.,
		arcs having multiplicity one.

		The CAESAR.BDD manual page has also been modified to better
		specify when the pragmas "!multiple_initial_tokens" and
		"!multiple_arcs" are used, or not used, by the various
		options of CAESAR.BDD.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2579
Date:		Sun Mar 22 18:52:06 CET 2020
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The list of error codes returned upon exit by the CAESAR.BDD
		tool has been modified. From now on, a new exit status `6' is
		returned when CAESAR.BDD detects that the net is not safe
		or not unit safe (previously, the generic exit status `4' was
		returned in such case). Also, CAESAR.BDD no longer returns
		the exit status `4' in case an internal error would occur.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2580
Date:		Sun Mar 22 22:25:48 CET 2020
Report:		Pierre Bouvier (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		The ``-check'' option of CAESAR.BDD was not fully consistent
		with respect to checking the unit safeness property of a
		NUPN. A simpler, unified behaviour has been implemented:

		- When exploring the marking graph, CAESAR.BDD would stop
		  with a fatal message as soon as it detects that one can
		  reach a marking that is not unit safe (i.e., the NUPN is
		  not unit safe). The new version of CAESAR.BDD preserves
		  this behaviour, but the error now terminates with exit
		  status `6' rather than `4' (see item #2579 above).

		- If the initial marking was not unit safe (i.e., contained
		  two places in the same unit), CAESAR.BDD would emit either
		  an error if the "!unit_safe" pragma was present, or a
		  warning if this pragma was absent; in the latter case,
		  CAESAR.BDD would start exploring the marking graph, but
		  since the initial marking was not unit safe, the
		  exploration could terminate with exit status `0' and
		  display an incorrect (most likely, too small) size of
		  the marking graph. From now on, CAESAR.BDD always emits
		  an error message if the initial marking is not unit safe
		  and terminates with exit status `6'; to achieve some
		  compatibility with the former version of CAESAR.BDD, such
		  termination is delayed until the input file has been
		  entirely parsed, but exploration of the marking graph is
		  no longer launched.

		- Upon termination of the marking-graph exploration,
		  CAESAR.BDD performs additional checks for unit safeness.
		  Previously, such checks could trigger a warning if the
		  NUPN was not unit safe; from now on, it is a fatal error
		  that leads to an exit status `6'.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2581
Date:		Mon Mar 23 11:11:12 CET 2020
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.iX86/*, bin.x64/*, bin.win32/*, bin.mac64/*

Nature:		Some compilers used to build the CADP executables have been
		upgraded as follows:

		- The iX86, x64, and win32 executables are now compiled using
		  GCC 6.3.0 (with Glibc 2.24) instead of GCC 4.9.2 (with
		  Glibc 2.19).

		- The mac64 executables are now compiled using Clang 3.8.1
		  instead of Clang 3.5.

		The source code of all tools has been modified to remove
		all compiler warnings. Also, support for old Linux versions
		with Glibc version less than 2.11 (e.g., Debian 5.0 Lenny)
		has been dropped.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2582
Date:		Fri Mar 27 18:05:24 CET 2020
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		The output produced by the ``-mcc'' option of CAESAR.BDD
		(more specifically, the \MarkingsFiringsBoundConcurrency
		macro) has been enhanced when the two pragmas "!creator xxx"
		and "!unit_safe yyy" are simultaneously present in the
		input NUPN file.
-------------------------------------------------------------------------------
BUG FIX
Number:		2583
Date:		Sat Mar 28 18:06:21 CET 2020
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		The output produced by the ``-hwb'' option of CAESAR.BDD
		was not implementing what was specified in the manual page
		(it compared the width to the number of places, rather than
		the number of bits). This issue has been fixed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2584
Date:		Mon Mar 30 21:43:03 CEST 2020
Report:		Pierre Bouvier (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd

Nature:		For the ``-concurrent-places'' option of CAESAR.BDD, two
		distinct bugs have been fixed, which were introduced in
		December 2019 (see item #2563 above). Each of these bugs
		could improperly write some zeros at random places in the 
		output matrix, but only upon expiration of the timeout
		specified by the environment variable $CAESAR_BDD_TIMEOUT.
		Statistically, half of the incomplete matrices generated
		were corrupted by such zeros. However, any output matrix 
		that could be entirely generated on time was correct. The
		version number of CAESAR.BDD was set to 3.4.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2585
Date:		Thu Apr  2 14:57:35 CEST 2020
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		LNT2LOTOS now ensures that all identifiers of LNT types, 
		LNT gates, LNT processes, and LNT functions having neither 
		"in" nor "in out" parameters, are distinct, modulo a case
		insensitive comparison, from any LOTOS keywords, e.g.
		ACCEPT, EXIT, etc. From now on, an error occurs if such an
		invalid identifier is declared or used. Previously, LNT2LOTOS
		accepted such identifiers, but generated LOTOS code containing
		them copied verbatim; such LOTOS code was thus incorrect and
		later rejected by the CAESAR.ADT and CAESAR compilers.

		In particular, LNT code fragments containing "exit", such as:

		   process P [G : any] is
		      G; exit
	           end process

		are no longer tolerated. Previously, "exit" was accepted
		as a gate or process identifier by LNT2LOTOS, copied verbatim
		to the LOTOS program, and subsequently recognized as the "EXIT"
		operator of LOTOS. This is no longer the case. Occurrences
		of "exit" in LNT code should be replaced by "null", or even
		removed if they appear, as in the above example, on the right-
		hand side of a ";" operator.
 
		Notice that such constraints do not apply to other LNT
		identifiers (e.g., variables, constructors, function and
		process parameters, channels, etc.) as LNT2LOTOS does not
		need to copy verbatim such identifiers in the generated
		LOTOS code.

		The LNT2LOTOS Reference Manual has been updated accordingly.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2586
Date:		Fri Apr  3 10:26:48 CEST 2020
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, bin.*/lnt_depend, bin.*/lpp, com/upc
		demos/demo_18/CHANNELS.lnt, demos/demo_28/cache.lnt

Nature:		From now on, all LNT keywords must be written in lowercase
		letters exclusively. Previously, keywords could be written
		using uppercase and lowercase letters, both being considered
		equivalent, following the tradition of Ada and LOTOS. The
		change was dictated by three reasons:

		- Modern languages have keywords in lowercase letters only.

		- Having several spellings for the same keyword (e.g.,
		  "end", "End", "END", etc.) makes it harder to search
		  for them (one must specify that search is not case-
		  sensitive) and it was not properly implemented by all
		  the editors supported in the "$CADP/ext" directory
		  (for instance, the Gedit/Pluma editor would only
		  recognize keywords written in lowercase letters).

		- We strive for convergence between LNT and the LOTOS NT
		  language accepted by the TRAIAN 3 compiler, which requires
		  keywords to be written in lowercase letters.

		Following this change, the version number of LNT2LOTOS was
		set to 6.9. The LNT2LOTOS Reference Manual was updated.

		Users can easily upgrade their source LNT programs by
		running the UPC shell script. Typing the following command:
		   upc 2020-LNT-KEYWORDS <directory>
		will recursively explore the contents of the specified
		<directory>, look for ".lnt" files, and turn keywords into
		lower case. In practice, we observed that most of the
		changes concern "NULL", "ANY" or "any", and sometimes
		"Module", "Type", "Process", and "Function". Also, the
		UPC shell script was modified to properly run on OpenIndiana.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2587
Date:		Fri Apr  3 16:52:41 CEST 2020
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		From now on, LNT2LOTOS forbids all channels named "ANY",
		"Any", etc., i.e., all channel identifiers which are equal
		to "any" modulo a case-insensitive comparison, but different
		from "any". Although such channel identifiers are normally
		allowed, they are likely to be a mistake, i.e., an occurrence
		of the "any" channel that has not been properly converted to
		lowercase letters (see item #2586 above). It is better to
		have this error detected by LNT2LOTOS directly, rather than
		propagating it to the generated LOTOS code and later having
		an obscure error message of CAESAR.ADT, which complains that
		a function "CHECK_CHANNEL__ANY" is undefined.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2588
Date:		Wed Apr  8 15:00:21 CEST 2020
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The LOTOS code generated by LNT2LOTOS for the "ORD" functions 
		of tuple types (i.e., types containing a single constructor
		with at least one parameter) has been enhanced. The previous
		LOTOS code contained unused parameters and, after being
		translated to C by CAESAR.ADT, caused compiler warnings
		from GCC 6. Such warnings have been removed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2589
Date:		Fri Apr 10 18:54:54 CEST 2020
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, com/upc

Nature:		The predefined function "access" of LNT has been renamed
		to "element", for two reasons: (i) the name "element" is
		more usual and logical than "access"; (ii) in a future
		modification of LNT, "access" will become a new reserved
		keyword of the language. LNT2LOTOS now emits an error
		message if "access" is still being used, e.g., in a
		``with access'' clause.

		Users can easily upgrade their source LNT programs by
		running the UPC shell script. Typing the following command:
		   upc 2020-LNT-ACCESS <directory>
		will recursively explore the contents of the specified
		<directory>, look for ".lnt" files, and replace all
		occurrences of the predefined function "access" with
		"element" where appropriate. Notice that if there exist
		some user-defined functions or processes named "access",
		the UPC script will not necessarily rename them; such
		cases should be manually dealt with (see item #2590 below
		for details).

		The LNT2LOTOS Reference Manual has been updated.
--------------------------------------------------------------------------------
IMPROVEMENT
Number:		2590
Date:		Sat Apr 11 14:36:21 CEST 2020
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The set of instructions (resp. behaviours) of LNT has been
		extended with a new "access G1, ..., Gn" instruction (resp.
		behaviour), which is similar to "use X1, ..., Xn", but
		operates on gates instead of variables.

		Precisely, when a (normal) gate or exception G is defined
		but not accessed actually (e.g., in a "raise" instruction,
		a function or process call, a communication action, 
		a synchronization in a "par" operator, etc.), LNT2LOTOS
		triggers a warning of the following form:
		   warning: gate G is declared but not accessed
		Notice that the text of this warning has slightly changed;
		formerly, this warning was the following one:
		   warning: gate G is declared but not used

		Such warnings can be suppressed by inserting an "access G"
		instruction or behaviour at an appropriate point in the
		LNT code. The LNT2LOTOS Reference Manual has been updated
		accordingly.

		Given that "access" is a new reserved keyword may create
		problems with legacy LNT code. The application of the UPC
		script with option "2020-LNT-ACCESS" should resolve most
		of these problems (see item #2589 above). However, if a
		code contains a function or process named "access", it
		should be manually renamed to, e.g., "Access" or "ACCESS"
		to get the code accepted by LNT2LOTOS.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2591
Date:		Sun Apr 12 08:14:47 CEST 2020
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		demos/demo11/Scenarios/APPLICATION_4_1.lnt,
		demos/demo11/Scenarios/APPLICATION_4_6_1.lnt,
		demos/demo11/Scenarios/APPLICATION_4_6.lnt,
		demos/demo11/Scenarios/APPLICATION_6_1.lnt,
		demos/demo11/Scenarios/APPLICATION_6_6_1.lnt,
		demos/demo11/Scenarios/APPLICATION_6_6.lnt,
		demos/demo11/Scenarios/APPLICATION_8_1.lnt,
		demos/demo11/Scenarios/APPLICATION_8_6_1.lnt
		demos/demo11/Scenarios/APPLICATION_8_6.lnt

Nature:		Various files of the demo_11 have been enhanced by adding
		"access" instructions so as to avoid LNT2LOTOS warnings
		about a gate ST that is not accessed.
-------------------------------------------------------------------------------
VERSION 2020-d "Aalborg"
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2592
Date:		Tue Apr 14 08:58:57 CEST 2020
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		From now on, if an LNT gate Gi occurs in the global
		synchronization list G1, ..., Gn of a parallel composition
		operator "par G1, ..., Gn in B1 || ... || Bm end par",
		but does not occur in some parallel branche Bj, then
		LNT2LOTOS issues a warning stating that Gi is synchronized
		but not accessed in Bj.

		A similar warning is issued if Gi occurs in a synchronization
		interface "G1, ..., Gn -> Bj" of the parallel composition,
		but does not occur in Bj.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2593
Date:		Wed Apr 15 09:20:56 CEST 2020
Report:		Pierre Bouvier (INRIA/CONVECS)
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The algorithm implementing the "-concurrent-places" option
		of CAESAR.BDD has been enhanced with a few static rules that
		apply when the graph of reachable markings is too large to 
		be explored exhaustively (or if a timeout limitation
		forces such exploration to be terminated prematurely). Such
		rules help to produce results containing less unknown values.

		Also, the documentation of the "-concurrent-places" option
		in the CAESAR.BDD manual page has been enhanced.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2594
Date:		Wed Apr 15 10:00:35 CEST 2020
Authors:	Frederic Lang and Hubert Garavel (INRIA/CONVECS)
Files:		ext/a2ps/lnt.ssh, ext/emacs/lnt-mode.el, ext/gtk3/lnt.lang,
		ext/jedit/lnt.xml, ext/latex-listings/cadp-lnt.sty,
		ext/nano/lnt.nanorc, ext/npp/lnt.xml, ext/vim/lnt.vim

Nature:		The editor style files for the LNT language have been
		updated to reflect recent evolutions of the language,
		such as the introduction of the "access" keyword and of
		the "!version" pragma. The list of predefined LNT functions
		has been updated too.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2595
Date:		Wed Apr 15 18:15:29 CEST 2020
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, com/upc

Nature:		From now on, in order to achieve convergence between LNT and
		the LOTOS NT language accepted by the TRAIAN 3 compiler, all
		the LNT pragma identifiers (e.g., "!external", "!nat_check",
		etc.) must be written using lowercase characters only. A
		similar change was recently done for LNT keywords (see item
		#2586 above).

		LNT2LOTOS will now reject with an error message all the LNT
		programs with pragma identifiers containing uppercase 
		characters. Also, error messages now display pragma identifiers
		in lower case, e.g.:
		   module pragma ``!nat_bits'' already present
		rather than:
		   module pragma ``!NAT_BITS'' already present

		Users can easily upgrade their source LNT programs by
		running the UPC shell script. Typing the following command:
                   upc 2020-LNT-KEYWORDS <directory>
		will recursively explore the contents of the specified
		<directory>, look for ".lnt" files, and turn to lowercase
		all known pragmas containing uppercase characters.
-------------------------------------------------------------------------------
BUG FIX
Number:		2596
Date:		Thu Apr 16 14:19:26 CEST 2020
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2otos

Nature:		The LOTOS code generated by LNT2LOTOS for "case" instructions
		in LNT functions and processes has been slightly modified,
		so that the Gcc compiler no longer warns about unused
		parameters in the C code generated by CAESAR.ADT.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2597
Date:		Fri Apr 17 09:05:34 CEST 2020
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2otos

Nature:		LNT2LOTOS now issues a warning message if a "case" instruction
		contains a pattern P that matches any value (e.g., P is
		a free variable or the "any" pattern), but is not the last
		pattern of the "case" instruction, so that the next "case"
		branches after P are never executed. This warning is the
		following one:
		    warning: pattern matches any value and makes next
		    branches of ``case'' statement unreachable
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2598
Date:		Sat Apr 18 09:44:26 CEST 2020
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2otos

Nature:		A recursive function of the LNT2LOTOS compiler has been
		transformed into a non-recursive loop. This allows larger
		LNT programs (in particular programs containing huge value
		expressions) to be transformed into LOTOS without program
		stack overflow. Thanks to this change, we could successfully
		translate a 37,000-line LNT program, that previously failed
		being compiled due to this stack overflow issue.
-------------------------------------------------------------------------------
BUG FIX
Number:		2599
Date:		Mon Apr 20 12:09:56 CEST 2020
Report:		Hugues Evrard (Google, London, UK)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		The LOTOS code generated by LNT2LOTOS for functions in which
		loops contain a "return V" instruction was semantically
		incorrect. In some cases, it could produce unexpected results,
		or even a segmentation fault. This bug was fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2600
Date:		Thu Apr 23 23:11:19 CEST 2020
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The meaning of the environment variable $CAESAR_BDD_TIMEOUT
		has slightly changed. Formerly, setting this variable to 0
		meant that CAESAR.BDD would explore the marking graph with
		no timeout; from now on, it means that CAESAR.BDD will not
		undertake the BDD-based exploration of the marking graph
		(i.e., only the initial state will be visited). The former
		meaning can still be obtained, either by not setting the
		$CAESAR_BDD_TIMEOUT variable, or by setting it to an invalid
		value, such as "" or -1. The CAESAR.BDD manual page has been
		updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2601
Date:		Fri Apr 24 10:38:33 CEST 2020
Authors:	Wendelin Serwe and Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		LNT2LOTOS did not issue an error message when the value of
		the pragma !int_bits was below zero (e.g., ``!int_bits -3'').
		This bug has been fixed.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2602
Date:		Fri Apr 24 14:32:44 CEST 2020
Authors:	Hubert Garavel, Wendelin Serwe, and Frederic Lang
		(INRIA/CONVECS)
Files:		bin.*/lnt2lotos, ext/*/lnt*
		doc/pdf/Champelovier-Clerc-Garavel-et-al-10.pdf

Nature:		The LNT language has two new module pragmas, "!num_bits" and
		"!num_card", which enable one to specify the memory size
		of the C types that implement LNT numeral types, where a
		numeral type is any LNT type whose definition is isomorphic
		to "type T is Zero, Succ (X:T) end type", modulo a renaming
		of identifiers Succ, T, X, and Zero, and a permutation of
		Zero and Succ (X:T).

		The pragma "!num_bits N" specifies that numeral types must
	 	be encoded using N bits, and the pragma "!num_card N" states
		that the values of numeral types are in the range 0...N-1.

		The LNT2LOTOS Reference Manual and editor style files for
		the LNT language have been updated accordingly. These new
		pragmas will become effective after a modification of
		CAESAR.ADT planned for a subsequent release of CADP.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2603
Date:		Mon Apr 27 09:03:25 CEST 2020
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The static exploration algorithm used by several options of
		CAESAR.BDD (e.g., "-concurrent-places", "-mcc", etc.),
		as opposed to the dynamic exploration algorithm based on BDDs,
		has been enhanced as follows:

		- If the pragma "!unit_safe" is present in the input NUPN
		  file, this pragma is now used to detect certain classes
		  of dead transitions, e.g., transitions having at least two
		  input (or two output) places located in two non-disjoint
		  NUPN units, or transitions whose input places form a strict
		  subset of their output files.

		- Also, the static exploration algorithm, when run after the
		  dynamic one, can reuse information produced by the latter,
		  such as a subset of places and transitions that are not
		  dead. This is used to speed up the static exploration
		  algorithm when the dynamic one failed to explore the graph
		  of reachable markings entirely. On a large collection of
		  NUPNs, it was observed that this would statistically reduce
		  the number of iterations by 37% (i.e., from 100 iterations
		  downto 62.9 iterations).

		The CAESAR.BDD manual page was updated to list those options
		that take into account the pragma "!unit_safe", if present.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2604
Date:		Tue Apr 28 17:58:31 CEST 2020
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		bin.*/caesar.bdd, man/*/caesar.bdd.*

Nature:		The "-dead-places" and "-dead-transitions" options of
		CAESAR.BDD have been enhanced in several respects:

		- They benefit from the enhancements brought to the static
		  exploration algorithm (see item #2603 above), which 
		  produces faster and more precise results.

		- For these two options, the static exploration algorithm
		  is now performed before and after the dynamic one
		  (previously, it was only performed after); the information
		  computed by the static exploration algorithm often helps
		  the dynamic exploration algorithm to terminate earlier; in
		  some cases, it even removes the need for invoking the
		  latter algorithm.

		Statistically, it was observed that the "-dead-places" option
		is now 9% faster, and produces 63% of results having fewer
		unknown values when applied to large NUPNs whose graph of
		reachable markings is too large for being explored entirely.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2605
Date:		Sun May  3 18:39:16 CEST 2020
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/*/Champelovier-Clerc-Garavel-et-al-10.*,
		com/upc, demos/demo_06/handshake.lnt, 
		demos/demo_06/handshake_interactions.lnt, 
		demos/demo_06/test_purpose_common.lnt, demos/demo_11/DTD.lnt, 
		demos/demo_11/INFO.lnt, demos/demo_11/TYPES.lnt

Nature:		In LNT, the big-arrow symbol "=>" (which is used in field
		updates and named-style actual parameters of functions and
		procedure parameters) has been replaced by the simple-arrow
		symbol "->". For instance, the following value expressions:
		    X . {Y => 3, Z => 1}   and   F (X => ?X, Y => 1)
		should now be written as follows:
		    X . {Y -> 3, Z -> 1}   and   F (X -> ?X, Y -> 1)

		The "=>" was borrowed from Ada, but it turned out that this
		symbol could create confusion with mathematical implication.

		For compatibility reasons, the symbol "=>" remains accepted
		by LNT2LOTOS, but a warning message is now issued whenever
		"=>" is still used in place of "->". 

		However, "=>" must be considered as a deprecated symbol,
		which will be removed from the language in a future version
		of LNT.

		Users are therefore advised to update their LNT programs by
		replacing "=>" with "->". This can be done automatically
		by typing the following command:
		   upc 2020-LNT-ARROWS <directory>
		which will recursively explore the contents of the specified
		<directory>, look for ".lnt" files, and perform the required
		substitutions.

		The LNT Reference Manual, as well as demos 06 and 11, have
		been updated accordingly.
-------------------------------------------------------------------------------
BUG FIX
Number:		2606
Date:		Wed May  6 18:36:22 CEST 2020
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		In rare cases, LNT2LOTOS could reject meaningful LNT programs
		with error messages of the following form:

		   error: variable X defined at line ... may be uninitialized
		   at this point
		   lnt2lotos: LNT program is semantically incorrect
		   lnt2lotos: quit

		This occurred when a variable X was initialized in all the
		terminating branches of a "select" instruction, but not in
		some nonterminating branches, in particular branches that
		contained either a nonterminating "if" (or "only if")
		instruction or an uninterrupted "loop L" instruction. 
		For instance, in the following code fragment:

		    var X : nat in
			select
		 	   only if B then loop G (0) end loop end if
		 	[] loop L in G (1) end loop
			[] X := 0
			end select;
			G (X)
		    end var

		LNT2LOTOS stated that X could be uninitialized in G (X),
		which was wrong, because G (X) can only be reached after 
		executing the third branch of the "select" instruction,
		which properly initializes X, while the two former branches
		execute forever and never lead to use X. This error was fixed
		by implementing a better dataflow analysis in LNT2LOTOS.
-------------------------------------------------------------------------------
BUG FIX
Number:		2607
Date:		Thu May  7 16:25:35 CEST 2020
Report:		Ajay Krishna Muroor (INRIA/CONVECS)
Authors:	Frederic Lang and Wendelin Serwe (INRIA/CONVECS)
Files:		bin.*/lnt2lotos

Nature:		LNT2LOTOS could generate incorrect LOTOS code for LNT programs
		containing "disrupt" instructions inside "loop" instructions.
		Either the generated LOTOS code did not compile due to type
		errors, or the loop stopped after the first iteration. For
		instance, the following code fragment shows a loop that
		only performed once:

		    loop L in
			disrupt PRESENT by RESET end disrupt
		    end loop

		This bug has been fixed. In some LNT programs, this bug fix
		results in a simplification of the generated LOTOS code, as
		useless code fragments of the form ">> exit" or ">> accept
		X1:T1, ..., Xn:Tn in exit (X1, ..., Xn)" have been removed.
-------------------------------------------------------------------------------
BUG FIX
Number:		2608
Date:		Fri May  8 13:02:01 CEST 2020
Author:		Frederic Lang (INRIA/CONVECS)
Files:		incl/X_INTEGER.h

Nature:		The predefined function IntToNat() that converts values of
		type INT to type NAT did not work properly when invoked with
		a negative argument: either this function failed with an
		obscure error message or it silently returned a wrong value.

		The reason was that the function never checked whether its
		argument was negative or not, but directly casted it to a
		natural. This issue has been fixed. For instance:

		- The function call "IntToNat (-1)", which caused the
		  following error message:
		    natural value 65535 out of the range [0 .. 255]
		  now displays a better message:
		    negative integer value -1 not convertible to a natural

		- In a program that uses the pragma "!int_bits 32", the
		  function call "IntToNat (-65530)" returned 6, but now
		  displays the following error message:
		    negative integer value -65530 not convertible to a natural
-------------------------------------------------------------------------------
VERSION 2020-e "Aalborg"
-------------------------------------------------------------------------------
BUG FIX
Number:		2609
Date:		Mon May 18 07:12:47 CEST 2020
Author:		Hubert Garavel (INRIA/CONVECS)
File:		bin.*/caesar.bdd

Nature:		The ``-concurrent-places'' option of CAESAR.BDD has been
		enhanced, as it did not trigger all the optimizations that
		were implemented for this purpose.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2610
Date:		Wed May 20 13:34:30 CEST 2020
Authors:	Wendelin Serwe and Hubert Garavel (INRIA/CONVECS)
File:		com/lnt.open

Nature:		The LNT.OPEN shell script has been modified to support the
		pragmas ``!num_bits'' and ``!num_card'' recently introduced
		in LNT (see item #2602 above). This is done by searching, in
		the ``.t'' file generated by LNT2LOTOS, for a string of the
		form "#define ADT_PRAGMA_NUMERAL n" and then invoking
		 CAESAR.ADT with the option ``-numeral n''.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2611
Date:		Mon May 25 12:02:13 CEST 2020
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos, doc/pdf/Champelovier-Clerc-Garavel-et-al-10.*

Nature:		In order to align the two languages LOTOS NT and LNT, the
		two terms ``gate'' and ``exception'' have been replaced by
		the term ``event''. This change has been done in the LNT
		Reference Manual (where many occurrences of gates noted G,
		G', or G_i are now noted E, E', or E_i), as well as in all 
		error and warning messages issued by LNT2LOTOS.
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2612
Date:		Tue Jun  9 10:08:13 CEST 2020
Author:		Hubert Garavel (INRIA/CONVECS)
Files:		demo_29/DATA.lnt, demo_32/TYPES_COMMON_GENERIC.lnt

Nature:		In the LNT source code of demos 29 and 32, two incomplete
		case statements have been made complete by adding the missing
		branches with ``raise UNEXPECTED'' statements. This removes
		several warnings such as:
		   function GETCHAN contains a non-exhaustive case
-------------------------------------------------------------------------------
IMPROVEMENT
Number:		2613
Date:		Wed Jun 10 18:55:43 CEST 2020
Report:		Hubert Garavel (INRIA/CONVECS)
Author:		Frederic Lang (INRIA/CONVECS)
Files:		bin.*/lnt2lotos,
		doc/pdf/Champelovier-Clerc-Garavel-et-al-10.*,
		demo_11/FIFO.lnt, demo_11/INFO.lnt, demo_11/TYPES.lnt,
		demo_12/maa.lnt, demo_19/TYPES.lnt, demo_29/DATA.lnt,
		demo_32/TYPES_COMMON_GENERIC.lnt, demo_38/TYPES.lnt,
		ext/a2ps/lnt.ssh, ext/emacs/lnt-mode.el, ext/gtk3/lnt.lang,
		ext/jedit/lnt.xml, ext/latex-listings/cadp-lnt.sty,
		ext/nano/lnt.nanorc, ext/npp/lnt.xml, ext/vim/lnt.vim

Nature:		The LNT language has been enriched with a new ``require''
		clause, which enables one to express preconditions for
		LNT functions and processes. Each precondition is a Boolean
		condition on the input values of "in", "in var", and "in out"
		parameters of the function or process. Preconditions are
		checked upon function or process call. An exception (either
		UNEXPECTED or defined by the user) is raised if the condition
		is false. Preconditions can also be expressed for external
		functions.

		The LNT reference manual has been updated, and various
		demos have been modified to illustrate the use of exceptions.
		The LNT style files for editors have been updated to take
		into account the new ``require'' keyword.
-------------------------------------------------------------------------------
VERSION 2020-f "Aalborg"
-------------------------------------------------------------------------------
